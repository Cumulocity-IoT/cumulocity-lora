"use strict";function _toConsumableArray(o){return _arrayWithoutHoles(o)||_iterableToArray(o)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray(o){if(Symbol.iterator in Object(o)||"[object Arguments]"===Object.prototype.toString.call(o))return Array.from(o)}function _arrayWithoutHoles(o){if(Array.isArray(o)){for(var t=0,n=new Array(o.length);t<o.length;t++)n[t]=o[t];return n}}!function(){function o(t,n){var e=this;function o(){i(!(e.protocols=void 0)),n.listProtocols().then(r).finally(_.partial(i,!1))}function r(o){e.protocols||(e.protocols=[]),t.paging=o.paging||{refresh:!0},e.protocols=[].concat(_toConsumableArray(e.protocols),_toConsumableArray(o)),a(e.protocols)}function i(o){e.mainView&&(e.mainView.isLoading=o)}function a(o){e.mainView&&(e.mainView.isEmpty=0===_.get(o,"length"))}_.assign(e,{$onInit:function(){o(),e.mainView&&(e.mainView.refresh=o)},edit:n.edit,remove:function(o){return n.remove(o).then(function(){return _.pull(e.protocols,o)}).then(function(){return a(e.protocols)})},CONFIG:n.VIEW_CONFIG,getTitle:n.getProtocolName,getProtocolActionsMemoized:_.memoize(n.getActionsForProtocol,_.property("id")),getRowInfoComponent:n.getProtocolRowInfoComponent}),t.paging={},t.loadNext=function(){t.paging.loading=!0,t.paging.next().then(r).finally(function(){t.paging.loading=!1})}}o.$inject=["$scope","c8yDeviceProtocolUi"],angular.module("c8y.deviceProtocols").component("c8yDeviceProtocolList",{templateUrl:":::PLUGIN_PATH:::/deviceProtocolList.html",controllerAs:"vm",require:{mainView:"?^c8yDeviceProtocolView"},controller:o,bindings:{filter:"<",onList:"&"}})}();