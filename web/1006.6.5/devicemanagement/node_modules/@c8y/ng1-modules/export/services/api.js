"use strict";function _slicedToArray(t,e){return _arrayWithHoles(t)||_iterableToArrayLimit(t,e)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit(t,e){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t)){var n=[],i=!0,r=!1,o=void 0;try{for(var a,s=t[Symbol.iterator]();!(i=(a=s.next()).done)&&(n.push(a.value),!e||n.length!==e);i=!0);}catch(t){r=!0,o=t}finally{try{i||null==s.return||s.return()}finally{if(r)throw o}}return n}}function _arrayWithHoles(t){if(Array.isArray(t))return t}angular.module("c8y.cockpit.export").factory("c8yExportApis",["SchemaPropertiesSvc","c8yPropertiesLibrary","c8yDataPointSvc","gettext",function(t,n,e,i){var r=["DEVICE_NAME"],o=["Alarms","Events","Measurements"];function a(t,e){this.name=t,this.onLoad(e)}function s(t){return _.map(t,function(t){return{column:t.label,path:t.keyPath.join(".")}})}function l(t){a.call(this,i("Measurements"),t)}return a.prototype.onLoad=function(t){var e=_.find(t.apiList,{api:this.name});this.enabled=Boolean(e),this.fields=this.enabled&&e.fields||[]},a.prototype.toggle=function(t,e){if(e&&0===this.fields.length&&0<=o.indexOf(this.name)){var i=this;n.another(n.paths[this.name]).list().then(function(t){var n=["time","DEVICE_NAME"],e=_.filter(t,function(t){var e=_slicedToArray(t.keyPath,1)[0];return 0<=n.indexOf(e)});i.addAll(s(e))})}return e},a.prototype.onSave=function(t){this.enabled&&(function(t){_.forEach(t,function(t){0<=r.indexOf(t.path)&&(t.type=t.path)})}(this.fields),t.apiList=t.apiList||[],t.apiList.push({api:this.name,fields:this.fields}))},a.prototype.add=function(t){this.fields.push(t||{})},a.prototype.addAll=function(t){var e=this;_.forEach(t,function(t){e.add(t)})},a.prototype.addPredefined=function(){var e=this;t.openSelector({type:this.name,showComputed:!1,includeTreeChildren:!0}).then(function(t){e.addAll(s(t))})},a.prototype.remove=function(t){this.fields.splice(t,1)},a.prototype.removeAll=function(){this.fields.length=0},(l.prototype=Object.create(a.prototype)).addFromDatapoint=function(){var n=this;e.addUI().then(function(t){var e=_.map(t,function(t){return{column:t.label,path:[t.fragment,t.series,"value"].join(".")}});n.addAll(e)})},{Api:a,MeasurementsApi:l}}]);