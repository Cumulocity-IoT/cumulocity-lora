"use strict";function _slicedToArray(e,t){return _arrayWithHoles(e)||_iterableToArrayLimit(e,t)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit(e,t){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e)){var l=[],i=!0,n=!1,r=void 0;try{for(var a,o=e[Symbol.iterator]();!(i=(a=o.next()).done)&&(l.push(a.value),!t||l.length!==t);i=!0);}catch(e){n=!0,r=e}finally{try{i||null==o.return||o.return()}finally{if(n)throw r}}return l}}function _arrayWithHoles(e){if(Array.isArray(e))return e}angular.module("c8y.ui").directive("c8yBinaryInput",function(){return e.$inject=["$scope","$element","c8yBase","c8yBinary","c8yModal","c8yAlert","gettext","gettextCatalog"],{restrict:"E",require:"?^form",scope:{initialId:"=?",initialUrl:"=?",editable:"=?",file:"=?outputFile",allowFreeUrlInput:"=?",uploadable:"=?",downloadable:"=?",clearable:"=?",removable:"=?",fileRequired:"=?",setGlobal:"=?"},link:function(e,t,l,i){e.form=i},templateUrl:":::PLUGIN_PATH:::/ui/views/binaryInput.html",controller:e};function e(l,e,t,i,n,r,a,o){var u={url:""},d={upload:{inProgress:!1},download:{progress:0,inProgress:!1}};function s(e,t){return _.isUndefined(e)?t:e}function c(e){return p(i.getIdFromUrl(e.headers("Location")))}function f(e){e&&e.data&&e.data.messsage&&r.danger(e.data.message)}function b(e){e.icon=i.icon(e),e.url=i.getDownloadUrl(e),l.file=e,l.form&&l.form.$setDirty()}function y(){u={url:""},l.file=u,e.find("input[type='file']").val(null)}function g(){l.initialUrl&&(l.initialId=i.getIdFromUrl(l.initialUrl)),l.initialId?p(l.initialId):function(e){u={url:e},l.file=u}(l.initialUrl)}function p(e){return i.detail(e,{},{silentError:!0}).then(t.getResData).then(b).catch(function(){l.fileNotAvailable=!0})}_.assign(l,{file:u,onFileSelect:function(e){if(!(e.length<1)){var t=_slicedToArray(e,1)[0];return i.hasValidSize(t)?function(e){d.upload.inProgress=!0;var t=l.setGlobal?{c8y_Global:{}}:void 0;return i.upload(e,t).then(c,f).finally(function(){d.upload.inProgress=!1})}(t):void r.danger(o.getString("Selected file is too large â€“ size limit is {{limitBytes | bytes}}.",{limitBytes:i.getBytesSizeLimit()}))}},chooseFile:function(){n({templateUrl:":::PLUGIN_PATH:::/ui/views/binaryInputModal.html",controller:"binaryInputModalCtrl"}).then(function(e){var t=e.file;return b(t)})},download:function(e){d.download.inProgress=!0,d.download.progress=0;var t=i.downloadAndSaveAs(e);return t.then(null,null,function(e){d.download.progress=100*e}),t.finally(function(){d.download.inProgress=!1,d.download.progress=100})},remove:function(e){return n({title:a("Delete file"),body:o.getString('You are about to delete file "{{name}}". Do you want to proceed?',e),labels:{ok:a("Delete")},status:"danger"}).then(angular.bind(i,i.removeBinary,e)).then(y)},clear:function(){y()},status:d}),l.editable=s(l.editable,!0),l.allowFreeUrlInput=l.editable&&s(l.allowFreeUrlInput,!0),l.uploadable=l.editable&&s(l.uploadable,!0),l.downloadable=s(l.downloadable,!0),l.clearable=l.editable&&s(l.clearable,!0),l.removable=l.editable&&s(l.removable,!1),l.fileRequired=l.editable&&s(l.fileRequired,!1),l.$watch("initialId",g),l.$watch("initialUrl",g)}});