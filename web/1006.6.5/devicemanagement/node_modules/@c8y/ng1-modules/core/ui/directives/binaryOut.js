"use strict";function _slicedToArray(r,t){return _arrayWithHoles(r)||_iterableToArrayLimit(r,t)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit(r,t){if(Symbol.iterator in Object(r)||"[object Arguments]"===Object.prototype.toString.call(r)){var e=[],a=!0,n=!1,i=void 0;try{for(var o,l=r[Symbol.iterator]();!(a=(o=l.next()).done)&&(e.push(o.value),!t||e.length!==t);a=!0);}catch(r){n=!0,i=r}finally{try{a||null==l.return||l.return()}finally{if(n)throw i}}return e}}function _arrayWithHoles(r){if(Array.isArray(r))return r}angular.module("c8y.ui").directive("c8yBinaryOut",function(){var o=/^data:.+;base64,(.*)$/;return{scope:{c8yBinaryOut:"&"},link:function(i,r){r.bind("change",function(n){var r=new FileReader;r.onload=function(r){var t=_slicedToArray(n.target.files,1)[0],e=r.target.result.match(o);if(null!==e){var a=_slicedToArray(e,2)[1];i.$apply(function(){var r=new Blob([],{type:t.type,size:t.size});r.name=t.name,r.data=a,r.c8y_IsBinary=!0,i.c8yBinaryOut({$binary:r})})}},n.target.files[0]&&r.readAsDataURL(n.target.files[0])})}}});