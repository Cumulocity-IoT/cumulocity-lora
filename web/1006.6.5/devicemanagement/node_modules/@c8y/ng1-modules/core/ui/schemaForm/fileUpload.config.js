"use strict";function _slicedToArray(e,r){return _arrayWithHoles(e)||_iterableToArrayLimit(e,r)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit(e,r){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e)){var t=[],i=!0,o=!1,n=void 0;try{for(var a,l=e[Symbol.iterator]();!(i=(a=l.next()).done)&&(t.push(a.value),!r||t.length!==r);i=!0);}catch(e){o=!0,n=e}finally{try{i||null==l.return||l.return()}finally{if(o)throw n}}return t}}function _arrayWithHoles(e){if(Array.isArray(e))return e}!function(){function e(o,e,r,n){e.defineAddOn("bootstrapDecorator","fileUpload",":::PLUGIN_PATH:::/ui/schemaForm/customFieldTypes/fileUpload.html",r.stdBuilders),o.defaults.string.unshift(function(e,r,t){var i;return"string"===r.type&&"file"===r.format&&((i=o.stdFormObj(e,r,t)).key=t.path,i.type="fileUpload",i.getFilePickerFilesFromModelValue=function(e){return[{file:e}]},i.getModelValueFromFilePickerFiles=function(e){return _slicedToArray(e,1)[0].file},i.onFileSelected=function(e,r){var t=_slicedToArray(r,1)[0].file;t&&function(r){var e=new FileReader;e.onload=function(e){_.set(r,"fileSrc",e.target.result)},e.readAsDataURL(r)}(t),e.$setDirty()},t.lookup[n.stringify(t.path)]=i),i})}e.$inject=["schemaFormProvider","schemaFormDecoratorsProvider","sfBuilderProvider","sfPathProvider"],angular.module("schemaForm").config(e)}();