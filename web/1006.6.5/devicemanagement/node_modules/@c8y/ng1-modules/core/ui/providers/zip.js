"use strict";function _slicedToArray(t,e){return _arrayWithHoles(t)||_iterableToArrayLimit(t,e)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit(t,e){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t)){var n=[],r=!0,i=!1,o=void 0;try{for(var a,c=t[Symbol.iterator]();!(r=(a=c.next()).done)&&(n.push(a.value),!e||n.length!==e);r=!0);}catch(t){i=!0,o=t}finally{try{r||null==c.return||c.return()}finally{if(i)throw o}}return n}}function _arrayWithHoles(t){if(Array.isArray(t))return t}!function(){function t(c,u){function n(t,o){return c(function(e,n){var r=e,i=n;window.c8y_testing&&(r=function(t){e(t),u.$apply()},i=function(t){n(t),u.$apply()}),zip.createReader(new zip.BlobReader(t),function(n){n.getEntries(function(t){var e=_slicedToArray(_.filter(t,o),1)[0];e?e.getData(new zip.TextWriter,function(t){n.close(),r(t)}):(n.close(),i(new Error("File not found ".concat(JSON.stringify(o)))))})},i)})}return{zipFiles:function(e){var n=c.defer();return zip.createWriter(new zip.BlobWriter,function(t){n.resolve(function(n,r){var i=c.defer(),o=-1;function a(){(o+=1)<r.length?function(){var t=o,e=r[t];n.add(e.name,new zip.BlobReader(e),a,function(){i.notify(e,t)})}():n.close(function(t){i.resolve(t),window.c8y_testing&&u.$apply()})}return a(),i.promise}(t,e)),window.c8y_testing&&u.$apply()},function(t){n.reject(t),window.c8y_testing&&u.$apply()}),n.promise},getTextData:n,getJsonData:function(t,e){return n(t,e).then(function(t){return JSON.parse(t)})}}}t.$inject=["$q","$rootScope"],angular.module("c8y.ui").provider("c8yZip",function(){return zip.useWebWorkers=!1,{$get:t}})}();