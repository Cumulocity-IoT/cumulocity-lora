"use strict";function _slicedToArray(e,t){return _arrayWithHoles(e)||_iterableToArrayLimit(e,t)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit(e,t){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e)){var r=[],n=!0,i=!1,a=void 0;try{for(var o,c=e[Symbol.iterator]();!(n=(o=c.next()).done)&&(r.push(o.value),!t||r.length!==t);n=!0);}catch(e){i=!0,a=e}finally{try{n||null==c.return||c.return()}finally{if(i)throw a}}return r}}function _arrayWithHoles(e){if(Array.isArray(e))return e}!function(){function e(r,n,i,a,o){var c="configuration.licence";return{updateLicenseKey:function(r){return e(r).then(function(e){if(e){var t={category:c,key:function(e){return _slicedToArray(e.match(/(.*)?\.licence=.*/),2)[1]}(r),value:r};return a.updateOption(t)}return n.reject(o("Invalid license key."))})},validateLicenseKey:e,removeLicenseKey:function(e){return a.deleteOption({category:c,key:e})},getLicenses:function(){return a.detail({category:c}).then(i.getResData)}};function e(e){var t={method:"POST",url:i.url("tenant/domain/validate"),data:{value:e}};return r(t).then(i.getResData).then(function(e){return e.valid})}}e.$inject=["$http","$q","c8yBase","c8ySettings","gettext"],angular.module("c8y.core").factory("c8yLicense",e)}();