{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@c8y/ngx-components/core/common/extension-hooks.ts","ng://@c8y/ngx-components/core/common/state-service.abstract.ts","ng://@c8y/ngx-components/core/action-bar/action-bar.service.ts","ng://@c8y/ngx-components/core/action/action.service.ts","ng://@c8y/ngx-components/core/i18n/gettext.ts","ng://@c8y/ngx-components/core/alert/alert.service.ts","ng://@c8y/ngx-components/core/common/status.model.ts","ng://@c8y/ngx-components/core/common/ApplicationOptions.ts","ng://@c8y/ngx-components/core/common/options.service.ts","ng://@c8y/ngx-components/core/common/ui-state.service.ts","ng://@c8y/ngx-components/core/navigator/navigator-node.ts","ng://@c8y/ngx-components/core/navigator/navigator-node-root.ts","ng://@c8y/ngx-components/core/navigator/navigator.service.ts","ng://@c8y/ngx-components/core/header/header.service.ts","ng://@c8y/ngx-components/core/tabs/tabs.service.ts","ng://@c8y/ngx-components/core/bootstrap/bootstrap.component.ts","ng://@c8y/ngx-components/core/breadcrumb/breadcrumb.service.ts","ng://@c8y/ngx-components/core/common/humanize.pipe.ts","ng://@c8y/ngx-components/core/common/humanize-app-name.pipe.ts","ng://@c8y/ngx-components/core/i18n/languages.ts","ng://@c8y/ngx-components/core/i18n/locale.path.ts","ng://@c8y/ngx-components/core/i18n/patterns-message.hook.ts","ng://@c8y/ngx-components/core/i18n/pattern-messages.service.ts","ng://@c8y/ngx-components/core/i18n/missing-translation-custom.handler.ts","ng://@c8y/ngx-components/core/i18n/pattern-messages.data.ts","ng://@c8y/ngx-components/core/i18n/translate.loader.ts","ng://@c8y/ngx-components/core/i18n/translate.parser.ts","ng://@c8y/ngx-components/core/i18n/i18n.module.ts","ng://@c8y/ngx-components/core/common/icon.directive.ts","ng://@c8y/ngx-components/core/common/outlet.directive.ts","ng://@c8y/ngx-components/core/common/user-preferences/user-preferences-storage-local.ts","ng://@c8y/ngx-components/core/common/user-preferences/user-preferences-store-inventory.ts","ng://@c8y/ngx-components/core/common/user-preferences/user-preferences.service.ts","ng://@c8y/ngx-components/core/i18n/load-locale.ts","ng://@c8y/ngx-components/core/i18n/parse-module.ts","ng://@c8y/ngx-components/core/i18n/translate.service.ts","ng://@c8y/ngx-components/core/common/shorten-user-name.pipe.ts","ng://@c8y/ngx-components/core/common/load-more.component.ts","ng://@c8y/ngx-components/core/common/forOf.directive.ts","ng://@c8y/ngx-components/core/common/map-function.pipe.ts","ng://@c8y/ngx-components/core/common/progress-bar.component.ts","ng://@c8y/ngx-components/core/common/common.module.ts","ng://@c8y/ngx-components/core/login/login.model.ts","ng://@c8y/ngx-components/core/action-bar/action-bar-item.component.ts","ng://@c8y/ngx-components/core/action-bar/action-bar.component.ts","ng://@c8y/ngx-components/core/action-bar/action-bar.module.ts","ng://@c8y/ngx-components/core/action/action-outlet.component.ts","ng://@c8y/ngx-components/core/action/action.component.ts","ng://@c8y/ngx-components/core/action/action.module.ts","ng://@c8y/ngx-components/core/alert/alert-details.component.ts","ng://@c8y/ngx-components/core/alert/alert-outlet.component.ts","ng://@c8y/ngx-components/core/alert/alert-text.component.ts","ng://@c8y/ngx-components/core/alert/alert.component.ts","ng://@c8y/ngx-components/core/alert/alert.module.ts","ng://@c8y/ngx-components/core/breadcrumb/breadcrumb-item.component.ts","ng://@c8y/ngx-components/core/breadcrumb/breadcrumb-outlet.component.ts","ng://@c8y/ngx-components/core/breadcrumb/breadcrumb.component.ts","ng://@c8y/ngx-components/core/breadcrumb/breadcrumb.module.ts","ng://@c8y/ngx-components/core/search/search-outlet.component.ts","ng://@c8y/ngx-components/core/search/search.service.ts","ng://@c8y/ngx-components/core/search/search.component.ts","ng://@c8y/ngx-components/core/search/highlight.component.ts","ng://@c8y/ngx-components/core/search/search.module.ts","ng://@c8y/ngx-components/core/modal/modal-confirm.component.ts","ng://@c8y/ngx-components/core/modal/modal.component.ts","ng://@c8y/ngx-components/core/modal/modal.service.ts","ng://@c8y/ngx-components/core/modal/popover-confirm.component.ts","ng://@c8y/ngx-components/core/modal/modal.module.ts","ng://@c8y/ngx-components/core/user/user-menu.service.ts","ng://@c8y/ngx-components/core/user/user-menu-item.component.ts","ng://@c8y/ngx-components/core/user/user-edit-modal.component.ts","ng://@c8y/ngx-components/core/login/login.service.ts","ng://@c8y/ngx-components/core/data-grid/data-grid.model.ts","ng://@c8y/ngx-components/core/authentication/password-confirm-modal.component.ts","ng://@c8y/ngx-components/core/authentication/password.service.ts","ng://@c8y/ngx-components/core/user/user-totp-setup.component.ts","ng://@c8y/ngx-components/core/user/user-edit.component.ts","ng://@c8y/ngx-components/core/user/user-menu-outlet.component.ts","ng://@c8y/ngx-components/core/authentication/password-check-list.component.ts","ng://@c8y/ngx-components/core/authentication/password-confirm.directive.ts","ng://@c8y/ngx-components/core/authentication/password-strength-checker.service.ts","ng://@c8y/ngx-components/core/authentication/password-strength.component.ts","ng://@c8y/ngx-components/core/authentication/new-password.component.ts","ng://@c8y/ngx-components/core/forms/phone-validation.directive.ts","ng://@c8y/ngx-components/core/forms/validation-pattern.ts","ng://@c8y/ngx-components/core/forms/default-validation.directive.ts","ng://@c8y/ngx-components/core/forms/min-validation.directive.ts","ng://@c8y/ngx-components/core/forms/max-validation.directive.ts","ng://@c8y/ngx-components/core/forms/message.directive.ts","ng://@c8y/ngx-components/core/forms/messages.component.ts","ng://@c8y/ngx-components/core/forms/form-group.component.ts","ng://@c8y/ngx-components/core/forms/input-group-list.component.ts","ng://@c8y/ngx-components/core/forms/input-group-list-container.directive.ts","ng://@c8y/ngx-components/core/forms/json-validation-prettifier.directive.ts","ng://@c8y/ngx-components/core/forms/text-area-row-height.directive.ts","ng://@c8y/ngx-components/core/forms/required-input-placeholder.directive.ts","ng://@c8y/ngx-components/core/forms/ip-range-input-list.component.ts","ng://@c8y/ngx-components/core/forms/schema-form.component.ts","ng://@c8y/ngx-components/core/forms/filter-input.component.ts","ng://@c8y/ngx-components/core/forms/forms.module.ts","ng://@c8y/ngx-components/core/authentication/totp-challenge.component.ts","ng://@c8y/ngx-components/core/authentication/sms-challenge.component.ts","ng://@c8y/ngx-components/core/authentication/totp-setup.component.ts","ng://@c8y/ngx-components/core/authentication/authentication.module.ts","ng://@c8y/ngx-components/core/user/user-totp-revoke.component.ts","ng://@c8y/ngx-components/core/user/user.module.ts","ng://@c8y/ngx-components/core/header/application/app-icon.component.ts","ng://@c8y/ngx-components/core/header/application/app-switcher.component.ts","ng://@c8y/ngx-components/core/docs/defaults.items.ts","ng://@c8y/ngx-components/core/docs/docs.models.ts","ng://@c8y/ngx-components/core/docs/docs.service.ts","ng://@c8y/ngx-components/core/header/header-bar/header-bar.component.ts","ng://@c8y/ngx-components/core/header/title/title-outlet.component.ts","ng://@c8y/ngx-components/core/header/title/title.component.ts","ng://@c8y/ngx-components/core/navigator/navigator-entry.component.ts","ng://@c8y/ngx-components/core/navigator/navigator-icon.component.ts","ng://@c8y/ngx-components/core/navigator/navigator-node.component.ts","ng://@c8y/ngx-components/core/navigator/navigator-outlet.component.ts","ng://@c8y/ngx-components/core/navigator/navigator.module.ts","ng://@c8y/ngx-components/core/header/right-drawer/right-drawer.component.ts","ng://@c8y/ngx-components/core/header/header.module.ts","ng://@c8y/ngx-components/core/login/change-password.component.ts","ng://@c8y/ngx-components/core/login/credentials.component.ts","ng://@c8y/ngx-components/core/login/login.component.ts","ng://@c8y/ngx-components/core/login/recover-password.component.ts","ng://@c8y/ngx-components/core/login/totp-auth.component.ts","ng://@c8y/ngx-components/core/login/login.module.ts","ng://@c8y/ngx-components/core/tabs/tab.component.ts","ng://@c8y/ngx-components/core/tabs/tabs-outlet.component.ts","ng://@c8y/ngx-components/core/tabs/tabs.module.ts","ng://@c8y/ngx-components/core/bootstrap/cookie-banner/cookie-banner.component.ts","ng://@c8y/ngx-components/core/bootstrap/bootstrap.module.ts","ng://@c8y/ngx-components/core/data-grid/column/cell-renderer.ts","ng://@c8y/ngx-components/core/data-grid/column/filtering-form-renderer.ts","ng://@c8y/ngx-components/core/data-grid/column/column.directive.ts","ng://@c8y/ngx-components/core/data-grid/grid-data-source.ts","ng://@c8y/ngx-components/core/device-status/device-availability.ts","ng://@c8y/ngx-components/core/data-grid/data-grid.component.ts","ng://@c8y/ngx-components/core/data-grid/column/cell-renderer.component.ts","ng://@c8y/ngx-components/core/data-grid/column/filtering-form-renderer.component.ts","ng://@c8y/ngx-components/core/data-grid/data-grid.module.ts","ng://@c8y/ngx-components/core/device-grid/columns/base.device-grid-column.ts","ng://@c8y/ngx-components/core/device-grid/columns/status.cell-renderer.component.ts","ng://@c8y/ngx-components/core/device-grid/columns/status.device-grid-column.ts","ng://@c8y/ngx-components/core/device-grid/columns/name.cell-renderer.component.ts","ng://@c8y/ngx-components/core/device-grid/columns/name.device-grid-column.ts","ng://@c8y/ngx-components/core/device-grid/columns/model.cell-renderer.component.ts","ng://@c8y/ngx-components/core/device-grid/columns/model.device-grid-column.ts","ng://@c8y/ngx-components/core/device-grid/columns/serial-number.cell-renderer.component.ts","ng://@c8y/ngx-components/core/device-grid/columns/serial-number.device-grid-column.ts","ng://@c8y/ngx-components/core/device-grid/columns/group.cell-renderer.component.ts","ng://@c8y/ngx-components/core/device-grid/columns/group.device-grid-column.ts","ng://@c8y/ngx-components/core/device-grid/columns/registration-date.cell-renderer.component.ts","ng://@c8y/ngx-components/core/device-grid/columns/registration-date.device-grid-column.ts","ng://@c8y/ngx-components/core/device-grid/columns/system-id.device-grid-column.ts","ng://@c8y/ngx-components/core/device-grid/columns/imei.device-grid-column.ts","ng://@c8y/ngx-components/core/device-grid/columns/alarms.cell-renderer.component.ts","ng://@c8y/ngx-components/core/device-grid/columns/alarms.device-grid-column.ts","ng://@c8y/ngx-components/core/device-grid/device-grid.service.ts","ng://@c8y/ngx-components/core/device-grid/device-grid.component.ts","ng://@c8y/ngx-components/core/drop-area/drop-area.component.ts","ng://@c8y/ngx-components/core/device-status/device-status.component.ts","ng://@c8y/ngx-components/core/device-status/device-status.module.ts","ng://@c8y/ngx-components/core/device-grid/filtering-form.component.ts","ng://@c8y/ngx-components/core/device-grid/device-grid.module.ts","ng://@c8y/ngx-components/core/drop-area/drop-area.module.ts","ng://@c8y/ngx-components/core/select/select.component.ts","ng://@c8y/ngx-components/core/list-group/list-item-action.component.ts","ng://@c8y/ngx-components/core/list-group/list-item-collapse.component.ts","ng://@c8y/ngx-components/core/list-group/list-item-footer.component.ts","ng://@c8y/ngx-components/core/list-group/list-item.component.ts","ng://@c8y/ngx-components/core/select/typeahead.component.ts","ng://@c8y/ngx-components/core/list-group/list-group.component.ts","ng://@c8y/ngx-components/core/list-group/list-item-icon.component.ts","ng://@c8y/ngx-components/core/list-group/list-item-body.component.ts","ng://@c8y/ngx-components/core/list-group/list-item-checkbox.component.ts","ng://@c8y/ngx-components/core/list-group/list-item-radio.component.ts","ng://@c8y/ngx-components/core/list-group/list-group.module.ts","ng://@c8y/ngx-components/core/select/select.module.ts","ng://@c8y/ngx-components/core/docs/guide-href.directive.ts","ng://@c8y/ngx-components/core/docs/guide-docs.component.ts","ng://@c8y/ngx-components/core/docs/docs.module.ts","ng://@c8y/ngx-components/core/dynamic-component/dynamic-component.model.ts","ng://@c8y/ngx-components/core/dynamic-component/dynamic-component.service.ts","ng://@c8y/ngx-components/core/dynamic-component/dynamic-component.component.ts","ng://@c8y/ngx-components/core/dynamic-component/dynamic-component.module.ts","ng://@c8y/ngx-components/core/dashboard/dashboard-child-action.component.ts","ng://@c8y/ngx-components/core/dashboard/dashboard-child-title.component.ts","ng://@c8y/ngx-components/core/dashboard/dashboard.component.ts","ng://@c8y/ngx-components/core/dashboard/dashboard-child-change.ts","ng://@c8y/ngx-components/core/dashboard/dashboard-child.component.ts","ng://@c8y/ngx-components/core/dashboard/widgets-dashboard.component.ts","ng://@c8y/ngx-components/core/dashboard/dashboard.module.ts","ng://@c8y/ngx-components/core/stepper/stepper-icon.directive.ts","ng://@c8y/ngx-components/core/stepper/stepper.component.ts","ng://@c8y/ngx-components/core/stepper/stepper-progress.component.ts","ng://@c8y/ngx-components/core/stepper/stepper-buttons.component.ts","ng://@c8y/ngx-components/core/stepper/stepper.module.ts","ng://@c8y/ngx-components/core/core.module.ts","ng://@c8y/ngx-components/core/router/router.models.ts","ng://@c8y/ngx-components/core/router/router.service.ts","ng://@c8y/ngx-components/core/router/router-tabs.resolver.ts","ng://@c8y/ngx-components/core/router/view-context.service.ts","ng://@c8y/ngx-components/core/router/context-route.component.ts","ng://@c8y/ngx-components/core/router/context-route.guard.ts","ng://@c8y/ngx-components/core/router/empty.component.ts","ng://@c8y/ngx-components/core/router/router.module.ts","ng://@c8y/ngx-components/core/quicklink/quick-link.component.ts","ng://@c8y/ngx-components/core/quicklink/quick-link.module.ts","ng://@c8y/ngx-components/core/device-grid/columns/custom.device-grid-column.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__read","o","m","ar","error","__spread","concat","fromTrigger","router","refresh","factories","events","pipe","filter","evt","NavigationEnd","merge","startWith","switchMap","fromFactories","withFirstEmpty","isArray","of","defer","factoryObservables","resolveInjectedFactories","map","factoryResult","observable","isObservable","forceObservable","from","withEmptyFirst","race","item","toObservable","isFunction","get","getActivatedRoute","combineLatest","results","sortByPriority","flatten","stateToFactory","componentsState","components$","componentSet","items","sortBy","routerState","root","route","firstChild","StateService","mappedProperty","state$","distinctUntilChanged","emitNewState","state","HOOK_ACTION_BAR","InjectionToken","ActionBarService","_super","injector","_this","refreshTrigger","Subject","BehaviorSubject","Set","items$","shareReplay","tslib_1.__extends","add","remove","delete","Injector","Router","Injectable","providedIn","HOOK_ACTION","ActionService","gettext","str","Status","AlertService","MAX_ALERTS","ALERT_TIMEOUT","alert","addAlert","addByText","type","txt","detailedData","text","list","changeAlerts","areSame","removeLastDanger","firstDangerAlarm","reverse","find","_a","alarm","saveSuccess","savedObject","createSuccess","createdObject","clearAll","success","danger","info","warning","addServerFailure","data","res","message","exceptionMessage","hasRelevantMessage","status","statusText","url","alert1","alert2","onClose","onDetail","newAlerts","Error","hideAutomaticallyIfNeeded","removeOldestIfMax","isSuccess","noDetails","alertTimeout","timeout","setTimeout","firstRemoved","slice","ApplicationOptions","HOOK_OPTIONS","OptionsService","options","systemOptionsService","tenantOptionService","setupOptions","optionKey","defaultValue","camelCase","set","getSupportUrl","isUndefined","supportUrl","getTenantOption","_b","getActivateSupportUser","getSystemOption","category","getOptionFromService","forEach","optionMap","keys","service","detail","parseOptionRawValue","rawValue","JSON","parse","Optional","Inject","args","SystemOptionsService","TenantOptionsService","tslib_1.__param","AppStateService","applicationService","apiService","fetchClient","app","name","contextPath","getCurrentContextPath","lang","langs","getLangs","langsDetail","languages","loginOptions","activateSupportUserAvailable","undefined","versions","backend","ui","ngx","hidePowered","isLoading","showRightDrawer","rightDrawer","loginExtraLink","newsletter","currentUser","currentTenant","calls","test","phase","scan","count","subscribe","assignApplicationKeyToDefaultHeaders","isDevMode","defaultHeaders","X-Cumulocity-Application-Key","k","version","ng1","loadManifest","application","manifest","loadDefaultOptions","isApplicationAvailable","listByUser","pageSize","some","match","window","location","pathname","_d","_c","showIncompatibleVersionsError","ex","uiVersion","backendVersion","uiVersionArray","replace","split","Number","beVersionArray","multiplier","Math","pow","ceil","log10","max","sumReducer","acc","cur","calculateVersionMapper","curr","idx","reduce","errorContent","console","log","ApplicationService","ApiService","FetchClient","NavigatorNode","children","parents","routerLinkExact","open","hidden","draggable","droppable","dragged","draggedHover","confirm","_priority","update","childrenPriorities","priority","openOnStart","node","indexOf","updateChildren","ix","pix","splice","updateHidden","predicate","compareLabel_1","toLocaleLowerCase","toLowerCase","matches","found","child","empty","click","drop","$event","stopPropagation","clearTimeout","expandDragTimeout","dragStart","dataTransfer","setData","dragEnd","clearData","path","dragEnter","preventDefault","expand","dragLeave","expander","traverse","callback","destroy","sort","a","NavigatorNodeRoot","addRoot","nodeData","localParent","parent","createNode","HOOK_NAVIGATOR_NODES","NavigatorService","firstUrl","rootNode","nodes","noParent","withParent","sortedNodes","openOnFirstUrl","isActive","HeaderService","navigatorService","hasItemsInNavigator$","title","nav","header$","header","navigatorOpen$","hasItems","titleReference","document","querySelector","elementRef","originalValue","innerText","hideNavigator","documentElement","clientWidth","largeWidth","navigatorHiddenOnStartup","toggleNavigator","closeNavigator","configNavigator","config","changeTitle","newTitle","changePageTitle","verifyIfNavOpen","debounceTime","shouldToggle","shouldShowBreadcrumbs","breadcrumbs","HOOK_TABS","TabsService","translateService","tabs","prepareTabs","orientation$","firstTabWithDefinedOrientation","tab","orientation","tabsHorizontal","sortTabs","template","ViewContainerRef","index","self","findIndex","priorityOrder","aTranslatedLabel","instant","bTranslatedLabel","translatedLabelOrder","localeCompare","Boolean","first","TranslateService","BootstrapComponent","navigator","actionBar","headerService","noAppsMargin$","hiddenOnStartup","tabsOrientation","localeUpdating","Component","selector","HOOK_BREADCRUMB","BreadcrumbService","sortByPreferredPath","selectPreferredByPath","preferredPath","bc","statusIcons","SUCCESS","WARNING","DANGER","INFO","statusClasses","statusAlert","operationStatusIcons","OperationStatus","PENDING","EXECUTING","SUCCESSFUL","FAILED","operationStatusClasses","_e","HumanizePipe","humanize","upperFirst","transform","HumanizePipe_1","Pipe","HumanizeAppNamePipe","internalApps","administration","cockpit","devicemanagement","appNameOrApp","appName","getAppName","isPublicApp","getFirstDefined","values","negate","LANGUAGES","LOCALE_PATH","HOOK_PATTERN_MESSAGES","PatternMessagesService","patterns","pipes","absoluteDate","date","formatDate","currentLang","translate","each","pattern","translation","translateWithPatterns","translatedMessage","patternCfg","globalMatch","globalRegExp","RegExp","exec","localMatch","placeholderValues","mapValues","placeholders","placeholder","expr","capture","replacement","translateWithParams","params","defaultLang","compiler","translations","store","defaultTranslations","originalKey","interpolateParams","noPatternMessages","pipeRegex","paramName","pipeName","compile","MissingTranslationCustomHandler","parser","patternMessagesService","cache","handle","messageKey","getFromCache","patternMessageTranslation","getPatternMessageTranslation","interpolate","addToCache","getCacheKey","stringify","TranslateParser","MESSAGES","^Access is denied$","^Alarm created$","^Alarm updated$","^API is not available with the new domain$","^Application with given name already exist$","^Application with id (.+?) is already assigned to the tenant (.+?)$","tenant","^(.+)pplication for tenant (.+) with properties \\( (.+?) \\) already exists$","valuesList","^Authentication failed! : User account is locked$","^Availability monitoring record$","^Can not activate a certificate which is either expired or not yet valid$","^Cannot add certificate - certificate with (.+?) fingerprint already exists. : Certificate with (.+?) fingerprint already exists.","fingerprint","^Cannot change password. : Provided token does not exist.$","^Cannot deploy module (.*)$","errorMessage","^Cannot deploy module (.+?)! : Compilation failed in module '(.+?)' in expression '(.+?)' : Incorrect syntax near '(.+?)' at line (\\d+) column (\\d+) \\[([\\S\\s]+?)\\]$","moduleName","expression","incorrectExpression","line","column","^Cannot deploy module (.+?)! : Compilation failed in module '(.+?)' in expression '(.+?)' : Incorrect syntax near '(.+?)' at line (\\d+) column (\\d+) near reserved keyword '(.+?)' \\[([\\S\\s]+?)\\]$","keyword","^Cannot deploy module (.+?)! : Compilation failed in module '(.+?)' in expression '(.+?)' : Incorrect syntax near '(.+?)' at line (\\d+) column (\\d+), please check the where clause \\[([\\S\\s]+?)\\]$","^Cannot deploy module (.+?)! : Deployment failed in module '(.+?)' in expression '(.+?)' : Exception compiling script '(.+?)' of dialect '(.+?)': missing (.+?) before statement \\((.+?)\\) \\[([\\S\\s]+?)\\]$","scriptName","scriptDialect","missingSyntax","affectedStatement","^Cannot execute bulk operation on empty group. Group with id='(\\d+?)' doesn't have child assets.$","groupId","^Cannot execute bulk operation on empty group. DynamicGroup with id='(\\d+?)' doesn't have child assets$","^Cannot parse X509 certificate. : Could not parse certificate: (.+?)$","failureReason","^Cannot reschedule bulk operation. All its operations are successful$","^Cannot reset user password : Cannot find user with such email.$","^Cannot update/delete application binary via this endpoint$","^Can't delete user because it is used by another managed object$","^Cep module created$","^Cep module updated$","^Cep module deleted$","^Cep module \"(.+?)\" created$","^Cep module \"(.+?)\" updated$","^Cep module \"(.+?)\" deleted$","^Command state is invalid: (.+)$","violations","(\\w+?) - may not be null","field","^Could not connect to endpoint (.+)\\. Could not verify `(.+)` host key with fingerprint `(.+)` for `(.+)` on port (.+)\\. If you expected that key, please remove the previous one from configuration to allow for connection\\.$","endpointName","keyType","host","port","^Could not login to ssh server on endpoint \"(.+)\"\\. Provided credential for user \"(.+)\" is incorrect\\.$","userName","^Could not save object remoteAccessUpdate: (.+)$","errorMessages","Could not recognize host-key format","Could not recognize key-pair format","^Could not update user. : Error persisting user (.+?)!$","username","^Creation ramp must be greater than (\\d+?)$","minSeconds","^Created container$","^Created pod: (.+)$","imageName","^CSV file contained empty dataset$","^Cycle detected for route (.+?)!$","^Data broker processing is currently overloaded and may stop forwarding your data\\. Please contact support\\.$","^Data broker processing is not able to connect do destination tenant, thus data forwarding is not working\\. Please contact support\\.$","^Device id '(.+?)' contains '(.+?)' character which is not permitted.$","deviceId","invalidCharacter","^Device name: '(.+?)', alarm text: '(.+?)'$","deviceName","alarmText","^Display name$","^Domain name in uploaded certificate differs from the one in use$","^Domain name is already in use by another tenant!$","^Duplicated connector for instanceUrl (.+?)!$","targetUrl","^Duplicated connector for name (.+?)!$","^Entry is outside of the target dir: (.+)$","^Error during password validation. : Password must have at least (\\d+?) characters and no more than (\\d+?) and must contain only Latin1 characters.$","minCharactersCount","maxCharactersCount","^Error during password validation. : Your password has been used already. Choose another.$","^Error in statement (.+?):(.+?)! : Incorrect syntax near '(.+?)' near reserved keyword '(.+?)' \\[([\\S\\s]+?)\\]$","statementNumber","^External id not found; external id = ID \\[type=(.+?), value=(.+?)\\]$","^Error occurred when trying to find an Application for id ID (.+) : Could not find application by ID (\\d+)$","applicationId","^Http status code: 404\n{error=\"options/Not Found\",message=\"Unable to find option by given key: sigfox-agent/provider.token\",info=\"https://www.cumulocity.com/guides/reference-guide/#error_reporting\",details=\"null\"}","^Failed to delete application.  : Cannot remove application assigned to other tenants.$","^Failed to extract certificate from PKCS12$","^Failed to update domain at the platform$","^Finding device data from database failed : No managedObject for id '(.+?)'!$","^Following mandatory fields should be included: (.+?)$","fields","^Global Role updated$","^Global Role (.+?) updated$","^Global Role (.+?) updated: (.+)$","updatesList","applications \\[([^\\]]+?)\\] added","applications \\[([^\\]]+?)\\] removed","roles \\[([^\\]]+?)\\] added","roles \\[([^\\]]+?)\\] removed","^Global Roles$","^Operation updated: (.+)$","status='(.+?)'","description='(.+?)'","description","device name='(.+?)'","failure reason='(.+?)'","^ID \\[type=(.+?), value=(.+?)\\] was already bound to different Global ID.$","^Invalid credentials! : Bad credentials$","^Invalid credentials! : No phone number provided$","^Inventory Role removed$","^Inventory Role (.+?) removed","^Inventory Role updated$","^Inventory Role (.+?) updated","^I/O error: Connection refused; nested exception is Connection refused : Connection refused","^I/O error: Read timed out; nested exception is Read timed out : Read timed out","^Log file requested$","^Managed object deleted$","^Managed object \"(.+?)\" deleted$","^Maximum file size exceeded$","^Message with ID (.+?) doesn't exist in smart rest template (.+?)$","messageId","templateId","^NewDeviceRequest for id = (.+?) already exists.$","id","^No communication with device since (.+?)$","timestamp","^No data received from device within required interval.$","^No LoRa provider settings are found. Please configure the connectivity settings.$","^Not within any context!$","^Maximum age cannot be bigger than 10 years.$","^Microservice application name incorrect. Please use only lower-case letters, digits and dashes. Maximum length is (\\d+) characters.$","maxLength","^Microservice not available.*$","^Operation created$","^Operation updated$","^Operation created: status='(.+?)'.","^Option created$","^Option \"(.+?)\" created$","option","^Option deleted$","^Option \"(.+?)\" deleted$","^Owner field error. : Cannot introduce cyclic dependency.","^Password change is temporary blocked.$","^Password cipher does not match","^Platform application cannot be added to, nor removed from any tenant.$","^Private key must be provided in KEY_PAIR credentials$","^Private key cipher does not match","^Protocol \"(.+?)\" does not support \"(.+?)\" credentials type$","protocol","credentialsType","^pulling image \"(.+)\"$","^Real-time event processing is currently overloaded and may stop processing your events\\. Please contact support\\.$","^Resource ID \\[type=com_cumulocity_model_idtype_GId, value=(.+?)\\] for this request not found.$","^Scaled up replica set (.+) to (\\d+)$","replicaSetName","scaleNumber","^Simulator state is invalid: (.+)$","(\\w+?) - must be less than or equal to (\\d+)","maxValue","(\\w+?) - should not contain null values","^Smart rest template (.+?) doesn't exist$","^Smart rule created$","^Smart rule updated$","^Smart rule enabled$","^Smart rule disabled$","^Smart rule deleted$","^Smart rule \"(.+?)\" created$","^Smart rule \"(.+?)\" updated$","^Smart rule \"(.+?)\" enabled$","^Smart rule \"(.+?)\" disabled$","^Smart rule \"(.+?)\" deleted$","^Started container$","^Successfully assigned (.+) to (.+)$","address","^Successfully pulled image \"(.+)\"$","^Tenant creation failed. : Tenant with given id already exists.$","^Tenant id cannot be a reserved sql keyword \"(.+?)\".$","tenantId","^Tenant \"(.+?)\" activated$","^Tenant (.+?) has sub-tenants, please remove them first!$","^Tenant activated$","^Tenant \"(.+?)\" created$","^Tenant created$","^Tenant \"(.+?)\" deleted$","^Tenant deleted$","^Tenant \"(.+?)\" suspended$","^Tenant suspended$","^Tenant \"(.+?)\" updated: (.+?)$","properties","^Tenant updated$","^Too Many Requests$","^User alias equals username '(.+)'$","^User created$","^User (.+?) created$","^User deleted$","^User (.+?) deleted$","^User updated$","^User (.+?) updated: (.+)$","delegatedBy='(.+?)'","delegate","owner='(.+?)'","owner","inventory assignment \\[(.+?)\\] added","inventoryAssignment","inventory assignment \\[(.+?)\\] removed","applications \\[(.+?)\\] added$","applicationsList","applications \\[(.+?)\\] removed$","global roles \\[(.+?)\\] added$","globalRolesList","global roles \\[(.+?)\\] removed$","^User with username '(.+?)' already exists! : Duplicated: (.+?)$","^User with username or alias '(.+)' already exists! : Duplicated: (.+)$","usernameOrAlias","^User with email '(.+?)' already exists! : Duplicated: (.+?)$","email","^unable to find option with given key (.+?) : Could not find entity Option by ID (.+?)!$","^unable to find option with given key (.+?) : There is no system property for key (.+?)$","^Write failed with error code 16733 and error message 'trying to index text where term list is too big, max is 4mb _id: \"(.+?)\"'$","^Write failed with error code 17280 and error message 'WiredTigerIndex::insert: key too large to index, failing (.+?) { : \"(.+?)\" }'$","^You have reached devices limit. No more devices can be registered.$","^(.+) succeeded for volume \"(.+)\"","operation","volume","^Exception on tenant (.+) in statement '(.+)': Invocation exception when invoking method '(.+)' of class '(.+)' passing parameters \\[(.+)\\] for statement '(.+)': (.+) : (.+)$","methodName","classPath","parameters","statement","exceptionType","^No nodes are available that match all of the predicates: (.+).$","predicates","^Readiness probe failed: (.+) (.+): (.+): request canceled while waiting for connection \\(Client.Timeout exceeded while awaiting headers\\)$","requestMethod","uri","^Liveness probe failed: (.+) (.+): (.+): request canceled while waiting for connection \\(Client.Timeout exceeded while awaiting headers\\)$","^Error syncing pod$","^Failed create pod sandbox.$","^Exception on tenant (.+) in statement '(.+)': Http status code: (\\d+) \\{error=\"alarm/Unprocessable Entity\",message=\"(.+)\",info=\"https://www.cumulocity.com/guides/reference-guide/#error_reporting\",details=\"null\"\\}$","httpStatusCode","^User '(.+)' is managed by a remote identity management service defined by an administrator, direct update is forbidden$","^Added new child device to \"(.+)\" \\(ID: (.+)\\).$","parentDeviceName","parentDeviceId","^Updated child device of \"(.+)\" \\(ID: (.+)\\).$","^Added child device \"(.+)\" \\(ID: (.+)\\).$","^Removed child device \"(.+)\" \\(ID: (.+)\\).$","^Change value of \"(.+)\" to (.+) (.+).$","unit","^Change value of \"(.+)\" to (.+).$","^Change status of \"(.+)\" to \"(.+)\".$","^Send message \"(.+)\".$","^Close relay (.+).$","number","^Open relay (.+).$","^Change trace status to (.+).$","^Change relay status to (.+).$","^Closing relay (.+).$","^Opening relay (.+).$","^Update firmware to: (.+) \\(version: (.+)\\).$","^Execute generic command: (.+).$","command","^Failed to refresh application. : Cannot refresh non local-hosted application.$","^Failed to refresh application. : Cannot refresh application without active version id.$","^Scaled down replica set (.+) to (\\d+)$","^Deleted pod: (.+)$","^Container image \"(.+)\" already present on machine$","TranslateCustomLoader","http","getTranslation","catchError","HttpClient","TranslateParserCustom","getValue","translated","TranslateDefaultParser","require","translateLoaderFactory","httpClient","localePath","localePathFactory","languagesFactory","localeId","appStateService","toString","I18nModule","providers","provide","LOCALE_ID","useFactory","deps","useValue","multi","TranslateLoader","TranslateCompiler","useClass","TranslateFakeCompiler","MissingTranslationHandler","TranslateStore","NgxTranslateService","USE_STORE","USE_DEFAULT_LANG","USE_EXTEND","DEFAULT_LANGUAGE","forRoot","ngModule","I18nModule_1","NgModule","exports","TranslateModule","imports","HttpClientModule","IconDirective","el","renderer","c8yMatch","klasses","currentClasses","icon","updateIcon","isC8y","getClasses","classes","_icon","trim","newClasses","klass","removeClass","nativeElement","addClass","ElementRef","Renderer2","tslib_1.__decorate","Input","Directive","ICONS","OutletDirective","viewContainer","resolver","_element","Element","removeChild","parentElement","clear","TemplateRef","createEmbeddedView","parent_1","parentNode","insertBefore","factory","resolveComponentFactory","component","createComponent","instance","ngOnDestroy","_parent","ComponentFactoryResolver","UserPreferencesStorageLocal","LOCAL_STORAGE_KEY","jsonStore","localStorage","getItem","saveJsonStore","setItem","UserPreferencesStorageInventory","inventory","TYPE","fragmentType","updateMo","out","UserPreferencesService","user","appState","storage","local","getForUser","setForUser","rawKey","getRawKey","getStorage","hasAllRoles","UserService","InventoryService","Map","loadLocale","moduleLang","has","fetch","src","module","moduleSrc","l","join","Function","fn","catch","ngxTranslate","DEFAULT_SEPARATOR","queryStringLang","saveInLocalStorage","TranslateService_1","SAVE_LANGUAGE_KEY","switchToLanguage","loadLocales","lessSpecificModuleLang","shift","e_1","use","registerLocaleData","default","firstSupportedLanguage","localStorageLang","browserLangs","language","isSupported","convertToLanguageCodePO","sep","langMain","langSpecific","getNativeLanguage","nativeName","includes","getQueryParameter","property","propertyLanguages","queryKey","search","substring","pair","ShortenUserNamePipe","firstName","lastName","parsedFirstName","substr","parsedLastName","LoadMoreComponent","element","useIntersection","class","maxIterations","onLoad","EventEmitter","counter","showNoMoreDataHint","LOAD_SAME_PAGE_THRESHOLD","hasMore","paging","totalPages","currentPage","ngAfterContentInit","intersectionObserver","IntersectionObserver","event","buttonInView","container","observe","shouldShowNoMoreDataHint","disconnect","loadMore","emit","intersectionLoading","loadUntilIntersected","getLoadingThreshold","shouldSwitchMode","noMoreDataHint","isIntersecting","Output","HostBinding","ForOfDirective","tpl","vcr","componentFactoryResolver","cachedData","loadMoreMode","dataPipe","tap","fetchData","obs$","notFoundTemplate","ngOnChanges","changes","c8yForPipe","c8yForOf","unsubscribePaging","reRender_1","hasMoreData","pagingSub","render","reRender","context","$implicit","shouldUseLoadMoreButton","createLoadMoreButtonComponent","append","loadMoreData","componentFactory","unsubscribe","MapFunctionPipe","mappingFunction","ProgressBarComponent","progress","initializeServices","userPreferences","queryStringLanguage","firstLanguage","u","LoginViews","ICON_LIST","CommonModule","DataModule","C8Y_APP","APP_INITIALIZER","CommonModule_1","NgCommonModule","declarations","entryComponents","ActionBarItemComponent","actionBarService","placement","itemClass","ngAfterViewInit","viewInitTimeout","ViewChild","static","ActionBarComponent","navigatorOpen","hasTabs","isTabsHorizontal","isPageToolbarExpanded","uiActionBar","getSortedItems","byPriority","ActionBarModule","BsDropdownModule","CollapseModule","RouterModule","forChild","ActionOutletComponent","getByPriority","invoke","action","ActionComponent","actionService","disabled","ActionModule","AlertDetailsComponent","AlertOutletComponent","position","alertService","detailDisplayedAlert","isStatic","getClass","close","showDetails","mode","setDetailsContent","isTemplateRef","contents","hasDetails","closeDetails","isDetailsShow","content","Attribute","AlertTextComponent","AlertComponent","containDetailsComponent","ContentChild","AlertModule","BreadcrumbItemComponent","BreadcrumbOutletComponent","showAll","normalizePath","BreadcrumbComponent","breadcrumbService","contentChildItems","toArray","ContentChildren","BreadcrumbModule","TooltipModule","SearchOutletComponent","openSearch","focusInputBox","closeDropdown","dropdown","hide","verifyNotEmpty","term","elementToFocus","focus","HOOK_SEARCH","SearchService","SearchComponent","searchService","onSearch","HighlightComponent","domSanitizer","elementClass","highlightedText","sanitize","SecurityContext","HTML","DomSanitizer","read","SearchModule","FormsModule","ConfirmModalComponent","modal","_labels","ok","cancel","dismiss","labels","BsModalRef","ModalComponent","onDismiss","customFooter","_dismiss","_close","onEnterKeyDown","hasOnlyOneButton","isEmpty","isCancelClickable","isOkClickable","HostListener","ModalService","modalService","modalLabels","show","initialState","acknowledge","acknowledgeLabel","BsModalService","PopoverConfirmComponent","buttons","isOpen","containerClass","outsideClick","buttonStatus","handleOutsideClick","PopoverDirective","ModalModule","BsModalModule","PopoverModule","UserMenuService","userMenuItems","UserMenuItemComponent","userService","onClick","UserEditModalComponent","auth","client","loading","onHide","take","reason","changedLang","onLanguage","updateAndClose","updateCurrent","password","updateCredentials","current","currentUserResult","persistLanguage","newCredentials","BasicAuth","FilteringActionType","LoginService","basicAuth","cookieAuth","systemOptions","realtime","api","rememberMe","TOKEN_KEY","TFATOKEN_KEY","OAUTH2_INTERNAL_TYPE","isFirstLogin","ERROR_MESSAGES","minlength","password_missmatch","maxlength","password_strength","remote_error","password_change","password_reset_token_expired","tfa_pin_invalid","pattern_phonenumber","pattern_newPassword","international_number_required","phone_number_error","pinAlreadySent","passwordConfirm","tfaExpired","SUCCESS_MESSAGES","password_changed","password_reset_requested","resend_sms","passwordStrengthSetting","enforcePasswordStrength","greenMinLength","localhostRegExp","localhostIpRegExp","showTenantRegExp","autoLogout","initLoginOptions","getTenant","isOAuth2","grantType","loginMode","oauthOptions","redirectToOauth","initRequest","fullPath","_platformLocation","href","redirectUrl","encodeURIComponent","originUriParam","errorPattern","isTfaExpired","hookResponse","response","EMPTY","apiCall","willLogout","json","clone","logout","getGreenMinLength","getEnforcePasswordStrength","cleanMessages","addSuccessMessage","successKey","successMessage","getAuthStrategy","authStrategy","token","sessionStorage","tfa","setCredentials","useBasicAuth","credentials","login","setAuth","tenantRes","switchLoginMode","userRes","verifyAppAccess","storeBasicAuthToken","authFulfilled","isPasswordGrantLogin","URLSearchParams","grant_type","tfa_code","urlParams","method","headers","content-type","cleanLocalStorage","showTenant","isLocal","isShowTenant","reload","resData","reset","tslib_1.__read","redirect","cleanSessionStorage","all","saveTFAToken","tfaToken","ex_2","hostname","saveToken","removeItem","CookieAuth","TenantService","Realtime","LocationStrategy","PasswordConfirmModalComponent","loginService","passwordConfirmedEmitter","strategy","Client","baseUrl","emitSuccessAndClose","PasswordService","GREEN","colorName","color","passwordStrength","PasswordStrength","YELLOW","RED","confirmPassword","hasLowerCase","hasUpperCase","hasNumbers","hasSpecialChars","getStrengthColor","UserTotpSetupComponent","totpSetupVerified","activateTotp","UserEditComponent","passwordService","modalConfirmService","bsModalService","onUser","onCancel","userHasActiveTotp","userCanSetupTotp","TOTP_OPTION","TOTP_VALUE","_user","userIsExternal","customProperties","userOrigin","ngOnInit","initializeTotpSettings","setupTotp","save","saveAfterPasswordConfirmation","onNewPasswordChanged","newPassword","canUserSetupTotp","getActivityTotp","totpActivity","confirmed","UserMenuOutletComponent","tenantService","optionsService","copyIt","copied","handler","handleEvent","clipboardData","addEventListener","execCommand","removeEventListener","editUser","activateSupportAccess","companyName","successMsg","enableSupportUser","refreshCurrentUser","deactivateSupportAccess","textWithCompany","textWithoutCompany","hasRole","isTenantAdmin","disableSupportUser","PasswordCheckListComponent","passwordStrengthChecker","minGreenLength","checklist","check","contextualColor","onPasswordChange","requirement","checked","PasswordConfirm","validate","abControl","controlToCompareWith","PasswordConfirm_1","NG_VALIDATORS","useExisting","PasswordStrengthCheckerService","PasswordStrengthComponent","passwordStrengthCheckerService","strength","model","NewPasswordComponent","changePassword","loadEnforcePasswordStrength","newPasswordChanged","toggleChangePassword","viewProviders","ControlContainer","NgForm","PhoneValidationDirective","control","validateInternationalPhoneNumber","internationalPhoneNumber","numberValid","phoneNumber","parsePhoneNumberFromString","isValid","format","setValue","emitEvent","emitModelToViewChange","PhoneValidationDirective_1","ValidationPattern","rules","messages","domain","loginAlias","min","opcuaBrowsePath","required","urlSegment","groupName","ip","DefaultValidationDirective","c8yDefaultValidation","validation","valid","minLength","DefaultValidationDirective_1","MinValidationDirective","parsedMin","parseInt","MinValidationDirective_1","MaxValidationDirective","parsedMax","MaxValidationDirective_1","MessageDirective","MessagesComponent","defaults","messageMap","customMessages","directive","changVisibility","toMessage","FormGroupComponent","hasError","hasWarning","hasSuccess","novalidation","VALIDATION_DEBOUNCE_MS","initNgModel","subscription","valueChanges","dirty","debounce","timer","customErrorMessage","errors","NgModel","InputGroupListComponent","plus","minus","onRemove","onAdd","InputGroupListContainerDirective","listProjections","last","elements","JsonValidationPrettifierDirective","ngCtrl","invalidJSON","debounceTimeInMs","abstractCtrl","clearValidationMessage","validateInputAndPrettify","closed","validJsonObject","pretty","setErrorAndValidationMessage","setErrors","invalidBodyTemplate","NgControl","TextAreaRowHeightDirective","elem","rows","minHeightPerRow","convertedValue","heightPerRow","setHeight","setStyle","RequiredInputPlaceholderDirective","translationService","ngAfterContentChecked","requiredText","setPlaceholder","removeAttribute","parts","compact","shouldSkipRequiredHint","setAttribute","closest","IpRangeInputListComponent","ipRangeList","cidr","SchemaFormComponent","UpgradeComponent","FilterInputComponent","filterChange$","filterTerm","CARRIAGE_RETURN_KEY","CARRIAGE_RETURN_CODE","code","keyCode","complete","NgFormsModule","TotpChallengeComponent","users","verify","onSuccess","verifyCode","verifyTotpCode","SmsChallengeComponent","smsToken","resendTfa","verifyTFACode","useOAuthInternal","verifyCodeWithOauth","verifyCodeWithBasicAuth","resendTFASms","e_2","loginWithTFA","e_3","e_4","TotpSetupComponent","totpSecret","secretQrUrl","rawSecret","generateTotpSecret","ex_1","AuthenticationModule","UserTotpRevokeComponent","revokeEmitter","revoke","totpRevokeSecret","UserModule","AppIconComponent","appIcon","showIcon","iconClass","appNameAbbr","iconStyle","c8yAppIconsList","analyticsbuilder","analytics-builder","apamaepl","white","defaultIconStyle","background-repeat","background-size","height","width","iconFromAppDefinition","findStaticIcon","iconUrl","iconUrlFromAppDefinition","background-image","appContextPathNormalized","cp","iconClassProperty","iconUrlProperty","AppSwitcherComponent","applications","listAppsForUser","getHref","apps","orderApps","filterApps","filterVisible","filterCloud","filterDuplicates","visibleApplicationTypes","noAppSwitcher","hideCloudApps","filterFn","cloud","oneCloudApps","otherApp","orderBy","documentationItems","HOOK_DOCS","DocsService","getBaseUrl","getUserGuideLink","link","getLink","templateStr","toPromise","links","noDefault","excludeDefault","staticLinks","lnk","partialLink","prefixWithSlash","HeaderBarComponent","userMenuService","docs","canToggle$","appState$","drawerOpen","headerOpen","toggle","TitleOutletComponent","zone","title$","runOutsideAngular","NgZone","TitleComponent","NavigatorItemComponent","iconTemplate","NavigatorIconComponent","NavigatorNodeComponent","nodeClick","childrenNodes","expandParentIfActive","expandCollapse","routerLinkActive","recursive","forNode","updateIconTemplate","updateIconComponent","componentType","iconComponent","iconSlot","iconComponentFactory","RouterLinkActive","ViewChildren","NavigatorNodeComponent_1","NavigatorOutletComponent","collapseNavigator","trackByPathOrLabel","NavigatorModule","RightDrawerComponent","quickLinks","helpAndSupport","HeaderModule","ChangePasswordComponent","onChangeView","passwordPattern","newPasswordConfirm","emailReadOnly","TOKEN_PARAM","EMAIL_PARAM","passwordStrengthColor","resetPassword","view","Credentials","CredentialsComponent","LOGIN_VIEWS","showLoginForm","showBasicAuth","PASSWORD_RESET_HEADER_NAME","visibleOnLoginPage","handlePasswordReset","handleSmsChallenge","handleTotpChallenge","ChangePassword","TotpSetup","TotpChallenge","SmsChallenge","LoginComponent","currentView","None","displayAlerts","getResetPasswordToken","loginAutomatically","handleLoginTemplate","onkeyup","setView","RecoverPasswordComponent","sendPasswordResetMail","TotpAuthComponent","onTotpSuccess","isSetup","LoginModule","LoginModule_1","C8yFormsModule","TabComponent","TabsOutletComponent","showLeft","showRight","scrollSubscription","scrollSubscribe","navigateTo","navigate","scroll","direction","getDimensions","widthScroll","targetScroll","scrollLeft","unlisten","fromEvent","fromEventPattern","listen","updateScroll","elTabs","tabsContainer","scrollWidth","TabsModule","CookieBannerComponent","storageKey","acceptValue","settings","cookieBannerText","showBanner","acceptCookies","BootstrapModule","CellRendererDefDirective","HeaderCellRendererDefDirective","FilteringFormRendererContext","FilteringFormRendererDefDirective","ColumnDirective","ratiosByColumnTypes","numeric","text-short","text-long","GridDataSource","loadingSubject","dataSourceSubject","dataStatsSubject","size","filteredSize","currentPageSize","firstPageSize","dataSelectionSubject","filteredDataIds","loading$","asObservable","data$","stats$","selection$","connect","collectionViewer","loadData","columns","pagination","searchText","serverSideDataCallback","selectable","selectionPrimaryKey","clientSideData$","initialData","transformedData","flow","doClientSideSearch","doClientSideFiltering","doClientSideSorting","doClientSidePagination","serverSideData$","selection","enabled","primaryKey","err","finalize","resolveValue","x","resolveFunction","normalizeNil","isNil","filterPredicate","propPaths","regexSearch","createRegexSearch","itemWithResolvedValues","pick","omitBy","cellValue","actives","sortOrder","sortingState","paths","orders","chunk","filterValue","escapeRegExpPattern","PushStatusLabels","SendStatusLabels","DataGridComponent","sanitizer","hostRef","cd","loadingItemsLabel","noMatchingItemsLabel","dataSource","filteringLabelsParams","filteredItemsCount","allItemsCount","paginationLabelParams","pageFirstItemIdx","pageLastItemIdx","itemsTotal","possiblePageSizes","minPossiblePageSize","displayOptions","striped","bordered","gridHeader","rowMouseOver","rowMouseLeave","rowClick","itemsSelect","columnNames","styles","tableCursor","gridTemplateColumns","searchText$","filteringApplied","totalPagesCount","Infinity","selectedItemIds","currentPageSelectionState","allSelected","allDeselected","builtInActionType","Edit","Delete","Export","resizeHandleMouseDown$","resizeHandleContainerMouseMove$","resizeHandleContainerMouseUp$","unsubscribe$","possiblePageSize","actionControls","bulkActionControls","takeUntil","currentPageEmpty","every","isItemSelected","updateColumns","updateGridColumnsSize","thEls","thRefs","setupResizeHandle","trackByName","resolveCellValue","row","changeSortOrder","columnName","updateSorting","applyFilter","filteringModifier","updateFiltering","ApplyFilter","payload","resetFilter","ResetFilter","clearFilters","externalFilterQuery","updateFilteringApplied","isColumnFilteringApplied","filterable","updatePagination","itemsPerPage","page","getCellRendererSpec","_getCellRendererSpec","getHeaderCellRendererSpec","getFilteringFormRendererSpec","getColumnRenderer","filteringFormRendererComponent","bind","setAllItemsSelected","selected","setItemsSelected","setAllItemsInCurrentPageSelected","itemIds","union","without","onColumnDrop","previousIndex","currentIndex","updateColumnNames","bypassSecurityTrustStyle","visible","gridTrackSize","specialColumn","sortable","positionFixed","tslib_1.__spread","withColumnDefaults","dataType","headerCSSClassName","cellCSSClassName","clearMouseHighlights","mergeMap","targetColumnName","headerBeingResized","requestAnimationFrame","wrapper","horizontalOffset","getBoundingClientRect","left","clientX","offsetLeft","startsWith","_parseInt","getSelection","removeAllRanges","columnRenderer","rendererTemplate","cellRendererComponent","headerCellRendererComponent","columnRenderers","stats","updateFilteringLabelsParams","updatePaginationLabelParams","ChangeDetectorRef","CdkHeaderCell","CellRendererComponent","spec","prevSpec","rendererType","Type","rendererInjector","CellRendererContext","ngDoCheck","markForCheck","changeDetection","ChangeDetectionStrategy","OnPush","FilteringFormRendererComponent","defaultRendererFilterText","DataGridModule","CdkTableModule","DragDropModule","ReactiveFormsModule","C8YCommonModule","PaginationModule","StatusCellRendererComponent","StatusDeviceGridColumn","filteringConfig","schema","sendOnline","sendOffline","sendUnknown","sendNotMonitored","pushOnline","pushOffline","pushUnknown","maintenance","form","getFilter","ors","sendIns","pushIns","__and","__not","__has","__in","__or","sortingConfig","pathSortingConfigs","BaseDeviceGridColumn","NameCellRendererComponent","deviceGridService","DeviceGridService","forwardRef","NameDeviceGridColumn","names","notitle","ModelCellRendererComponent","ModelDeviceGridColumn","vendingModelPath","models","SerialNumberCellRendererComponent","SerialNumberDeviceGridColumn","serialNumbers","GroupCellRendererComponent","GroupDeviceGridColumn","deviceGroupId","__bygroupid","RegistrationDateCellRendererComponent","RegistrationDateDeviceGridColumn","registrationDate","after","before","maxDateKey","minDateKey","dates","__gt","__lt","dateToFormat","Date","toISOString","SystemIdDeviceGridColumn","ids","ImeiDeviceGridColumn","imeis","AlarmsCellRendererComponent","AlarmsDeviceGridColumn","critical","major","minor","none","c8y_ActiveAlarmsStatus.critical","c8y_ActiveAlarmsStatus.major","c8y_ActiveAlarmsStatus.minor","c8y_ActiveAlarmsStatus.warning","sev","zero","inventoryService","queriesUtil","QueriesUtil","getDefaultColumns","getDefaultPagination","getDefaultActionControls","getDefaultBulkActionControls","getProperName","device","getModel","hardware","getHardware","getSerialNumber","serialPropertyName","isVendme","getParentsNames","featuredParentId","assetParentsReferences","assetParents","references","sortedByName","getDeviceHref","getAlarmsHref","getDevices","filters","getDevicesFilters","withParents","getDevicesCount","getDevicesTotal","q","withTotalPages","getDeviceQueryString","buildQuery","getQueryObj","hardwarePropertyName","query","extendQueryByColumn","__filter","__orderby","queryObj","identity","obj","cs_1","pathSortingConfig","sortOrderModifier","DeviceGridComponent","onColumnsChange","onDeviceQueryStringChange","onDataSourceModifier","_index","dataSourceModifier","deviceAvailabilityIconMap","sendData","AVAILABLE","UNAVAILABLE","UNKNOWN","NOT_MONITORED","CONNECTED","DISCONNECTED","MAINTENANCE","lastMessage","tooltips","sendStatusConnected","ɵ0","sendStatusDisconnected","pushStatusConnected","pushStatusDisconnected","ReadAsType","DeviceStatusComponent","_mo","mo","requiredAvailability","availabilityStatus","pushStatus","sendStatus","getMaintenanceStatus","getSendPushStatus","maintenanceStatus","tooltip","getSendStatusTooltip","getPushStatusTooltip","availability","c8y_Availability","DeviceStatusModule","FilteringFormComponent","cloneDeep","formDefaults","ngModelOptions","canApply","schemaFormComponent","DeviceGridModule","DropAreaComponent","loadingMessage","alwaysShow","clickToOpen","dropped","isOver","fileIsEmpty","area","style","offsetHeight","onOver","showPicker","picker","onPick","onFilesSelected","files","onDrop","stopDragging","isAnyFileEmpty","compose","file","readAsJson","TEXT","readAsText","readAsArrayBuffer","ARRAY_BUFFER","readAsBinaryString","BINARY_STRING","readAsDataURL","DATA_URL","reader","FileReader","onload","readyState","DropAreaModule","SelectComponent","applyLabel","onChange","textFilter","labelText","filteredItems","sizeToShowFilter","itemsSelected","stopClicks","preventClick","isOpenChange","updateSelected","outterSelected","isSelected","applyChanges","selectAll","onChangeItem","updateFiltered","search_1","updateLabel","selectedLabel","BsDropdownDirective","ListItemActionComponent","ListItemCollapseComponent","ListItemFooterComponent","ListItemComponent","active","collapsed","showFooter","showActions","showCollapse","dropdownUp","ACTION_ITEM_HEIGHT","actions","itemActions","itemFooter","itemCollapse","showDropdownUp","rect","bottom","innerHeight","TypeaheadComponent","displayProperty","selectedChange","KEYCODE_UP","KEYCODE_DOWN","KEYCODE_TAB","KEYCODE_ENTER","KEYCODE_ESC","onShown","searchControl","handleKeyboard","blur","upOrDown","ListGroupComponent","ListItemIconComponent","ListItemBodyComponent","ListItemCheckboxComponent","onSelect","firstChange","currentValue","ListItemRadioComponent","ListGroupModule","SelectModule","GuideHrefDirective","htmlAnchor","hasAttribute","c8yGuideHref","GuideDocsComponent","guide","baseHref","descendants","DocsModule","HOOK_COMPONENTS","HOOK_COMPONENT","DynamicComponentService","getComponentsViaDeprecatedHook","cmps","cmp","componentsViaDeprecatedHook","__MODE__","warn","getById$","DynamicComponentComponent","dynamicComponentService","notFoundError","expandErrorDetails","componentId","loadComponent","dynamicComponent","configComponent","DynamicComponentModule","DashboardChildActionComponent","DashboardChildTitleComponent","DashboardComponent","gap","dashboardChange","lastRow","DEFAULT_ROW_SIZE","dashboardRect","calculateRowSize","rowSize","onResize","getLastRow","updateRectSize","widget","ele","emitChange","source","DashboardChildComponent","DashboardChildChange","childToChange","MIN_WIDTH","MIN_HEIGHT","PIXEL_SIZE_THRESHOLD","diffX","diffY","dashboard","dragSource","moved","move","getPixelSize","resizeDimension","setPixelSize","getDimensionSize","prev","dimension","setDimension","arrangePipe","getDimensionPosition","findFreeDimension","getCollided","collapseUpAll","w","ds","newPosition","collapseUp","arrangeAll","arrange","spacing","origin","dimensions","notIfColliding","columnSize","pxWidth","pxHeight","moveEvent","draggedElement","top","pointerPosition","round","pointer","resizePosition","nextElementSibling","doesCollide","currentDimension","isResize","isDragging","_pxWidth","_pxHeight","margin","isFrozen","changeStart","changeEnd","intersected","card","card-dashboard","on-resize","setDynamicDimension","intersectionObserver_1","childInView","resizeStarted","positioning","changeSubscription","resize$","dragStarted","drag$","observer","unobserve","WidgetsDashboardComponent","isDisabled","widgetMargin","translateWidgetTitle","defaultHeight","defaultWidth","allowFullscreen","canDelete","onAddWidget","onEditWidget","onDeleteWidget","onChangeDashboard","onEditDashboard","onDeleteDashboard","onFreeze","onChangeStart","onChangeEnd","toggleFullscreen","doc","fullScreen","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","ALLOW_KEYBOARD_INPUT","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","DashboardModule","C8yStepperIcon","templateRef","C8yStepper","disableDefaultIcons","edit","onStepChange","_iconOverrides","_stepIndex","_icons","_stepIndexSubscription","getIndicatorType","_state","_getIndicatorType","STEP_STATE","EDIT","DONE","setIndex","C8yStepper_1","CdkStepper","C8yStepperProgress","onStepClicked","stepSelected","C8yStepperButtons","stepper","pending","onNext","onBack","showBtns","back","observers","steps","stepControl","invalid","statusChangeSubscription","statusChanges","previous","Host","CdkStep","displayDefaultIndicatorType","StepperModule","CdkStepperModule","STEPPER_GLOBAL_OPTIONS","ɵ0$1","ViewContext","CoreModule","CoreModule_1","c8yFormsModule","c8yStepperModule","HOOK_ONCE_ROUTE","RouterService","routes","addRoute","addRoutes","emptyRoute","resetConfig","convertRoute","initialConfig","RouterTabsResolver","snapshot","routeConfig","getGuards","guard","canActivate","routerStateSnapshot","guards","showIf","ViewContextServices","contextToService","services","Device","Group","User","Application","SubscribedApplications","Tenant","ContextRouteComponent","tabsResolver","tabsService","lastAddedTabs","routerSubscription","redirectToFirstTab","refreshObservable","updatedContext","dataSubscription","updateTabs","refreshTabs","serviceInstance","contextRegex_1","getDetailUrl","contextData","childrenRegex_1","contextChanged","childrenAffected","NEVER","needsRedirect","firstTab$","navigateByUrl","replaceUrl","parseUrl","PRIMARY_OUTLET","segments","ActivatedRoute","ContextRouteGuard","caches","paramMap","clearDetailCached","detailCached","getCache","cached","EmptyComponent","routerService","RouterModule_1","NgRouterModule","QuickLinkComponent","QuickLinkModule","CustomDeviceGridColumn","exists","equals"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { flatten, isFunction, sortBy } from 'lodash-es';\nimport { combineLatest, defer, from, isObservable, Observable, of, race } from 'rxjs';\nimport { filter, map, merge, startWith, switchMap } from 'rxjs/operators';\n\nexport function fromTrigger(router, refresh, factories) {\n  return router.events.pipe(\n    filter(evt => evt instanceof NavigationEnd),\n    merge(refresh),\n    startWith(1),\n    switchMap(() => fromFactories(factories, router))\n  );\n}\nexport function fromFactories<T>(\n  factories?,\n  router?: Router,\n  withFirstEmpty = true\n): Observable<T[]> {\n  return !Array.isArray(factories) || factories.length < 1\n    ? of([])\n    : defer(() => {\n        const factoryObservables = resolveInjectedFactories(factories).map(f => {\n          return toObservable(\n            Array.isArray(f) ? f : f && isFunction(f.get) ? f.get(getActivatedRoute(router)) : [f],\n            withFirstEmpty\n          );\n        });\n        return combineLatest(...factoryObservables);\n      }).pipe(map(results => sortByPriority([].concat(...results))));\n}\n\nexport function resolveInjectedFactories(factories) {\n  return flatten(factories.map(f => (isFunction(f) ? f() : [f])));\n}\n\nexport function stateToFactory<T>(componentsState): ExtensionFactory<T> {\n  const components$ = componentsState.pipe(map((componentSet: Set<T>) => Array.from(componentSet)));\n  return { get: () => components$ };\n}\n\nexport function sortByPriority(items) {\n  return sortBy(items, 'priority');\n}\n\nfunction toObservable(factoryResult, withFirstEmpty) {\n  let observable;\n  if (!factoryResult) {\n    return of([]);\n  } else if (typeof factoryResult.then === 'function' || isObservable(factoryResult)) {\n    if (withFirstEmpty) {\n      const forceObservable = from(factoryResult);\n      const withEmptyFirst = forceObservable.pipe(startWith([]));\n      observable = race(forceObservable, withEmptyFirst);\n    } else {\n      observable = from(factoryResult);\n    }\n  } else {\n    observable = of(factoryResult);\n  }\n  return observable.pipe(\n    map(result => (Array.isArray(result) ? result : [result]).filter(item => !!item))\n  );\n}\n\n/**\n * Allows to extend the existing applications from a module.\n */\nexport interface ExtensionFactory<T> {\n  /**\n   * Allows to resolve the data of an extension point.\n   * The return value can be a Promise or Observable\n   * (allowing for asynchronous data resolution).\n   *\n   * @param activatedRoute The current activated route (if possible to resolve).\n   */\n  get(activatedRoute?: ActivatedRoute): Observable<T[] | T> | Promise<T[] | T> | T[] | T;\n}\n\n/**\n * Extension points allow to extend the application from\n * any module\n */\nexport interface ExtensionPoint<T> {\n  /**\n   * Observable that emits of array of extensions active at any give time\n   */\n  readonly items$: Observable<T[]>;\n  /**\n   * Call the extension factories to refresh them.\n   */\n  refresh();\n}\n\n/**\n * Helper function to get the activated route in\n * a service (as ActivatedRoute injection only\n * works in components). Works as long as we only use\n * a tree and no child is active at the same time.\n *\n * @param router The current router\n */\nexport function getActivatedRoute(router: Router) {\n  if (router && router.routerState && router.routerState.root) {\n    let route = router.routerState.root;\n    while (route.firstChild) {\n      route = route.firstChild;\n    }\n    return route;\n  }\n}\n","import { Observable, BehaviorSubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\n/**\n * A abstract state which should be included in each state.\n * @abstract\n */\nexport abstract class StateService {\n  /**\n   * Saves the state. Should not be accessible directly. Use map or the getter to access\n   * the state. Use functions in the implementation to change the state.\n   */\n  protected abstract state$: BehaviorSubject<any> | any;\n\n  /**\n   * Should return the current state of this StateService\n   */\n  abstract get state();\n\n  /**\n   * Maps to a property and just returns that property.\n   * @param mappedProperty The property to map to.\n   */\n  map(mappedProperty: (stateProperty) => any): Observable<any> {\n    return this.state$.pipe(map(mappedProperty), distinctUntilChanged());\n  }\n\n  /**\n   * Emits a new state.\n   */\n  protected emitNewState() {\n    this.state$.next(this.state);\n  }\n}\n","import { Injectable, InjectionToken, Injector } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport {\n  ExtensionPoint,\n  fromTrigger,\n  sortByPriority,\n  stateToFactory\n} from '../common/extension-hooks';\nimport { StateService } from '../common/state-service.abstract';\nimport { ActionBarItem } from './action-bar.model';\n\n/**\n * A hook to use for Multi Provider extension.\n */\nexport const HOOK_ACTION_BAR = new InjectionToken('ActionBarFactory');\n\n/**\n * A service which defines action-bar items.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActionBarService extends StateService implements ExtensionPoint<ActionBarItem> {\n  items$: Observable<ActionBarItem[]>;\n  readonly refreshTrigger = new Subject();\n  protected state$ = new BehaviorSubject<Set<ActionBarItem>>(new Set<ActionBarItem>());\n\n  constructor(private injector: Injector, router: Router) {\n    super();\n    this.items$ = fromTrigger(router, this.refreshTrigger, [\n      () => this.injector.get(HOOK_ACTION_BAR, []),\n      stateToFactory(this.state$)\n    ]).pipe(\n      map((items: ActionBarItem[]) => sortByPriority(items)),\n      shareReplay(1)\n    );\n  }\n\n  /**\n   * Returns the current state.\n   * @readonly\n   * @returns The current set of actions.\n   */\n  get state(): Set<ActionBarItem> {\n    return this.state$.value;\n  }\n\n  refresh() {\n    this.refreshTrigger.next();\n  }\n\n  /**\n   * Adds a new item to the action bar in the header and emits a state change.\n   * @param item The item to add.\n   */\n  add(item: ActionBarItem) {\n    this.state.add(item);\n    this.emitNewState();\n  }\n\n  /**\n   * Removes an action bar item from the header and emits a state change.\n   * @param item The item to remove.\n   */\n  remove(item: ActionBarItem) {\n    this.state.delete(item);\n    this.emitNewState();\n  }\n}\n","import { Injector, Injectable, InjectionToken } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { StateService } from '../common/state-service.abstract';\nimport { Action, ActionFactory } from './action.model';\nimport {\n  fromTrigger,\n  ExtensionPoint,\n  stateToFactory,\n  sortByPriority\n} from '../common/extension-hooks';\nimport { map, shareReplay } from 'rxjs/operators';\n\n/**\n * A hook to use for Multi Provider extension.\n */\nexport const HOOK_ACTION = new InjectionToken('ActionFactory');\n\n/**\n * A service which defines global actions.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActionService extends StateService implements ExtensionPoint<Action> {\n  items$: Observable<Action[]>;\n  readonly refreshTrigger = new Subject();\n  readonly state$ = new BehaviorSubject<Set<Action>>(new Set<Action>());\n\n  constructor(private injector: Injector, router: Router) {\n    super();\n    this.items$ = fromTrigger(router, this.refreshTrigger, [\n      () => this.injector.get(HOOK_ACTION, []),\n      stateToFactory(this.state$)\n    ]).pipe(\n      map((items: Action[]) => sortByPriority(items)),\n      shareReplay(1)\n    );\n  }\n\n  /**\n   * Refresh the extension factories\n   */\n  refresh() {\n    this.refreshTrigger.next(1);\n  }\n\n  /**\n   * Returns the current state.\n   * @readonly\n   * @returns The current set of actions.\n   */\n  get state(): Set<Action> {\n    return this.state$.value;\n  }\n\n  /**\n   * Adds a new item to the actions in the header and emits a state change.\n   * @param item The item to add.\n   */\n  add(item: Action) {\n    this.state.add(item);\n    this.emitNewState();\n  }\n\n  /**\n   * Removes an action from the header and emits a state change.\n   * @param item The item to remove.\n   */\n  remove(item: Action) {\n    this.state.delete(item);\n    this.emitNewState();\n  }\n}\n","// Just for translation annotation\n// Note: Own file because of conflicts if put in barrel directly.\nexport const _ = (str) => str;\nexport function gettext(str) {\n          return str;\n}\n","import { Alert } from './alert.model';\nimport { BehaviorSubject } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { StateService } from '../common/state-service.abstract';\nimport { gettext } from '../i18n/gettext';\n\ntype alertType =  'success' | 'warning' | 'danger' | 'info' | 'system';\n/**\n * A service which allows to display alerts.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AlertService extends StateService {\n\n  /**\n   * Returns all alerts.\n   * @readonly\n   */\n  get state() {\n    return this.state$.value;\n  }\n  state$ = new BehaviorSubject<Alert[]>([]);\n\n  private MAX_ALERTS = 3;\n  private ALERT_TIMEOUT = 3000;\n\n  /**\n   * Adds a new alert to the current state.\n   */\n  add(alert: Alert) {\n    this.addAlert(alert);\n  }\n\n  /**\n   * Adds a alert by text.\n   */\n  addByText(type: alertType, txt: string, detailedData?: string): void {\n    this.addAlert({ text: txt, type, detailedData });\n  }\n\n  /**\n   * Returns all alerts.\n   * @deprecated Use alertService.alerts instead.\n   */\n  list(): Alert[] {\n    return this.state;\n  }\n\n  /**\n   * Remove an alert from the current state.\n   */\n  remove(alert: Alert) {\n    this.changeAlerts(this.state.filter((item) => !this.areSame(alert, item))\n    );\n  }\n\n  /**\n   * Removes last danger alert. Replacement for silentError.\n   *\n   * @example\n   * ```typescript\n   *  try {\n   *    // something that might throw a danger server msg\n   *  } catch (ex) {\n   *   this.alarmService.removeLastDanger();\n   *  }\n   * ```\n   */\n  removeLastDanger() {\n    const firstDangerAlarm = this.state.reverse().find(({ type }) => type === 'danger');\n    this.changeAlerts(this.state.filter((alarm) => alarm !== firstDangerAlarm));\n  }\n\n  /**\n   * Shorthand for a save successful alert.\n   * @param savedObject The object which was saved.\n   * @return A function that can be executed to show the msg.\n   */\n  saveSuccess(savedObject: string) {\n    return () => {\n      const text = `${savedObject} saved successfully`;\n      this.addByText('success', text);\n    };\n  }\n\n  /**\n   * Shorthand for a create successful alert.\n   * @param createdObject The object which was created.\n   * @return A function that can be executed to show the msg.\n   */\n  createSuccess(createdObject) {\n    return () => {\n      const text = `${createdObject} created successfully`;\n      this.addByText('success', text);\n    };\n  }\n\n  /**\n   * Clears all alerts.\n   */\n  clearAll() {\n    this.changeAlerts([]);\n  }\n\n  /**\n   * A shorthand to display a simple success message.\n   * @param text The success text.\n   * @param detailedData The text with additional information.\n   */\n  success(text: string, detailedData?: string) {\n    this.addByText('success', text, detailedData);\n  }\n\n  /**\n   * A shorthand to display a simple danger message.\n   * @param text The danger text.\n   * @param detailedData The text with additional information.\n   */\n  danger(text: string, detailedData?: string) {\n    this.addByText('danger', text, detailedData);\n  }\n\n  /**\n   * A shorthand to display a simple info message.\n   * @param text The info text.\n   * @param detailedData The text with additional information.\n   */\n  info(text: string, detailedData?: string) {\n    this.addByText('info', text, detailedData);\n  }\n\n  /**\n   * A shorthand to display a simple warning message.\n   * @param text The warning text.\n   * @param detailedData The text with additional information.\n   */\n  warning(text: string, detailedData?: string) {\n    this.addByText('warning', text, detailedData);\n  }\n\n  addServerFailure(error: any, type: alertType = 'danger') {\n    const { data, res } = error;\n    let text = data && data.message ? data.message : null;\n    let detailedData;\n    if (data) {\n      if (typeof data === 'object') {\n        detailedData = data.exceptionMessage;\n      } else if (typeof data === 'string') {\n        detailedData = data;\n      }\n    }\n    const hasRelevantMessage = !!(text || detailedData);\n    if (!text) {\n      text = gettext('A server error occurred.');\n    }\n    if (!hasRelevantMessage) {\n      detailedData = {\n        status: res.status,\n        statusText: res.statusText,\n        url: res.url,\n      };\n    }\n\n    this.addAlert({\n      type,\n      text,\n      detailedData\n    });\n  }\n\n  areSame(alert1: Alert, alert2: Alert) {\n    return alert1.text === alert2.text &&\n      alert1.type === alert2.type &&\n      alert1.detailedData === alert2.detailedData &&\n      alert1.onClose === alert2.onClose &&\n      alert1.onDetail === alert2.onDetail;\n  }\n\n  private changeAlerts(newAlerts: Alert[]) {\n    this.state$.next(newAlerts);\n  }\n\n  private addAlert(alert: Alert): void {\n    if (!alert.text && !alert.type) {\n      throw new Error('Cannot add empty alert');\n    }\n\n    const alertAlreadyAdded = this.state\n        .find((item) => this.areSame(alert, item));\n    if (alertAlreadyAdded) {\n      return;\n    }\n\n    this.changeAlerts([...this.state, alert]);\n    this.hideAutomaticallyIfNeeded(alert);\n    this.removeOldestIfMax();\n  }\n\n  private hideAutomaticallyIfNeeded(alert: Alert) {\n    const isSuccess = alert.type === 'success';\n    const noDetails = !alert.detailedData;\n    let alertTimeout = (isSuccess && noDetails) ? this.ALERT_TIMEOUT : 0;\n    if (typeof alert.timeout !== 'undefined') {\n      alertTimeout = alert.timeout;\n    }\n    if (alertTimeout) {\n      setTimeout(() => this.remove(alert), alertTimeout);\n    }\n  }\n\n  private removeOldestIfMax() {\n    if (this.state.length > this.MAX_ALERTS) {\n      const [, ...firstRemoved] = this.state;\n      this.changeAlerts(firstRemoved);\n    }\n  }\n}\n","import { OperationStatus } from '@c8y/client';\n\nexport enum Status {\n  SUCCESS = 'success',\n  WARNING = 'warning',\n  DANGER = 'danger',\n  INFO = 'info'\n}\n\nexport type StatusType = Status | 'success' | 'warning' | 'danger' | 'info';\n\nexport const statusIcons = {\n  [Status.SUCCESS]: 'check-circle',\n  [Status.WARNING]: 'exclamation-triangle',\n  [Status.DANGER]: 'exclamation-circle',\n  [Status.INFO]: 'info-circle'\n};\n\nexport const statusClasses = {\n  [Status.SUCCESS]: `text-${Status.SUCCESS}`,\n  [Status.WARNING]: `text-${Status.WARNING}`,\n  [Status.DANGER]: `text-${Status.DANGER}`,\n  [Status.INFO]: `text-${Status.INFO}`\n};\n\nexport const statusAlert = {\n  [Status.SUCCESS]: `alert-${Status.SUCCESS}`,\n  [Status.WARNING]: `alert-${Status.WARNING}`,\n  [Status.DANGER]: `alert-${Status.DANGER}`,\n  [Status.INFO]: `alert-${Status.INFO}`\n};\n\nexport const operationStatusIcons = {\n  [OperationStatus.PENDING]: 'clock-o',\n  [OperationStatus.EXECUTING]: 'refresh',\n  [OperationStatus.SUCCESSFUL]: 'check-circle',\n  [OperationStatus.FAILED]: 'exclamation-circle'\n};\n\nexport const operationStatusClasses = {\n  [OperationStatus.PENDING]: '',\n  [OperationStatus.EXECUTING]: 'text-info',\n  [OperationStatus.SUCCESSFUL]: 'text-success',\n  [OperationStatus.FAILED]: 'text-danger'\n};\n","/*\n * -----------------------------WARNING---------------------------------\n * This file has an *exact* copy in packages/cli/src/webpack.\n * Any changes to this file must be reflected there, too.\n */\nexport class ApplicationOptions {\n  /** Application name (saved to the server). */\n  name: string;\n  /** Application context path (saved to the server). */\n  contextPath: string;\n  /** Application key (saved to the server). */\n  key: string;\n  /** Set to `true` if the application is hybrid and uses Angular and AngularJS simultaneously. */\n  upgrade?: boolean;\n  /** Path to the branding entry file. */\n  brandingEntry?: string;\n  /** Path to tsccnfig.json file if TypeScript is used (default: ./tsconfig.json). */\n  tsConfigPath?: string;\n  /** Entry module for Angular compiler (only used with lazy loaded routes), e.g. `'app.module.ts#AppModule'`. */\n  entryModule?: string;\n  /** Path to custom index.html (otherwise default one will be used). */\n  indexTemplate?: string;\n  /** URL to dynamically fetched options. */\n  dynamicOptionsUrl?: string;\n  /** URL to favicon. */\n  faviconUrl?: string;\n  /** URL to *.css file which will replace default branding. */\n  brandingUrl?: string;\n  /** Object with properties that will be converted to CSS custom variables. */\n  brandingCssVars?: {\n    [key: string]: string;\n  };\n  /**\n   * Allows for adding or overriding languages available in the application.\n   *\n   * Its keys are language codes and its values are objects with the following properties:\n   *\n   * - `name`: English name of the language,\n   * - `nativeName`: native name of the language,\n   * - `url`: full URL to JSON file with compiled translations;\n   *    if not defined, translations will be loaded from `${localePath}/${langCode}.json`.\n   *\n   * Example:\n   * ```json\n   * \"languages\": {\n   *   \"de\": {\n   *     \"name\": \"German\",\n   *     \"nativeName\": \"Deutsch\",\n   *     \"url\": \"/apps/public/ui-assets/de.json\"\n   *   }\n   * }\n   * ```\n   */\n  languages?: {\n    [langCode: string]: {\n      name: string;\n      nativeName: string;\n      url: string;\n    };\n  };\n  /** Path to the folder from which *.po files will be loaded. */\n  localePath?: string;\n  /** Array of URLs to additional *.css files to be loaded at runtime. */\n  extraCssUrls?: string[];\n  /** Documentation links settings. */\n  docs?: {\n    /** Hide default links to documentation. */\n    noDefault: boolean;\n    /** List of regex strings. Matching default docs URLs will be hidden. */\n    excludeDefault: string[];\n    /** Additional links to be displayed. */\n    links: Array<{\n      icon: string;\n      label: string;\n      url: string;\n      type: 'doc' | 'quicklink';\n    }>;\n  };\n  /** Application icon to be displayed in app switcher and header bar. */\n  icon?: {\n    class?: string;\n    url?: string;\n  };\n\n  // These are the old options\n  /** Hide application in app switcher (saved to the server). */\n  noAppSwitcher?: boolean;\n  /** HTML page title. */\n  globalTitle?: string;\n  /** Hide \"powered by\" and version info at the bottom of the navigator and in the user menu. */\n  hidePowered?: boolean;\n  /** URL to support page (set to `false` to hide the link). */\n  supportUrl?: boolean | string;\n  /**\n   * Replacement string for `user` field in audit logs for actions performed by a support user\n   * (available placeholders: `{{support_user}}`, `{{supported_user}}`).\n   */\n  supportUserString?: string;\n  /** Enable or disable the right drawer. */\n  rightDrawer?: boolean;\n  /** Enable or disable breadcrumbs in the header for groups and devices (default: false). */\n  breadcrumbs?: boolean;\n  /** Collapse navigator on initial load. */\n  hideNavigator?: boolean;\n  /** Show tabs horizontally or vertically. */\n  tabsHorizontal?: boolean;\n  /** Additional link to display on login screen. */\n  loginExtraLink?: {\n    url: string;\n    label: string;\n  };\n  /** Enable or disable storage limitation feature. */\n  storageLimitationFeatureEnabled?: boolean;\n  /** Name of company handling support requests from app users (displayed in notification message). */\n  companyName?: string;\n  /** URL template for documentation links (default: `'${docsBaseUrl}${partialUrl}'`). */\n  guideHrefTemplate?: string;\n  /** Base URL for documentation links. */\n  docsBaseUrl?: string;\n  /** CSP string to be added to `index.html`. */\n  contentSecurityPolicy?: string;\n  /** Enables cloud sensor wizard */\n  sensorPhone?: boolean;\n  /** Legacy list of imported plugins. */\n  imports?: string[];\n  /** Show or hide a newsletter subscription checkbox in edit user modal. */\n  newsletter?: boolean;\n  /** Indicates whether the entry point is traversed from legacy cumulocity*.json app manifest. */\n  legacy?: boolean;\n  /** Path to the root node_modules dir (useful when working in monorepo setup, e.g. yarn workspaces). */\n  rootNodeModulesPath?: string;\n  /** Cookie Banner configuration */\n  cookieBanner?: {\n    cookieBannerTitle?: string;\n    cookieBannerText?: string;\n    policyUrl?: string;\n  };\n}\n","import { InjectionToken, Optional, Inject, Injectable } from '@angular/core';\nimport { camelCase, isUndefined } from 'lodash-es';\nimport { ApplicationOptions } from './ApplicationOptions';\nimport { ExtensionFactory } from './extension-hooks';\nimport { SystemOptionsService, TenantOptionsService } from '@c8y/ngx-components/api';\n\nexport const HOOK_OPTIONS = new InjectionToken<ExtensionFactory<ApplicationOptions>>('App options');\n\n/**\n * A service that allows to set or get application options\n * which configure the default behavior of the UI.\n */\n@Injectable()\nexport class OptionsService extends ApplicationOptions {\n  [key: string]: any;\n  constructor(\n    @Optional() @Inject(HOOK_OPTIONS) options,\n    private systemOptionsService: SystemOptionsService,\n    private tenantOptionService: TenantOptionsService\n  ) {\n    super();\n    this.setupOptions(options);\n  }\n\n  /**\n   * Returns an application option used to configure the UI.\n   * @param optionKey The application options key.\n   * @param defaultValue A value to return if non is set.\n   */\n  get(optionKey: keyof OptionsService, defaultValue?: any) {\n    let value = this[optionKey];\n    if (typeof value === 'undefined') {\n      value = this[camelCase(optionKey)];\n    }\n    return typeof value !== 'undefined' ? value : defaultValue;\n  }\n\n  /**\n   * Sets an application option.\n   * @param key The key to set.\n   * @param value The value to set.\n   */\n  set(key: string, value: any) {\n    this[camelCase(key)] = value;\n  }\n\n  /**\n   * Gets support url from tenant options.\n   * If response returns '404 not found' it gets the support url from application options.\n   * If the support link within application options is not provided the UI will use the system options.\n   * Is the support link explicitly set to false it will be hidden.\n   * NOTE: The tenant option endpoint returns the system option setting if non is set on the tenant.\n   *\n   * @returns Returns support url or false.\n   */\n  async getSupportUrl() {\n    if (isUndefined(this.supportUrl)) {\n      this.supportUrl = await this.getTenantOption('configuration', 'system.support.url');\n    }\n    return isUndefined(this.supportUrl) ? false : this.supportUrl;\n  }\n\n  /**\n   * Returns if the tenant allows to show the activate-support user menu entry.\n   */\n  async getActivateSupportUser() {\n    return this.getSystemOption('support-user', 'enabled', true);\n  }\n\n  /**\n   * Gets a value from the system service and parses it.\n   *\n   * @param category The category for this option.\n   * @param key The key for that option.\n   * @param defaultValue The default if the option was not found.\n   */\n  async getSystemOption(category: string, key: string, defaultValue?: any) {\n    return this.getOptionFromService(category, key, this.systemOptionsService, defaultValue);\n  }\n\n  /**\n   * Gets a value from the tenant service and parses it.\n   *\n   * @param category The category for this option.\n   * @param key The key for that option.\n   * @param defaultValue The default if the option was not found.\n   */\n  async getTenantOption(category: string, key: string, defaultValue?: any) {\n    return this.getOptionFromService(category, key, this.tenantOptionService, defaultValue);\n  }\n\n  private setupOptions(options: any[] | null) {\n    if (options) {\n      if (!Array.isArray(options)) {\n        options = [options];\n      }\n      options.forEach(optionMap => {\n        if (optionMap) {\n          Object.keys(optionMap).forEach(key => {\n            this[camelCase(key)] = optionMap[key];\n          });\n        }\n      });\n    }\n  }\n\n  private async getOptionFromService(category, key, service, defaultValue) {\n    try {\n      const { data } = await service.detail({ category, key });\n      return this.parseOptionRawValue(data.value, defaultValue);\n    } catch (ex) {\n      return defaultValue;\n    }\n  }\n\n  private parseOptionRawValue(rawValue, defaultValue) {\n    let value;\n    try {\n      value = JSON.parse(rawValue);\n    } catch (e) {\n      value = isUndefined(rawValue) ? defaultValue : rawValue;\n    }\n    return value;\n  }\n}\n","import { Injectable, isDevMode } from '@angular/core';\nimport { keys } from 'lodash-es';\nimport { BehaviorSubject } from 'rxjs';\nimport { scan, distinctUntilChanged, map, tap, filter } from 'rxjs/operators';\nimport { StateService } from './state-service.abstract';\nimport { OptionsService } from './options.service';\nimport { FetchClient } from '@c8y/client';\n\nimport {\n  ApplicationService, IUser, ICurrentTenant, TenantOptionsService, SystemOptionsService\n} from '@c8y/client';\nimport { ApiService } from '@c8y/ngx-components/api';\n\n@Injectable()\nexport class AppStateService extends StateService {\n  state$: BehaviorSubject<any> = new BehaviorSubject<any>({\n    app: {\n      name: this.options.name,\n      contextPath:  this.getCurrentContextPath() || this.options.contextPath\n    },\n    supportUrl: this.options.supportUrl,\n    lang: this.options.get('defaultLanguage', 'en'),\n    langs: this.getLangs(),\n    langsDetail: this.options.languages,\n    loginOptions: this.options.loginOptions,\n    activateSupportUserAvailable: undefined,\n    versions: {\n      backend: undefined,\n      ui: this.options.versions || { ngx: undefined }\n    },\n    hidePowered: this.options.hidePowered,\n    isLoading: false,\n    showRightDrawer: this.options.rightDrawer,\n    loginExtraLink: this.options.get('login_extra_link'),\n    newsletter: this.options.newsletter\n  });\n  currentUser: BehaviorSubject<IUser | null> = new BehaviorSubject(null);\n  currentTenant: BehaviorSubject<ICurrentTenant | null> = new BehaviorSubject(null);\n\n  constructor(\n    private applicationService: ApplicationService,\n    public apiService: ApiService,\n    private options: OptionsService,\n    private fetchClient: FetchClient\n  ) {\n    super();\n    this.apiService.calls\n      .pipe(\n        filter(({ url }) => !/cep\\/realtime/.test(url)),\n        map(({ phase }) => (phase === 'start' ? 1 : -1)),\n        scan((count, item) => count + item, 0),\n        map(count => count > 0),\n        distinctUntilChanged()\n      )\n      .subscribe(isLoading => (this.state.isLoading = isLoading));\n\n    this.assignApplicationKeyToDefaultHeaders();\n  }\n\n  assignApplicationKeyToDefaultHeaders() {\n    if (!isDevMode()) {\n      this.fetchClient.defaultHeaders = {\n        ...(this.fetchClient.defaultHeaders || {}),\n        'X-Cumulocity-Application-Key': this.options.key\n      };\n    }\n  }\n\n  /**\n   * Returns the current state.\n   */\n  get state() {\n    return this.state$.value;\n  }\n\n  getLangs() {\n    const { languages } = this.options;\n    return languages ? keys(languages).filter((k) => languages[k]) : [];\n  }\n\n  /**\n   * Returns the correct UI version. In hybrid mode for angular and ngx.\n   */\n  get uiVersion() {\n    const version = this.state.versions.ui;\n    return version.ngx ||  version.ng1;\n  }\n\n  /**\n   * Loads the app manifest. If no access -> throw an error to verify app access.\n   */\n  async loadManifest() {\n    try {\n      const { application } = (await this.applicationService.detail(`${this.state.app.contextPath}/manifest`))\n        .data as any;\n      this.state.app.manifest = application;\n      this.loadDefaultOptions();\n    } catch (ex) {\n      throw ex;\n    }\n  }\n\n  /**\n   * Checks current users application list and matches it against given application name.\n   * Returns true if application is in the list.\n   * @param name application name\n   */\n  async isApplicationAvailable(name: string) {\n    const { data } = await this.applicationService.listByUser(undefined, { pageSize: 100 });\n    return data.some((app) => app.name === name);\n   }\n\n  private getCurrentContextPath() {\n    const match = window.location.pathname.match(/\\/apps\\/(public\\/){0,1}(.+?)(\\/|\\?|#|$)/);\n    return match && match[2];\n  }\n\n  private async loadDefaultOptions() {\n    this.state.supportUrl = await this.options.getSupportUrl();\n    this.state.activateSupportUserAvailable = await this.options.getActivateSupportUser();\n    this.state.versions.backend = await this.options.getSystemOption('system', 'version');\n    try {\n      this.showIncompatibleVersionsError();\n    } catch (ex) {\n      // ignore this\n    }\n    this.emitNewState();\n  }\n\n  private showIncompatibleVersionsError() {\n    const uiVersion = this.state.versions.ui.ngx;\n    const backendVersion = this.state.versions.backend;\n    const uiVersionArray = uiVersion.replace(/[^\\d.]/g, '').split('.').map(Number);\n    const beVersionArray = backendVersion.replace(/[^\\d.]/g, '').split('.').map(Number);\n    const multiplier = Math.pow(10, Math.ceil(Math.log10(Math.max(...uiVersionArray, ...beVersionArray) + 1)));\n    const sumReducer = (acc, cur) => acc + cur;\n    const calculateVersionMapper = (curr, idx) => curr * (multiplier / Math.pow(10, idx));\n    const uiVersionNumber = uiVersionArray.map(calculateVersionMapper).reduce(sumReducer);\n    const beVersionNumber = beVersionArray.map(calculateVersionMapper).reduce(sumReducer);\n    const showError = uiVersionNumber > beVersionNumber;\n    if (showError) {\n      const errorContent = `You are running version ${uiVersion} of the UI and version ${backendVersion} of backend!`;\n      console.log('%c ' + errorContent , 'font-weight: bold; font-size: 30px; color: red;');\n    }\n  }\n}\n","import { TemplateRef, Type } from '@angular/core';\nimport { matches } from 'lodash-es';\nimport { NavigatorNodeData } from './navigator-node-data';\nimport { PopoverConfirmComponent } from '../modal/popover-confirm.component';\n\nexport interface ClickOptions {\n  icon?: boolean;\n  expander?: boolean;\n  open?: boolean;\n  $event?: any; // TODO: add proper type\n}\n\nexport class NavigatorNode {\n  icon: string;\n  iconTemplate?: TemplateRef<any>;\n  iconComponent?: Type<any>;\n  children: NavigatorNode[] = [];\n  label;\n  path: string;\n  parents: NavigatorNode[] = [];\n  loading?: boolean;\n  routerLinkExact: boolean = true;\n  open: boolean = false;\n  hidden: boolean = false;\n  draggable: boolean = false;\n  droppable: boolean = false;\n  dragged = false;\n  draggedHover = false;\n  confirm: PopoverConfirmComponent = undefined;\n  private _priority: number = 0;\n  private expandDragTimeout;\n\n  get hasChildren() {\n    return this.children.length > 0;\n  }\n\n  get priority() {\n    if (this._priority) {\n      return this._priority;\n    } else {\n      const childrenPriorities = this.children.map(({ priority }) => priority || 0);\n      if (childrenPriorities.length) {\n        return childrenPriorities.length ? Math.max(...childrenPriorities) : 0;\n      }\n      return 0;\n    }\n  }\n\n  set priority(priority) {\n    this._priority = priority;\n  }\n\n  constructor(data?: NavigatorNodeData) {\n    this.update(data);\n  }\n\n  openOnStart(url: string) {\n    return false;\n  }\n\n  add(node: NavigatorNode) {\n    if ( node === this) {\n      throw new Error('Adding node to itself');\n    }\n    if (this.children.indexOf(node) === -1) {\n      this.children.push(node);\n    }\n    if (node.parents.indexOf(this) === -1) {\n      node.parents.push(this);\n    }\n    this.updateChildren();\n  }\n\n  remove(node: NavigatorNode) {\n    const ix = this.children.indexOf(node);\n    const pix = node.parents.indexOf(this);\n    if (ix > -1) {\n      this.children.splice(ix, 1);\n    }\n    if (pix > -1) {\n      node.parents.splice(pix, 1);\n    }\n    this.updateChildren();\n  }\n\n  update(data?: NavigatorNodeData) {\n    if (data) {\n      Object.assign(this, data);\n      if (data.hidden  !== undefined) {\n        this.parents.forEach((p) => {\n          p.updateHidden();\n        });\n      }\n    }\n  }\n\n  find(predicate) {\n    if (typeof predicate === 'string') {\n      const compareLabel = predicate.toLocaleLowerCase();\n      predicate = ({ label }) =>  compareLabel === label.toLowerCase();\n    }\n    if (typeof predicate === 'object') {\n      predicate = matches(predicate);\n    }\n    if (typeof predicate !== 'function') {\n      throw new Error('Invalid search predicate');\n    }\n    return this.children.reduce(\n      (found, child) => found || child.find(predicate),\n      this.children.find(predicate)\n    );\n  }\n\n  empty() {\n    this.children.length = 0;\n  }\n\n  click(options: ClickOptions = {}) {\n    // do nothing\n  }\n\n  drop($event) {\n    $event.stopPropagation();\n    clearTimeout(this.expandDragTimeout);\n  }\n\n  dragStart($event) {\n    $event.stopPropagation();\n    // we can't pass a object to setData, so we do it via service\n    // set data is still needed, to make the drag&drop work\n    $event.dataTransfer.setData('node', 'node');\n    this.dragged = true;\n  }\n\n  dragEnd($event) {\n    $event.stopPropagation();\n    this.dragged = false;\n    $event.dataTransfer.clearData();\n  }\n\n  get canDrop() {\n    return this.droppable;\n  }\n\n  get canNavigate() {\n    return typeof this.path !== 'undefined';\n  }\n\n  dragEnter($event) {\n    $event.preventDefault();\n    $event.stopPropagation();\n    this.draggedHover = true;\n    if (!this.open) {\n      this.expandDragTimeout = setTimeout(() => this.expand(), 1000);\n    }\n  }\n\n  dragLeave($event) {\n    $event.preventDefault();\n    $event.stopPropagation();\n    this.draggedHover = false;\n    clearTimeout(this.expandDragTimeout);\n  }\n\n  expand() {\n    if (!this.open) {\n      this.open = true;\n      this.click({open: true, expander: true});\n    }\n  }\n\n  traverse(callback) {\n    if (this.children) {\n      this.children.forEach((child) => {\n        callback(child);\n        child.traverse(callback);\n      });\n    }\n  }\n\n  destroy() {\n    // nothing todo here\n  }\n\n  protected updateChildren() {\n    this.sort();\n    this.updateHidden();\n  }\n\n  protected sort() {\n    this.children.sort((a, b) => {\n      if (a.priority > b.priority) {\n        return -1;\n      } else if (a.priority < b.priority) {\n        return 1;\n      } else if ((a.label || '').toLowerCase() < (b.label || '').toLowerCase()) {\n        return -1;\n      } else if ((a.label || '').toLowerCase() > (b.label || '').toLowerCase()) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n  }\n\n  protected updateHidden() {\n    if (typeof this.path === 'undefined') {\n      this.hidden = !this.children.some(({ hidden }) => !hidden);\n    }\n  }\n}\n","import { NavigatorNode } from './navigator-node';\nimport { NavigatorNodeData } from './navigator-node-data';\nimport { assign } from 'lodash-es';\n\nexport class NavigatorNodeRoot extends NavigatorNode {\n  addRoot(nodeData: Partial<NavigatorNodeData>) {\n    const { parent } = nodeData;\n    const node = this.createNode(nodeData);\n    let localParent;\n\n    if (parent) {\n      if (typeof parent === 'object') {\n        localParent = this.find(parent.label);\n        if (localParent) {\n          localParent.update(parent);\n        }\n      } else if (typeof parent === 'string' || typeof parent === 'function') {\n        localParent = this.find(parent);\n      }\n\n      if (!localParent) {\n        localParent = this.createNode(parent);\n        if (!this.find((n) => localParent === n)) {\n          this.add(localParent);\n        }\n      }\n    }\n\n    (localParent || this).add(node);\n    return node;\n  }\n\n  createNode(nodeData) {\n    if (nodeData instanceof NavigatorNode) {\n      return nodeData;\n    }\n    if (typeof nodeData === 'string') {\n      return new NavigatorNode({ label: nodeData });\n    }\n    if (typeof nodeData === 'object') {\n      return new NavigatorNode({ ...nodeData, parent: undefined });\n    }\n    throw new Error('Wrong type of node data');\n  }\n}\n","import { Injectable, InjectionToken, Injector } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { ExtensionPoint, fromTrigger, sortByPriority, stateToFactory } from '../common/extension-hooks';\nimport { StateService } from '../common/state-service.abstract';\nimport { NavigatorNode } from './navigator-node';\nimport { NavigatorNodeData } from './navigator-node-data';\nimport { NavigatorNodeRoot } from './navigator-node-root';\n\n/**\n * A hook to use for Multi Provider extension.\n */\nexport const HOOK_NAVIGATOR_NODES = new InjectionToken('NavigatorNodesFactory');\n\n/**\n * A service which defines the navigator.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NavigatorService extends StateService implements ExtensionPoint<NavigatorNode> {\n  items$: Observable<NavigatorNode[]>;\n  readonly refreshTrigger = new Subject();\n  readonly state$ = new BehaviorSubject<Set<NavigatorNode>>(new Set<NavigatorNode>());\n  firstUrl = true;\n\n  constructor(\n    private injector: Injector,\n    private router: Router\n  ) {\n    super();\n    const rootNode = new NavigatorNodeRoot();\n    this.items$ = fromTrigger(router, this.refreshTrigger, [\n      () => this.injector.get(HOOK_NAVIGATOR_NODES, []),\n      stateToFactory(this.state$),\n    ]).pipe(\n      map((nodes: Partial<NavigatorNodeData[]>) => {\n        const noParent = nodes.filter(node => !node.parent);\n        const withParent = nodes.filter(node => node.parent);\n\n        // Based on the sortedNodes array, the nodes are sequentially created.\n        // Nodes sorting is done in two steps to have the top-level nodes first.\n        // This way, by the time we are adding a child node, the parent node is already present.\n        const sortedNodes = sortByPriority(noParent).concat(sortByPriority(withParent));\n        rootNode.empty();\n        sortedNodes.forEach((node) => rootNode.addRoot(node));\n        return rootNode.children;\n      }),\n      shareReplay(1)\n    );\n  }\n\n  openOnFirstUrl(node: NavigatorNode) {\n    if (this.firstUrl && !!node.path) {\n      return this.router.isActive(node.path, node.routerLinkExact) || node.openOnStart(this.router.url);\n    }\n    return false;\n  }\n\n  /**\n   * Returns the current state.\n   * @readonly\n   * @returns The current set of actions.\n   */\n  get state(): Set<NavigatorNode> {\n    return this.state$.value;\n  }\n\n  /**\n   * Refresh the extension factories\n   */\n  refresh() {\n    this.refreshTrigger.next(1);\n  }\n\n  /**\n   * Adds a new node to the navigator.\n   * @param nav The node to add.\n   */\n  add(item: NavigatorNode) {\n    this.state.add(item);\n    this.emitNewState();\n  }\n\n  /**\n   * Removes a node from the navigator.\n   * @param nav The node ro remove.\n   */\n  remove(item: NavigatorNode) {\n    this.state.delete(item);\n    this.emitNewState();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { distinctUntilChanged, map, combineLatest, debounceTime } from 'rxjs/operators';\nimport { OptionsService } from '../common/options.service';\nimport { StateService } from '../common/state-service.abstract';\nimport { NavigatorService } from '../navigator/navigator.service';\nimport { Header } from './header.model';\n\n/**\n * A service which defines header functions.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeaderService extends StateService {\n  header$: Observable<Header>;\n  navigatorOpen$: Observable<boolean>;\n\n  hasItemsInNavigator$ = this.navigatorService.items$.pipe(\n    map(({ length }) => !!length),\n    distinctUntilChanged()\n  );\n\n  state$: BehaviorSubject<Header> = new BehaviorSubject<Header>({\n    title: undefined,\n    nav: {\n      open: false\n    }\n  });\n\n  title = undefined;\n\n  constructor(private navigatorService: NavigatorService, private options: OptionsService) {\n    super();\n    this.header$ = this.map((header: Header) => header);\n    this.navigatorOpen$ = this.map(({ nav }) => nav.open).pipe(\n      combineLatest(this.hasItemsInNavigator$),\n      map(([open, hasItems]) => open && hasItems)\n    );\n    const titleReference = document.querySelector('title');\n    this.title = {\n      elementRef: titleReference,\n      originalValue: titleReference && titleReference.innerText\n    };\n  }\n\n  get state() {\n    return this.state$.value;\n  }\n\n  get navigatorHiddenOnStartup() {\n    return this.options.hideNavigator;\n  }\n\n  get largeWidth() {\n    return document.documentElement.clientWidth > 1200;\n  }\n\n  get shouldToggle() {\n    return this.largeWidth && !this.navigatorHiddenOnStartup && !this.state.nav.open;\n  }\n\n  /**\n   * Toggles the navigator open status.\n   */\n  toggleNavigator() {\n    this.state.nav.open = !this.state.nav.open;\n    this.emitNewState();\n  }\n\n  /**\n   * Force to close the navigator.\n   */\n  closeNavigator() {\n    this.state.nav.open = false;\n    this.emitNewState();\n  }\n\n  /**\n   * Configures navigation options.\n   * @param config Object with the properties:\n   * - open: Boolean\n   */\n  configNavigator(config: any = {}) {\n    this.state.nav = Object.assign(this.state.nav, config);\n    this.emitNewState();\n  }\n\n  /**\n   * Change the application title.\n   * @param newTitle The new title of the application.\n   */\n  changeTitle(newTitle?: any) {\n    this.state.title = newTitle;\n    this.emitNewState();\n  }\n\n  /**\n   * Change the page title.\n   * @param newTitle The new title of the page.\n   */\n  changePageTitle(newTitle?: string) {\n    this.title.elementRef.innerText = newTitle\n      ? `${newTitle} / ${this.title.originalValue}`\n      : `${this.title.originalValue}`;\n  }\n\n  /**\n   * This methods checks if the navigator toggles on startup\n   * or if an item is added to the navigator node.\n   * Delay of 300ms is intended for animation purpose.\n   */\n  verifyIfNavOpen() {\n    this.hasItemsInNavigator$\n      .pipe(debounceTime(300))\n      .subscribe(hasItems => hasItems && this.shouldToggle && this.toggleNavigator());\n  }\n\n  shouldShowBreadcrumbs() {\n    return this.options.breadcrumbs;\n  }\n}\n","import { Injectable, InjectionToken, Injector, ViewContainerRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, first, map, shareReplay } from 'rxjs/operators';\nimport { ExtensionPoint, fromTrigger, stateToFactory } from '../common/extension-hooks';\nimport { StateService } from '../common/state-service.abstract';\nimport { Tab } from './tab.model';\nimport { OptionsService } from '../common/options.service';\n\nexport const HOOK_TABS = new InjectionToken('TabsFactory');\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TabsService extends StateService implements ExtensionPoint<Tab> {\n  items$: Observable<Tab[]>;\n  orientation$: Observable<string>;\n  readonly refreshTrigger = new Subject();\n  readonly state$ = new BehaviorSubject<Set<Tab>>(new Set<Tab>());\n\n  constructor(\n    private injector: Injector,\n    router: Router,\n    private translateService: TranslateService,\n    private options: OptionsService\n  ) {\n    super();\n    this.items$ = fromTrigger(router, this.refreshTrigger, [\n      () => this.injector.get(HOOK_TABS, []),\n      stateToFactory(this.state$)\n    ]).pipe(\n      map(tabs => this.prepareTabs(tabs)),\n      shareReplay(1),\n      distinctUntilChanged()\n    );\n\n    this.orientation$ = this.items$.pipe(\n      map((tabs: Tab[]) => {\n        const firstTabWithDefinedOrientation = tabs.find(tab => tab.orientation);\n        if (firstTabWithDefinedOrientation) {\n          return firstTabWithDefinedOrientation.orientation;\n        }\n        return this.options.tabsHorizontal ? 'horizontal' : 'vertical';\n      }),\n      distinctUntilChanged()\n    );\n  }\n\n  prepareTabs(tabs) {\n    return this.sortTabs(\n      tabs\n        .map(tab => ({\n          ...tab,\n          template: tab.template instanceof ViewContainerRef ? tab.template : undefined\n        }))\n        .filter((tab, index, self) => index === self.findIndex(t => t.path === tab.path))\n    );\n  }\n\n  sortTabs(tabs) {\n    return tabs.sort((a, b) => {\n      const priorityOrder = (b.priority || 0) - (a.priority || 0);\n\n      const aTranslatedLabel = this.translateService.instant(a.label);\n      const bTranslatedLabel = this.translateService.instant(b.label);\n      const translatedLabelOrder = aTranslatedLabel.localeCompare(bTranslatedLabel);\n\n      return priorityOrder || translatedLabelOrder;\n    });\n  }\n\n  /**\n   * Refresh the extension factories\n   */\n  refresh() {\n    this.refreshTrigger.next(1);\n  }\n\n  /**\n   * Returns the current state.\n   * @readonly\n   * @returns The current set of actions.\n   */\n  get state(): Set<Tab> {\n    return this.state$.value;\n  }\n\n  /**\n   * Adds a new item to tabs and emits state change\n   * @param item The item to add.\n   */\n  add(item: Tab) {\n    this.state.add(item);\n    this.emitNewState();\n  }\n\n  /**\n   * Removes a tab and emits a state change.\n   * @param item The item to remove.\n   */\n  remove(item: Tab) {\n    this.state.delete(item);\n    this.emitNewState();\n  }\n\n  get firstTab$() {\n    return this.items$.pipe(\n      map(tabs => tabs[0]),\n      filter(Boolean),\n      first()\n    );\n  }\n}\n","import { combineLatest, distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { ActionBarService } from '../action-bar/action-bar.service';\nimport { AppStateService } from '../common/ui-state.service';\nimport { Component } from '@angular/core';\nimport { HeaderService } from '../header/header.service';\nimport { NavigatorService } from '../navigator/navigator.service';\nimport { Observable } from 'rxjs';\nimport { OptionsService } from '../common/options.service';\nimport { TabsService } from '../tabs/tabs.service';\n\n@Component({\n  selector: 'c8y-bootstrap',\n  templateUrl: './bootstrap.template.html'\n})\nexport class BootstrapComponent {\n  navigatorOpen$: Observable<boolean>;\n  noAppsMargin$: Observable<boolean>;\n  localeUpdating: boolean;\n  tabsOrientation: string;\n\n  get showPoweredBy() {\n    return !this.options.get('hidePowered');\n  }\n\n  constructor(\n    public tabs: TabsService,\n    public ui: AppStateService,\n    public navigator: NavigatorService,\n    public actionBar: ActionBarService,\n    private options: OptionsService,\n    public headerService: HeaderService\n  ) {\n      this.noAppsMargin$ = this.headerService.map(({ nav }) => !nav.open && nav.hiddenOnStartup);\n      this.tabsOrientation = this.options.tabsHorizontal ? 'horizontal' : 'vertical';\n      this.ui.map(({ lang }) => lang).pipe(\n        distinctUntilChanged(),\n      ).subscribe(() => {\n        this.actionBar.refresh();\n        this.localeUpdating = true;\n        setTimeout(() => {\n          this.localeUpdating = false;\n        }, 10);\n      });\n    }\n}\n","import { Injectable, InjectionToken, Injector } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { fromTrigger, stateToFactory } from '../common/extension-hooks';\nimport { StateService } from '../common/state-service.abstract';\nimport { Breadcrumb, BreadcrumbItem } from './breadcrumb.model';\n\nexport const HOOK_BREADCRUMB = new InjectionToken('BreadcrumbFactory');\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BreadcrumbService extends StateService {\n  items$: Observable<Breadcrumb[]>;\n  readonly refreshTrigger = new Subject();\n  readonly state$ = new BehaviorSubject<Set<Breadcrumb>>(new Set<Breadcrumb>());\n  private preferredPath: string;\n\n  constructor(private injector: Injector, router: Router) {\n    super();\n    this.items$ = fromTrigger(router, this.refreshTrigger, [\n      () => this.injector.get(HOOK_BREADCRUMB, []),\n      stateToFactory(this.state$)\n    ]).pipe(\n      map(breadcrumbs => this.sortByPreferredPath(breadcrumbs)),\n      shareReplay(1)\n    );\n  }\n\n  get state() {\n    return this.state$.value;\n  }\n\n  /**\n   * Adds a new item to the action bar in the header.\n   * @param item The item to add.\n   */\n  add(item: Breadcrumb) {\n    this.state.add(item);\n    this.emitNewState();\n  }\n\n  /**\n   * Removes an action bar item from the header.\n   * @param item The item to remove.\n   */\n  remove(item: Breadcrumb) {\n    this.state.delete(item);\n    this.emitNewState();\n  }\n\n  /**\n   * Refresh the extension factories\n   */\n  refresh() {\n    this.refreshTrigger.next(1);\n  }\n\n  /**\n   * Sets the crumb that contains that path to the top.\n   * @param path The path to prefer.\n   */\n  selectPreferredByPath(path: string) {\n    this.preferredPath = path;\n    this.refresh();\n  }\n\n  sortByPreferredPath(breadcrumbs) {\n    if (this.preferredPath) {\n      return breadcrumbs.sort(bc =>\n        bc.items.find((item: BreadcrumbItem) => !!item.path.match(this.preferredPath)) ? -1 : 1\n      );\n    }\n    return breadcrumbs;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { upperFirst } from 'lodash-es';\n\n/*\n * Humanize any string\n * Usage:\n *   'something' | humanize\n*/\n@Pipe({ name: 'humanize' })\nexport class HumanizePipe implements PipeTransform {\n  static humanize(str: string = ''): string {\n    str = str\n      .replace(/\\./g, ' ')\n      .replace(/c8y[\\s,_]*/gi, '')\n      .replace(/_/g, ' ')\n      .replace(/([A-Z][a-z])/g, ' $1')\n      .replace(/^\\$\\.?/, '')\n      .replace(/^\\s*/, '')\n      .replace(/\\s*$/, '')\n      .replace(/\\s+/g, ' ');\n\n    return upperFirst(str);\n  }\n\n  transform(str: string): string {\n    return HumanizePipe.humanize(str);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { gettext } from '../i18n/gettext';\nimport { get, find, negate, isUndefined } from 'lodash';\nimport { HumanizePipe } from './humanize.pipe';\n\n/*\n * Humanize an application name and translates it.\n * Usage:\n *   appNameOrApp | humanizeAppName | async\n*/\n@Pipe({ name: 'humanizeAppName' })\nexport class HumanizeAppNamePipe implements PipeTransform {\n\n  private internalApps = {\n    administration: 'Administration',\n    cockpit: 'Cockpit',\n    devicemanagement: 'Device management'\n  };\n\n  constructor(private translateService: TranslateService) {}\n\n  transform(appNameOrApp: any = 'Cumulocity'): Observable<string> {\n    const appName = this.getAppName(appNameOrApp);\n\n    let text;\n    if (this.isPublicApp(appNameOrApp)) {\n      text = gettext('{{ appName | translate }} (public)');\n    } else {\n      text = appName;\n    }\n    return this.translateService.get(text, { appName });\n  }\n\n  private getAppName(appNameOrApp) {\n    const appName = this.getFirstDefined([\n      get(appNameOrApp, 'name'),\n      get(appNameOrApp, 'contextPath'),\n      appNameOrApp\n    ]) || '';\n    return this.internalApps[appName] || appName;\n  }\n\n  private getFirstDefined(values) {\n    return find(values, negate(isUndefined));\n  }\n\n  private isPublicApp(appNameOrApp) {\n    return Boolean(get(appNameOrApp, 'public'));\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const LANGUAGES = new InjectionToken('Languages');\n","import { InjectionToken } from '@angular/core';\n\nexport const LOCALE_PATH = new InjectionToken('Locale path');\n","import { InjectionToken } from '@angular/core';\n\nexport const HOOK_PATTERN_MESSAGES = new InjectionToken('Pattern Messages');\n","import { Injectable, Inject } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { mapValues, each } from 'lodash-es';\nimport { HOOK_PATTERN_MESSAGES } from './patterns-message.hook';\nimport { formatDate } from '@angular/common';\n\n/**\n * A service to translate messages by using regexp patterns.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PatternMessagesService {\n  translateService: TranslateService;\n  patterns: any = {};\n  pipes = {\n    absoluteDate: (date: string|number|Date) =>\n      formatDate(date, 'medium', this.translateService.currentLang),\n    translate: (key) =>\n      this.translateService.instant(key)\n  };\n\n  constructor(\n    @Inject(HOOK_PATTERN_MESSAGES) patterns\n  ) {\n    each(patterns, (pattern) => {\n      Object.assign(this.patterns, pattern);\n    });\n  }\n\n  translate(message: string) {\n    const translation = this.translateWithPatterns(message);\n    return (translation !== message) ? translation : '';\n  }\n\n  private translateWithPatterns(message, patterns = this.patterns) {\n    let translatedMessage = message;\n\n    each(patterns, (patternCfg, pattern) => {\n      const globalRegExp = new RegExp(pattern, 'g');\n      let globalMatch;\n\n      if (!globalRegExp.test(translatedMessage)) {\n        return;\n      }\n      globalRegExp.test(''); // reset the regexp\n      globalMatch = globalRegExp.exec(translatedMessage);\n      while (globalMatch !== null) {\n        const [ localMatch ] = globalMatch;\n\n        const placeholderValues = mapValues(patternCfg.placeholders, (placeholder) => {\n          const expr = placeholder.capture || placeholder;\n          let replacement = localMatch.replace(new RegExp(pattern, 'g'), expr);\n\n          if (placeholder.translate) {\n            replacement = this.translateWithPatterns(replacement, placeholder.translate);\n          }\n\n          return replacement;\n        });\n        translatedMessage = translatedMessage.replace(\n          localMatch,\n          this.translateWithParams(patternCfg, placeholderValues)\n        );\n\n        globalMatch = globalRegExp.exec(translatedMessage);\n      }\n    });\n    return translatedMessage;\n  }\n\n  private translateWithParams(patternCfg: any, params: any = {}) {\n    const { defaultLang, currentLang, compiler } = this.translateService;\n    const translations = this.translateService.store.translations[currentLang];\n    const defaultTranslations = this.translateService.store.translations[defaultLang];\n    const originalKey = patternCfg.gettext;\n\n    let originalValue = originalKey;\n    if (translations) {\n      if (translations[originalKey]) {\n        originalValue = translations[originalKey];\n      } else if (defaultTranslations) {\n        if (defaultTranslations[originalKey]) {\n          originalValue = defaultTranslations[originalKey];\n        }\n      }\n    }\n\n    let key = originalKey;\n    let value = originalValue;\n    const interpolateParams = {\n      ...params,\n      noPatternMessages: true\n    };\n\n    let match;\n    const pipeRegex = RegExp('{{\\\\s*([^\\\\s]+)\\\\s*\\\\|\\\\s*([^\\\\s]+)\\\\s*}}', 'g');\n    // tslint:disable-next-line:no-conditional-assignment\n    while ((match = pipeRegex.exec(originalKey)) !== null) {\n      const [placeholder, paramName, pipeName] = match;\n      if (this.pipes[pipeName]) {\n        key = key.replace(placeholder, `{{${paramName}}}`);\n        value = value.replace(placeholder, `{{${paramName}}}`);\n        interpolateParams[paramName] = this.pipes[pipeName](params[paramName]);\n      }\n    }\n\n    if (translations) {\n      translations[key] = compiler.compile(value, currentLang);\n    }\n    return this.translateService.instant(key, interpolateParams);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PatternMessagesService } from './pattern-messages.service';\nimport {\n  MissingTranslationHandler,\n  MissingTranslationHandlerParams,\n  TranslateParser,\n  TranslateService\n} from '@ngx-translate/core';\n\n@Injectable()\nexport class MissingTranslationCustomHandler implements MissingTranslationHandler {\n  translateService: TranslateService;\n  cache: any = {};\n\n  constructor(\n    private parser: TranslateParser,\n    private patternMessagesService: PatternMessagesService\n  ) {}\n\n  handle(params: MissingTranslationHandlerParams) {\n    const { key: messageKey, interpolateParams, translateService } = params;\n    this.translateService = translateService;\n\n    let translation = this.getFromCache(messageKey, interpolateParams);\n\n    if (!translation) {\n      const patternMessageTranslation = this.getPatternMessageTranslation(messageKey, interpolateParams);\n      if (patternMessageTranslation) {\n        translation = patternMessageTranslation;\n      } else {\n        translation = this.parser.interpolate(messageKey, interpolateParams);\n      }\n\n      this.addToCache(messageKey, interpolateParams, translation);\n    }\n\n    return translation;\n  }\n\n  private getFromCache(messageKey: string, interpolateParams: object): string {\n    const { currentLang } = this.translateService;\n    const currentCache = this.cache[currentLang] || {};\n    const cacheKey = this.getCacheKey(messageKey, interpolateParams);\n    return currentCache[cacheKey];\n  }\n\n  private addToCache(messageKey: string, interpolateParams: object, translation: string) {\n    const { currentLang } = this.translateService;\n    const currentCache = this.cache[currentLang] = this.cache[currentLang] || {};\n    const cacheKey = this.getCacheKey(messageKey, interpolateParams);\n    currentCache[cacheKey] = translation;\n  }\n\n  private getCacheKey(messageKey: string, interpolateParams: object): string {\n    return interpolateParams ? `${messageKey} ${JSON.stringify(interpolateParams)}` : messageKey;\n  }\n\n  private getPatternMessageTranslation(messageKey: string, interpolateParams: object): string {\n    const shouldTryPatternMessages = !interpolateParams || !((interpolateParams as any).noPatternMessages);\n\n    if (shouldTryPatternMessages) {\n      if (!this.patternMessagesService.translateService) {\n        this.patternMessagesService.translateService = this.translateService;\n      }\n      return this.patternMessagesService.translate(messageKey);\n    }\n\n    return undefined;\n  }\n}\n","/* tslint:disable:max-line-length */\nimport { gettext } from './gettext';\n\nexport const MESSAGES = {\n  '^Access is denied$': {\n    gettext: gettext('Access denied.')\n  },\n  '^Alarm created$': {\n    gettext: gettext('Alarm created')\n  },\n  '^Alarm updated$': {\n    gettext: gettext('Alarm updated')\n  },\n  '^API is not available with the new domain$': {\n    gettext: gettext('Could not activate custom domain. DNS setup is incorrect.')\n  },\n  '^Application with given name already exist$': {\n    gettext: gettext('Application with given name already exists.')\n  },\n  '^Application with id (.+?) is already assigned to the tenant (.+?)$': {\n    gettext: gettext('This application is already assigned to tenant \"{{tenant}}\".'),\n    placeholders: {\n      tenant: '$2'\n    }\n  },\n  '^(.+)pplication for tenant (.+) with properties \\\\( (.+?) \\\\) already exists$': {\n    gettext: gettext('Application for tenant \"{{tenant}}\" with the following values ({{valuesList}}) already exists.'),\n    placeholders: {\n      tenant: '$2',\n      valuesList: '$3'\n    }\n  },\n  '^Authentication failed! : User account is locked$': {\n    gettext: gettext('Authentication failed due to: user account is locked.')\n  },\n  '^Availability monitoring record$': {\n    gettext: gettext('Availability monitoring record')\n  },\n  '^Can not activate a certificate which is either expired or not yet valid$': {\n    gettext: gettext('Cannot activate a certificate which is either expired or not yet valid.')\n  },\n  '^Cannot add certificate - certificate with (.+?) fingerprint already exists. : Certificate with (.+?) fingerprint already exists.': {\n    gettext: gettext('Could not add certificate. Certificate with {{fingerprint}} fingerprint already exists.'),\n    placeholders: {\n      fingerprint: '$1'\n    }\n  },\n  '^Cannot change password. : Provided token does not exist.$': {\n    gettext: gettext('Cannot change password: provided token is invalid.')\n  },\n  '^Cannot deploy module (.*)$': {\n    gettext: gettext('Cannot deploy module due to error: \"{{ errorMessage | translate }}\".'),\n    placeholders: {\n      errorMessage: '$1'\n    }\n  },\n  '^Cannot deploy module (.+?)! : Compilation failed in module \\'(.+?)\\' in expression \\'(.+?)\\' : Incorrect syntax near \\'(.+?)\\' at line (\\\\d+) column (\\\\d+) \\\\[([\\\\S\\\\s]+?)\\\\]$': {\n    gettext: gettext('Could not deploy module \"{{moduleName}}\". Compilation failed in expression \"{{expression}}\": incorrect syntax near \"{{incorrectExpression}}\" at line {{line}} column {{column}}.'),\n    placeholders: {\n      moduleName: '$1',\n      expression: '$3',\n      incorrectExpression: '$4',\n      line: '$5',\n      column: '$6'\n    }\n  },\n  '^Cannot deploy module (.+?)! : Compilation failed in module \\'(.+?)\\' in expression \\'(.+?)\\' : Incorrect syntax near \\'(.+?)\\' at line (\\\\d+) column (\\\\d+) near reserved keyword \\'(.+?)\\' \\\\[([\\\\S\\\\s]+?)\\\\]$': {\n    gettext: gettext('Could not deploy module \"{{moduleName}}\". Compilation failed in expression \"{{expression}}\": incorrect syntax near \"{{incorrectExpression}}\" at line {{line}} column {{column}} near reserved keyword \"{{keyword}}\".'),\n    placeholders: {\n      moduleName: '$1',\n      expression: '$3',\n      incorrectExpression: '$4',\n      line: '$5',\n      column: '$6',\n      keyword: '$7'\n    }\n  },\n  '^Cannot deploy module (.+?)! : Compilation failed in module \\'(.+?)\\' in expression \\'(.+?)\\' : Incorrect syntax near \\'(.+?)\\' at line (\\\\d+) column (\\\\d+), please check the where clause \\\\[([\\\\S\\\\s]+?)\\\\]$': {\n    gettext: gettext('Could not deploy module \"{{moduleName}}\". Compilation failed in expression \"{{expression}}\": incorrect syntax near \"{{incorrectExpression}}\" at line {{line}} column {{column}}, check \"where\" clause.'),\n    placeholders: {\n      moduleName: '$1',\n      expression: '$3',\n      incorrectExpression: '$4',\n      line: '$5',\n      column: '$6'\n    }\n  },\n  '^Cannot deploy module (.+?)! : Deployment failed in module \\'(.+?)\\' in expression \\'(.+?)\\' : Exception compiling script \\'(.+?)\\' of dialect \\'(.+?)\\': missing (.+?) before statement \\\\((.+?)\\\\) \\\\[([\\\\S\\\\s]+?)\\\\]$': {\n    gettext: gettext('Could not deploy module \"{{moduleName}}\". Compilation failed in expression \"{{expression}}\": exception compiling script \"{{scriptName}}\" of dialect \"{{scriptDialect}}\": missing \"{{missingSyntax}}\" before statement \"{{affectedStatement}}\".'),\n    placeholders: {\n      moduleName: '$1',\n      expression: '$3',\n      scriptName: '$4',\n      scriptDialect: '$5',\n      missingSyntax: '$6',\n      affectedStatement: '$7'\n    }\n  },\n  '^Cannot execute bulk operation on empty group. Group with id=\\'(\\\\d+?)\\' doesn\\'t have child assets.$': {\n    gettext: gettext('Could not execute bulk operation on an empty group. Group with ID \"{{groupId}}\" has no child assets.'),\n    placeholders: {\n      groupId: '$1'\n    }\n  },\n  '^Cannot execute bulk operation on empty group. DynamicGroup with id=\\'(\\\\d+?)\\' doesn\\'t have child assets$': {\n    gettext: gettext('Could not execute bulk operation on an empty group. Smart group with ID \"{{groupId}}\" has no child assets.'),\n    placeholders: {\n      groupId: '$1'\n    }\n  },\n  '^Cannot parse X509 certificate. : Could not parse certificate: (.+?)$': {\n    gettext: gettext('Could not parse X.509 certificate: {{ failureReason | translate }}.'),\n    placeholders: {\n      failureReason: '$1'\n    }\n  },\n  '^Cannot reschedule bulk operation. All its operations are successful$': {\n    gettext: gettext('Cannot reschedule bulk operation. All its operations are already successful.')\n  },\n  '^Cannot reset user password : Cannot find user with such email.$': {\n    gettext: gettext('Cannot reset password for user with such email: email not found.')\n  },\n  '^Cannot update/delete application binary via this endpoint$': {\n    gettext: gettext('Cannot update/delete application binary via this endpoint')\n  },\n  '^Can\\'t delete user because it is used by another managed object$': {\n    gettext: gettext('Cannot delete device with associated device owner because this owner is still assigned to other device(s). Try to remove only the device.')\n  },\n  '^Cep module created$': {\n    gettext: gettext('CEP module created')\n  },\n  '^Cep module updated$': {\n    gettext: gettext('CEP module updated')\n  },\n  '^Cep module deleted$': {\n    gettext: gettext('CEP module deleted')\n  },\n  '^Cep module \"(.+?)\" created$': {\n    gettext: gettext('CEP module \"{{name}}\" created'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^Cep module \"(.+?)\" updated$': {\n    gettext: gettext('CEP module \"{{name}}\" updated'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^Cep module \"(.+?)\" deleted$': {\n    gettext: gettext('CEP module \"{{name}}\" deleted'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^Command state is invalid: (.+)$': {\n    gettext: gettext('Command state is invalid: {{violations}}'),\n    placeholders: {\n      violations: {\n        capture: '$1',\n        translate: {\n          '(\\\\w+?) - may not be null': {\n            gettext: gettext('\"{{field}}\" must not be null'),\n            placeholders: {\n              field: '$1'\n            }\n          }\n        }\n      }\n    }\n  },\n  '^Could not connect to endpoint (.+)\\\\. Could not verify `(.+)` host key with fingerprint `(.+)` for `(.+)` on port (.+)\\\\. If you expected that key, please remove the previous one from configuration to allow for connection\\\\.$': {\n    gettext: gettext('Could not connect to endpoint \"{{endpointName}}\". Could not verify {{keyType}} host key with fingerprint {{fingerprint}} for host {{host}} on port {{port}}. If you expected this key, please remove the previous one from configuration to allow for connection.'),\n    placeholders: {\n      endpointName: '$1',\n      keyType: '$2',\n      fingerprint: '$3',\n      host: '$4',\n      port: '$5'\n    }\n  },\n  '^Could not login to ssh server on endpoint \"(.+)\"\\\\. Provided credential for user \"(.+)\" is incorrect\\\\.$': {\n    gettext: gettext('Could not access SSH server on endpoint \"{{endpointName}}\". Provided credentials for user \"{{userName}}\" are incorrect.'),\n    placeholders: {\n      endpointName: '$1',\n      userName: '$2'\n    }\n  },\n  '^Could not save object remoteAccessUpdate: (.+)$': {\n    gettext: '{{errorMessages}}',\n    placeholders: {\n      errorMessages: {\n        capture: '$1',\n        translate: {\n          'Could not recognize host-key format': {\n            gettext: gettext('Could not recognize \"Host key\" format')\n          },\n          'Could not recognize key-pair format': {\n            gettext: gettext('Could not recognize the format of \"Public key\" or \"Private key\"')\n          }\n        }\n      }\n    }\n  },\n  '^Could not update user. : Error persisting user (.+?)!$': {\n    gettext: gettext('Could not update user \"{{username}}\".'),\n    placeholders: {\n      username: '$1'\n    }\n  },\n  '^Creation ramp must be greater than (\\\\d+?)$': {\n    gettext: gettext('Bulk operation delay must be greater than {{minSeconds}} seconds.'),\n    placeholders: {\n      minSeconds: '$1'\n    }\n  },\n  '^Created container$': {\n    gettext: gettext('Container created.')\n  },\n  '^Created pod: (.+)$': {\n    gettext: gettext('Pod \"{{imageName}}\" created.'),\n    placeholders: {\n      imageName: '$1'\n    }\n  },\n  '^CSV file contained empty dataset$': {\n    gettext: gettext('No entries found in uploaded CSV file.')\n  },\n  '^Cycle detected for route (.+?)!$': {\n    gettext: gettext('Cycle detected for route {{route}}.'),\n    placeholders: {\n      route: '$1'\n    }\n  },\n  '^Data broker processing is currently overloaded and may stop forwarding your data\\\\. Please contact support\\\\.$': {\n    gettext: gettext('Data broker processing is currently overloaded and may stop forwarding your data. Please contact support.')\n  },\n  '^Data broker processing is not able to connect do destination tenant, thus data forwarding is not working\\\\. Please contact support\\\\.$': {\n    gettext: gettext('Data broker processing is not able to connect to destination tenant, thus data forwarding is not working. Please contact support.')\n  },\n  '^Device id \\'(.+?)\\' contains \\'(.+?)\\' character which is not permitted.$': {\n    gettext: gettext('ID \"{{deviceId}}\" contains invalid character: \"{{invalidCharacter}}\".'),\n    placeholders: {\n      deviceId: '$1',\n      invalidCharacter: '$2'\n    }\n  },\n  '^Device name: \\'(.+?)\\', alarm text: \\'(.+?)\\'$': {\n    gettext: gettext('Device name: \"{{deviceName}}\", alarm text: \"{{alarmText | translate}}\"'),\n    placeholders: {\n      deviceName: '$1',\n      alarmText: '$2'\n    }\n  },\n  '^Display name$': {\n    gettext: gettext('Login alias')\n  },\n  '^Domain name in uploaded certificate differs from the one in use$': {\n    gettext: gettext('Domain name in uploaded certificate differs from the one in use. Please deactivate the custom domain before uploading new certificate.')\n  },\n  '^Domain name is already in use by another tenant!$': {\n    gettext: gettext('Domain name is already used by another tenant.')\n  },\n  '^Duplicated connector for instanceUrl (.+?)!$': {\n    gettext: gettext('Target URL {{targetUrl}} already used by another connector.'),\n    placeholders: {\n      targetUrl: '$1'\n    }\n  },\n  '^Duplicated connector for name (.+?)!$': {\n    gettext: gettext('Connector name \"{{name}}\" already used by another connector.'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^Entry is outside of the target dir: (.+)$': {\n    gettext: gettext('File entry outside of the target directory: \"{{path}}\".'),\n    placeholders: {\n      path: '$1'\n    }\n  },\n  '^Error during password validation. : Password must have at least (\\\\d+?) characters and no more than (\\\\d+?) and must contain only Latin1 characters.$': {\n    gettext: gettext('Password is invalid. It must have at least {{minCharactersCount}} and no more than {{maxCharactersCount}} characters.'),\n    placeholders: {\n      minCharactersCount: '$1',\n      maxCharactersCount: '$2'\n    }\n  },\n  '^Error during password validation. : Your password has been used already. Choose another.$': {\n    gettext: gettext('This password has already been used earlier. Use a different one.')\n  },\n  '^Error in statement (.+?):(.+?)! : Incorrect syntax near \\'(.+?)\\' near reserved keyword \\'(.+?)\\' \\\\[([\\\\S\\\\s]+?)\\\\]$': {\n    gettext: gettext('Error in statement {{moduleName}}:{{statementNumber}}. Incorrect syntax near expression \"{{expression}}\" near reserved keyword \"{{keyword}}\".'),\n    placeholders: {\n      moduleName: '$1',\n      statementNumber: '$2',\n      expression: '$3',\n      keyword: '$4'\n    }\n  },\n  '^External id not found; external id = ID \\\\[type=(.+?), value=(.+?)\\\\]$': {\n    gettext: gettext('External ID not found for type \"{{type}}\" and value \"{{value}}\".'),\n    placeholders: {\n      type: '$1',\n      value: '$2'\n    }\n  },\n  '^Error occurred when trying to find an Application for id ID (.+) : Could not find application by ID (\\\\d+)$': {\n    gettext: gettext('Could not find application by ID {{applicationId}}.'),\n    placeholders: {\n      applicationId: '$2'\n    }\n  },\n  '^Http status code: 404\\n{error=\"options/Not Found\",message=\"Unable to find option by given key: sigfox-agent/provider.token\",info=\"https://www.cumulocity.com/guides/reference-guide/#error_reporting\",details=\"null\"}': {\n    gettext: gettext('Unable to find option by given key: sigfox-agent/provider.token')\n  },\n  '^Failed to delete application.  : Cannot remove application assigned to other tenants.$': {\n    gettext: gettext('Could not delete application assigned to other tenants.')\n  },\n  '^Failed to extract certificate from PKCS12$': {\n    gettext: gettext('Failed to extract certificate from PKCS12.')\n  },\n  '^Failed to update domain at the platform$': {\n    gettext: gettext('Failed to update domain at the platform.')\n  },\n  '^Finding device data from database failed : No managedObject for id \\'(.+?)\\'!$': {\n    gettext: gettext('Could not find managed object with ID \"{{deviceId}}\".'),\n    placeholders: {\n      deviceId: '$1'\n    }\n  },\n  '^Following mandatory fields should be included: (.+?)$': {\n    gettext: gettext('Following mandatory fields should be included: {{fields}}'),\n    placeholders: {\n      fields: '$1'\n    }\n  },\n  '^Global Role updated$': {\n    gettext: gettext('Global role updated')\n  },\n  '^Global Role (.+?) updated$': {\n    gettext: gettext('Global role \"{{name}}\" updated'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^Global Role (.+?) updated: (.+)$': {\n    gettext: gettext('Global role \"{{name}}\" updated: {{updatesList}}'),\n    placeholders: {\n      name: '$1',\n      updatesList: {\n        capture: '$2',\n        translate: {\n          'applications \\\\[([^\\\\]]+?)\\\\] added': {\n            gettext: gettext('applications {{list}} added'),\n            placeholders: {\n              list: '$1'\n            }\n          },\n          'applications \\\\[([^\\\\]]+?)\\\\] removed': {\n            gettext: gettext('applications {{list}} removed'),\n            placeholders: {\n              list: '$1'\n            }\n          },\n          'roles \\\\[([^\\\\]]+?)\\\\] added': {\n            gettext: gettext('roles {{list}} added'),\n            placeholders: {\n              list: '$1'\n            }\n          },\n          'roles \\\\[([^\\\\]]+?)\\\\] removed': {\n            gettext: gettext('roles {{list}} removed'),\n            placeholders: {\n              list: '$1'\n            }\n          }\n        }\n      }\n    }\n  },\n  '^Global Roles$': {\n    gettext: gettext('Global roles')\n  },\n  '^Operation updated: (.+)$': {\n    gettext: gettext('Operation updated: {{updatesList}}'),\n    placeholders: {\n      updatesList: {\n        capture: '$1',\n        translate: {\n          'status=\\'(.+?)\\'': {\n            gettext: gettext('status=\"{{status | translate}}\"'),\n            placeholders: {\n              status: '$1'\n            }\n          },\n          'description=\\'(.+?)\\'': {\n            gettext: gettext('description=\"{{description | translate}}\"'),\n            placeholders: {\n              description: '$1'\n            }\n          },\n          'device name=\\'(.+?)\\'': {\n            gettext: gettext('device name=\"{{deviceName}}\"'),\n            placeholders: {\n              deviceName: '$1'\n            }\n          },\n          'failure reason=\\'(.+?)\\'': {\n            gettext: gettext('failure reason=\"{{failureReason | translate}}\"'),\n            placeholders: {\n              failureReason: '$1'\n            }\n          }\n        }\n      }\n    }\n  },\n  '^ID \\\\[type=(.+?), value=(.+?)\\\\] was already bound to different Global ID.$': {\n    gettext: gettext('External ID \"{{value}}\" of the type \"{{type}}\" already exists.'),\n    placeholders: {\n      type: '$1',\n      value: '$2'\n    }\n  },\n  '^Invalid credentials! : Bad credentials$': {\n    gettext: gettext('Invalid credentials.')\n  },\n  '^Invalid credentials! : No phone number provided$': {\n    gettext: gettext('Log into the management tenant first and enter your phone number.')\n  },\n  '^Inventory Role removed$': {\n    gettext: gettext('Inventory role removed')\n  },\n  '^Inventory Role (.+?) removed': {\n    gettext: gettext('Inventory role \"{{name}}\" deleted.'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^Inventory Role updated$': {\n    gettext: gettext('Inventory role updated')\n  },\n  '^Inventory Role (.+?) updated': {\n    gettext: gettext('Inventory role \"{{name}}\" updated.'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^I/O error: Connection refused; nested exception is Connection refused : Connection refused': {\n    gettext: gettext('Connection refused')\n  },\n  '^I/O error: Read timed out; nested exception is Read timed out : Read timed out': {\n    gettext: gettext('Read timed out')\n  },\n  '^Log file requested$': {\n    gettext: gettext('Log file requested.')\n  },\n  '^Managed object deleted$': {\n    gettext: gettext('Managed object deleted')\n  },\n  '^Managed object \"(.+?)\" deleted$': {\n    gettext: gettext('Managed object \"{{name}}\" deleted'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^Maximum file size exceeded$': {\n    gettext: gettext('Maximum file size exceeded.')\n  },\n  '^Message with ID (.+?) doesn\\'t exist in smart rest template (.+?)$': {\n    gettext: gettext('Message with ID \"{{messageId}}\" doesn\\'t exist in SmartREST template with ID \"{{templateId}}\"'),\n    placeholders: {\n      messageId: '$1',\n      templateId: '$2'\n    }\n  },\n  '^NewDeviceRequest for id = (.+?) already exists.$': {\n    gettext: gettext('Device registration request with ID {{id}} already exists.'),\n    placeholders: {\n      id: '$1'\n    }\n  },\n  '^No communication with device since (.+?)$': {\n    gettext: gettext('No communication with device since {{timestamp | absoluteDate}}.'),\n    placeholders: {\n      timestamp: '$1'\n    }\n  },\n  '^No data received from device within required interval.$': {\n    gettext: gettext('No data received from device within required interval.')\n  },\n  '^No LoRa provider settings are found. Please configure the connectivity settings.$': {\n    gettext: gettext('No LoRa provider settings are found. Please configure the connectivity settings.')\n  },\n  '^Not within any context!$': {\n    gettext: gettext('A problem occurred with microservice subscription.')\n  },\n  '^Maximum age cannot be bigger than 10 years.$': {\n    gettext: gettext('Maximum age cannot be bigger than 10 years.')\n  },\n  '^Microservice application name incorrect. Please use only lower-case letters, digits and dashes. Maximum length is (\\\\d+) characters.$': {\n    gettext: gettext('Microservice application name is incorrect: only lower case letters, digits and dashes allowed. Maximum length: {{maxLength}}.'),\n    placeholders: {\n      maxLength: '$1'\n    }\n  },\n  '^Microservice not available.*$': {\n    gettext: gettext('Microservice is not available.')\n  },\n  '^Operation created$': {\n    gettext: gettext('Operation created.')\n  },\n  '^Operation updated$': {\n    gettext: gettext('Operation updated.')\n  },\n  '^Operation created: status=\\'(.+?)\\'.': {\n    gettext: gettext('Operation created: status=\"{{status | translate}}\".'),\n    placeholders: {\n      status: '$1'\n    }\n  },\n  '^Option created$': {\n    gettext: gettext('Option created.')\n  },\n  '^Option \"(.+?)\" created$': {\n    gettext: gettext('Option \"{{option}}\" created.'),\n    placeholders: {\n      option: '$1'\n    }\n  },\n  '^Option deleted$': {\n    gettext: gettext('Option deleted.')\n  },\n  '^Option \"(.+?)\" deleted$': {\n    gettext: gettext('Option \"{{option}}\" deleted.'),\n    placeholders: {\n      option: '$1'\n    }\n  },\n  '^Owner field error. : Cannot introduce cyclic dependency.': {\n    gettext: gettext('Could not introduce cyclic ownership dependency.')\n  },\n  '^Password change is temporary blocked.$': {\n    gettext: gettext('Password change is temporarily blocked.')\n  },\n  '^Password cipher does not match': {\n    gettext: gettext('Password cipher does not match.')\n  },\n  '^Platform application cannot be added to, nor removed from any tenant.$': {\n    gettext: gettext('Platform application cannot be added to, nor removed from any tenant.')\n  },\n  '^Private key must be provided in KEY_PAIR credentials$': {\n    gettext: gettext('Private key must be provided when \"Public / private keys\" option is selected.')\n  },\n  '^Private key cipher does not match': {\n    gettext: gettext('Private key cipher does not match')\n  },\n  '^Protocol \"(.+?)\" does not support \"(.+?)\" credentials type$': {\n    gettext: gettext('Protocol \"{{protocol}}\" does not support \"{{credentialsType}}\" credentials type.'),\n    placeholders: {\n      protocol: '$1',\n      credentialsType: '$2'\n    }\n  },\n  '^pulling image \"(.+)\"$': {\n    gettext: gettext('Pulling image: \"{{imageName}}\".'),\n    placeholders: {\n      imageName: '$1'\n    }\n  },\n  '^Real-time event processing is currently overloaded and may stop processing your events\\\\. Please contact support\\\\.$': {\n    gettext: gettext('Real-time event processing is currently overloaded and may stop processing your events. Please contact support.')\n  },\n  '^Resource ID \\\\[type=com_cumulocity_model_idtype_GId, value=(.+?)\\\\] for this request not found.$': {\n    gettext: gettext('Could not find the resource with ID \"{{id}}\".'),\n    placeholders: {\n      id: '$1'\n    }\n  },\n  '^Scaled up replica set (.+) to (\\\\d+)$': {\n    gettext: gettext('Replica set \"{{replicaSetName}}\" scaled up to \"{{scaleNumber}}\".'),\n    placeholders: {\n      replicaSetName: '$1',\n      scaleNumber: '$2'\n    }\n  },\n  '^Simulator state is invalid: (.+)$': {\n    gettext: gettext('Simulator state is invalid: {{violations}}'),\n    placeholders: {\n      violations: {\n        capture: '$1',\n        translate: {\n          '(\\\\w+?) - may not be null': {\n            gettext: gettext('\"{{field}}\" should not be null'),\n            placeholders: {\n              field: '$1'\n            }\n          },\n          '(\\\\w+?) - must be less than or equal to (\\\\d+)': {\n            gettext: gettext('\"{{field}}\" must be less than or equal to {{maxValue}}'),\n            placeholders: {\n              field: '$1',\n              maxValue: '$2'\n            }\n          },\n          '(\\\\w+?) - should not contain null values': {\n            gettext: gettext('\"{{field}}\" should not contain null values'),\n            placeholders: {\n              field: '$1'\n            }\n          }\n        }\n      }\n    }\n  },\n  '^Smart rest template (.+?) doesn\\'t exist$': {\n    gettext: gettext('SmartREST template with id \"{{templateId}}\" doesn\\'t exist'),\n    placeholders: {\n      templateId: '$1'\n    }\n  },\n  '^Smart rule created$': {\n    gettext: gettext('Smart rule created.')\n  },\n  '^Smart rule updated$': {\n    gettext: gettext('Smart rule updated.')\n  },\n  '^Smart rule enabled$': {\n    gettext: gettext('Smart rule activated.')\n  },\n  '^Smart rule disabled$': {\n    gettext: gettext('Smart rule deactivated.')\n  },\n  '^Smart rule deleted$': {\n    gettext: gettext('Smart rule deleted.')\n  },\n  '^Smart rule \"(.+?)\" created$': {\n    gettext: gettext('Smart rule \"{{name}}\" created.'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^Smart rule \"(.+?)\" updated$': {\n    gettext: gettext('Smart rule \"{{name}}\" updated.'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^Smart rule \"(.+?)\" enabled$': {\n    gettext: gettext('Smart rule \"{{name}}\" activated.'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^Smart rule \"(.+?)\" disabled$': {\n    gettext: gettext('Smart rule \"{{name}}\" deactivated.'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^Smart rule \"(.+?)\" deleted$': {\n    gettext: gettext('Smart rule \"{{name}}\" deleted.'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^Started container$': {\n    gettext: gettext('Container started.')\n  },\n  '^Successfully assigned (.+) to (.+)$': {\n    gettext: gettext('\"{{imageName}}\" assigned to \"{{address}}\".'),\n    placeholders: {\n      imageName: '$1',\n      address: '$2'\n    }\n  },\n  '^Successfully pulled image \"(.+)\"$': {\n    gettext: gettext('Image \"{{imageName}}\" pulled.'),\n    placeholders: {\n      imageName: '$1'\n    }\n  },\n  '^Tenant creation failed. : Tenant with given id already exists.$': {\n    gettext: gettext('Could not create a tenant. Tenant with given domain/URL already exists.')\n  },\n  '^Tenant id cannot be a reserved sql keyword \"(.+?)\".$': {\n    gettext: gettext('Could not use a reserved SQL keyword \"{{tenantId}}\" as a domain name.'),\n    placeholders: {\n      tenantId: '$1'\n    }\n  },\n  '^Tenant \"(.+?)\" activated$': {\n    gettext: gettext('Tenant \"{{tenant}}\" activated.'),\n    placeholders: {\n      tenant: '$1'\n    }\n  },\n  '^Tenant (.+?) has sub-tenants, please remove them first!$': {\n    gettext: gettext('Could not remove tenant \"{{tenant}}\". Remove its subtenants first.'),\n    placeholders: {\n      tenant: '$1'\n    }\n  },\n  '^Tenant activated$': {\n    gettext: gettext('Tenant activated')\n  },\n  '^Tenant \"(.+?)\" created$': {\n    gettext: gettext('Tenant \"{{tenant}}\" created.'),\n    placeholders: {\n      tenant: '$1'\n    }\n  },\n  '^Tenant created$': {\n    gettext: gettext('Tenant created')\n  },\n  '^Tenant \"(.+?)\" deleted$': {\n    gettext: gettext('Tenant \"{{tenant}}\" deleted.'),\n    placeholders: {\n      tenant: '$1'\n    }\n  },\n  '^Tenant deleted$': {\n    gettext: gettext('Tenant deleted')\n  },\n  '^Tenant \"(.+?)\" suspended$': {\n    gettext: gettext('Tenant \"{{tenant}}\" suspended.'),\n    placeholders: {\n      tenant: '$1'\n    }\n  },\n  '^Tenant suspended$': {\n    gettext: gettext('Tenant suspended')\n  },\n  '^Tenant \"(.+?)\" updated: (.+?)$': {\n    gettext: gettext('Tenant \"{{tenant}}\" updated: {{properties}}.'),\n    placeholders: {\n      tenant: '$1',\n      properties: '$2'\n    }\n  },\n  '^Tenant updated$': {\n    gettext: gettext('Tenant updated')\n  },\n  '^Too Many Requests$': {\n    gettext: gettext('Too many requests. Try again later.')\n  },\n  '^User alias equals username \\'(.+)\\'$': {\n    gettext: gettext('Username and login alias must be different.')\n  },\n  '^User created$': {\n    gettext: gettext('User created')\n  },\n  '^User (.+?) created$': {\n    gettext: gettext('User \"{{name}}\" created'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^User deleted$': {\n    gettext: gettext('User deleted')\n  },\n  '^User (.+?) deleted$': {\n    gettext: gettext('User \"{{name}}\" deleted'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^User updated$': {\n    gettext: gettext('User updated')\n  },\n  '^User (.+?) updated: (.+)$': {\n    gettext: gettext('User \"{{name}}\" updated: {{updatesList}}'),\n    placeholders: {\n      name: '$1',\n      updatesList: {\n        capture: '$2',\n        translate: {\n          'delegatedBy=\\'(.+?)\\'': {\n            gettext: gettext('delegated by: \"{{delegate}}\"'),\n            placeholders: {\n              delegate: '$1'\n            }\n          },\n          'owner=\\'(.+?)\\'': {\n            gettext: gettext('owner: \"{{owner}}\"'),\n            placeholders: {\n              owner: '$1'\n            }\n          },\n          'inventory assignment \\\\[(.+?)\\\\] added': {\n            gettext: gettext('inventory assignment [{{inventoryAssignment}}] added'),\n            placeholders: {\n              inventoryAssignment: '$1'\n            }\n          },\n          'inventory assignment \\\\[(.+?)\\\\] removed': {\n            gettext: gettext('inventory assignment [{{inventoryAssignment}}] removed'),\n            placeholders: {\n              inventoryAssignment: '$1'\n            }\n          },\n          'applications \\\\[(.+?)\\\\] added$': {\n            gettext: gettext('applications [{{applicationsList}}] added'),\n            placeholders: {\n              applicationsList: '$1'\n            }\n          },\n          'applications \\\\[(.+?)\\\\] removed$': {\n            gettext: gettext('applications [{{applicationsList}}] removed'),\n            placeholders: {\n              applicationsList: '$1'\n            }\n          },\n          'global roles \\\\[(.+?)\\\\] added$': {\n            gettext: gettext('global roles [{{globalRolesList}}] added'),\n            placeholders: {\n              globalRolesList: '$1'\n            }\n          },\n          'global roles \\\\[(.+?)\\\\] removed$': {\n            gettext: gettext('global roles [{{globalRolesList}}] removed'),\n            placeholders: {\n              globalRolesList: '$1'\n            }\n          }\n        }\n      }\n    }\n  },\n  '^User with username \\'(.+?)\\' already exists! : Duplicated: (.+?)$': {\n    gettext: gettext('User \"{{username}}\" already exists.'),\n    placeholders: {\n      username: '$1'\n    }\n  },\n  '^User with username or alias \\'(.+)\\' already exists! : Duplicated: (.+)$': {\n    gettext: gettext('User with username or login alias \"{{usernameOrAlias}}\" already exists.'),\n    placeholders: {\n      usernameOrAlias: '$1'\n    }\n  },\n  '^User with email \\'(.+?)\\' already exists! : Duplicated: (.+?)$': {\n    gettext: gettext('User with email \"{{email}}\" already exists.'),\n    placeholders: {\n      email: '$1'\n    }\n  },\n  '^unable to find option with given key (.+?) : Could not find entity Option by ID (.+?)!$': {\n    gettext: gettext('Unable to get tenant option: \"{{option}}\".'),\n    placeholders: {\n      option: '$2'\n    }\n  },\n  '^unable to find option with given key (.+?) : There is no system property for key (.+?)$': {\n    gettext: gettext('Unable to get system option: \"{{option}}\".'),\n    placeholders: {\n      option: '$2'\n    }\n  },\n  '^Write failed with error code 16733 and error message \\'trying to index text where term list is too big, max is 4mb _id: \"(.+?)\"\\'$': {\n    gettext: gettext('The uploaded image cannot be bigger than 4 MB. Please upload a smaller one.')\n  },\n  '^Write failed with error code 17280 and error message \\'WiredTigerIndex::insert: key too large to index, failing (.+?) { : \"(.+?)\" }\\'$': {\n    gettext: gettext('The chosen name is too long. Please try a shorter one.')\n  },\n  '^You have reached devices limit. No more devices can be registered.$': {\n    gettext: gettext('You reached devices limit. No more devices can be registered.')\n  },\n  '^(.+) succeeded for volume \"(.+)\"': {\n    gettext: gettext('Operation \"{{operation}}\" succeeded for volume \"{{volume}}\".'),\n    placeholders: {\n      operation: '$1',\n      volume: '$2'\n    }\n  },\n  '^Exception on tenant (.+) in statement \\'(.+)\\': Invocation exception when invoking method \\'(.+)\\' of class \\'(.+)\\' passing parameters \\\\[(.+)\\\\] for statement \\'(.+)\\': (.+) : (.+)$': {\n    gettext: gettext('Exception on tenant {{tenantId}} in statement \"{{moduleName}}\": Invocation exception when invoking method \"{{methodName}}\" of class \"{{classPath}}\" passing parameters [{{parameters}}] for statement \"{{statement}}\": {{exceptionType}} : {{exceptionMessage}}.'),\n    placeholders: {\n      tenantId: '$1',\n      moduleName: '$2',\n      methodName: '$3',\n      classPath: '$4',\n      parameters: '$5',\n      statement: '$6',\n      exceptionType: '$7',\n      exceptionMessage: '$8'\n    }\n  },\n  '^No nodes are available that match all of the predicates: (.+).$': {\n    gettext: gettext('No nodes are available that match all of the predicates: [{{predicates}}].'),\n    placeholders: {\n      predicates: '$1'\n    }\n  },\n  '^Readiness probe failed: (.+) (.+): (.+): request canceled while waiting for connection \\\\(Client.Timeout exceeded while awaiting headers\\\\)$': {\n    gettext: gettext('Readiness probe failed: {{requestMethod}} {{uri}}: {{protocol}}: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers).'),\n    placeholders: {\n      requestMethod: '$1',\n      uri: '$2',\n      protocol: '$3'\n    }\n  },\n  '^Liveness probe failed: (.+) (.+): (.+): request canceled while waiting for connection \\\\(Client.Timeout exceeded while awaiting headers\\\\)$': {\n    gettext: gettext('Liveness probe failed: {{requestMethod}} {{uri}}: {{protocol}}: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers).'),\n    placeholders: {\n      requestMethod: '$1',\n      uri: '$2',\n      protocol: '$3'\n    }\n  },\n  '^Error syncing pod$': {\n    gettext: gettext('Pod synchronization error.')\n  },\n  '^Failed create pod sandbox.$': {\n    gettext: gettext('Pod sandbox creation failed.')\n  },\n  '^Exception on tenant (.+) in statement \\'(.+)\\': Http status code: (\\\\d+) \\\\{error=\"alarm/Unprocessable Entity\",message=\"(.+)\",info=\"https://www.cumulocity.com/guides/reference-guide/#error_reporting\",details=\"null\"\\\\}$': {\n    gettext: gettext('Exception on tenant {{tenantId}} in statement \"{{statement}}\": HTTP status code: {{httpStatusCode}} : {{message | translate}}'),\n    placeholders: {\n      tenantId: '$1',\n      statement: '$2',\n      httpStatusCode: '$3',\n      message: '$4'\n    }\n  },\n  '^User \\'(.+)\\' is managed by a remote identity management service defined by an administrator, direct update is forbidden$': {\n    gettext: gettext('User \"{{userName}}\" is managed by a remote identity management service defined by an administrator, direct update is forbidden.'),\n    placeholders: {\n      userName: '$1'\n    }\n  },\n  '^Added new child device to \"(.+)\" \\\\(ID: (.+)\\\\).$': {\n    gettext: gettext('Added new child device to \"{{parentDeviceName}}\" (ID: {{parentDeviceId}}).'),\n    placeholders: {\n      parentDeviceName: '$1',\n      parentDeviceId: '$2'\n    }\n  },\n  '^Updated child device of \"(.+)\" \\\\(ID: (.+)\\\\).$': {\n    gettext: gettext('Updated child device of \"{{parentDeviceName}}\" (ID: {{parentDeviceId}}).'),\n    placeholders: {\n      parentDeviceName: '$1',\n      parentDeviceId: '$2'\n    }\n  },\n  '^Added child device \"(.+)\" \\\\(ID: (.+)\\\\).$': {\n    gettext: gettext('Added child device \"{{name}}\" (ID: {{id}}).'),\n    placeholders: {\n      name: '$1',\n      id: '$2'\n    }\n  },\n  '^Removed child device \"(.+)\" \\\\(ID: (.+)\\\\).$': {\n    gettext: gettext('Removed child device \"{{name}}\" (ID: {{id}}).'),\n    placeholders: {\n      name: '$1',\n      id: '$2'\n    }\n  },\n  '^Change value of \"(.+)\" to (.+) (.+).$': {\n    gettext: gettext('Change value of \"{{name}}\" to {{value}}{{unit}}.'),\n    placeholders: {\n      name: '$1',\n      value: '$2',\n      unit: '$3'\n    }\n  },\n  '^Change value of \"(.+)\" to (.+).$': {\n    gettext: gettext('Change value of \"{{name}}\" to {{value}}.'),\n    placeholders: {\n      name: '$1',\n      value: '$2'\n    }\n  },\n  '^Change status of \"(.+)\" to \"(.+)\".$': {\n    gettext: gettext('Change status of \"{{name}}\" to \"{{label}}\".'),\n    placeholders: {\n      name: '$1',\n      label: '$2'\n    }\n  },\n  '^Send message \"(.+)\".$': {\n    gettext: gettext('Send message \"{{str}}\".'),\n    placeholders: {\n      str: '$1'\n    }\n  },\n  '^Close relay (.+).$': {\n    gettext: gettext('Close relay {{number}}.'),\n    placeholders: {\n      number: '$1'\n    }\n  },\n  '^Open relay (.+).$': {\n    gettext: gettext('Open relay {{number}}.'),\n    placeholders: {\n      number: '$1'\n    }\n  },\n  '^Change trace status to (.+).$': {\n    gettext: gettext('Change trace status to {{state | translate}}.'),\n    placeholders: {\n      state: '$1'\n    }\n  },\n  '^Change relay status to (.+).$': {\n    gettext: gettext('Change relay status to {{status | translate}}.'),\n    placeholders: {\n      status: '$1'\n    }\n  },\n  '^Closing relay (.+).$': {\n    gettext: gettext('Closing relay {{number}}.'),\n    placeholders: {\n      number: '$1'\n    }\n  },\n  '^Opening relay (.+).$': {\n    gettext: gettext('Opening relay {{number}}.'),\n    placeholders: {\n      number: '$1'\n    }\n  },\n  '^Update firmware to: (.+) \\\\(version: (.+)\\\\).$': {\n    gettext: gettext('Update firmware to: {{name}} (version: {{version}}).'),\n    placeholders: {\n      name: '$1',\n      version: '$2'\n    }\n  },\n  '^Execute generic command: (.+).$': {\n    gettext: gettext('Execute generic command: {{command}}.'),\n    placeholders: {\n      command: '$1'\n    }\n  },\n  '^Failed to refresh application. : Cannot refresh non local-hosted application.$': {\n    gettext: gettext('Could not reactivate the application as it is not hosted locally.')\n  },\n  '^Failed to refresh application. : Cannot refresh application without active version id.$': {\n    gettext: gettext('Could not reactivate the application as it has no active version.')\n  },\n  // TODO: remove if we decide not to translate such messages:\n  // '^Killing container with id (.+):Need to kill Pod$': {\n  //   gettext: gettext('Killing container with ID \"{{containerId}}\". Need to kill Pod.'),\n  //   placeholders: {\n  //     containerId: '$1'\n  //   }\n  // },\n  '^Scaled down replica set (.+) to (\\\\d+)$': {\n    gettext: gettext('Replica set \"{{replicaSetName}}\" scaled down to \"{{scaleNumber}}\".'),\n    placeholders: {\n      replicaSetName: '$1',\n      scaleNumber: '$2'\n    }\n  },\n  '^Deleted pod: (.+)$': {\n    gettext: gettext('Pod \"{{imageName}}\" deleted.'),\n    placeholders: {\n      imageName: '$1'\n    }\n  },\n  '^Container image \"(.+)\" already present on machine$': {\n    gettext: gettext('Container image \"{{imageName}}\" already exists.'),\n    placeholders: {\n      imageName: '$1'\n    }\n  }\n};\n","import { HttpClient } from '@angular/common/http';\nimport { TranslateLoader } from '@ngx-translate/core';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { Optional, Inject, Injectable } from '@angular/core';\nimport { LOCALE_PATH } from './locale.path';\nimport { LANGUAGES } from './languages';\n\n@Injectable()\nexport class TranslateCustomLoader implements TranslateLoader {\n  constructor(\n    private http: HttpClient,\n    @Inject(LOCALE_PATH) private path: string = null,\n    @Inject(LANGUAGES) private languages: any = null\n  ) {}\n\n  getTranslation(lang: string): Observable<any> {\n    const path = this.path || '';\n    let url = `${path}${lang}.json`;\n    if (this.languages && this.languages[lang] && this.languages[lang].url) {\n      url = this.languages[lang].url;\n    }\n    return this.http.get(url).pipe(\n      map((d) => d[lang]),\n      catchError(() => of({}))\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TranslateDefaultParser } from '@ngx-translate/core';\nimport { get } from 'lodash-es';\n\nfunction isDefined(value: any): boolean {\n  return typeof value !== 'undefined' && value !== null;\n}\n\n@Injectable()\nexport class TranslateParserCustom extends TranslateDefaultParser {\n\n  getValue(target: any, key: string): any {\n    let translated = target[key];\n    if (!translated) {\n      const keys = key.split('.');\n      if (keys.length > 1) {\n        translated = get(target, key);\n      }\n    }\n    return translated;\n  }\n}\n","import { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { LOCALE_ID, NgModule } from '@angular/core';\nimport {\n  MissingTranslationHandler,\n  TranslateService as NgxTranslateService,\n  TranslateCompiler,\n  TranslateFakeCompiler,\n  TranslateLoader,\n  TranslateModule,\n  TranslateParser,\n  TranslateStore,\n  USE_DEFAULT_LANG,\n  USE_STORE,\n  USE_EXTEND,\n  DEFAULT_LANGUAGE\n} from '@ngx-translate/core';\nimport { OptionsService } from '../common/public-api';\nimport { AppStateService } from '../common/ui-state.service';\nimport { LANGUAGES } from './languages';\nimport { LOCALE_PATH } from './locale.path';\nimport { MissingTranslationCustomHandler } from './missing-translation-custom.handler';\nimport { MESSAGES } from './pattern-messages.data';\nimport { HOOK_PATTERN_MESSAGES } from './patterns-message.hook';\nimport { TranslateCustomLoader } from './translate.loader';\nimport { TranslateParserCustom } from './translate.parser';\n\n// Load these as a side effect\ntry {\n  // tslint:disable:no-var-requires\n  require('@c8y/ngx-components/locales/de.po');\n  require('@c8y/ngx-components/locales/en.po');\n  require('@c8y/ngx-components/locales/es.po');\n  require('@c8y/ngx-components/locales/fr.po');\n  require('@c8y/ngx-components/locales/ja_JP.po');\n   // tslint:enable:no-var-requires\n} catch (e) {\n  // empty block\n}\n\n// AoT requires an exported function for factories\nexport function translateLoaderFactory(httpClient: HttpClient, localePath: string, languages: any) {\n  return new TranslateCustomLoader(httpClient, localePath, languages);\n}\n\nexport function localePathFactory(options: OptionsService) {\n  return options.localePath;\n}\n\nexport function languagesFactory(options: OptionsService) {\n  return options.languages;\n}\n\nexport function localeId(appStateService: AppStateService) {\n  return {\n    get lang() {\n      return appStateService.state.lang || 'en';\n    },\n    toLowerCase() {\n      return this.lang;\n    },\n    toString() {\n      return this.lang;\n    }\n  };\n}\n\n/**\n * The angular module definition for i18n (translation).\n * @exports I18nModule\n */\n@NgModule({\n  exports: [ TranslateModule ],\n  imports: [ HttpClientModule ]\n})\nexport class I18nModule {\n  static providers() {\n    return [\n      { provide: LOCALE_ID, useFactory: localeId, deps: [ AppStateService ] },\n      { provide: HOOK_PATTERN_MESSAGES, useValue: MESSAGES, multi: true },\n      { provide: LOCALE_PATH, useFactory: localePathFactory, deps: [ OptionsService ] },\n      { provide: LANGUAGES, useFactory: languagesFactory, deps: [ OptionsService ] },\n\n      // Extracted from projects/ngx-translate/core/src/public_api.ts\n      { provide: TranslateLoader, useFactory: translateLoaderFactory, deps: [HttpClient, LOCALE_PATH, LANGUAGES] },\n      { provide: TranslateCompiler, useClass: TranslateFakeCompiler },\n      { provide: TranslateParser, useClass: TranslateParserCustom },\n      { provide: MissingTranslationHandler, useClass: MissingTranslationCustomHandler },\n      TranslateStore,\n      NgxTranslateService,\n      { provide: USE_STORE, useValue: undefined },\n      { provide: USE_DEFAULT_LANG, useValue: undefined },\n      { provide: USE_EXTEND, useValue: false },\n      { provide: DEFAULT_LANGUAGE, useValue: undefined },\n    ];\n  }\n  static forRoot() {\n    return {\n      ngModule: I18nModule,\n      providers: I18nModule.providers()\n    };\n  }\n}\n","import { Directive, Renderer2, Input, ElementRef } from '@angular/core';\n\n/**\n * Allows to set a icon. Switches between c8y default icons\n * and font awesome icons\n * @example <i [c8yIcon]=\"'rocket'\">\n */\n@Directive({\n  selector: '[c8yIcon]',\n})\nexport class IconDirective {\n\n  @Input()\n  set c8yIcon(icon: string) {\n    this.updateIcon(icon);\n  }\n  private c8yMatch = /^c8y-/;\n  private klasses = [];\n  private currentClasses = '';\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2\n  ) {}\n\n  private isC8y(icon) {\n    return this.c8yMatch.test(icon);\n  }\n\n  private getClasses(icon: string = '') {\n    let classes = '';\n    if (icon) {\n      const _icon = icon.trim();\n      const isC8y = this.isC8y(_icon);\n      const iconClass = isC8y ? _icon.replace(this.c8yMatch, 'c8y-icon-') : `fa-${_icon}`;\n      classes = `${isC8y ? 'c8y-icon' : 'fa fw'} ${iconClass}`;\n    }\n    return classes;\n  }\n\n  private updateIcon(icon: string) {\n    const newClasses = this.getClasses(icon);\n    if (newClasses !== this.currentClasses) {\n      this.currentClasses.split(/\\s/).filter((c) => c).forEach((klass) => {\n        this.renderer.removeClass(this.el.nativeElement, klass);\n      });\n      newClasses.split(/\\s/).filter((c) => c).forEach((klass) => {\n        this.renderer.addClass(this.el.nativeElement, klass);\n      });\n      this.currentClasses = newClasses;\n    }\n  }\n}\n\nexport const ICONS = [\n         'home',\n         'th',\n         'bar-chart-o',\n         'tasks',\n         'tachometer',\n         'bell',\n         'puzzle-piece',\n         'map-marker',\n         'location-arrow',\n         'globe',\n         'power-off',\n         'desktop',\n         'laptop',\n         'mobile',\n         'signal',\n         'qrcode',\n         'file',\n         'file-text',\n         'folder',\n         'folder-open',\n         'archive',\n         'hdd-o',\n         'book',\n         'bookmark',\n         'tag',\n         'flag',\n         'search',\n         'heart',\n         'star',\n         'bolt',\n         'rocket',\n         'cog',\n         'cogs',\n         'wrench',\n         'ban',\n         'user',\n         'users',\n         'sign-in',\n         'sign-out',\n         'upload',\n         'download',\n         'cloud-upload',\n         'cloud-download',\n         'cloud',\n         'spinner',\n         'refresh',\n         'repeat',\n         'undo',\n         'lock',\n         'unlock',\n         'info',\n         'question',\n         'exclamation',\n         'bug',\n         'calendar',\n         'random',\n         'asterisk',\n         'key',\n         'link',\n         'chain-broken',\n         'external-link',\n         'picture-o',\n         'comment',\n         'bullhorn',\n         'phone',\n         'lightbulb-o',\n         'flask',\n         'sitemap',\n         'exchange',\n         'code-fork',\n         'keyboard-o',\n         'terminal',\n         'code',\n         'clipboard',\n         'pencil',\n         'envelope',\n         'inbox',\n         'reply',\n         'share',\n         'thumbs-up',\n         'thumbs-down',\n         'check',\n         'plus',\n         'expand',\n         'compress',\n         'arrows',\n         'arrow-up',\n         'arrow-down',\n         'arrow-left',\n         'arrow-right',\n         'th-list',\n         'bars',\n         'table',\n         'columns',\n         'filter',\n         'sort',\n         'sort-up',\n         'sort-down',\n         'ellipsis-h',\n         'ellipsis-v',\n         'rss',\n         'apple',\n         'windows',\n         'android',\n         'linux'\n       ];\n","import { assign } from 'lodash-es';\nimport {\n  ComponentFactory,\n  ComponentFactoryResolver,\n  Directive,\n  ElementRef,\n  Input,\n  Renderer2,\n  TemplateRef,\n  Type,\n  ViewContainerRef\n  } from '@angular/core';\n\n/**\n * Directive to set a DOM node, a TemplateRef or any Component to a container or any node.\n * @example\n * <div *c8yOutlet=\"template\"></div>\n * <div *c8yOutlet=\"DeviceStatusComponent; properties: { node }\"></div>\n * <div *c8yOutlet=\"nodes\"></div>\n */\n@Directive({\n  selector: '[c8yOutlet]',\n})\nexport class OutletDirective {\n  private properties = {};\n  private _element;\n\n  constructor(\n    private viewContainer: ViewContainerRef,\n    private resolver: ComponentFactoryResolver,\n    private renderer: Renderer2,\n    private el: ElementRef\n  ) { }\n\n  /**\n   * Directive to set a DOM node, a TemplateRef or any Component to a container or any node.\n   * @example\n   * <div *c8yOutlet=\"template\"></div>\n   * <div *c8yOutlet=\"DeviceStatusComponent; properties: { node }\"></div>\n   * <div *c8yOutlet=\"nodes\"></div>\n   */\n  @Input() set c8yOutlet(template: TemplateRef<any> | Type<any> | Element) {\n    if (!template) {\n      return;\n    }\n    if (this._element instanceof Element) {\n      this.renderer.removeChild(this._element.parentElement,  this._element);\n    }\n    this.viewContainer.clear();\n\n    // case TemplateRef -> <div *c8yOutlet=\"template\"></div>\n    if (template instanceof TemplateRef) {\n      this.viewContainer.createEmbeddedView(template);\n\n    // case DOM Element -> <div *c8yOutlet=\"nodes\"></div>\n    } else if (template instanceof Element) {\n      const parent = this.renderer.parentNode(this.el.nativeElement);\n      this.destroy();\n      this._element = template;\n      this.renderer.insertBefore(parent, this._element, this.el.nativeElement);\n\n    // case Component -> <div *c8yOutlet=\"DeviceStatusComponent; properties: { node }\"></div>\n    } else {\n      const factory: ComponentFactory<any> = this.resolver.resolveComponentFactory(template);\n      const component = this.viewContainer.createComponent(factory);\n      assign(component.instance, this.properties);\n    }\n  }\n\n  @Input() set c8yOutletProperties(value) {\n    this.properties = value;\n  }\n\n  ngOnDestroy(): void {\n    this.destroy();\n  }\n\n  private destroy() {\n    if (this._element) {\n      const _parent = this.renderer.parentNode(this._element);\n      this.renderer.removeChild(_parent, this._element);\n    }\n  }\n}\n","import { Observable, of } from 'rxjs';\n\nexport class UserPreferencesStorageLocal {\n  private LOCAL_STORAGE_KEY = 'userPreferences';\n  private store: any = {};\n  constructor() {\n    try {\n      const jsonStore = window.localStorage.getItem(this.LOCAL_STORAGE_KEY);\n      if (jsonStore) {\n        this.store = JSON.parse(jsonStore) || {};\n      }\n    } catch (e) {\n      // do nothing\n    }\n  }\n\n  get(key) {\n    return of(this.store[key]);\n  }\n\n  set(key, value) {\n    this.store[key] = value;\n    return this.saveJsonStore();\n  }\n\n  private saveJsonStore() {\n    return window.localStorage.setItem(this.LOCAL_STORAGE_KEY, JSON.stringify(this.store));\n  }\n}\n","import { InventoryService } from '@c8y/client';\n\nexport class UserPreferencesStorageInventory {\n  TYPE = 'c8y_UserPreference';\n\n  constructor(\n    private inventory: InventoryService\n  ) {}\n\n  async get(key) {\n    const { data } = await this.inventory.list({fragmentType: key});\n    return data.length ? data[0][key] : undefined;\n  }\n\n  async set(key, value) {\n    const { data } = await this.inventory.list({fragmentType: key});\n    const updateMo: any = {[key]: value, type: this.TYPE};\n    let out;\n\n    if (data.length) {\n      updateMo.id = data[0].id;\n      out =  this.inventory.update(updateMo);\n    } else {\n      out = this.inventory.create(updateMo);\n    }\n    return out;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { InventoryService, UserService } from '@c8y/client';\nimport { IUser } from '@c8y/client';\nimport { Observable, from, never } from 'rxjs';\nimport { switchMap, first } from 'rxjs/operators';\nimport { UserPreferencesStorageLocal } from './user-preferences-storage-local';\nimport { UserPreferencesStorageInventory } from './user-preferences-store-inventory';\nimport { AppStateService } from '../ui-state.service';\n\n@Injectable()\nexport class UserPreferencesService {\n  currentUser: Observable<IUser>;\n  private LOCAL_STORAGE_KEY = 'userPreferences';\n  private storage: {\n    local: UserPreferencesStorageLocal,\n    inventory: UserPreferencesStorageInventory\n  };\n  constructor(\n    private user: UserService,\n    private inventory: InventoryService,\n    private appState: AppStateService\n  ) {\n    this.storage = {\n      local: new UserPreferencesStorageLocal(),\n      inventory: new UserPreferencesStorageInventory(this.inventory)\n    };\n    this.currentUser = this.appState.currentUser;\n  }\n\n  get(key): Observable<any> {\n    return this.currentUser.pipe(\n      first(),\n      switchMap((user) => this.getForUser(key, user))\n    );\n  }\n\n  set(key, value): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.currentUser.pipe(\n        first()\n      ).subscribe((user) => {\n        resolve(this.setForUser(key, value, user));\n      }, reject);\n    });\n  }\n\n  getForUser(key, user): Observable<any> {\n    const rawKey = this.getRawKey(key, user);\n    const storage = this.getStorage(user);\n    return from(storage.get(rawKey));\n  }\n\n  setForUser(key, value, user): Promise<any> {\n    const rawKey = this.getRawKey(key, user);\n    const storage = this.getStorage(user);\n    return Promise.resolve(storage.set(rawKey, value));\n  }\n\n  private getRawKey(key, user) {\n    const username = user.userName.replace(/\\./g, '__');\n    return `${key}${username}`;\n  }\n\n  private getStorage(user) {\n    return  this.user.hasAllRoles(user, ['ROLE_INVENTORY_READ', 'ROLE_INVENTORY_ADMIN']) ?\n      this.storage.inventory : this.storage.local;\n  }\n\n}\n","import './import-locales';\nimport { parse } from './parse-module';\nconst cache = new Map();\n/**\n * @ignore\n */\nexport function loadLocale(moduleLang) {\n  return new Promise((resolve, reject) => {\n    if (cache.has(moduleLang)) {\n      resolve(cache.get(moduleLang));\n    } else {\n      fetch(`assets/locales/angular/${moduleLang}.js`)\n        .then((res) => res.text())\n        .then((src) => {\n          const module = parse(src);\n          cache.set(moduleLang, module);\n          resolve(module);\n        })\n        .catch(reject);\n    }\n  });\n}\n","export function parse(moduleSrc) {\n  const src = moduleSrc.split(/\\n/)\n    .map((l) => l.trim())\n    .filter(Boolean)\n    .filter((l) => !l.match(/^\\/?\\*/) && !l.match(/^\\/\\//))\n    .join('\\n');\n  const fn = new Function(`var exports = {};\nvar module = { exports: exports };\n${src}\nreturn exports;`);\n  return fn();\n}\n","import { Injectable } from '@angular/core';\nimport { registerLocaleData } from '@angular/common';\nimport { keys } from 'lodash-es';\nimport { TranslateService as NgxTranslateService } from '@ngx-translate/core';\nimport { OptionsService } from '../common/options.service';\nimport { loadLocale } from './load-locale';\nimport { AppStateService } from '../common/ui-state.service';\n\n/**\n * A service to manage the language of the application.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TranslateService {\n  static SAVE_LANGUAGE_KEY = 'c8y_language';\n  static defaultLang() {\n    return window.localStorage.getItem(TranslateService.SAVE_LANGUAGE_KEY);\n  }\n  langsDetail: any =  this.options.get('languages', {});\n  langs: any = keys(this.langsDetail).filter((k) => this.langsDetail[k]);\n  private DEFAULT_SEPARATOR = '_';\n  constructor(\n    private ngxTranslate: NgxTranslateService,\n    private ui: AppStateService,\n    private options: OptionsService\n  ) {\n    const queryStringLang = this.queryStringLang();\n    if (queryStringLang) {\n      this.saveInLocalStorage(queryStringLang);\n    }\n  }\n\n  /**\n   * Switches to given language.\n   * @param lang The language as two-letter code.\n   */\n  async switchToLanguage(lang: string) {\n    const moduleLang = lang.replace('_', '-');\n\n    try {\n      await this.loadLocales(moduleLang);\n    } catch (e) {\n      const lessSpecificModuleLang = moduleLang.split('-').shift();\n      if (lessSpecificModuleLang !== moduleLang) {\n        await this.loadLocales(lessSpecificModuleLang);\n      } else {\n        throw e;\n      }\n    }\n\n    this.ngxTranslate.use(lang).subscribe(() => {\n      this.ui.state$.next({ ...this.ui.state, lang });\n    });\n    // TODO: do we still need to set that lang on html?!\n    // document.querySelector('html').setAttribute('lang', lang);\n  }\n\n  async loadLocales(moduleLang) {\n    const module: any = await loadLocale(moduleLang);\n    registerLocaleData(module.default);\n  }\n\n  /**\n   * Finds the first supported language\n   */\n  firstSupportedLanguage() {\n    const languages = [\n        this.queryStringLang(),\n        this.localStorageLang()\n      ]\n      .concat([ this.options.get('defaultLanguage') ])\n      .concat(this.browserLangs())\n      .concat(['en'])\n      .filter(Boolean);\n    return languages.find((language) => this.isSupported(language));\n  }\n\n  /**\n   * Converts a iso language code to a PO language code (e.g. de-de gets de_de).\n   * @param lang The iso language code.\n   */\n  convertToLanguageCodePO(lang: string): string {\n    const sep = lang.indexOf('-') > -1 ? '-' : this.DEFAULT_SEPARATOR;\n    const [ langMain, langSpecific ] = lang.split(sep);\n    const langLast = langSpecific ? `${this.DEFAULT_SEPARATOR}${langSpecific}` : '';\n    return `${langMain}${langLast}`;\n  }\n\n  /**\n   * Returns the language in the native language.\n   * @param lang The language two-letter code.\n   * @return The native name.\n   */\n  getNativeLanguage(lang: string): string {\n    const langData = (this.langsDetail || {})[lang] || {};\n    return langData.nativeName || lang;\n  }\n\n  saveInLocalStorage(lang: string) {\n    window.localStorage.setItem(TranslateService.SAVE_LANGUAGE_KEY, lang);\n  }\n\n  isSupported(lang: string) {\n    return this.langs.includes(lang);\n  }\n\n  /**\n   * Gets the language from the query parameter.\n   * @return The language two-letter code.\n   */\n  queryStringLang() {\n    return this.getQueryParameter('lang');\n  }\n\n  /**\n   * Gets the language from local storage.\n   * @return The language two-letter code.\n   */\n  private localStorageLang() {\n    return window.localStorage.getItem(TranslateService.SAVE_LANGUAGE_KEY);\n  }\n\n  /**\n   * Determines which language is set in the browser.\n   * @return The languages the browser supports as string array.\n   */\n  private browserLangs() {\n    const { navigator } = window;\n    const browserLanguagePropertyKeys = [\n      'languages',\n      'language',\n      'browserLanguage',\n      'systemLanguage',\n      'userLanguage'\n    ];\n    return browserLanguagePropertyKeys.reduce((languages, property) => {\n      const propertyLanguages = navigator[property];\n      if (typeof propertyLanguages === 'string') {\n        languages.push(propertyLanguages);\n      } else if (Array.isArray(propertyLanguages)) {\n        languages = languages.concat(propertyLanguages);\n      }\n      return languages;\n    }, []);\n  }\n\n  private getQueryParameter(queryKey) {\n    // TODO: replace this with URLSearchParams, ie 11 still doesn't support :()\n    const query = window.location.search.substring(1);\n    let result;\n    query.split('&').find((pair) => {\n      const [key, value] = pair.split('=');\n      if (key === queryKey) {\n        result = value;\n      }\n      return result;\n    });\n    return result;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'shortenUserName' })\r\nexport class ShortenUserNamePipe implements PipeTransform {\r\n\r\n  transform({ firstName = '', lastName = '', userName = ''}: any): string {\r\n      let parsedFirstName = firstName.trim().split(/\\s+/).shift().substr(0, 1);\r\n      const parsedLastName = lastName.trim().split(/\\s+/).pop();\r\n\r\n      if (!parsedLastName) {\r\n        parsedFirstName = firstName.split(/\\s+/).shift();\r\n      } else {\r\n        parsedFirstName = parsedFirstName ? `${parsedFirstName}. ` : '';\r\n      }\r\n\r\n      return parsedFirstName || parsedLastName ? parsedFirstName + parsedLastName : userName;\r\n    }\r\n}\r\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  Output,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport { IIdentified, Paging } from '@c8y/client';\n\n@Component({\n  selector: 'c8y-load-more',\n  templateUrl: './load-more.component.html'\n})\nexport class LoadMoreComponent {\n  @Input()\n  paging: Paging<any>;\n  @Input()\n  useIntersection = true;\n  @Input()\n  hidden = false;\n  @Input()\n  container: ElementRef;\n  @Input()\n  class: string = 'c8y-list__item bg-transparent';\n  @Input()\n  maxIterations = 10;\n  @Input()\n  noMoreDataHint: TemplateRef<any>;\n  @Output()\n  onLoad = new EventEmitter<IIdentified>();\n\n  isLoading = false;\n  counter = 0;\n  showNoMoreDataHint = false;\n  private loadUntilIntersected;\n  private readonly LOAD_SAME_PAGE_THRESHOLD = 50;\n  private intersectionObserver: IntersectionObserver;\n\n  @HostBinding('class')\n  get hostClass() {\n    return this.hidden || (!this.hasMore && !this.showNoMoreDataHint) ? '' : this.class;\n  }\n\n  get hasMore() {\n    return this.paging && this.paging.totalPages > this.paging.currentPage;\n  }\n\n  constructor(private element: ElementRef) {}\n\n  ngAfterContentInit(): void {\n    if (this.useIntersection && 'IntersectionObserver' in window) {\n      this.intersectionObserver = new IntersectionObserver(event => this.buttonInView(event[0]), {\n        root: this.container ? this.container.nativeElement : null\n      });\n      this.intersectionObserver.observe(this.element.nativeElement);\n    }\n    this.showNoMoreDataHint = this.shouldShowNoMoreDataHint();\n  }\n\n  ngOnDestroy(): void {\n    if (this.intersectionObserver) {\n      this.intersectionObserver.disconnect();\n    }\n  }\n\n  async loadMore(event?) {\n    this.isLoading = true;\n    if (event) {\n      event.stopPropagation();\n    }\n    if (this.hasMore) {\n      const result = await this.paging.next();\n      this.counter++;\n      this.paging = result.paging;\n      this.onLoad.emit(result.data);\n      this.intersectionLoading();\n      this.showNoMoreDataHint = this.shouldShowNoMoreDataHint();\n    } else {\n      this.counter = 0;\n      this.isLoading = false;\n    }\n  }\n\n  private intersectionLoading() {\n    if (this.useIntersection && this.hasMore && this.loadUntilIntersected !== null) {\n      this.loadUntilIntersected = setTimeout(() => this.loadMore(), this.getLoadingThreshold());\n      this.useIntersection = this.shouldSwitchMode();\n    } else {\n      this.isLoading = false;\n      this.loadUntilIntersected = undefined;\n    }\n  }\n\n  private getLoadingThreshold(): number {\n    return this.LOAD_SAME_PAGE_THRESHOLD * this.counter;\n  }\n\n  private shouldShowNoMoreDataHint() {\n    return (this.counter !== 0 || this.noMoreDataHint) && !this.hasMore && !this.hidden;\n  }\n\n  private shouldSwitchMode() {\n    return this.counter < this.maxIterations || this.hidden;\n  }\n\n  private buttonInView(event) {\n    if (event.isIntersecting) {\n      this.loadMore();\n    } else if (this.loadUntilIntersected) {\n      clearTimeout(this.loadUntilIntersected);\n      this.loadUntilIntersected = null;\n      this.isLoading = false;\n    } else {\n      // avoiding a race condition when timeout is faster\n      // cleared then set\n      this.loadUntilIntersected = null;\n    }\n  }\n}\n","import {\n  ComponentFactory,\n  ComponentFactoryResolver,\n  Directive,\n  Input,\n  TemplateRef,\n  ViewContainerRef,\n  SimpleChanges\n} from '@angular/core';\nimport { IIdentified, IResultList, Paging } from '@c8y/client';\nimport { isObservable, Observable, of, pipe, Subscription } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { LoadMoreComponent } from './load-more.component';\nimport { assign } from 'lodash-es';\n\n/**\n * A directive to iterate over IResultList<T> data from @c8y/client.\n * Depending on the [c8yForLoadMore] a load more button is:\n *  - auto: Tries to automatically load more data (default maximum 10 iterations; can be\n *          change with maxIterations settings).\n *  - show: Shows a load more button for the user to decide\n *  - none: Doesn't perform any load more action.\n *  - hidden: Loads more data automatically but with no visible button for the user.\n *\n * Additional, any rxjs operator pipe can be applied to the [c8yForPipe] input, e.g. to\n * filter the data displayed currently as well as the data loaded by subsequent requests.\n *\n * Example:\n * ```html\n * <div *c8yFor=\"let device of devices; loadMore: 'auto'; let i = index; pipe: filterPipe;\">\n *  {{ i + 1 }}. {{device.name}}\n * </div>\n * ```\n * The above example will list all entities that are applied to `devices`:\n * ```typescript\n * this.devices = this.inventoryService.list({ pageSize: 10, fragmentType: 'c8y_IsDevice' })\n * ```\n * It will display the first 10 items, if there is more space left on the screen, and there are more\n * than 10 devices, it will automatically load up to 10 pages more. If it still can't fit the screen\n * it will stop and switch to `show` mode.\n *\n * A pipe can be applied e.g. for filtering or grouping. This pipe is attached to every follow up\n * request done by the load more component:\n * ```typescript\n * this.filterPipe = pipe(\n *    map((data: []) => {\n *     return data.filter(\n *      (mo: any) => mo.name && mo.name.toLowerCase().indexOf(value.toLowerCase()) > -1\n *    );\n *  })\n * );\n * ```\n * The pipe must be an rxjs pipe and can take any operator.\n */\n@Directive({\n  selector: '[c8yFor]'\n})\nexport class ForOfDirective {\n  private cachedData = [];\n  private paging: Paging<IIdentified>;\n  private loadMoreMode: 'auto' | 'show' | 'none' | 'hidden' = 'auto';\n  private dataPipe = pipe(tap());\n  private pagingSub: Subscription;\n  private obs$: Observable<IIdentified[]>;\n  private loadMore: LoadMoreComponent;\n  private maxIterations = 10;\n  private notFoundTemplate: TemplateRef<any>;\n\n  private get shouldUseLoadMoreButton() {\n    return (\n      this.loadMoreMode === 'auto' || this.loadMoreMode === 'show' || this.loadMoreMode === 'hidden'\n    );\n  }\n\n  private get hasMoreData() {\n    return this.loadMore && this.loadMore.hasMore;\n  }\n\n  private get length() {\n    return this.cachedData.length;\n  }\n\n  /**\n   * The data setter. Must be a response from @c8y/data or a observable.\n   */\n  @Input()\n  set c8yForOf(fetchData: IResultList<IIdentified> | Observable<IResultList<IIdentified>>) {\n    if (fetchData) {\n      this.obs$ = (isObservable(fetchData) ? fetchData : of(fetchData)).pipe(\n        map(result => {\n          const { paging, data } = result;\n          this.paging = paging;\n          return data;\n        })\n      );\n    }\n  }\n\n  /**\n   * The mode setter:\n   *  - auto: Tries to automatically load more data (default maximum 10 iterations; can be\n   *          change with maxIterations settings).\n   *  - show: Shows a load more button for the user to decide\n   *  - none: Doesn't perform any load more action.\n   *  - hidden: Loads more data automatically but with no visible button for the user.\n   */\n  @Input()\n  set c8yForLoadMore(type: 'auto' | 'show' | 'none' | 'hidden') {\n    this.loadMoreMode = type;\n  }\n\n  /**\n   * The pipe setter to attach any rxjs pipe to the current and more loaded data.\n   */\n  @Input()\n  set c8yForPipe(dataPipe) {\n    if (dataPipe) {\n      this.dataPipe = dataPipe;\n    }\n  }\n\n  /**\n   * A template to use if no data is found at all (e.g. if you apply a filter pipe).\n   */\n  @Input()\n  set c8yForNotFound(notFoundTemplate: TemplateRef<any>) {\n    this.notFoundTemplate = notFoundTemplate;\n    if (this.loadMore) {\n      this.loadMore.noMoreDataHint = notFoundTemplate;\n    }\n  }\n\n  /**\n   * The maximum numbers of iterations to call data from the api.\n   */\n  @Input()\n  set c8yForMaxIterations(maxIterations: number) {\n    this.maxIterations = maxIterations;\n  }\n\n  constructor(\n    private tpl: TemplateRef<any>,\n    private vcr: ViewContainerRef,\n    private componentFactoryResolver: ComponentFactoryResolver\n  ) {}\n\n  private ngOnChanges(changes: SimpleChanges): void {\n    if (this.obs$ && (changes.c8yForPipe || changes.c8yForOf)) {\n      this.unsubscribePaging();\n\n      // only re-rendering  on filtering if all data is already loaded\n      // from the backend\n      const reRender = !this.hasMoreData && !!changes.c8yForPipe && !changes.c8yForOf;\n\n      if (reRender) {\n        this.obs$ = of(this.cachedData);\n      }\n      this.pagingSub = this.obs$\n        .pipe(\n          tap(data => {\n            if (!reRender) {\n              this.cachedData = data;\n            }\n          })\n        )\n        .pipe(src => this.dataPipe(src))\n        .subscribe((data: []) => {\n          this.render(data, reRender);\n        });\n    }\n  }\n\n  private ngOnDestroy(): void {\n    this.unsubscribePaging();\n  }\n\n  private render(data, reRender = false): void {\n    this.vcr.clear();\n\n    data.forEach((item, index) => {\n      const context = {\n        $implicit: item,\n        index,\n        length: this.length,\n        hasMore: this.hasMoreData\n      };\n      this.vcr.createEmbeddedView(this.tpl, context);\n    });\n\n    if (this.shouldUseLoadMoreButton) {\n      this.loadMore = this.createLoadMoreButtonComponent(reRender);\n    }\n  }\n\n  private append(data) {\n    data.forEach(item => {\n      const index = this.shouldUseLoadMoreButton ? this.vcr.length - 1 : this.vcr.length;\n      const context = {\n        $implicit: item,\n        index,\n        length: this.length,\n        hasMore: this.hasMoreData\n      };\n      this.vcr.createEmbeddedView(this.tpl, context, index);\n    });\n  }\n\n  private loadMoreData(data) {\n    if (data.length > 0) {\n      this.append(data);\n    }\n  }\n\n  private createLoadMoreButtonComponent(reRender) {\n    const componentFactory: ComponentFactory<\n      any\n    > = this.componentFactoryResolver.resolveComponentFactory(LoadMoreComponent);\n    const componentRef = this.vcr.createComponent(componentFactory);\n    const instance = componentRef.instance as LoadMoreComponent;\n    instance.paging = this.paging;\n    instance.useIntersection = this.loadMoreMode === 'auto' || this.loadMoreMode === 'hidden';\n    instance.hidden = this.loadMoreMode === 'hidden';\n    instance.maxIterations = this.maxIterations;\n    instance.noMoreDataHint = this.notFoundTemplate;\n    this.pagingSub = instance.onLoad\n      .pipe(\n        tap((data: []) => {\n          this.cachedData = this.cachedData.concat(data);\n        })\n      )\n      .pipe(src => this.dataPipe(src))\n      .subscribe(data => this.loadMoreData(data));\n    if (reRender) {\n      assign(instance, this.loadMore);\n    }\n    return instance;\n  }\n\n  private unsubscribePaging() {\n    if (this.pagingSub) {\n      this.pagingSub.unsubscribe();\n    }\n  }\n}\n","/*\n * Implementation of pure \"Mapping\" pipe based on\n * https://codeburst.io/angular-bad-practices-eab0e594ce92#389b\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'map'\n})\nexport class MapFunctionPipe implements PipeTransform {\n  /*\n   * This will be a universal pipe for array mappings. You may add more\n   * type checkings and runtime checkings to make sure it works correctly everywhere.\n   */\n  transform(value, mappingFunction: (arg: any) => any, thisArg?: any) {\n    return mappingFunction.apply(thisArg || this, Array.isArray(value) ? value : [value]);\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { gettext } from '../i18n/gettext';\n\n@Component({\n  selector: 'c8y-progress-bar',\n  templateUrl: './progress-bar.component.html'\n})\nexport class ProgressBarComponent {\n  @Input() message: string = gettext('Loading…');\n  @Input() progress: number = null;\n}\n","import { NgModule, APP_INITIALIZER, InjectionToken } from '@angular/core';\nimport { CommonModule as NgCommonModule } from '@angular/common';\nimport { DataModule } from '@c8y/ngx-components/api';\nimport { I18nModule } from '../i18n/i18n.module';\nimport { IconDirective, ICONS } from './icon.directive';\nimport { OutletDirective } from './outlet.directive';\nimport { HOOK_OPTIONS, OptionsService } from './options.service';\nimport { UserPreferencesService } from './user-preferences/user-preferences.service';\nimport { HumanizeAppNamePipe } from './humanize-app-name.pipe';\nimport { HumanizePipe } from './humanize.pipe';\nimport { AppStateService } from './ui-state.service';\nimport { TranslateService } from '../i18n/public-api';\nimport { filter, switchMap, startWith, map, distinctUntilChanged } from 'rxjs/operators';\nimport { ShortenUserNamePipe } from './shorten-user-name.pipe';\nimport { ForOfDirective } from './forOf.directive';\nimport { LoadMoreComponent } from './load-more.component';\nimport { MapFunctionPipe } from './map-function.pipe';\nimport { ProgressBarComponent } from './progress-bar.component';\n\nexport function initializeServices(\n  translateService: TranslateService,\n  state: AppStateService,\n  userPreferences: UserPreferencesService\n) {\n  const initialize = () => {\n    const queryStringLanguage = translateService.queryStringLang();\n    const firstLanguage = translateService.firstSupportedLanguage();\n\n    /*\n      The ?lang parameter will prevent the user preference language from being activated\n    */\n    if (queryStringLanguage && translateService.isSupported(queryStringLanguage)) {\n      translateService.switchToLanguage(queryStringLanguage);\n    } else {\n      state.currentUser\n        .pipe(\n          map(user => user && user.userName),\n          filter(u => !!u),\n          distinctUntilChanged(),\n          switchMap(() => userPreferences.get('language')),\n          startWith(firstLanguage),\n          filter(lang => !!lang),\n          distinctUntilChanged()\n        )\n        .subscribe(lang => {\n          translateService.switchToLanguage(lang);\n        });\n    }\n  };\n  return initialize;\n}\n\nexport const ICON_LIST = new InjectionToken('iconList');\n\n/**\n * Commonly used directives, data access and translation. This module is the shared\n * module across all core components. It should be imported by default.\n *\n * @exports IconDirective A directive to set a c8y icon with [c8yIcon]=\"'rocket'\".\n * @exports OutletDirective A directive which allows to set DOM or Angular templates (used for upgrade).\n * @exports I18nModule Translation module.\n * @exports NgCommonModule Angular common module.\n * @exports DataModule The data layer to allow DI with @c8y/client\n * @exports HumanizeAppNamePipe Humanize an application name (e.g. in the app switcher)\n * @exports HumanizePipe Humanize a word. E.g. `device management` gets `Device management`\n * @exports ShortenUserNamePipe Allows a short name. E.g. `Foo Bar` gets `F. Bar`\n * @exports ForOfDirective A forOf directive like ngFor but with load-more function\n * @exports LoadMoreComponent A component to load more data from a certain data-source\n * @exports ProgressBarComponent Displays either defined or undefined progress.\n */\n@NgModule({\n  imports: [NgCommonModule, I18nModule],\n  exports: [\n    IconDirective,\n    OutletDirective,\n    I18nModule,\n    NgCommonModule,\n    HumanizeAppNamePipe,\n    HumanizePipe,\n    ShortenUserNamePipe,\n    ForOfDirective,\n    LoadMoreComponent,\n    MapFunctionPipe,\n    ProgressBarComponent\n  ],\n  declarations: [\n    IconDirective,\n    OutletDirective,\n    HumanizePipe,\n    HumanizeAppNamePipe,\n    ShortenUserNamePipe,\n    ForOfDirective,\n    LoadMoreComponent,\n    MapFunctionPipe,\n    ProgressBarComponent\n  ],\n  entryComponents: [LoadMoreComponent]\n})\nexport class CommonModule {\n  static providers() {\n    return [\n      ...DataModule.providers(),\n      // TODO: maybe we can think of a way to remove this C8Y_APP global\n      { provide: HOOK_OPTIONS, useValue: (window as any).C8Y_APP || {}, multi: true },\n      {\n        provide: APP_INITIALIZER,\n        useFactory: initializeServices,\n        deps: [TranslateService, AppStateService, UserPreferencesService],\n        multi: true\n      },\n      { provide: ICON_LIST, useValue: ICONS, multi: false },\n      ...I18nModule.providers(),\n      UserPreferencesService,\n      OptionsService,\n      AppStateService\n    ];\n  }\n\n  static forRoot() {\n    return {\n      ngModule: CommonModule,\n      providers: CommonModule.providers()\n    };\n  }\n}\n","export interface LoginMessage {\n  message: string;\n  type: string;\n}\n\nexport enum LoginViews {\n  None,\n  Credentials,\n  RecoverPassword,\n  SmsChallenge,\n  ChangePassword,\n  TotpChallenge,\n  TotpSetup\n}\n","import { Component, Input, ViewChild } from '@angular/core';\nimport { ActionBarItem } from './action-bar.model';\nimport { ActionBarService } from './action-bar.service';\n\n@Component({\n  selector: 'c8y-action-bar-item',\n  templateUrl: './action-bar-item.component.html'\n})\nexport class ActionBarItemComponent implements ActionBarItem {\n  @Input() placement: ('left' | 'right' | 'more') = 'left';\n  @Input() priority: number = 0;\n  @Input() itemClass = '';\n  @ViewChild('template', {static: false}) template: any;\n  private viewInitTimeout;\n\n  constructor(private actionBarService: ActionBarService) {}\n\n  ngAfterViewInit() {\n    this.viewInitTimeout = setTimeout(() =>\n      this.actionBarService.add(this as ActionBarItem)\n    );\n  }\n\n  ngOnDestroy() {\n    clearTimeout(this.viewInitTimeout);\n    this.actionBarService.remove(this as ActionBarItem);\n  }\n}\n","import { Component, HostBinding, Input, AfterContentInit } from '@angular/core';\nimport { filter, sortBy } from 'lodash-es';\nimport { ActionBarItem } from './action-bar.model';\n\n@Component({\n  selector: 'c8y-action-bar',\n  templateUrl: './action-bar.component.html',\n  host: { class: 'c8y-ui-action-bar' }\n})\nexport class ActionBarComponent {\n  @Input() @HostBinding('class.navigator-open') navigatorOpen = false;\n  @Input() @HostBinding('class.has-tabs') hasTabs = false;\n  @Input() @HostBinding('class.horizontal-tabs') isTabsHorizontal = false;\n  isPageToolbarExpanded = false;\n  @HostBinding('class.c8y-ui-action-bar') uiActionBar = true;\n  @Input() items: ActionBarItem[] = [];\n\n  @HostBinding() get hidden() {\n    return !(this.items && this.items.length);\n  }\n\n  getSortedItems(placement: 'left' | 'right' | 'more') {\n    return sortBy(filter(this.items, { placement }), this.byPriority);\n  }\n\n  private byPriority(item) {\n    return -item.priority;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { CommonModule } from '../common/common.module';\nimport { ActionBarItemComponent } from './action-bar-item.component';\nimport { ActionBarComponent } from './action-bar.component';\nimport { ActionBarService } from './action-bar.service';\n\n/**\n * The angular module definition for the action bar.\n * @exports ActionBarComponent\n * @exports ActionBarItemComponent\n */\n@NgModule({\n  declarations: [\n    ActionBarComponent,\n    ActionBarItemComponent\n  ],\n  imports: [\n    BsDropdownModule,\n    CommonModule,\n    CollapseModule,\n    RouterModule.forChild([])\n  ],\n  exports: [\n    ActionBarComponent,\n    ActionBarItemComponent\n  ]\n})\nexport class ActionBarModule { }\n","import { Component, Input } from '@angular/core';\nimport { Action } from './action.model';\nimport { sortBy } from 'lodash-es';\n\n@Component({\n  selector: 'c8y-action-outlet',\n  templateUrl: './action-outlet.component.html'\n})\n\nexport class ActionOutletComponent {\n  isPageToolbarExpanded = false;\n  @Input() items: Action[] = [];\n\n  getByPriority() {\n    return sortBy(this.items, this.byPriority);\n  }\n\n  invoke(action) {\n    if (action.action) {\n      action.action.call();\n    }\n  }\n\n  private byPriority(item) {\n    return -item.priority;\n  }\n}\n","import { Component, Input, ViewChild } from '@angular/core';\nimport { Action } from './action.model';\nimport { ActionService } from './action.service';\n\n@Component({\n  selector: 'c8y-action',\n  templateUrl: './action.component.html'\n})\nexport class ActionComponent implements Action {\n  @Input() disabled: boolean = false;\n  @Input() label: string;\n  @Input() priority: number = 0;\n  @Input() icon: string;\n  @ViewChild('template', {static: false}) template: any;\n  action: () => void;\n  private viewInitTimeout;\n\n  constructor(private actionService: ActionService) {}\n\n  ngAfterViewInit() {\n    this.viewInitTimeout = setTimeout(() =>\n      this.actionService.add(this as Action)\n      );\n  }\n\n  ngOnDestroy() {\n    clearTimeout(this.viewInitTimeout);\n    this.actionService.remove(this as Action);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { CommonModule } from '../common/common.module';\nimport { ActionOutletComponent } from './action-outlet.component';\nimport { ActionComponent } from './action.component';\nimport { ActionService } from './action.service';\n\n/**\n * The angular module definition for actions.\n * @exports ActionComponent\n * @exports ActionOutletComponent\n */\n@NgModule({\n  declarations: [\n    ActionOutletComponent,\n    ActionComponent\n  ],\n  imports: [\n    CommonModule,\n    BsDropdownModule,\n    RouterModule.forChild([])\n  ],\n  exports: [\n    ActionOutletComponent,\n    ActionComponent\n  ]\n})\nexport class ActionModule { }\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'c8y-alert-details',\r\n  template: `<ng-content></ng-content>`\r\n})\r\n\r\nexport class AlertDetailsComponent {}\r\n","import { Component, TemplateRef, Attribute, HostBinding } from '@angular/core';\nimport { Alert } from './alert.model';\nimport { AlertService } from './alert.service';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'c8y-alert-outlet',\n  templateUrl: './alert-outlet.component.html'\n})\n\nexport class AlertOutletComponent {\n\n  detailDisplayedAlert: any = {};\n  @HostBinding('class.static') isStatic = false;\n  get alerts(): BehaviorSubject<Alert[]> {\n    return this.alertService.state$;\n  }\n  constructor(\n    @Attribute('position') private position: string,\n    public alertService: AlertService\n  ) {\n    this.isStatic = this.position === 'static';\n  }\n\n  getClass(alert: Alert) {\n    const classes = [];\n    if (alert.type !== 'danger') {\n      classes.push('interact');\n    }\n    classes.push(`alert-${alert.type}`);\n    return classes.join(' ');\n  }\n\n  close(alert) {\n    if (alert.onClose) {\n      alert.onClose();\n    }\n    this.alertService.remove(alert);\n  }\n\n  showDetails(alert) {\n    if (alert.onDetail) {\n      return alert.onDetail();\n    }\n    this.detailDisplayedAlert = Object.assign({}, alert);\n    this.detailDisplayedAlert.mode = 'raw';\n    this.setDetailsContent(alert);\n  }\n\n  setDetailsContent(alert) {\n    if ( this.isTemplateRef(alert.detailedData) || typeof alert.detailedData === 'string' ) {\n      this.detailDisplayedAlert.contents = alert.detailedData;\n    } else {\n      this.detailDisplayedAlert.contents = JSON.stringify(alert.detailedData, null, 2);\n    }\n  }\n\n  hasDetails(alert) {\n    return (alert.detailedData || alert.onDetail);\n  }\n\n  closeDetails() {\n    this.detailDisplayedAlert = {};\n  }\n\n  isDetailsShow(alert) {\n    return this.alertService.areSame(alert, this.detailDisplayedAlert);\n  }\n\n  isTemplateRef(value): boolean {\n    return value instanceof TemplateRef;\n  }\n\n  template(content): any {\n    return this.isTemplateRef(content) ? content : undefined;\n  }\n}\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'c8y-alert-text',\r\n  template: `<ng-content></ng-content>`\r\n})\r\n\r\nexport class AlertTextComponent {}\r\n","import { Component, OnDestroy, Input, ViewChild, ContentChild } from '@angular/core';\nimport { Alert } from './alert.model';\nimport { AlertService } from './alert.service';\nimport { AlertDetailsComponent } from './alert-details.component';\n\n@Component({\n  selector: 'c8y-alert',\n  templateUrl: './alert.component.html'\n})\n\nexport class AlertComponent implements OnDestroy, Alert {\n\n  @Input() type: 'success' | 'warning' | 'danger' | 'info' | 'system';\n  @Input() onDetail: () => void;\n  @Input() onClose: () => void;\n  @ViewChild('detailedData', {static: false}) detailedData;\n  @ViewChild('text', {static: false}) text;\n  @ContentChild(AlertDetailsComponent, {static: false}) containDetailsComponent: AlertDetailsComponent;\n  private viewInitTimeout;\n\n  constructor(public alertService: AlertService) {}\n\n  ngAfterViewInit() {\n    if (!this.containDetailsComponent) {\n      this.detailedData = null;\n    }\n    this.viewInitTimeout = setTimeout(() =>\n      this.alertService.add(this)\n    );\n  }\n\n  ngOnDestroy() {\n    clearTimeout(this.viewInitTimeout);\n    this.alertService.remove(this);\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { AlertDetailsComponent } from './alert-details.component';\r\nimport { AlertOutletComponent } from './alert-outlet.component';\r\nimport { AlertTextComponent } from './alert-text.component';\r\nimport { AlertComponent } from './alert.component';\r\nimport { AlertService } from './alert.service';\r\nimport { CommonModule } from '../common/common.module';\r\n\r\n/**\r\n * The angular module definition for alert.\r\n * @exports AlertComponent\r\n * @exports AlertOutletComponent\r\n * @exports AlertDetailsComponent\r\n * @exports AlertTextComponent\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    AlertOutletComponent,\r\n    AlertComponent,\r\n    AlertDetailsComponent,\r\n    AlertTextComponent\r\n  ],\r\n  declarations: [\r\n    AlertOutletComponent,\r\n    AlertComponent,\r\n    AlertDetailsComponent,\r\n    AlertTextComponent\r\n  ]\r\n})\r\nexport class AlertModule { }\r\n","import { Component, Input, ViewChild } from '@angular/core';\nimport { BreadcrumbItem } from './breadcrumb.model';\n\n@Component({\n  selector: 'c8y-breadcrumb-item',\n  templateUrl: './breadcrumb-item.component.html'\n})\nexport class BreadcrumbItemComponent implements BreadcrumbItem {\n  @Input() icon: string;\n  @Input() translate: boolean;\n  @Input() label: string;\n  @Input() path: string;\n  @ViewChild('template', {static: false}) template: any;\n}\n","import { Component, Input } from '@angular/core';\nimport { Breadcrumb } from './breadcrumb.model';\n\n@Component({\n  selector: 'c8y-breadcrumb-outlet',\n  templateUrl: './breadcrumb-outlet.component.html'\n})\nexport class BreadcrumbOutletComponent {\n  showAll = false;\n  @Input() breadcrumbs: Breadcrumb[] = [];\n\n  /**\n   * For upgrade only. Old angularjs routes start with hash, new ones not.\n   */\n  normalizePath(path) {\n    return path.replace(/^#\\/?/, '');\n  }\n}\n","import { Component, ContentChildren, QueryList } from '@angular/core';\nimport { Breadcrumb, BreadcrumbItem } from './breadcrumb.model';\nimport { BreadcrumbService } from './breadcrumb.service';\nimport { BreadcrumbItemComponent } from './breadcrumb-item.component';\n\n@Component({\n  selector: 'c8y-breadcrumb',\n  templateUrl: './breadcrumb.component.html'\n})\nexport class BreadcrumbComponent implements Breadcrumb {\n  items: BreadcrumbItem[];\n  @ContentChildren(BreadcrumbItemComponent) private contentChildItems: QueryList<BreadcrumbItem>;\n  private viewInitTimeout;\n\n  constructor(private breadcrumbService: BreadcrumbService) {}\n\n  ngAfterViewInit() {\n    this.items = this.contentChildItems.toArray();\n    this.viewInitTimeout = setTimeout(() =>\n      this.breadcrumbService.add(this as Breadcrumb)\n    );\n  }\n\n  ngOnDestroy() {\n    clearTimeout(this.viewInitTimeout);\n    this.breadcrumbService.remove(this as Breadcrumb);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { CommonModule } from '../common/common.module';\nimport { BreadcrumbItemComponent } from './breadcrumb-item.component';\nimport { BreadcrumbOutletComponent } from './breadcrumb-outlet.component';\nimport { BreadcrumbComponent } from './breadcrumb.component';\nimport { BreadcrumbService } from './breadcrumb.service';\n\n/**\n * The angular module definition for breadcrumbs.\n * @exports BreadcrumbComponent\n * @exports BreadcrumbItemComponent\n * @exports BreadcrumbOutletComponent\n */\n@NgModule({\n  declarations: [\n    BreadcrumbComponent,\n    BreadcrumbItemComponent,\n    BreadcrumbOutletComponent\n  ],\n  imports: [\n    RouterModule.forChild([]),\n    CommonModule,\n    TooltipModule.forRoot()\n  ],\n  exports: [\n    BreadcrumbComponent,\n    BreadcrumbItemComponent,\n    BreadcrumbOutletComponent\n  ]\n})\nexport class BreadcrumbModule { }\n","import { Component, Input, ViewChild, ElementRef } from '@angular/core';\nimport { Search } from './search.model';\nimport { sortBy } from 'lodash';\nimport { AlertService } from '../alert/alert.service';\nimport { Alert } from '../alert/alert.model';\n\n@Component({\n  selector: 'c8y-search-outlet',\n  templateUrl: './search-outlet.component.html'\n})\nexport class SearchOutletComponent {\n  @Input() search: Search[] = [];\n\n  constructor(private alertService: AlertService) {}\n\n  openSearch() {\n    setTimeout(() => this.focusInputBox(), 100);\n  }\n\n  getByPriority() {\n    return sortBy(this.search, this.byPriority);\n  }\n\n  closeDropdown(dropdown) {\n    dropdown.hide();\n  }\n\n  verifyNotEmpty(term) {\n    if (!term || term === '') {\n      this.alertService.add({ text: 'Type something to execute a search.', type: 'warning' });\n    }\n  }\n\n  private byPriority(item) {\n    return -item.priority;\n  }\n\n  private focusInputBox() {\n    const elementToFocus: any = document.querySelector('#search-header-menu input');\n    if (elementToFocus) {\n      elementToFocus.focus();\n    }\n  }\n}\n","import { Injectable, InjectionToken, Injector } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { ExtensionPoint, fromTrigger, sortByPriority, stateToFactory } from '../common/extension-hooks';\nimport { StateService } from '../common/state-service.abstract';\nimport { Search } from './search.model';\n\n/**\n * A hook to use for Multi Provider extension.\n */\nexport const HOOK_SEARCH = new InjectionToken('SearchFactory');\n\n/**\n * A service which defines the dearch function.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService extends StateService implements ExtensionPoint<Search> {\n  items$: Observable<Search[]>;\n  readonly refreshTrigger = new Subject();\n  protected state$ = new BehaviorSubject<Set<Search>>(new Set<Search>());\n\n  constructor(\n    private injector: Injector,\n    router: Router\n  ) {\n    super();\n    this.items$ = fromTrigger(router, this.refreshTrigger, [\n      () => this.injector.get(HOOK_SEARCH, []),\n      stateToFactory(this.state$)\n    ]).pipe(\n      map((items: Search[]) => sortByPriority(items)),\n      shareReplay(1)\n    );\n  }\n\n  /**\n   * Refresh the extension factories\n   */\n  refresh() {\n    this.refreshTrigger.next(1);\n  }\n\n  /**\n   * Returns the current state.\n   * @readonly\n   * @returns The current set of actions.\n   */\n  get state() {\n    return this.state$.value;\n  }\n\n  /**\n   * Adds a new item to the search in the header.\n   * @param item The item to add.\n   */\n  add(item: Search) {\n    this.state.add(item);\n    this.emitNewState();\n  }\n\n  /**\n   * Removes an search from the header.\n   * @param item The item to remove.\n   */\n  remove(item: Search) {\n    this.state.delete(item);\n    this.emitNewState();\n  }\n}\n","import { Component, Input, Output, ViewChild, EventEmitter } from '@angular/core';\nimport { Search } from './search.model';\nimport { SearchService } from './search.service';\n\n@Component({\n  selector: 'c8y-search',\n  templateUrl: './search.component.html'\n})\nexport class SearchComponent implements Search {\n  @Input() name: string;\n  @Input() icon: string = 'search';\n  @Input() priority: number = 0;\n  @ViewChild('template', {static: false}) template: any;\n  @Output() search = new EventEmitter<Search>();\n  @Input() term: string = '';\n\n  private viewInitTimeout;\n\n  constructor(private searchService: SearchService) { }\n\n  onSearch() {\n    this.search.emit(this);\n  }\n\n  ngAfterViewInit() {\n    this.template = undefined;\n    this.viewInitTimeout = setTimeout(() => this.searchService.add(this as Search));\n  }\n\n  ngOnDestroy() {\n    clearTimeout(this.viewInitTimeout);\n    this.searchService.remove(this as Search);\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  Input,\n  SimpleChanges,\n  ViewChild,\n  SecurityContext\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'c8y-highlight',\n  template: '<span [innerHTML]=\"highlightedText\"></span>'\n})\nexport class HighlightComponent {\n  @ViewChild('text', { read: ElementRef, static: true })\n  container: ElementRef;\n\n  @Input()\n  pattern: string = '';\n\n  @Input()\n  text: string = '';\n\n  @Input()\n  elementClass: string = 'text-info';\n\n  highlightedText: string = '';\n\n  constructor(private domSanitizer: DomSanitizer) {}\n\n  ngOnChanges(): void {\n    let text = this.text;\n    if (this.pattern && this.pattern !== '') {\n      text = this.text.replace(new RegExp(this.pattern, 'i'), `<strong class=\"${this.elementClass}\">$&</strong>`);\n    }\n    this.highlightedText = this.domSanitizer.sanitize(SecurityContext.HTML, text);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { CommonModule } from '../common/common.module';\nimport { SearchOutletComponent } from './search-outlet.component';\nimport { SearchComponent } from './search.component';\nimport { SearchService } from './search.service';\nimport { FormsModule } from '@angular/forms';\nimport { HighlightComponent } from './highlight.component';\n\n/**\n * The angular module definition for the search.\n * @exports SearchComponent\n * @exports SearchOutletComponent\n * @exports HighlightComponent A component to highlight search results.\n */\n@NgModule({\n  declarations: [\n    SearchOutletComponent,\n    SearchComponent,\n    HighlightComponent\n  ],\n  imports: [\n    FormsModule,\n    BsDropdownModule,\n    CommonModule,\n    RouterModule.forChild([])\n  ],\n  exports: [\n    SearchOutletComponent,\n    SearchComponent,\n    HighlightComponent\n  ]\n})\nexport class SearchModule { }\n","import { Component, Input, OnDestroy } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { StatusType, Status, statusIcons, statusAlert } from '../common/status.model';\n\nexport interface ILabels {\n  ok?: string;\n  cancel?: string;\n}\n\n@Component({\n  selector: 'c8y-confirm-modal',\n  templateUrl: './modal-confirm.component.html'\n})\nexport class ConfirmModalComponent implements OnDestroy {\n  result: Promise<boolean>;\n  dismiss: () => void;\n  close: () => void;\n  @Input() title: string;\n  @Input() body: string;\n  @Input() status: StatusType = Status.INFO;\n  @Input() set labels(labels: ILabels) {\n    const { ok = 'OK', cancel = 'Cancel' } = labels || {};\n    this._labels = { ok, cancel };\n  }\n\n  get labels(): ILabels { return this._labels; }\n\n  get classIcon() {\n    return `fa-${statusIcons[this.status]}`;\n  }\n\n  get classAlert() {\n    return statusAlert[this.status];\n  }\n\n  private _labels: ILabels;\n\n  constructor(private modal: BsModalRef) {\n    this._labels = {\n      ok: 'OK',\n      cancel: 'Cancel'\n    };\n    this.result = new Promise((resolve, reject) => {\n      this.dismiss = () => {\n        reject();\n        this.modal.hide();\n      };\n      this.close = () => {\n        resolve(true);\n        this.modal.hide();\n      };\n    });\n  }\n\n  ngOnDestroy() {\n    this.dismiss();\n  }\n}\n","import { Component, Input, Optional, Output, EventEmitter, HostListener } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { gettext } from '../i18n/gettext';\nimport { isEmpty } from 'lodash';\n\nexport interface ILabels {\n  ok?: string;\n  cancel?: string;\n}\n\n/**\n * C8y modal component.\n * ## Example:\n *\n * Creating custom modal:\n * ```typescript\n *  import { Component } from \"@angular/core\";\n *  import { Subject } from 'rxjs';\n *\n * @Component({\n *  selector: \"my-modal\",\n *  template: `\n *    <c8y-modal title=\"CustomTitle\"\n *      (onClose)=\"onClose($event)\"\n *      (onDismiss)=\"onDismiss($event)\"\n *      [labels]=\"labels\"\n *      [disabled]=\"true\" <- will disable ok button\n *      >\n *        <span>I am body of modal</span>\n *        <span>For simple string use body=\"string\"</span>\n *    </c8y-modal>`\n * })\n *\n * export class MyModalComponent {\n *\n *  closeSubject: Subject<boolean> = new Subject();\n *  labels : ILabels = {ok: \"customOK\", cancel: \"customCancel\"};\n *\n *  onDismiss(event){\n *    this.closeSubject.next(false);\n *  }\n *\n *  onClose(event) {\n *    this.closeSubject.next(true);\n *  }\n * }\n * ```\n * Showing modal:\n * ```typescript\n * import { BsModalService } from \"ngx-bootstrap/modal\";\n *\n * constructor(\n *  public bsModalService: BsModalService,\n * ) {}\n *\n * showModal() {\n *  const modalRef = this.bsModalService.show(MyModalComponent);\n *  modalRef.content.closeSubject.subscribe(result => {\n *    console.log('results:', result);\n *  });\n * }\n * ```\n */\n@Component({\n  selector: 'c8y-modal',\n  templateUrl: './modal.component.html',\n})\n\nexport class ModalComponent {\n  @Output() onDismiss: EventEmitter<boolean> = new EventEmitter();\n  @Output() onClose: EventEmitter<boolean> = new EventEmitter();\n  @Input() disabled = false;\n  @Input() close: () => void;\n  @Input() dismiss: () => void;\n  @Input() title: string;\n  @Input() body: string;\n  @Input() customFooter: boolean = false;\n  @Input() set labels({ok, cancel}: ILabels) {\n    this._labels = {ok , cancel};\n  }\n\n  get labels(): ILabels { return this._labels; }\n\n  private _labels: ILabels =  { ok: gettext('OK'), cancel: gettext('Cancel') };\n\n  constructor(@Optional() private modal: BsModalRef) {}\n\n  _dismiss() {\n    let fn = this.dismiss;\n    if (!fn && this.modal) { fn = () => this.modal.hide(); }\n    if (fn) { fn(); }\n    this.onDismiss.emit(true);\n  }\n\n  _close() {\n    let fn = this.close;\n    if (!fn && this.modal) { fn = () => this.modal.hide(); }\n    if (fn) { fn(); }\n    this.onClose.emit(true);\n  }\n\n  @HostListener('document:keydown.enter', ['$event']) onEnterKeyDown(event: KeyboardEvent) {\n    const hasOnlyOneButton = isEmpty(this.labels.ok) !== isEmpty(this.labels.cancel);\n    const isCancelClickable = !this.customFooter && this.labels.cancel;\n    const isOkClickable = !this.customFooter && !this.disabled && this.labels.ok;\n    if (hasOnlyOneButton  && isCancelClickable) {\n      this._dismiss();\n    }\n    if (hasOnlyOneButton  && isOkClickable) {\n      this._close();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { ConfirmModalComponent } from './modal-confirm.component';\nimport { StatusType, Status } from '../common/status.model';\nimport { gettext } from '../i18n/gettext';\n\n/**\n * Service to shiow a modal.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModalService {\n\n  constructor(private modalService: BsModalService) {}\n\n  /**\n   * Shows a quick confirm message modal.\n   * @param title The title of that modal.\n   * @param body The text body to display.\n   * @param status The status.\n   * @param labels The labels to use. Default: { ok: 'Confirm', cancel: 'Cancel'}\n   */\n  async confirm(title: string, body: string, status: StatusType = Status.INFO,  labels: any = {}) {\n    const modalLabels = {ok: labels.ok || gettext('Confirm'), cancel: labels.cancel || gettext('Cancel')};\n    const modalRef = this.modalService.show(ConfirmModalComponent, {initialState: {title, body, labels: modalLabels, status}});\n    return await modalRef.content.result;\n  }\n\n  /**\n   * Shows a quick acknowledge message modal.\n   * @param title The title of that modal.\n   * @param body The text body to display.\n   * @param status The status.\n   * @param acknowledgeLabel The label to use.\n   */\n  async acknowledge(title: string, body: string, status: StatusType = Status.INFO, acknowledgeLabel: string = gettext('Confirm') ) {\n    const labels = {ok: acknowledgeLabel, cancel: null};\n    const modalRef = this.modalService.show(ConfirmModalComponent, {initialState: {title, body, labels, status}});\n    return await modalRef.content.result;\n  }\n}\n","import { Component, Input, ViewChild, OnDestroy } from '@angular/core';\nimport { PopoverDirective } from 'ngx-bootstrap/popover';\nimport { StatusType } from '../common/status.model';\nimport { gettext } from '../i18n/gettext';\n\nexport interface PopoverConfirmButtons {\n  /**\n   * The label of the button\n   */\n  label: string;\n  /**\n   * Which action to perform.\n   */\n  action: () => Promise<any>;\n  /**\n   * The status class attached to the button.\n   */\n  status?: StatusType | 'primary';\n}\n\n/**\n * A component to show a popover right next to the\n * user action. Add this component where the confirm modal\n * should be shown and toggle isOpen to display it. You\n * can use `await isShow()` to wait for a result on the\n * click action.\n */\n@Component({\n  selector: 'c8y-popover-confirm',\n  templateUrl: './popover-confirm.component.html'\n})\nexport class PopoverConfirmComponent {\n  @ViewChild(PopoverDirective, {static: false}) popover: PopoverDirective;\n  @Input() buttons: PopoverConfirmButtons[] = [{ label: gettext('cancel'), action: () => Promise.reject()}];\n  @Input() message: string;\n  @Input() title: string;\n  @Input() isOpen = false;\n  @Input() containerClass = '';\n  @Input() placement = 'right';\n  @Input() outsideClick = false;\n\n  click: (action: () => Promise<any>) => void;\n\n  /**\n   * Show the popover. Wait until an action is performed on it.\n   */\n  async show(buttons?: PopoverConfirmButtons[]) {\n    this.buttons = buttons || this.buttons;\n    this.isOpen = true;\n    let result;\n    try {\n      result = await new Promise((resolve, reject) => {\n        return this.click = (action: () => Promise<any>) => action().then(resolve).catch(reject);\n      });\n    } catch (ex) {\n      throw(ex);\n    } finally {\n      this.isOpen = false;\n    }\n    return result;\n  }\n\n  buttonStatus(status) {\n    if (status) {\n      return `btn-${status}`;\n    }\n    return 'btn-link btn-clean';\n  }\n\n  handleOutsideClick() {\n    this.click(() => Promise.reject());\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ModalModule as BsModalModule } from 'ngx-bootstrap/modal';\nimport { ConfirmModalComponent } from './modal-confirm.component';\nimport { ModalComponent } from './modal.component';\nimport { ModalService } from './modal.service';\nimport { CommonModule } from '../common/common.module';\nimport { PopoverConfirmComponent } from './popover-confirm.component';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\n\n/**\n * The angular module definition for modal.\n * @exports ConfirmModalComponent\n * @exports ModalComponent\n * @exports PopoverConfirmComponent\n */\n@NgModule({\n  imports: [\n    BsModalModule.forRoot(),\n    CommonModule,\n    PopoverModule.forRoot()\n  ],\n  exports: [\n    ConfirmModalComponent,\n    ModalComponent,\n    PopoverConfirmComponent\n  ],\n  declarations: [\n    ConfirmModalComponent,\n    ModalComponent,\n    PopoverConfirmComponent\n  ],\n  providers: [\n    ModalService\n  ],\n  entryComponents: [\n    ConfirmModalComponent\n  ]\n})\nexport class ModalModule { }\n","import { Injectable } from '@angular/core';\nimport { StateService } from '../common/state-service.abstract';\nimport { BehaviorSubject } from 'rxjs';\nimport { UserMenuItem } from './user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserMenuService extends StateService {\n  state$: BehaviorSubject<any> = new BehaviorSubject<any>({\n    userMenuItems: new Set<UserMenuItem>()\n  });\n\n  /**\n   * Returns the current state.\n   * @readonly\n   * @returns The current set of actions.\n   */\n  get state() {\n    return this.state$.value;\n  }\n\n  /**\n   * Adds a new item to the search in the header.\n   * @param item The item to add.\n   */\n  add(item: UserMenuItem) {\n    this.state.userMenuItems.add(item);\n    this.emitNewState();\n  }\n\n  /**\n   * Removes an search from the header.\n   * @param item The item to remove.\n   */\n  remove(item: UserMenuItem) {\n    this.state.userMenuItems.delete(item);\n    this.emitNewState();\n  }\n}\n","import { Component, Input, ViewChild, EventEmitter, Output } from '@angular/core';\nimport { UserMenuItem } from './user.model';\nimport { UserMenuService } from './user-menu.service';\n\n@Component({\n  selector: 'c8y-user-menu-item',\n  templateUrl: './user-menu-item.component.html'\n})\nexport class UserMenuItemComponent implements UserMenuItem  {\n  @Input()\n  icon: string;\n  @Input()\n  label: string;\n  @Input()\n  link: string;\n  @Input()\n  target: string;\n  @Input()\n  priority = 0;\n  @ViewChild('template', {static: false}) template: any;\n\n  @Output()\n  click = new EventEmitter<UserMenuItem>();\n  private viewInitTimeout;\n\n  constructor(private userService: UserMenuService) { }\n\n  ngAfterViewInit() {\n    this.viewInitTimeout = setTimeout(() =>\n      this.userService.add(this as UserMenuItem)\n    );\n  }\n\n  ngOnDestroy() {\n    clearTimeout(this.viewInitTimeout);\n    this.userService.remove(this as UserMenuItem);\n  }\n\n  onClick() {\n    this.click.emit(this);\n  }\n}\n","import { Component } from '@angular/core';\nimport { BasicAuth, FetchClient, ICredentials, IUser, UserService } from '@c8y/client';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { AlertService } from '../alert/alert.service';\nimport { AppStateService } from '../common/ui-state.service';\nimport { UserPreferencesService } from '../common/user-preferences/user-preferences.service';\nimport { gettext } from '../i18n/gettext';\nimport { TranslateService } from '../i18n/translate.service';\nimport { Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\n@Component({\n  selector: 'c8y-user-edit-modal',\n  templateUrl: './user-edit-modal.component.html'\n})\nexport class UserEditModalComponent {\n  currentUser: IUser;\n  lang: string;\n  changedLang: string;\n  loading = false;\n\n  constructor(\n    public modal: BsModalRef,\n    public user: UserService,\n    public ui: AppStateService,\n    private auth: BasicAuth,\n    private client: FetchClient,\n    private alert: AlertService,\n    private translate: TranslateService,\n    private userPreferences: UserPreferencesService,\n    private modalService: BsModalService\n  ) {\n    this.lang = this.ui.state.lang;\n    this.modalService.onHide.pipe(take(1)).subscribe(( reason: string ) => {\n      if (reason !== null && this.changedLang !== undefined) {\n        this.translate.switchToLanguage(this.lang);\n      }\n    });\n  }\n\n  onDismiss() {\n    if (this.changedLang !== undefined) {\n      this.translate.switchToLanguage(this.lang);\n    }\n    this.modal.hide();\n  }\n\n  onLanguage(lang) {\n    this.changedLang = lang;\n    this.translate.switchToLanguage(this.changedLang);\n  }\n\n  async updateAndClose(user) {\n    this.loading = true;\n    try {\n      await this.user.updateCurrent(user);\n      if (user.password) {\n        this.updateCredentials(user.password);\n      }\n      const currentUserResult = await this.user.current();\n      this.ui.currentUser.next(currentUserResult.data);\n      if (this.changedLang && this.changedLang !== this.lang) {\n        await this.persistLanguage(this.changedLang);\n      }\n      this.modal.hide();\n      this.alert.success(gettext('User saved.'));\n    } catch (e) {\n      this.alert.addServerFailure(e);\n    } finally {\n      this.loading = false;\n    }\n  }\n\n  async persistLanguage(lang) {\n    this.translate.saveInLocalStorage(lang);\n    this.userPreferences.set('language', lang);\n  }\n\n  private updateCredentials(password: string) {\n    const newCredentials: ICredentials = {\n      password,\n      user: this.ui.currentUser.value.id,\n      tenant: this.client.tenant\n    };\n    this.auth.updateCredentials(newCredentials);\n  }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport {\n  FetchClient,\n  BasicAuth,\n  ICredentials,\n  SystemOptionsService,\n  Realtime,\n  UserService,\n  TenantService,\n  IAuthentication,\n  CookieAuth\n} from '@c8y/client';\nimport { AppStateService } from '../common/ui-state.service';\nimport { AlertService } from '../alert/alert.service';\nimport { gettext } from '../i18n/gettext';\nimport { ApiService } from '@c8y/ngx-components/api';\nimport { switchMap } from 'rxjs/operators';\nimport { EMPTY } from 'rxjs';\nimport { LocationStrategy } from '@angular/common';\n\n/**\n * Service to manage the login.\n */\n@Injectable()\nexport class LoginService {\n  rememberMe: boolean = false;\n  TOKEN_KEY: string = '_tcy8';\n  TFATOKEN_KEY: string = 'TFAToken';\n  OAUTH2_INTERNAL_TYPE: string = 'OAUTH2_INTERNAL';\n  loginMode: any;\n  oauthOptions: any;\n  isFirstLogin = true;\n\n  // tslint:disable:max-line-length\n  ERROR_MESSAGES = {\n    minlength: gettext('Password must have at least 8 characters and no more than 32.'),\n    password_missmatch: gettext('Password confirmation does not match.'),\n    maxlength: gettext('Password must have at least 8 characters and no more than 32.'),\n    password_strength: gettext(\n      'Your password is not strong enough. Please include numbers, lower and upper case characters'\n    ),\n    remote_error: gettext('Server error occurred.'),\n    email: gettext('Invalid email address.'),\n    password_change: gettext('Your password is expired. Please set a new password.'),\n    password_reset_token_expired: gettext(\n      'Password reset link expired. Please enter your email address to receive a new one.'\n    ),\n    tfa_pin_invalid: gettext('The code you entered is invalid. Please try again.'),\n    pattern_phonenumber: gettext(\n      'Invalid phone number format. Only digits, spaces, slashes (\"/\") and dashes (\"-\") allowed.'\n    ),\n    pattern_newPassword: gettext(\n      'Password must have at least 8 characters and no more than 32 and can only contain letters, numbers and following symbols: `~!@#$%^&*()_|+-=?;:\\'\",.<>{}[]\\\\/'\n    ),\n    international_number_required: gettext(\n      'International phone number required, in the format +49 9 876 543 210.'\n    ),\n    phone_number_error: gettext('Could not update phone number.'),\n    pinAlreadySent: gettext(\n      'The verification code was already sent. For a new verification code, please click on the link above.'\n    ),\n    passwordConfirm: gettext('Password confirmation does not match.'),\n    tfaExpired: gettext('Two-factor authentication token expired.')\n  };\n  // tslint:enable:max-line-length\n\n  private SUCCESS_MESSAGES = {\n    password_changed: gettext('Password changed. You can now log in using new password.'),\n    password_reset_requested: gettext(\n      'Password reset request has been sent. Please check your email.'\n    ),\n    resend_sms: gettext('Verification code SMS resent.')\n  };\n\n  private passwordStrengthSetting = {\n    enforcePasswordStrength: false,\n    greenMinLength: 0\n  };\n\n  private localhostRegExp = new RegExp('localhost');\n  private localhostIpRegExp = new RegExp('127.0.0.1');\n  private showTenantRegExp = new RegExp('showTenant');\n\n  constructor(\n    private client: FetchClient,\n    private basicAuth: BasicAuth,\n    private cookieAuth: CookieAuth,\n    private systemOptions: SystemOptionsService,\n    private ui: AppStateService,\n    private user: UserService,\n    private tenant: TenantService,\n    private realtime: Realtime,\n    private alert: AlertService,\n    private api: ApiService,\n    @Optional() private location: LocationStrategy\n  ) {\n    this.autoLogout();\n    this.initLoginOptions();\n  }\n\n  /**\n   * Returns the current tenant.\n   * @return The tenant name.\n   */\n  getTenant() {\n    return this.client.tenant;\n  }\n\n  initLoginOptions() {\n    const loginOptions = this.ui.state.loginOptions || [];\n    const isOAuth2 = ({ type, grantType }) =>\n      type === 'OAUTH2' && grantType === 'AUTHORIZATION_CODE';\n    this.loginMode = loginOptions.find(({ type }) => type === 'OAUTH2_INTERNAL') ||\n      loginOptions.find(({ type }) => type === 'BASIC') ||\n      loginOptions.find(isOAuth2) || { type: 'BASIC' };\n    this.oauthOptions = loginOptions.find(isOAuth2) || {};\n  }\n\n  redirectToOauth() {\n    const { initRequest } = this.oauthOptions;\n    const fullPath = (this.location ? (this.location as any)._platformLocation : window).location\n      .href;\n    const redirectUrl = encodeURIComponent(fullPath);\n    const originUriParam = `${initRequest.includes('?') ? '&' : '?'}originUri=${redirectUrl}`;\n    window.location.href = `${initRequest}${originUriParam}`;\n  }\n\n  autoLogout() {\n    const errorPattern = /invalid\\scredentials.*pin.*generate/i;\n    const isTfaExpired = data =>\n      data && typeof data.message === 'string' && errorPattern.test(data.message);\n    this.ui.currentUser\n      .pipe(\n        switchMap(u =>\n          u ? this.api.hookResponse(({ response }) => response.status === 401) : EMPTY\n        )\n      )\n      .subscribe(async (apiCall: any) => {\n        const { response } = apiCall;\n        let willLogout = false;\n        if (isTfaExpired(response.data)) {\n          willLogout = true;\n        } else {\n          if (typeof response.json === 'function') {\n            const data = await response.clone().json();\n            if (isTfaExpired(data)) {\n              willLogout = true;\n            }\n          }\n        }\n        if (willLogout) {\n          this.logout(false);\n          setTimeout(() => this.alert.danger(this.ERROR_MESSAGES.tfaExpired), 500);\n        }\n      });\n  }\n\n  /**\n   * Checks the password for the min length.\n   * @return The min length or undefined if not configured.\n   */\n  async getGreenMinLength() {\n    if (!this.passwordStrengthSetting.greenMinLength) {\n      try {\n        const { data } = await this.systemOptions.detail({\n          category: 'password',\n          key: 'green.min-length'\n        });\n        this.passwordStrengthSetting.greenMinLength = Number(data.value);\n      } catch (e) {\n        // do nothing\n      }\n      return this.passwordStrengthSetting.greenMinLength;\n    }\n  }\n\n  /**\n   * Checks if password strength is enforced.\n   * @return true if enforced.\n   */\n  async getEnforcePasswordStrength() {\n    if (!this.passwordStrengthSetting.enforcePasswordStrength) {\n      try {\n        const { data } = await this.systemOptions.detail({\n          category: 'password',\n          key: 'enforce.strength'\n        });\n        this.passwordStrengthSetting.enforcePasswordStrength = data.value === 'true';\n      } catch (e) {\n        // do nothing\n      }\n    }\n    return this.passwordStrengthSetting.enforcePasswordStrength;\n  }\n\n  /**\n   * Clears all backend errors.\n   */\n  cleanMessages() {\n    this.alert.clearAll();\n  }\n\n  /**\n   * Adds a new success message\n   * @param successKey The key of the success message as used in SUCCESS_MESSAGES\n   */\n  addSuccessMessage(successKey: string) {\n    const successMessage = this.SUCCESS_MESSAGES[successKey];\n    if (successMessage) {\n      this.alert.add({\n        text: successMessage,\n        type: 'success',\n        timeout: 0\n      });\n    }\n  }\n\n  /**\n   * Returns the current strategy. Defaults to cookie, if a token\n   * is found in local or session storage we switch to basic auth.\n   * @returns The current auth strategy.\n   */\n  getAuthStrategy(): IAuthentication {\n    let authStrategy = this.cookieAuth as IAuthentication;\n    const token: string =\n      localStorage.getItem(this.TOKEN_KEY) || sessionStorage.getItem(this.TOKEN_KEY);\n    const tfa: string =\n      localStorage.getItem(this.TFATOKEN_KEY) || sessionStorage.getItem(this.TFATOKEN_KEY);\n    if (token) {\n      authStrategy = this.basicAuth;\n      this.setCredentials({ token, tfa }, this.basicAuth);\n    }\n    return authStrategy;\n  }\n\n  /**\n   * Forces the use of basic auth as strategy with this credentials.\n   * @param credentials The credentials to use.\n   */\n  useBasicAuth(credentials: ICredentials) {\n    this.setCredentials(credentials, this.basicAuth);\n    return this.basicAuth;\n  }\n\n  /**\n   * Tries to login a user with the given credentials.\n   * If successful, the current tenant and user is set. If not an error\n   * is thrown. It also verifies if the user is allowed to open the\n   * current app.\n   * @param auth The authentication strategy used.\n   * @param credentials The credentials to try to login.\n   */\n  async login(auth: IAuthentication = this.getAuthStrategy(), credentials?: ICredentials) {\n    this.client.setAuth(auth);\n\n    const tenantRes = await this.tenant.current();\n    const tenant = tenantRes.data;\n\n    if (await this.switchLoginMode(credentials)) {\n      auth = this.cookieAuth;\n    }\n\n    const userRes = await this.user.current();\n    const user = userRes.data;\n    await this.verifyAppAccess();\n\n    const token = this.setCredentials(\n      {\n        tenant: tenant.name,\n        user: user.userName\n      },\n      auth\n    );\n\n    if (token) {\n      this.storeBasicAuthToken(token);\n    }\n\n    await this.authFulfilled(tenant, user);\n  }\n\n  /**\n   * Saves tenant and user to the app state\n   * @param tenant The current tenant object.\n   * @param user The current user objet\n   */\n  async authFulfilled(tenant?, user?) {\n    if (!tenant) {\n      const { data } = await this.tenant.current();\n      tenant = data;\n      this.client.tenant = tenant.name;\n    }\n\n    if (!user) {\n      const { data } = await this.user.current();\n      user = data;\n    }\n\n    this.ui.currentUser.next(user);\n    this.ui.currentTenant.next(tenant);\n  }\n\n  /**\n   * Switch the login mode to CookieAuth if the\n   * user has configured to use it in loginOptions.\n   * @param credentials The credentials for that login\n   */\n  async switchLoginMode(credentials?: ICredentials) {\n    const isPasswordGrantLogin = this.isPasswordGrantLogin(credentials);\n    if (isPasswordGrantLogin && credentials) {\n      const params = new URLSearchParams({\n        grant_type: 'PASSWORD',\n        username: credentials.user,\n        password: credentials.password,\n        tfa_code: credentials.tfa\n      });\n      const urlParams = new URLSearchParams(this.loginMode.initRequest.split('?').pop());\n      credentials.tenant = urlParams.get('tenant_id');\n      const res = await this.client.fetch(`tenant/oauth?${urlParams.toString()}`, {\n        method: 'POST',\n        body: params.toString(),\n        headers: {\n          'content-type': 'application/x-www-form-urlencoded;charset=UTF-8'\n        }\n      });\n      if (!(res as Response).ok) {\n        throw { res };\n      }\n      this.client.setAuth(this.cookieAuth);\n      this.cleanLocalStorage();\n      this.basicAuth.logout();\n    }\n    return isPasswordGrantLogin;\n  }\n\n  isPasswordGrantLogin(credentials?: ICredentials) {\n    const isSupportUser = credentials && credentials.user.includes('$');\n    return !!(\n      !isSupportUser &&\n      this.loginMode &&\n      this.loginMode.type === this.OAUTH2_INTERNAL_TYPE\n    );\n  }\n\n  /**\n   * Verifies if the tenant input field should be shown\n   * or not.\n   * @returns If true, show the tenant input.\n   */\n  showTenant(): boolean {\n    return !this.ui.state.loginOptions || this.isLocal() || this.isShowTenant();\n  }\n\n  /**\n   * Logs the user out\n   * @param reload If set to false, the page will not reload\n   */\n  async logout(reload = true) {\n    let resData = null;\n    try {\n      const [basicRes, cookieRes] = await this.reset();\n      resData = await cookieRes.json();\n    } catch (ex) {\n      this.alert.removeLastDanger();\n    } finally {\n      if (resData && resData.url) {\n        this.redirect(resData.url);\n      } else if (reload) {\n        window.location.reload();\n      }\n    }\n  }\n\n  /**\n   * Resets the stored auth-data\n   */\n  async reset() {\n    this.cleanLocalStorage();\n    this.cleanSessionStorage();\n    this.realtime.disconnect();\n    this.ui.currentUser.next(null);\n    return Promise.all([this.basicAuth.logout(), this.cookieAuth.logout()]);\n  }\n\n  /**\n   * Saves the TFA token to local or session storage.\n   * @param tfaToken The tfa token to save.\n   * @param storage The storage to use (local or session).\n   */\n  saveTFAToken(tfaToken: string, storage: Storage) {\n    storage.setItem(this.TFATOKEN_KEY, tfaToken);\n  }\n\n  /**\n   * Request the manifest -> on 401 user has no access to that application\n   * and we throw the error up to the login form.\n   */\n  async verifyAppAccess() {\n    try {\n      await this.ui.loadManifest();\n    } catch (ex) {\n      if (!(ex.res && ex.res.status === 404 && this.isLocal())) {\n        throw ex;\n      }\n    }\n  }\n\n  /**\n   * Sets the tenant to the client and updates the credentials on the\n   * auth strategy.\n   * @param credentials The name of the tenant.\n   * @param authStrategy The authentication strategy used.\n   * @return Returns the token if basic auth, otherwise undefined.\n   */\n  private setCredentials(credentials: ICredentials, authStrategy: IAuthentication) {\n    if (credentials.tenant) {\n      this.client.tenant = credentials.tenant;\n    }\n    // Check if a token is already set (case for support user login)\n    // if yes -> we just need to update the user, and reuse the token\n    // of the support user.\n    // Therefore we need to pass user and tenant, to get\n    // just the stored token and nothing else (see BasicAuth.ts:31).\n    const token = this.basicAuth.updateCredentials({\n      tenant: credentials.tenant,\n      user: credentials.user\n    });\n    const newCredentials = { token, ...credentials };\n\n    return authStrategy.updateCredentials(newCredentials);\n  }\n\n  /**\n   * Verifies if the current user is a developer or not.\n   * Running on localhost means development mode.\n   */\n  private isLocal(): boolean {\n    const hostname = window.location.hostname;\n    return this.localhostIpRegExp.test(hostname) || this.localhostRegExp.test(hostname);\n  }\n\n  /**\n   * Save the token to local or session storage.\n   * @param token The token to save.\n   * @param storage The storage to use (local or session).\n   */\n  private saveToken(token: string, storage: Storage) {\n    storage.setItem(this.TOKEN_KEY, token);\n  }\n\n  private storeBasicAuthToken(token: string) {\n    this.saveToken(token, sessionStorage);\n    if (this.rememberMe) {\n      this.saveToken(token, localStorage);\n    }\n  }\n\n  private cleanLocalStorage() {\n    localStorage.removeItem(this.TOKEN_KEY);\n    localStorage.removeItem(this.TFATOKEN_KEY);\n  }\n\n  private cleanSessionStorage() {\n    sessionStorage.removeItem(this.TOKEN_KEY);\n    sessionStorage.removeItem(this.TFATOKEN_KEY);\n  }\n\n  private isShowTenant(): boolean {\n    return this.showTenantRegExp.test(window.location.href);\n  }\n\n  private redirect(url: string) {\n    window.location.href = url;\n  }\n}\n","import { Type } from '@angular/core';\nimport { IResultList } from '@c8y/client';\n\n/*\n * For reference: the structure of current device column-related objects.\n * TODO: Can be removed when \"All devices\" is fully migrated.\n *\n * Services involved:\n * - c8yFilteringSortingColumns\n * - c8yFilteringSortingInventoryQueries\n * - c8yDeviceListColumns\n * - c8yFilteringSortingCollections?? -> for other tables in tenant/cell ID usage statistics feature\n *\n * Components involved:\n * - c8yFilteredSortedList -> this needs to be gravely adapted\n *\n * States saved in user preferences:\n * - Columns config (ALL_DEVICES_COLUMNS_CONFIG_USER_PREFERENCES_KEY)\n * - Columns meta (ALL_DEVICES_COLUMNS_META_USER_PREFERENCES_KEY_PREFIX)\n *\n * States saved in dynamic group object:\n * - Columns config (COLUMNS_CONFIG_FRAGMENT)\n * - Columns meta (COLUMNS_META_FRAGMENT)\n * - Query string (QUERY_STRING_FRAGMENT)\n *\n * TO-FUTURE-SELF note:\n * - `col.config.filtering` and `col.config.sorting` (the models) populate\n * `col.filtering` and `col.sorting` (the views).\n * - `getFilter` can return a query object (for server-side filtering) or\n * a filter function (for server-side filtering).\n */\ninterface DeviceColumn {\n  name: string;\n  header: string;\n  config: {\n    filtering: object;\n    sorting: {\n      order: number;\n    };\n    override: DeviceColumn;\n  };\n  cell: {\n    class: string;\n    innerClass: string;\n    scopeExtensions: object;\n    template: string;\n    style: object;\n  };\n  filtering: {\n    form: object[];\n    schema: {\n      type: string;\n      properties: {\n        type: string;\n        [key: string]: any;\n      };\n    };\n    getFilter(filteringModel: object): object | FilterFunction;\n  };\n  sorting: {\n    path?: string;\n    paths?: string;\n  };\n  meta: {\n    custom: boolean;\n    key: string;\n    headerName: string;\n    fragmentPath: string;\n    active: boolean;\n    filteringMode: 'EQUALITY' | 'EXISTENCE';\n  };\n}\n\ntype FilterFunction = (item: object) => boolean;\n\nexport interface DataGrid {\n  columns: Column[];\n  rows: Row[];\n  pagination: Pagination;\n  serverSideDataCallback: ServerSideDataCallback;\n  selectable: boolean;\n  selectionPrimaryKey: string;\n  displayOptions: DisplayOptions;\n  actionControls: ActionControl[];\n  bulkActionControls: BulkActionControl[];\n}\n\n/*\n * Column\n */\nexport interface Column {\n  name: string | SpecialColumnName;\n  header?: string;\n  path?: string;\n  visible?: boolean;\n  positionFixed?: boolean;\n\n  /*\n   * Cosmetics\n   */\n  dataType?: ColumnDataType;\n  gridTrackSize?: string;\n  headerCSSClassName?: string | string[];\n  cellCSSClassName?: string | string[];\n\n  /*\n   * Sorting-Filtering\n   */\n  sortable?: boolean;\n  sortOrder?: SortOrder;\n\n  filterable?: boolean;\n  filterPredicate?: string | FilterPredicateFunction;\n  externalFilterQuery?: any;\n\n  /*\n   * Custom renderer\n   */\n  cellRendererComponent?: Type<any>;\n  headerCellRendererComponent?: Type<any>;\n  filteringFormRendererComponent?: Type<any>;\n}\n\nexport const enum SpecialColumnName {\n  Checkbox = 'checkbox',\n  Actions = 'actions'\n}\n\nexport const enum ColumnDataType {\n  Icon = 'icon',\n  Numeric = 'numeric',\n  TextShort = 'text-short',\n  TextLong = 'text-long'\n}\n\nexport const enum ColumnDataRecordClassName {\n  Icon = 'data-record-icon',\n  Header = 'data-record-header',\n  Default = ''\n}\n\nexport const minColumnGridTrackSize = 80;\n\nexport const ratiosByColumnTypes = {\n  icon: 1,\n  numeric: 1,\n  'text-short': 1.67,\n  'text-long': 3.33\n};\n\nexport type SortOrder = 'asc' | 'desc' | '';\n\nexport type FilterPredicateFunction = (item: object, path: string) => boolean;\n\nexport enum FilteringActionType {\n  ApplyFilter = 'APPLY_FILTER',\n  ResetFilter = 'RESET_FILTER'\n}\n\nexport interface Row {\n  id: string;\n  [key: string]: any;\n}\n\nexport interface Pagination {\n  currentPage: number;\n  pageSize: number;\n}\n\nexport type ServerSideDataCallback = (\n  dataSourceModifier: DataSourceModifier\n) => ServerSideDataResult;\nexport interface DataSourceModifier {\n  columns: Column[];\n  searchText: string;\n  pagination: Pagination;\n  selection: {\n    enabled: boolean;\n    primaryKey: string;\n  };\n}\n\n/**\n * Describes result from server with data and additional statistics.\n */\nexport type ServerSideDataResult = IResultList<object> & {\n  /** The real grand total number of items (the whole dataset). */\n  size: number;\n\n  /** The number of items after filtering applied to the whole dataset (subset). */\n  filteredSize: number;\n\n  /** The list of ids of all filtered items (subset). */\n  filteredDataIds?: string[];\n};\n\nexport interface DataSourceStats {\n  /** The real grand total number of items (the whole dataset). */\n  size: number;\n\n  /** The number of items after filtering applied to the whole dataset (subset). */\n  filteredSize: number;\n\n  /** The number of the current page. */\n  currentPage: number;\n\n  /** The number of items currently shown in the list view, a.k.a. current page (what the user sees on screen). */\n  currentPageSize: number;\n\n  /** The number of items on the first page.  */\n  firstPageSize: number;\n}\n\nexport interface DisplayOptions {\n  striped: boolean;\n  bordered: boolean;\n  gridHeader: boolean;\n}\n\nexport interface ActionControl {\n  type: BuiltInActionType | string;\n  text?: string;\n  icon?: string;\n  // tslint:disable-next-line:ban-types\n  callback: ((item: Row, reload: () => void) => void) | Function;\n  [key: string]: any;\n}\n\nexport interface BulkActionControl extends ActionControl {\n  callback(selectedItemIds: string[], reload: () => void): void;\n}\n\nexport const enum BuiltInActionType {\n  Edit = 'EDIT',\n  Delete = 'DELETE',\n  Export = 'EXPORT'\n}\n","import { Component, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { UserService, ICredentials, FetchClient, Client, BasicAuth } from '@c8y/client';\nimport { AppStateService } from '../common/ui-state.service';\nimport { AlertService } from '../alert/alert.service';\nimport { ModalComponent } from '../modal/modal.component';\nimport { LoginService } from '../login/public-api';\nimport { clone } from 'lodash-es';\nimport { gettext } from '../i18n/gettext';\n\n@Component({\n  selector: 'c8y-password-confirm-modal',\n  templateUrl: './password-confirm-modal.component.html'\n})\nexport class PasswordConfirmModalComponent {\n\n  @Output() passwordConfirmedEmitter = new EventEmitter<boolean>();\n  loading = false;\n  password: string;\n\n  @ViewChild('modal', {static: false}) private modal: ModalComponent;\n\n  constructor(\n    public user: UserService,\n    public ui: AppStateService,\n    private client: FetchClient,\n    private alert: AlertService,\n    private loginService: LoginService\n  ) { }\n\n  async passwordConfirm() {\n    if (this.password) {\n      const credentials: ICredentials = {\n        password: this.password,\n        user: this.ui.currentUser.value.id,\n        tenant: this.client.tenant\n      };\n      try {\n        this.loading = true;\n        const strategy = clone(this.loginService.useBasicAuth({}));\n        delete credentials.tfa;\n        strategy.updateCredentials(credentials);\n        const newClient = new Client(strategy, this.client.baseUrl);\n        await newClient.user.current();\n        this.emitSuccessAndClose();\n      } catch (e) {\n        if (e.res && e.res.status === 401 && e.data && (/pin|totp/i).test(e.data.message)) {\n          this.emitSuccessAndClose();\n        } else {\n          this.alert.danger(gettext('Provided password doesn\\'t match your current one.'));\n        }\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n\n  cancel() {\n    this.passwordConfirmedEmitter.emit(false);\n    this.modal._dismiss();\n  }\n\n  private emitSuccessAndClose() {\n    this.passwordConfirmedEmitter.emit(true);\n    this.modal._dismiss();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PasswordStrength } from '@c8y/client';\nimport { filter } from 'lodash-es';\nimport { PasswordStrengthColor } from './password.model';\nimport { gettext } from '../i18n/gettext';\nimport { PasswordConfirmModalComponent } from './password-confirm-modal.component';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { take } from 'rxjs/operators';\n\n@Injectable()\nexport class PasswordService {\n\n  private GREEN: PasswordStrengthColor = {\n    colorName: 'green',\n    color: 'rgb(0, 128, 0)',\n    description: gettext('strong'),\n    passwordStrength: PasswordStrength.GREEN\n  };\n  private YELLOW: PasswordStrengthColor = {\n    colorName: 'yellow',\n    color: 'rgb(255, 204, 51)',\n    description: gettext('medium'),\n    passwordStrength: PasswordStrength.YELLOW\n  };\n  private RED: PasswordStrengthColor = {\n    colorName: 'red',\n    color: 'rgb(170, 0, 51)',\n    description: gettext('weak'),\n    passwordStrength: PasswordStrength.RED\n  };\n\n  constructor(private modalService: BsModalService) {}\n\n  confirmPassword() {\n    const modalInstance: any = this.modalService.show(PasswordConfirmModalComponent);\n    return modalInstance.content.passwordConfirmedEmitter.pipe(take(1));\n  }\n\n  hasLowerCase(password: string) {\n    return (password.search(/[a-z]/) !== -1);\n  }\n\n  hasUpperCase(password: string) {\n    return (password.search(/[A-Z]/) !== -1);\n  }\n\n  hasNumbers(password: string) {\n    return (password.search(/[0-9]/) !== -1);\n  }\n\n  hasSpecialChars(password: string) {\n    return (password.search(/[^0-9a-zA-Z]+/) !== -1);\n  }\n\n  getStrengthColor(password: string): PasswordStrengthColor {\n    const passwordStrength = filter([\n      this.hasLowerCase(password),\n      this.hasUpperCase(password),\n      this.hasNumbers(password),\n      this.hasSpecialChars(password)\n    ]).length;\n\n    if (passwordStrength > 2) {\n      return this.GREEN;\n    } else if (passwordStrength >= 2) {\n      return this.YELLOW;\n    } else {\n      return this.RED;\n    }\n  }\n}\n","import { Component } from '@angular/core';\nimport { UserService } from '@c8y/client';\nimport { Status } from '../common/status.model';\nimport { gettext } from '../i18n/gettext';\nimport { ModalService } from '../modal/modal.service';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { LoginService } from '../login/public-api';\nimport { AlertService } from '../alert/public-api';\n\n@Component({\n  selector: 'c8y-user-totp-setup',\n  templateUrl: './user-totp-setup.component.html'\n})\nexport class UserTotpSetupComponent {\n  constructor(\n    private user: UserService,\n    private modalService: ModalService,\n    private modal: BsModalRef,\n    private loginService: LoginService) { }\n\n  async totpSetupVerified(token) {\n    await this.user.activateTotp();\n    this.modal.hide();\n    try {\n      await this.modalService.acknowledge(\n        gettext('Logout required'),\n        gettext('You must log out in order to apply your changes'),\n        Status.WARNING,\n        gettext('Log out')\n      );\n      await this.loginService.logout();\n    } catch (ex) {\n      // intended empty\n    }\n  }\n\n  close() {\n    this.modal.hide();\n  }\n}\n","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { IUser, UserService, TenantOptionsService, ITenantOption } from '@c8y/client';\nimport { clone } from 'lodash-es';\nimport { AppStateService } from '../common/ui-state.service';\nimport { TranslateService } from '../i18n/translate.service';\nimport { NewPassword } from '../authentication/password.model';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { PasswordService } from '../authentication/password.service';\nimport { UserTotpSetupComponent } from './user-totp-setup.component';\nimport { AlertService } from '../alert/alert.service';\nimport { gettext } from '../i18n/gettext';\nimport { ModalService } from '../modal/modal.service';\n\nexport interface User extends IUser {\n  phone: string;\n  sendPasswordResetEmail: boolean;\n  newsletter?: boolean;\n}\n\n@Component({\n  selector: 'c8y-user-edit',\n  templateUrl: './user-edit.component.html'\n})\nexport class UserEditComponent implements OnInit {\n  @Input() lang: string;\n  @Input() loading: boolean = false;\n  @Input() set user(u: User) {\n    this._user = clone(u);\n    this.userIsExternal = u.customProperties.userOrigin === 'OAUTH2';\n  }\n  get user() { return this._user; }\n  @Output() onUser: EventEmitter<User> = new EventEmitter();\n  @Output() onLanguage: EventEmitter<string> = new EventEmitter();\n  @Output() onCancel: EventEmitter<void> = new EventEmitter();\n  userHasActiveTotp = false;\n  userCanSetupTotp = false;\n  userIsExternal;\n  private _user: User;\n  private readonly TOTP_OPTION: ITenantOption = {\n    key: 'strategy',\n    category: 'two-factor-authentication'\n  };\n  private readonly TOTP_VALUE = 'TOTP';\n\n  constructor(\n    public state: AppStateService,\n    public translate: TranslateService,\n    public passwordService: PasswordService,\n    public modalConfirmService: ModalService,\n    private bsModalService: BsModalService,\n    private alert: AlertService,\n    private userService: UserService,\n    private tenantOptionService: TenantOptionsService\n  ) {}\n\n  async ngOnInit() {\n    await this.initializeTotpSettings();\n  }\n\n  get langs() {\n    return this.state.state.langs;\n  }\n\n  setupTotp() {\n    this.bsModalService.show(UserTotpSetupComponent, { class: 'modal-sm' });\n    this.cancel(); // to close the user edit modal and prevent console errors on logout\n  }\n\n  cancel() {\n    this.onCancel.emit();\n  }\n\n  save() {\n    if (!this.loading) {\n      this._user.password ? this.saveAfterPasswordConfirmation() : this.onUser.emit(this._user);\n    }\n  }\n\n  onNewPasswordChanged(newPassword: NewPassword) {\n    this._user.password = newPassword.password;\n  }\n\n  private async initializeTotpSettings() {\n    try {\n      this.userCanSetupTotp = await this.canUserSetupTotp();\n      if (this.userCanSetupTotp) {\n        const { data: totpActivity } = await this.userService.getActivityTotp();\n        this.userHasActiveTotp = totpActivity.isActive;\n      }\n    } catch (ex) {\n      this.alert.removeLastDanger();\n    }\n  }\n\n  private async canUserSetupTotp() {\n    const { data, res } = await this.tenantOptionService.detail(this.TOTP_OPTION);\n    return data.value === this.TOTP_VALUE;\n  }\n\n  private saveAfterPasswordConfirmation() {\n    this.passwordService.confirmPassword().subscribe((confirmed) => {\n      if (confirmed) {\n        this.onUser.emit(this._user);\n      }\n    });\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { TenantService, UserService } from '@c8y/client';\n\nimport { AlertService } from '../alert/alert.service';\nimport { AppStateService } from '../common/ui-state.service';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { LoginService } from '../login/login.service';\nimport { ModalService } from '../modal/modal.service';\nimport { Observable } from 'rxjs';\nimport { OptionsService } from '../common/options.service';\nimport { Status } from '../common/status.model';\nimport { TranslateService } from '@ngx-translate/core';\nimport { UserEditModalComponent } from './user-edit-modal.component';\nimport { UserMenuItem } from './user.model';\nimport { gettext } from '../i18n/gettext';\nimport { map } from 'rxjs/operators';\nimport { sortBy } from 'lodash-es';\n\n@Component({\n  selector: 'c8y-user-menu-outlet',\n  templateUrl: './user-menu-outlet.component.html'\n})\nexport class UserMenuOutletComponent {\n  @Input()\n  items: UserMenuItem[];\n  open: boolean;\n\n  constructor(\n    public ui: AppStateService,\n    private bsModalService: BsModalService,\n    private modalService: ModalService,\n    private loginService: LoginService,\n    private translateService: TranslateService,\n    private tenantService: TenantService,\n    private alertService: AlertService,\n    private user: UserService,\n    private optionsService: OptionsService\n  ) {}\n\n  copyIt(text: string) {\n    const handler: EventListenerObject = {\n      handleEvent: (e: ClipboardEvent) => {\n        e.clipboardData.setData('text/plain', text);\n        e.preventDefault();\n      }\n    };\n    document.addEventListener('copy', handler);\n\n    let copied;\n    try {\n      copied = document.execCommand('copy');\n    } catch (e) {\n      copied = false;\n    }\n\n    if (copied) {\n      this.alertService.addByText('success', gettext('Copied to clipboard.'));\n    } else {\n      this.alertService.addByText('danger', gettext('Could not copy to clipboard.'));\n    }\n\n    document.removeEventListener('copy', handler);\n  }\n\n  async editUser() {\n    this.bsModalService.show(UserEditModalComponent);\n  }\n\n  async logout() {\n    await this.loginService.logout();\n  }\n\n  async activateSupportAccess() {\n    const title = gettext('Activate support user access');\n\n    const companyName = this.optionsService.get('companyName', 'Cumulocity');\n    const textWithCompany = gettext(\n      // tslint:disable-next-line:max-line-length\n      'You are about to allow a support user from {{companyName}} to access your tenant to help you with your issue.'\n    );\n    const textWithoutCompany = gettext(\n      // tslint:disable-next-line:max-line-length\n      'You are about to allow a support user to access your tenant to help you with your issue.'\n    );\n    const finalQuestion = gettext('Do you want to proceed?');\n    const body = [\n      this.translateService.instant(companyName ? textWithCompany : textWithoutCompany, {\n        companyName\n      }),\n      this.translateService.instant(finalQuestion)\n    ].join(' ');\n\n    const labels = {\n      ok: gettext('Activate access'),\n      cancel: gettext('Cancel')\n    };\n\n    const successMsg = gettext('Support user access activated.');\n\n    try {\n      await this.modalService.confirm(title, body, Status.DANGER, labels);\n      await this.tenantService.enableSupportUser();\n      await this.refreshCurrentUser();\n      this.alertService.success(successMsg);\n    } catch (ex) {\n      // intended empty\n    }\n  }\n\n  async deactivateSupportAccess() {\n    const title = gettext('Deactivate support user access');\n\n    const companyName = this.optionsService.get('companyName', 'Cumulocity');\n    const textWithCompany = gettext(\n      // tslint:disable-next-line:max-line-length\n      'You are about to block a support user from {{companyName}} from accessing your tenant to help you with your issue.'\n    );\n    const textWithoutCompany = gettext(\n      // tslint:disable-next-line:max-line-length\n      'You are about to block a support user from accessing your tenant to help you with your issue.'\n    );\n    const { data: currentUser } = await this.user.current();\n    const isTenantAdmin = await this.user.hasRole(currentUser, 'ROLE_TENANT_ADMIN');\n    const tenantAdminNote = gettext(\n      // tslint:disable-next-line:max-line-length\n      'Deactivating support access as tenant admin will disable all other support requests on your tenant.'\n    );\n    const finalQuestion = gettext('Do you want to proceed?');\n    const body = [\n      this.translateService.instant(companyName ? textWithCompany : textWithoutCompany, {\n        companyName\n      }),\n      isTenantAdmin ? this.translateService.instant(tenantAdminNote) : '',\n      this.translateService.instant(finalQuestion)\n    ]\n      .filter(Boolean)\n      .join(' ');\n\n    const labels = {\n      ok: gettext('Deactivate access'),\n      cancel: gettext('Cancel')\n    };\n\n    const successMsg = gettext('Support user access deactivated.');\n\n    try {\n      await this.modalService.confirm(title, body, Status.DANGER, labels);\n      await this.tenantService.disableSupportUser();\n      await this.refreshCurrentUser();\n      this.alertService.success(successMsg);\n    } catch (ex) {\n      // intended empty\n    }\n  }\n\n  getSortedItems() {\n    return sortBy(Array.from(this.items), this.byPriority);\n  }\n\n  private async refreshCurrentUser() {\n    const currentUserResult = await this.user.current();\n    this.ui.currentUser.next(currentUserResult.data);\n  }\n\n  private byPriority(item) {\n    return -item.priority;\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { PasswordService } from './password.service';\nimport { LoginService } from '../login/login.service';\nimport { assign, map } from 'lodash-es';\nimport { gettext } from '../i18n/gettext';\n\n@Component({\n  selector: 'c8y-password-check-list',\n  templateUrl: './password-check-list.component.html',\n  styles: []\n})\n\nexport class PasswordCheckListComponent implements OnInit {\n\n  @Input('password')\n  set password(password: string) {\n    if (typeof password === 'string') {\n      this.onPasswordChange(password);\n    }\n  }\n\n  minGreenLength: number = 0;\n\n  checklist = [\n    {\n      label: gettext('Include lowercase characters (e.g. abcdef)'),\n      check: this.passwordStrengthChecker.hasLowerCase,\n      icon: '',\n      contextualColor: ''\n\n    },\n    {\n      label: gettext('Include uppercase characters (e.g. ABCDEF)'),\n      check: this.passwordStrengthChecker.hasUpperCase,\n      icon: '',\n      contextualColor: ''\n    },\n    {\n      label: gettext('Include numbers (e.g. 123456)'),\n      check: this.passwordStrengthChecker.hasNumbers,\n      icon: '',\n      contextualColor: ''\n    },\n    {\n      label: gettext('Include symbols (e.g. !@#$%^)'),\n      check: this.passwordStrengthChecker.hasSpecialChars,\n      icon: '',\n      contextualColor: ''\n    },\n    {\n      label: gettext('Must have at least {{length}} characters'),\n      check: (password) => password.length >= this.minGreenLength,\n      icon: '',\n      contextualColor: ''\n    }\n  ];\n\n  constructor(public loginService: LoginService,\n              private passwordStrengthChecker: PasswordService) {\n  }\n\n  async ngOnInit() {\n    this.minGreenLength = await this.loginService.getGreenMinLength();\n  }\n\n  get translateParams() {\n    return {\n      length: this.minGreenLength\n    };\n  }\n\n  onPasswordChange(password) {\n    this.checklist = map(this.checklist, (requirement) => {\n      const checked = requirement.check(password);\n      assign(requirement, {\n        icon: checked ? 'check' : '',\n        contextualColor: checked ? '' : 'text-muted'\n      });\n      return requirement;\n    });\n  }\n}\n","import { Directive, forwardRef, Attribute } from '@angular/core';\r\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '[passwordConfirm]',\r\n  providers: [\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: PasswordConfirm,\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\n\r\nexport class PasswordConfirm implements Validator {\r\n\r\n  constructor(@Attribute('passwordConfirm') public passwordConfirm: string) {\r\n  }\r\n\r\n  validate(abControl: AbstractControl): { [key: string]: any } {\r\n    const value = abControl.value;\r\n    const controlToCompareWith = abControl.root.get(this.passwordConfirm);\r\n    if (controlToCompareWith && value !== controlToCompareWith.value) {\r\n      return { passwordConfirm: true };\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { PasswordStrength } from '@c8y/client';\r\nimport { filter } from 'lodash-es';\r\nimport { PasswordStrengthColor } from './password.model';\r\nimport { gettext } from '../i18n/gettext';\r\n\r\n@Injectable()\r\nexport class PasswordStrengthCheckerService {\r\n\r\n  private GREEN: PasswordStrengthColor = {\r\n    colorName: 'green',\r\n    color: 'rgb(0, 128, 0)',\r\n    description: gettext('strong'),\r\n    passwordStrength: PasswordStrength.GREEN\r\n  };\r\n  private YELLOW: PasswordStrengthColor = {\r\n    colorName: 'yellow',\r\n    color: 'rgb(255, 204, 51)',\r\n    description: gettext('medium'),\r\n    passwordStrength: PasswordStrength.YELLOW\r\n  };\r\n  private RED: PasswordStrengthColor = {\r\n    colorName: 'red',\r\n    color: 'rgb(170, 0, 51)',\r\n    description: gettext('weak'),\r\n    passwordStrength: PasswordStrength.RED\r\n  };\r\n\r\n  hasLowerCase(password: string) {\r\n    return (password.search(/[a-z]/) !== -1);\r\n  }\r\n\r\n  hasUpperCase(password: string) {\r\n    return (password.search(/[A-Z]/) !== -1);\r\n  }\r\n\r\n  hasNumbers(password: string) {\r\n    return (password.search(/[0-9]/) !== -1);\r\n  }\r\n\r\n  hasSpecialChars(password: string) {\r\n    return (password.search(/[^0-9a-zA-Z]+/) !== -1);\r\n  }\r\n\r\n  getStrengthColor(password: string): PasswordStrengthColor {\r\n    const passwordStrength = filter([\r\n      this.hasLowerCase(password),\r\n      this.hasUpperCase(password),\r\n      this.hasNumbers(password),\r\n      this.hasSpecialChars(password)\r\n    ]).length;\r\n\r\n    if (passwordStrength > 2) {\r\n      return this.GREEN;\r\n    } else if (passwordStrength >= 2) {\r\n      return this.YELLOW;\r\n    } else {\r\n      return this.RED;\r\n    }\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { PasswordService } from './password.service';\n\n@Component({\n  selector: 'c8y-password-strength',\n  templateUrl: './password-strength.component.html'\n})\n\nexport class PasswordStrengthComponent {\n\n  @Input('password')\n  set password(password: string) {\n    if (typeof password === 'string') {\n      this.model = this.passwordStrengthCheckerService.getStrengthColor(password);\n      this.strength.emit(this.model);\n    }\n  }\n  @Output()\n  strength = new EventEmitter();\n\n  model;\n\n  constructor(private passwordStrengthCheckerService: PasswordService) {\n    this.password = '';\n  }\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { NewPassword } from './password.model';\r\nimport { SystemOptionsService } from '@c8y/client';\r\nimport { ControlContainer, NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'c8y-new-password',\r\n  templateUrl: './new-password.component.html',\r\n  viewProviders: [{ provide: ControlContainer, useExisting: NgForm }]\r\n})\r\nexport class NewPasswordComponent implements OnInit {\r\n  @Output() password = new EventEmitter<NewPassword | {}>();\r\n  model: any = {};\r\n  enforcePasswordStrength: boolean = false;\r\n  changePassword: boolean = false;\r\n\r\n  constructor(private systemOptions: SystemOptionsService) {}\r\n\r\n  ngOnInit() {\r\n    this.loadEnforcePasswordStrength();\r\n  }\r\n\r\n  newPasswordChanged() {\r\n    this.password.emit({\r\n      password: this.model.newPassword,\r\n      passwordStrength: this.model.strength\r\n    });\r\n  }\r\n\r\n  async loadEnforcePasswordStrength() {\r\n    try {\r\n      const { data } = await this.systemOptions.detail({\r\n        category: 'password',\r\n        key: 'enforce.strength'\r\n      });\r\n      this.enforcePasswordStrength = data.value === 'true';\r\n    } catch (e) {\r\n      // do nothing;\r\n    }\r\n  }\r\n\r\n  toggleChangePassword() {\r\n    this.changePassword = !this.changePassword;\r\n    if (!this.changePassword) {\r\n      this.password.emit({});\r\n      this.model = {};\r\n    }\r\n  }\r\n}\r\n","import { NG_VALIDATORS, AbstractControl, Validator } from '@angular/forms';\nimport { Directive } from '@angular/core';\nimport { parsePhoneNumberFromString } from 'libphonenumber-js/max';\n\n@Directive({\n  selector: '[c8yPhoneValidation]',\n  providers: [{provide: NG_VALIDATORS, useExisting: PhoneValidationDirective, multi: true}]\n})\nexport class PhoneValidationDirective implements Validator {\n\n  validate(control: AbstractControl): {[key: string]: any} | null {\n    const valid = this.validateInternationalPhoneNumber(control);\n    return valid ? null : {\n      internationalPhoneNumber: true\n    };\n  }\n\n  private validateInternationalPhoneNumber(control: AbstractControl) {\n    let numberValid;\n    try {\n      const phoneNumber = parsePhoneNumberFromString(control.value);\n      numberValid = phoneNumber.isValid();\n      if (numberValid && control.value !== phoneNumber.format('E.164')) {\n        control.setValue(phoneNumber.format('E.164'), { emitEvent: false, emitModelToViewChange: false });\n      }\n    } catch (e) {\n      numberValid = !control.value;\n    }\n    return numberValid;\n  }\n}\n","// tslint:disable: max-line-length\nimport { gettext } from '../i18n/gettext';\n\nexport interface ValidationRules {\n  pattern?: RegExp;\n  message?: string;\n  maxLength?: number;\n  minLength?: number;\n}\n\n// @dynamic\nexport class ValidationPattern {\n  static readonly messages = {\n    deviceId: gettext('Device ID must not contain spaces or slashes (\"/\").'),\n    domain: gettext(\n      'Only lowercase letters, digits, hyphens and underscores allowed in the first part of the URI. ' +\n        'Must start with a letter; hyphens and underscores only allowed in the middle. Must be a valid URI.'\n    ),\n    email: gettext('Invalid email address.'),\n    internationalPhoneNumber: gettext(\n      'International phone number required, in the format +49 9 876 543 210.'\n    ),\n    loginAlias: gettext(\n      'Login alias must not contain slashes (\"/\", \"\\\\\") nor (\"+\"), (\":\"), (\"$\") signs.'\n    ),\n    max : gettext('Max value: {{ value }}'),\n    min : gettext('Min value: {{ value }}'),\n    opcuaBrowsePath: gettext('Invalid OPC UA URI.'),\n    password: gettext(\n      'Password must have at least 8 characters and no more than 32 and can only contain letters, numbers and following symbols: `~!@#$%^&*()_|+-=?;:\\'\",.<>{}[]\\\\/'\n    ),\n    passwordConfirm: gettext('Passwords do not match.'),\n    phoneNumber: gettext(\n      'Invalid phone number format. Only digits, spaces, slashes (\"/\") and dashes (\"-\") allowed.'\n    ),\n    required: gettext('This field is required.'),\n    tenantId: gettext(\n      'May contain lowercase letters, digits, hyphens and underscores. ' +\n        'Must start with a letter; hyphens and underscores only allowed in the middle; minimum 2 characters.'\n    ),\n    urlSegment: gettext('Slash, single or double dots and white space not allowed'),\n    user: gettext(\n      'Username must not contain spaces nor slashes (\"/\", \"\\\\\") nor (\"+\"), (\":\"), (\"$\") signs.'\n    )\n  };\n\n  static readonly rules = {\n    deviceId: {\n      pattern: /^[^\\s/]*$/\n    },\n    domain: {\n      pattern: /^[a-z]+[a-z0-9_-]*[a-z0-9]+\\.{1}.+$/\n    },\n    groupName: {\n      maxLength: 254\n    },\n    hostname: {\n      pattern: /^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9-]*[A-Za-z0-9])$/\n    },\n    ip: {\n      pattern: /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/\n    },\n    opcuaBrowsePath: {\n      pattern: /^(opc.tcp|http|https):\\/\\/[^ \"]+$/\n    },\n    password: {\n      pattern: /^[a-zA-Z0-9`~!@#$%^&*()_|+\\-=?;:'\",.<>{}[\\]\\\\/]{8,32}$/\n    },\n    phoneNumber: {\n      pattern: /^$|^(\\+|0{2})[\\d\\s/-]{1,30}$/\n    },\n    tenantId: {\n      pattern: /^[a-z]+[a-z0-9_-]*[a-z0-9]+$/\n    },\n    user: {\n      pattern: /^[^\\\\/\\s$:+]*$/\n    },\n    urlSegment: {\n      pattern: /^(([.]{1,2})|([/])+|(([/]*)([.]{1,2})([/]*))|((.*)([/]|[ ]+)(.*))|(\\s+))$/\n    },\n    loginAlias: {\n      pattern: /^[^\\\\/$:+]*$/\n    }\n  };\n\n  static get(key: string) {\n    const pattern = this.rules[key];\n    return pattern as ValidationRules;\n  }\n}\n","import { NG_VALIDATORS, AbstractControl, Validator } from '@angular/forms';\nimport { Directive, Input } from '@angular/core';\nimport { ValidationPattern } from './validation-pattern';\n\n@Directive({\n  selector: '[c8yDefaultValidation]',\n  providers: [{provide: NG_VALIDATORS, useExisting: DefaultValidationDirective, multi: true}]\n})\nexport class DefaultValidationDirective implements Validator {\n  @Input() c8yDefaultValidation: string = '';\n\n  validate(control: AbstractControl): {[key: string]: any} | null {\n    if (!control.value) {\n      return null;\n    }\n    const validation = ValidationPattern.get(this.c8yDefaultValidation);\n    if (!validation) {\n      throw new Error(`Pattern ${this.c8yDefaultValidation} not found.`);\n    }\n\n    let valid = true;\n    if (validation.pattern) {\n      valid = validation.pattern.test(control.value);\n    }\n    if (validation.maxLength) {\n      valid = control.value.length < validation.maxLength;\n    }\n    if (validation.minLength) {\n      valid = control.value.length >= validation.minLength;\n    }\n    return valid ? null : {[this.c8yDefaultValidation]: true };\n  }\n}\n","import { AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms';\nimport { Directive, ElementRef, Input } from '@angular/core';\n\nimport { isUndefined } from 'lodash-es';\n\n@Directive({\n  selector: '[min]',\n  providers: [{provide: NG_VALIDATORS, useExisting: MinValidationDirective, multi: true}]\n})\nexport class MinValidationDirective implements Validator {\n  @Input() min: string = '';\n\n  validate(control: AbstractControl): {[key: string]: any} | null {\n    const parsedMin = parseInt(this.min, 10);\n    if (isUndefined(control.value) || !this.min) {\n      return null;\n    }\n\n    let valid = true;\n    valid = !(control.value < parsedMin);\n    return valid ? null : {min: { value: parsedMin } };\n  }\n}\n","import { AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms';\nimport { Directive, Input } from '@angular/core';\n\nimport { isUndefined } from 'lodash-es';\n\n@Directive({\n  selector: '[max]',\n  providers: [{provide: NG_VALIDATORS, useExisting: MaxValidationDirective, multi: true}]\n})\nexport class MaxValidationDirective implements Validator {\n  @Input() max: string = '';\n\n  validate(control: AbstractControl): {[key: string]: any} | null {\n    const parsedMax = parseInt(this.max, 10);\n    if (isUndefined(control.value) || !this.max) {\n      return null;\n    }\n\n    let valid = true;\n    valid = !(control.value > parsedMax);\n    return valid ? null : {max: { value: parsedMax } };\n  }\n}\n","import { Directive, Input } from '@angular/core';\n\n@Directive({\n  selector: 'c8y-message',\n})\nexport class MessageDirective {\n  @Input() name: string;\n  @Input() text: string;\n}\n","import { Component, ContentChildren, Input, QueryList } from '@angular/core';\n\nimport { MessageDirective } from './message.directive';\nimport { ValidationPattern } from './validation-pattern';\nimport { isFunction } from 'lodash-es';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'c8y-messages',\n  templateUrl: './messages.component.html'\n})\nexport class MessagesComponent {\n  @Input() show: {} = {};\n  @Input() defaults: {} = ValidationPattern.messages;\n  @ContentChildren(MessageDirective) customMessages: QueryList<MessageDirective>;\n  messages = [];\n  messageMap: any = {};\n\n  constructor(private translateService: TranslateService) {}\n\n  ngAfterContentInit(): void {\n    this.messageMap = Object.assign({}, this.defaults, this.customMessages.reduce((messages, directive) => {\n      messages[directive.name] = directive.text;\n      return messages;\n    }, {}));\n  }\n\n  changVisibility(show: {}) {\n    this.show = show;\n    this.ngOnChanges();\n  }\n\n  ngOnChanges() {\n    if (this.show) {\n      this.messages = Object.keys(this.show)\n        .map((key) => this.toMessage(key, this.show[key]));\n    } else {\n      this.messages = [];\n    }\n  }\n\n  private toMessage(key, value) {\n    return this.translateService.instant(this.messageMap[key], value);\n  }\n}\n","import { Component, ContentChild, HostBinding, Input } from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { Subscription, timer } from 'rxjs';\nimport { debounce, filter } from 'rxjs/operators';\nimport { MessagesComponent } from './messages.component';\n/**\n * A form group helps to validate an input of a form element.\n *\n * ## Example:\n *\n * ```html\n *  <c8y-form-group [hasWarning]=\"user.email.length === 0\">\n *   <label translate for=\"userEmail\">Email</label>\n *   <input\n *     id=\"userEmail\"\n *     class=\"form-control\"\n *     type=\"email\"\n *     name=\"email\"\n *     [maxlength]=\"254\"\n *     autocomplete=\"off\"\n *     placeholder=\"{{'e.g. joe.doe@example.com' | translate}}\"\n *     [(ngModel)]=\"user.email\"\n *     email\n *     required\n *   >\n *   <c8y-messages>\n *     <c8y-message *ngIf=\"user.email.length === 0\" translate></c8y-message>\n *     <c8y-message name=\"required\" text=\"The E-Mail is SUPER required\"></c8y-message>\n *   </c8y-messages>\n *  </c8y-form-group>\n * ```\n *\n * @param status The current status could be error, warning or success.\n * @param hasError Set this to true to display a error.\n * @param hasWarning Set this to true to display a warning.\n * @param hasSuccess Set this to true to display a success.\n * @param novalidation Set this to true to disable automatic validation by this component.\n */\n@Component({\n  selector: 'c8y-form-group',\n  templateUrl: './form-group.component.html',\n  host: {\n    class: 'form-group'\n  }\n})\nexport class FormGroupComponent {\n  @Input() hasError = false;\n  @Input() hasWarning = false;\n  @Input() hasSuccess = false;\n  @Input() novalidation = false;\n  @Input() status: string;\n  @HostBinding('class.has-error') get error() { return this.status === 'error' || this.hasError; }\n  @HostBinding('class.has-warning') get warning() { return this.status === 'warning'  || this.hasWarning; }\n  @HostBinding('class.has-success') get success() { return this.status === 'success' || this.hasSuccess; }\n  @ContentChild(MessagesComponent, {static: false}) customErrorMessage: MessagesComponent;\n  @ContentChild(NgModel, {static: true}) model: NgModel;\n\n  errors: {};\n  private subscription: Subscription;\n  private readonly VALIDATION_DEBOUNCE_MS = 1000;\n\n  ngAfterContentInit(): void {\n    this.initNgModel();\n  }\n\n  initNgModel() {\n    if (this.model) {\n      this.subscription = this.model.valueChanges.pipe(\n        filter(() => this.model.dirty && !this.novalidation),\n        debounce(() => this.hasError ? timer(10) : timer(this.VALIDATION_DEBOUNCE_MS)),\n      ).subscribe(() => this.update());\n    }\n  }\n\n  update() {\n    this.hasError = !this.model.valid;\n    if (this.customErrorMessage) {\n      this.customErrorMessage.changVisibility(this.model.errors);\n    } else {\n      this.errors = this.model.errors;\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  QueryList,\n  TemplateRef,\n  ContentChild,\n  EventEmitter\n} from '@angular/core';\n\n@Component({\n  selector: 'c8y-input-group-list',\n  templateUrl: 'input-group-list.component.html'\n})\nexport class InputGroupListComponent {\n  @Input() plus: boolean = true;\n  @Input() minus: boolean = true;\n  @Input() index: number;\n\n  @Output() onRemove: EventEmitter<number> = new EventEmitter<number>();\n  @Output() onAdd: EventEmitter<number> = new EventEmitter<number>();\n  add() {\n    this.onAdd.emit(this.index);\n  }\n\n  remove() {\n    this.onRemove.emit(this.index);\n  }\n}\n","import {\n  Directive,\n  Input,\n  Output,\n  QueryList,\n  AfterContentInit,\n  ContentChildren,\n  EventEmitter\n} from '@angular/core';\nimport { map } from 'lodash-es';\nimport { InputGroupListComponent } from './input-group-list.component';\n\n@Directive({\n  selector: '[c8yInputGroupListContainer]'\n})\nexport class InputGroupListContainerDirective implements AfterContentInit {\n  @ContentChildren(InputGroupListComponent) listProjections: QueryList<InputGroupListComponent>;\n\n  ngAfterContentInit() {\n    this.listProjections.map(element => {\n      if (element !== this.listProjections.last) {\n        setTimeout(() => {\n          element.plus = false;\n        });\n      }\n    });\n\n    this.listProjections.changes.subscribe(elements => {\n      if (elements.length === 1) {\n        setTimeout(() => {\n          elements.first.plus = true;\n          elements.first.minus = false;\n        });\n\n        return;\n      }\n      elements.map(element => {\n        setTimeout(() => {\n          element.minus = true;\n        });\n\n        if (element !== elements.last) {\n          setTimeout(() => {\n            element.plus = false;\n          });\n        }\n        if (element === elements.last) {\n          setTimeout(() => {\n            element.plus = true;\n          });\n        }\n      });\n    });\n  }\n}\n","import { Directive, EventEmitter, Output, OnInit, OnDestroy } from '@angular/core';\nimport { NgControl, AbstractControl } from '@angular/forms';\n\nimport { debounceTime, distinctUntilChanged, tap } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\nimport { gettext } from '../i18n/public-api';\n\n@Directive({\n  selector: 'textarea[prettyValidJson]'\n})\nexport class JsonValidationPrettifierDirective implements OnInit, OnDestroy {\n  @Output() invalidJSON: EventEmitter<string> = new EventEmitter();\n  private abstractCtrl: AbstractControl;\n  private message: string = gettext('Must be a valid JSON object.');\n  private debounceTimeInMs: number = 1000;\n  private subscription: Subscription;\n\n  constructor(ngCtrl: NgControl) {\n    this.abstractCtrl = ngCtrl.control;\n  }\n\n  ngOnInit() {\n    this.subscription = this.abstractCtrl.valueChanges\n      .pipe(\n        tap(() => this.clearValidationMessage()),\n        debounceTime(this.debounceTimeInMs),\n        distinctUntilChanged()\n      )\n      .subscribe(value => {\n        this.validateInputAndPrettify(value);\n      });\n  }\n\n  ngOnDestroy() {\n    if (this.subscription && !this.subscription.closed) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  validateInputAndPrettify(value) {\n    if (value) {\n      try {\n        const validJsonObject = JSON.parse(value);\n        const pretty = JSON.stringify(validJsonObject, undefined, 2);\n        this.abstractCtrl.setValue(pretty);\n      } catch (ex) {\n        this.setErrorAndValidationMessage();\n      }\n    }\n  }\n\n  private setErrorAndValidationMessage() {\n    this.abstractCtrl.setErrors({ invalidBodyTemplate: true });\n    this.invalidJSON.emit(this.message);\n  }\n\n  private clearValidationMessage() {\n    this.invalidJSON.emit(undefined);\n  }\n}\n","import { Directive, ElementRef, Input, HostBinding, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: 'textarea[heightPerRow]'\n})\nexport class TextAreaRowHeightDirective {\n  @Input()\n  @HostBinding('rows')\n  rows: number = 1;\n\n  @Input('heightPerRow')\n  heightPerRow: string;\n\n  private minHeightPerRow = 20;\n\n  constructor(private elem: ElementRef, private renderer: Renderer2) {}\n\n  ngAfterViewInit() {\n    const convertedValue = Number(this.heightPerRow);\n    if (this.heightPerRow && convertedValue && convertedValue > this.minHeightPerRow) {\n      this.setHeight(`${this.rows * convertedValue}px`);\n    } else {\n      this.setHeight(`${this.rows * this.minHeightPerRow}px`);\n    }\n  }\n\n  private setHeight(value: string) {\n    this.renderer.setStyle(this.elem.nativeElement, 'height', value);\n  }\n}\n","import { Directive, ElementRef, Renderer2, AfterContentChecked } from '@angular/core';\nimport { gettext } from '../i18n/gettext';\nimport { isUndefined, compact } from 'lodash-es';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Directive({\n  selector: 'input[required]'\n})\nexport class RequiredInputPlaceholderDirective implements AfterContentChecked {\n  private placeholder: string;\n  private required: boolean;\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private translationService: TranslateService\n    ) {}\n\n  ngAfterContentChecked(): void {\n    this.required = this.el.nativeElement.required;\n    this.placeholder = this.el.nativeElement.placeholder;\n    const requiredText = `(${this.translationService.instant(gettext('required'))})`;\n    this.setPlaceholder(requiredText);\n  }\n\n  setPlaceholder(requiredText) {\n    if (isUndefined(this.placeholder) && !this.required) {\n      this.renderer.removeAttribute(this.el.nativeElement, 'placeholder');\n    } else if (this.placeholder.indexOf(requiredText) < 0) {\n      const parts = compact([\n        this.placeholder,\n        `${this.required && !this.shouldSkipRequiredHint() ? `${requiredText}` : ''}`\n      ]);\n      const placeholder = parts.includes(requiredText)\n        ? parts.join(' ').trim()\n        : parts.join('').trim();\n\n      this.renderer.setAttribute(this.el.nativeElement, 'placeholder', placeholder);\n    }\n  }\n\n  shouldSkipRequiredHint() {\n    const closestAncestor = this.el.nativeElement.closest('[placeholder-no-required-hint]');\n    return !!closestAncestor;\n  }\n}\n","import { Component, Input, OnChanges } from '@angular/core';\nimport { cloneDeep } from 'lodash-es';\nimport { Observable, of } from 'rxjs';\n\n@Component({\n  selector: 'c8y-ip-range-input-list',\n  templateUrl: './ip-range-input-list.component.html'\n})\nexport class IpRangeInputListComponent {\n  @Input()\n  set data(list) {\n    this.ipRangeList = list;\n    if (this.ipRangeList.length === 0) {\n      this.add();\n    }\n  }\n\n  get data() {\n    return this.ipRangeList;\n  }\n\n  ipRangeList: Array<{ ip: string; cidr: number }>;\n\n  add() {\n    this.ipRangeList.push({ ip: '', cidr: undefined });\n  }\n\n  remove(index) {\n    this.ipRangeList.splice(index, 1);\n  }\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\n\n// TODO: find replacement for schema-form ng1 library\n@Directive({\n  selector: 'c8y-schema-form'\n})\nexport class SchemaFormComponent extends UpgradeComponent {\n  @Input() schema: any;\n  @Input() model: any;\n  @Input('form') inputForm?: any;\n  @Input('options') inputOptions?: any;\n\n  constructor(elementRef: ElementRef, injector: Injector) {\n    super('c8ySchemaForm', elementRef, injector);\n  }\n}\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Subject, timer } from 'rxjs';\nimport { debounce, distinctUntilChanged, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'c8y-filter',\n  templateUrl: './filter-input.component.html'\n})\nexport class FilterInputComponent implements OnInit, OnDestroy {\n  @Input() icon: string;\n  @Output() onSearch = new EventEmitter<string>();\n  filterChange$ = new Subject();\n  filterTerm: string = '';\n  private readonly CARRIAGE_RETURN_KEY = 13;\n  private readonly CARRIAGE_RETURN_CODE = 'Enter';\n\n  ngOnInit() {\n    this.reset();\n    this.filterChange$\n      .pipe(\n        debounce((event: any) =>\n          event.code === this.CARRIAGE_RETURN_CODE || event.keyCode === this.CARRIAGE_RETURN_KEY\n            ? timer(10)\n            : timer(300)\n        ),\n        map((e: any) => e.target.value),\n        distinctUntilChanged()\n      )\n      .subscribe(filterTerm => {\n        this.filterTerm = filterTerm;\n        this.onSearch.emit(filterTerm);\n      });\n  }\n\n  reset() {\n    this.filterTerm = '';\n    this.onSearch.emit('');\n  }\n\n  ngOnDestroy(): void {\n    this.filterChange$.complete();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PhoneValidationDirective } from './phone-validation.directive';\nimport { DefaultValidationDirective } from './default-validation.directive';\nimport { MinValidationDirective } from './min-validation.directive';\nimport { MaxValidationDirective } from './max-validation.directive';\nimport { CommonModule } from '../common/common.module';\nimport { FormsModule as NgFormsModule } from '@angular/forms';\nimport { FormGroupComponent } from './form-group.component';\nimport { MessageDirective } from './message.directive';\nimport { MessagesComponent } from './messages.component';\nimport { InputGroupListComponent } from './input-group-list.component';\nimport { InputGroupListContainerDirective } from './input-group-list-container.directive';\nimport { JsonValidationPrettifierDirective } from './json-validation-prettifier.directive';\nimport { TextAreaRowHeightDirective } from './text-area-row-height.directive';\nimport { RequiredInputPlaceholderDirective } from './required-input-placeholder.directive';\nimport { IpRangeInputListComponent } from './ip-range-input-list.component';\nimport { SchemaFormComponent } from './schema-form.component';\nimport { FilterInputComponent } from './filter-input.component';\n\n/**\n * @exports FormGroupComponent A component that allows to group an input and can display warnings and errors.\n * @exports PhoneValidationDirective Allows to validate international phone numbers.\n * @exports NewsletterDirective Allows to subscribe to the newsletter.\n * @exports DefaultValidationDirective Allows to validate some predefined patterns.\n * @exports MessageDirective A directive that allows to define messages.\n * @exports MessagesComponent Allows to display error messages.\n * @exports SchemaFormComponent Allows to display forms generated from JSON Schema.\n */\n@NgModule({\n  imports: [CommonModule, NgFormsModule],\n  exports: [\n    PhoneValidationDirective,\n    DefaultValidationDirective,\n    MinValidationDirective,\n    MaxValidationDirective,\n    NgFormsModule,\n    FormGroupComponent,\n    MessageDirective,\n    MessagesComponent,\n    InputGroupListComponent,\n    InputGroupListContainerDirective,\n    JsonValidationPrettifierDirective,\n    TextAreaRowHeightDirective,\n    RequiredInputPlaceholderDirective,\n    IpRangeInputListComponent,\n    SchemaFormComponent,\n    FilterInputComponent\n  ],\n  declarations: [\n    PhoneValidationDirective,\n    DefaultValidationDirective,\n    MinValidationDirective,\n    MaxValidationDirective,\n    FormGroupComponent,\n    MessageDirective,\n    MessagesComponent,\n    InputGroupListComponent,\n    InputGroupListContainerDirective,\n    JsonValidationPrettifierDirective,\n    TextAreaRowHeightDirective,\n    RequiredInputPlaceholderDirective,\n    IpRangeInputListComponent,\n    SchemaFormComponent,\n    FilterInputComponent\n  ]\n})\nexport class FormsModule {}\n","import { Component, Output, EventEmitter, Input } from '@angular/core';\nimport { NewPassword } from './password.model';\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport { LoginService } from '../login/login.service';\nimport { UserService, ICredentials } from '@c8y/client';\nimport { AlertService } from '../alert/alert.service';\nimport { LoginViews } from '../login/login.model';\n\n@Component({\n  selector: 'c8y-totp-challenge',\n  templateUrl: './totp-challenge.component.html',\n  viewProviders: [ { provide: ControlContainer, useExisting: NgForm } ]\n})\n\nexport class TotpChallengeComponent {\n  /**\n   * Calls the verify endpoint if set to true (default true)\n   */\n  @Input() verify = true;\n  /**\n   * Emits the token on success.\n   */\n  @Output() onSuccess = new EventEmitter();\n\n  model = {\n    token: ''\n  };\n  @Input()\n  loading = false;\n  @Input()\n  hasError = false;\n\n  constructor(\n    public loginService: LoginService,\n    private users: UserService,\n    private alert: AlertService\n  ) {}\n\n  async verifyCode() {\n    try {\n      this.loading = true;\n      this.hasError = false;\n      if (this.verify) {\n        await this.users.verifyTotpCode(this.model.token);\n      }\n      this.onSuccess.emit(this.model.token);\n    } catch (e) {\n      this.hasError = true;\n      this.alert.removeLastDanger();\n      this.loading = false;\n    }\n  }\n}\n","import { Component, Output, EventEmitter, Input } from '@angular/core';\nimport { UserService, ICredentials } from '@c8y/client';\nimport { LoginService } from '../login/login.service';\nimport { AlertService } from '../alert/public-api';\nimport { LoginViews } from '../login/login.model';\nimport { gettext } from '../i18n/gettext';\n\n@Component({\n  selector: 'c8y-sms-challenge',\n  templateUrl: './sms-challenge.component.html',\n  styles: []\n})\n\nexport class SmsChallengeComponent {\n\n  @Input() credentials: ICredentials;\n  @Output() onCancel = new EventEmitter();\n\n  model = {\n    smsToken: ''\n  };\n  isLoading = false;\n\n  private resendTfa: string = '0';\n\n  constructor(\n    public loginService: LoginService,\n    private users: UserService,\n    private alert: AlertService\n  ) {}\n\n  async verifyTFACode() {\n    this.isLoading = true;\n    if (this.useOAuthInternal()) {\n      await this.verifyCodeWithOauth();\n    } else {\n      await this.verifyCodeWithBasicAuth();\n    }\n    this.isLoading = false;\n  }\n\n  async resendTFASms() {\n    try {\n      this.isLoading = true;\n      await this.users.verifyTFACode(this.resendTfa);\n    } catch (e) {\n      if (e.res.status === 403) {\n        this.loginService.cleanMessages();\n        this.loginService.addSuccessMessage('resend_sms');\n      } else {\n        this.alert.addServerFailure(e);\n      }\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  private useOAuthInternal() {\n    return this.loginService.isPasswordGrantLogin(this.credentials);\n  }\n\n  private async verifyCodeWithOauth() {\n    try {\n      const { credentials } = this;\n      await this.loginService.switchLoginMode({...credentials, tfa: this.model.smsToken});\n      await this.loginService.verifyAppAccess();\n      await this.loginService.authFulfilled();\n    } catch (e) {\n      const resStatus = e.res && e.res.status;\n      if (resStatus === 401) {\n        // it is assumed that the user and password are correct so it must be the tfa code\n        this.alert.danger(gettext('Invalid code'));\n      } else {\n        this.alert.addServerFailure(e);\n      }\n    }\n  }\n\n  private async verifyCodeWithBasicAuth() {\n    try {\n      const { res } = await this.users.verifyTFACode(this.model.smsToken);\n      const tfaToken = res.headers.get('tfatoken');\n      this.credentials.tfa = tfaToken;\n      this.loginWithTFA(tfaToken);\n    } catch (e) {\n      const resStatus = e.res && e.res.status;\n      // BE returns 403 in case of invalid tfa code\n      if (resStatus === 403) {\n        this.alert.danger(gettext('Invalid code'));\n      } else {\n        this.alert.addServerFailure(e);\n      }\n    }\n  }\n\n  private async loginWithTFA(tfaToken) {\n    try {\n      await this.loginService.login(this.loginService.useBasicAuth({tfa: tfaToken}), this.credentials);\n      this.loginService.saveTFAToken(tfaToken, sessionStorage);\n      if (this.loginService.rememberMe) {\n        this.loginService.saveTFAToken(tfaToken, localStorage);\n      }\n    } catch (e) {\n      this.alert.addServerFailure(e);\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ITotp, UserService } from '@c8y/client';\nimport { AlertService } from '../alert/alert.service';\n\n@Component({\n  selector: 'c8y-totp-setup',\n  templateUrl: './totp-setup.component.html'\n})\n\nexport class TotpSetupComponent implements OnInit {\n  totpSecret: ITotp;\n\n  get qrCodeImage() {\n    return this.totpSecret ? this.totpSecret.secretQrUrl : '';\n  }\n\n  get secret() {\n    return this.totpSecret ? this.totpSecret.rawSecret : '';\n  }\n\n  constructor(private user: UserService, private alert: AlertService) { }\n\n  async ngOnInit() {\n    try {\n      const { data } = await this.user.generateTotpSecret();\n      this.totpSecret = data;\n    } catch (ex) {\n      this.alert.addServerFailure(ex);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { CommonModule } from '../common/common.module';\r\nimport { PasswordCheckListComponent } from './password-check-list.component';\r\nimport { PasswordConfirm } from './password-confirm.directive';\r\nimport { PasswordStrengthCheckerService } from './password-strength-checker.service';\r\nimport { PasswordStrengthComponent } from './password-strength.component';\r\nimport { NewPasswordComponent } from './new-password.component';\r\nimport { PasswordConfirmModalComponent } from './password-confirm-modal.component';\r\nimport { ModalModule } from '../modal/modal.module';\r\nimport { FormsModule } from '../forms/forms.module';\r\nimport { TotpChallengeComponent } from './totp-challenge.component';\r\nimport { SmsChallengeComponent } from './sms-challenge.component';\r\nimport { TotpSetupComponent } from './totp-setup.component';\r\nimport { PasswordService } from './password.service';\r\n\r\n/**\r\n * The angular module definition for new password.\r\n * @exports PasswordStrengthComponent\r\n * @exports PasswordCheckListComponent\r\n * @exports PasswordConfirm\r\n * @exports NewPasswordComponent\r\n * @exports PasswordConfirmModalComponent\r\n */\r\n@NgModule({\r\n  declarations: [\r\n    TotpChallengeComponent,\r\n    PasswordConfirm,\r\n    PasswordStrengthComponent,\r\n    PasswordCheckListComponent,\r\n    NewPasswordComponent,\r\n    PasswordConfirmModalComponent,\r\n    SmsChallengeComponent,\r\n    TotpSetupComponent\r\n  ],\r\n  imports: [\r\n    FormsModule,\r\n    TooltipModule,\r\n    CommonModule,\r\n    ModalModule\r\n  ],\r\n  exports: [\r\n    TotpChallengeComponent,\r\n    PasswordStrengthComponent,\r\n    PasswordCheckListComponent,\r\n    PasswordConfirm,\r\n    NewPasswordComponent,\r\n    PasswordConfirmModalComponent,\r\n    SmsChallengeComponent,\r\n    TotpSetupComponent\r\n  ],\r\n  entryComponents: [\r\n    PasswordConfirmModalComponent\r\n  ],\r\n  providers: [\r\n    PasswordStrengthCheckerService,\r\n    PasswordService\r\n  ]\r\n})\r\nexport class AuthenticationModule {}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { IUser, UserService } from '@c8y/client';\nimport { AlertService } from '../alert/public-api';\nimport { gettext } from '../i18n/gettext';\n\n@Component({\n  selector: 'c8y-user-totp-revoke',\n  templateUrl: './user-totp.component.html'\n})\nexport class UserTotpRevokeComponent {\n  @Input() user: IUser;\n  @Output('revoke') revokeEmitter = new EventEmitter<undefined>();\n  constructor(\n    private users: UserService,\n    private alert: AlertService,\n  ) { }\n\n  async revoke() {\n    try {\n      await this.users.totpRevokeSecret(this.user);\n      this.alert.success(gettext('User TOTP secret revoked.'));\n      this.revokeEmitter.next();\n    } catch (e) {\n      this.alert.addServerFailure(e);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '../common/common.module';\nimport { ModalModule } from '../modal/modal.module';\nimport { UserMenuItemComponent } from './user-menu-item.component';\nimport { UserEditModalComponent } from './user-edit-modal.component';\nimport { UserEditComponent } from './user-edit.component';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { UserMenuOutletComponent } from './user-menu-outlet.component';\nimport { AuthenticationModule } from '../authentication/authentication.module';\nimport { UserMenuService } from './user-menu.service';\nimport { AlertModule } from '../alert/alert.module';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '../forms/forms.module';\nimport { UserTotpSetupComponent } from './user-totp-setup.component';\nimport { UserTotpRevokeComponent } from './user-totp-revoke.component';\n\n/**\n * The angular module definition for the user menu.\n * @exports UserMenuComponent\n * @exports UserMenuItemComponent\n * @exports UserEditComponent\n * @exports UserEditModalComponent\n */\n@NgModule({\n  declarations: [\n    UserMenuOutletComponent,\n    UserEditComponent,\n    UserEditModalComponent,\n    UserMenuItemComponent,\n    UserTotpSetupComponent,\n    UserTotpRevokeComponent,\n  ],\n  imports: [\n    FormsModule,\n    CommonModule,\n    ModalModule,\n    BsDropdownModule,\n    AuthenticationModule,\n    AlertModule,\n    RouterModule,\n    TooltipModule.forRoot(),\n    PopoverModule\n  ],\n  exports: [\n    UserMenuOutletComponent,\n    UserMenuItemComponent,\n    UserEditComponent,\n    UserEditModalComponent,\n    UserTotpSetupComponent,\n    UserTotpRevokeComponent\n  ],\n  entryComponents: [\n    UserEditModalComponent,\n    UserTotpSetupComponent,\n    UserTotpRevokeComponent\n  ]\n})\nexport class UserModule { }\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { find, keys, get, assign, isEmpty } from 'lodash-es';\nimport { OptionsService } from '../../common/options.service';\n\n@Component({\n  selector: 'c8y-app-icon',\n  templateUrl: './app-icon.component.html',\n  host: { class: 'c8y-app-icon' }\n})\nexport class AppIconComponent implements OnChanges {\n  @Input() contextPath: string;\n  @Input() name: string = '';\n  @Input() app: any;\n\n  model = {\n    appIcon: '',\n    showIcon: true,\n    iconClass: ['c8y-icon'],\n    appNameAbbr: '',\n    iconStyle: {}\n  };\n\n  private c8yAppIconsList = {\n    analyticsbuilder: 'analytics-builder',\n    'analytics-builder': 'analytics-builder',\n    cockpit: 'cockpit',\n    devicemanagement: 'device-management',\n    administration: 'administration',\n    apamaepl: 'apama-epl'\n  };\n\n  private white: boolean = false;\n\n  private defaultIconStyle = {\n    'background-repeat': 'no-repeat',\n    'background-size': 'contain',\n    height: '36px',\n    width: '36px'\n  };\n\n  constructor(private options: OptionsService) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.model.appIcon = this.iconFromAppDefinition() || this.findStaticIcon();\n    const iconUrl = this.iconUrlFromAppDefinition();\n    if (iconUrl) {\n      this.model.iconStyle = assign(this.defaultIconStyle, {\n        'background-image': iconUrl\n      });\n    }\n    this.model.showIcon = !!this.model.appIcon || !isEmpty(this.model.iconStyle);\n    this.model.iconClass = [\n      'c8y-icon',\n      this.model.appIcon,\n      this.white ? 'c8y-icon-white' : 'c8y-icon-duocolor'\n    ].filter(c => !!c);\n    this.model.appNameAbbr = this.name.substr(0, 2);\n  }\n\n  private findStaticIcon() {\n    const contextPath = this.contextPath || this.name;\n    const appContextPathNormalized = find(keys(this.c8yAppIconsList), cp => {\n      return contextPath.indexOf(cp) > -1;\n    });\n    const appIcon = this.c8yAppIconsList[appContextPathNormalized];\n    return appIcon ? `c8y-icon-${appIcon}` : undefined;\n  }\n\n  private iconFromAppDefinition() {\n    const app = this.app || this.options;\n    const iconClassProperty = ['icon', 'class'];\n    const iconClass = get(app, iconClassProperty) || get(app, ['manifest', ...iconClassProperty]);\n    return iconClass;\n  }\n\n  private iconUrlFromAppDefinition() {\n    const app = this.app || this.options;\n    const iconUrlProperty = ['icon', 'url'];\n    const iconUrl = get(app, iconUrlProperty) || get(app, ['manifest', ...iconUrlProperty]);\n    return iconUrl;\n  }\n}\n","import { Component } from '@angular/core';\nimport { ApplicationService, IApplication, ICurrentTenant, IUser } from '@c8y/client';\nimport { get, includes, orderBy } from 'lodash-es';\nimport { combineLatest } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { AppStateService } from '../../common/ui-state.service';\n\n@Component({\n  selector: 'c8y-app-switcher',\n  templateUrl: './app-switcher.component.html'\n})\nexport class AppSwitcherComponent {\n  oneCloudApps?: Array<IApplication & {[key: string]: any}>;\n  apps: Array<IApplication & {[key: string]: any}>;\n  open: boolean;\n\n  private get hideCloudApps(): boolean {\n    return false;  // this should be configurable from outside\n  }\n  private tenant: ICurrentTenant;\n  constructor(\n    private ui: AppStateService,\n    private applications: ApplicationService) {\n      const { currentUser, currentTenant} = this.ui;\n      combineLatest(currentUser, currentTenant).pipe(\n        first()\n      ).subscribe(([ user, tenant ]) => {\n          this.tenant = tenant;\n          this.listAppsForUser(user);\n        });\n  }\n\n  isActive(app: IApplication) {\n    return app.contextPath === this.ui.state.app.contextPath;\n  }\n\n  getHref(app: IApplication) {\n    return this.applications.getHref(app);\n  }\n\n  private async listAppsForUser(user: IUser | null) {\n    if (user) {\n      const { data } = await this.applications.listByUser(user, { pageSize: 1000 });\n      this.apps = this.orderApps(this.filterApps(data));\n    }\n  }\n\n  private filterApps(apps) {\n    apps = this.filterVisible(apps);\n    apps = this.filterCloud(apps);\n    apps = this.filterDuplicates(apps);\n    return apps;\n  }\n\n  private filterVisible(apps) {\n    const visibleApplicationTypes = ['HOSTED', 'EXTERNAL'];\n    return apps.filter((app) => includes(visibleApplicationTypes, app.type) &&\n      !app.noAppSwitcher &&\n      !get(app, 'manifest.noAppSwitcher'));\n  }\n\n  private filterCloud(apps) {\n    const { hideCloudApps } = this;\n    const filterFn = (app) => !!app.cloud;\n    if (!hideCloudApps) {\n        this.oneCloudApps = this.orderApps(apps.filter(filterFn));\n    }\n    return apps.filter((app) => !filterFn(app));\n  }\n\n  private filterDuplicates(apps) {\n    // Filter out apps that have duplicate contextpaths and are not own owned but the current tenant;\n    const filterFn = (app) => !apps.some((otherApp) => (app !== otherApp) &&\n      (app.contextPath && app.contextPath === otherApp.contextPath) &&\n      (app.owner.tenant.id !== this.tenant.name));\n    return apps.filter(filterFn);\n  }\n\n  private orderApps(apps) {\n    return orderBy(apps, (({ name }) => name.toLowerCase()));\n  }\n}\n","import { gettext } from '../i18n/gettext';\n\nexport const documentationItems = [\n  {\n    icon: 'c8y-c8y-data', // double c8y- is correct!\n    label: gettext('Concepts guide`KEEP_ORIGINAL`'),\n    url: '/concepts/introduction',\n    type: 'doc'\n  },\n  {\n    icon: 'c8y-user',\n    label: gettext('User guide`KEEP_ORIGINAL`'),\n    url: '/users-guide/getting-started',\n    type: 'doc'\n  },\n  {\n    icon: 'c8y-device-management',\n    label: gettext('Device guides`KEEP_ORIGINAL`'),\n    url: '/devices/overview',\n    type: 'doc'\n  },\n  {\n    icon: 'c8y-book',\n    label: gettext('Cumulocity IoT Edge`KEEP_ORIGINAL`'),\n    url: '/edge/overview',\n    type: 'doc'\n  },\n  {\n    icon: 'c8y-tools',\n    label: gettext('Microservice SDK guide`KEEP_ORIGINAL`'),\n    url: '/microservice-sdk/introduction',\n    type: 'doc'\n  },\n  {\n    icon: 'c8y-tools',\n    label: gettext('Device SDK guide`KEEP_ORIGINAL`'),\n    url: '/device-sdk/introduction',\n    type: 'doc'\n  },\n  {\n    icon: 'c8y-smart-rest',\n    label: gettext('Web SDK guide`KEEP_ORIGINAL`'),\n    url: '/web/introduction',\n    type: 'doc'\n  },\n  {\n    icon: 'c8y-data-explorer',\n    label: gettext('Streaming analytics guide`KEEP_ORIGINAL`'),\n    url: '/apama/introduction',\n    type: 'doc'\n  },\n  {\n    icon: 'c8y-bookmark',\n    label: gettext('Reference guide`KEEP_ORIGINAL`'),\n    url: '/reference/rest-implementation',\n    type: 'doc'\n  },\n  {\n    icon: 'gavel',\n    label: gettext('Legal notices'),\n    url: 'https://documentation.softwareag.com/legal/',\n    type: 'doc'\n  }\n];\n","import { InjectionToken } from '@angular/core';\nimport { ExtensionFactory } from '../common/public-api';\n\nexport interface DocLink {\n  icon: string;\n  label: string;\n  url: string;\n  type: 'doc' | 'quicklink';\n  click?: any;\n}\n\nexport type DocLinkFactory = ExtensionFactory<DocLink>;\n\nexport const HOOK_DOCS = new InjectionToken<ExtensionFactory<DocLink>>('Hook docs');\n","import { Injectable, Inject, Optional } from '@angular/core';\nimport { OptionsService } from '../common/options.service';\nimport { documentationItems } from './defaults.items';\nimport { AppStateService } from '../common/ui-state.service';\nimport { gettext } from '../i18n/gettext';\nimport { DocLink, HOOK_DOCS, DocLinkFactory } from './docs.models';\nimport { ExtensionPoint, fromTrigger } from '../common/public-api';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { shareReplay, startWith, first, filter } from 'rxjs/operators';\nimport { isUndefined } from 'lodash-es';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DocsService implements ExtensionPoint<DocLink> {\n  items$: Observable<DocLink[]>;\n  constructor(\n    private options: OptionsService,\n    private app: AppStateService,\n    @Optional() @Inject(HOOK_DOCS) factories: DocLinkFactory[] = [],\n    router: Router\n  ) {\n    if (!factories) {\n      factories = [];\n    }\n    factories.push(this);\n    const refreshTrigger = this.app.map(({ supportUrl }) => supportUrl);\n    this.items$ = fromTrigger(router, refreshTrigger, factories).pipe(\n      startWith([]),\n      shareReplay(1)\n    );\n  }\n\n  getBaseUrl(): string {\n    return this.options.get('docsBaseUrl', 'https://www.cumulocity.com/guides');\n  }\n\n  get templateStr(): string {\n    return this.options.get('guideHrefTemplate', '${docsBaseUrl}${partialUrl}');\n  }\n\n  getUserGuideLink(link) {\n    if (/^https?:/.test(link)) {\n      return link;\n    }\n    if (this.getBaseUrl === null) {\n      return null;\n    }\n    return this.getLink(this.templateStr, link);\n  }\n\n  list() {\n    return this.items$\n      .pipe(\n        filter(i => !!i.length),\n        first()\n      )\n      .toPromise();\n  }\n\n  refresh() {\n    // no op\n  }\n\n  get() {\n    // use the function as a factory\n    const { links, noDefault, excludeDefault = [] } = this.options.get('docs', {});\n    const { supportUrl } = this.app.state;\n    let staticLinks = noDefault\n      ? []\n      : documentationItems\n          .map((item: DocLink) => ({ ...item, url: this.getUserGuideLink(item.url) }))\n          .filter(({ url }) => !excludeDefault.some(e => new RegExp(e).test(url)));\n\n    if (links) {\n      // backwards compatibility\n      links.map((lnk: DocLink) => {\n        if (isUndefined(lnk.type)) {\n          lnk.type = 'doc';\n          return lnk;\n        }\n      });\n      staticLinks = staticLinks.concat(links);\n    }\n    if (supportUrl) {\n      staticLinks.push({\n        icon: 'comments',\n        label: gettext('Forum support'),\n        url: supportUrl,\n        type: 'doc'\n      });\n    }\n    return staticLinks;\n  }\n\n  private getLink(templateStr, partialLink) {\n    if (!templateStr) {\n      return undefined;\n    }\n    return templateStr\n      .replace(/\\${docsBaseUrl}/, this.getBaseUrl())\n      .replace(/\\${partialUrl}/, this.prefixWithSlash(partialLink));\n  }\n\n  private prefixWithSlash(partialLink = '') {\n    const shouldPrefix = !(partialLink && /^\\//.test(partialLink));\n    const prefix = shouldPrefix ? '/' : '';\n    return `${prefix}${partialLink}`;\n  }\n}\n","import { AfterViewInit, Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ActionService } from '../../action/action.service';\nimport { BreadcrumbService } from '../../breadcrumb/breadcrumb.service';\nimport { SearchService } from '../../search/search.service';\nimport { AppStateService } from '../../common/ui-state.service';\nimport { UserMenuService } from '../../user/user-menu.service';\nimport { HeaderService } from '../header.service';\nimport { DocsService } from '../../docs/docs.service';\n\n@Component({\n  selector: 'c8y-header-bar',\n  templateUrl: './header-bar.component.html'\n})\nexport class HeaderBarComponent implements AfterViewInit {\n  canToggle$: Observable<boolean> = this.headerService.hasItemsInNavigator$;\n  appState$: Observable<any> = this.appState.state$;\n  drawerOpen = false;\n  headerOpen = false;\n\n  constructor(\n    public headerService: HeaderService,\n    public actionService: ActionService,\n    public breadcrumbService: BreadcrumbService,\n    public searchService: SearchService,\n    private appState: AppStateService,\n    public userMenuService: UserMenuService,\n    public docs: DocsService\n  ) {}\n\n  ngAfterViewInit() {\n    this.headerService.verifyIfNavOpen();\n  }\n\n  toggle() {\n    this.headerOpen = !this.headerOpen;\n  }\n}\n","import { Component, ElementRef, NgZone } from '@angular/core';\nimport { HeaderService } from '../header.service';\nimport { debounceTime, map, filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'c8y-title-outlet',\n  templateUrl: './title-outlet.component.html'\n})\nexport class TitleOutletComponent {\n  title = undefined;\n\n  constructor(\n    private headerService: HeaderService,\n    private element: ElementRef,\n    private zone: NgZone\n  ) {\n    const title$ = this.headerService.map(state => state.title);\n    title$.subscribe(title => (this.title = title));\n    this.zone.runOutsideAngular(() => {\n      title$\n        .pipe(\n          debounceTime(100),\n          map(() => this.element.nativeElement.querySelector('h1')),\n          filter(el => el !== null),\n          map(el => el.innerText),\n          filter(Boolean)\n        )\n        .subscribe((title: string) => headerService.changePageTitle(title));\n    });\n  }\n}\n","import { AfterViewInit, Component, OnDestroy, ViewChild } from '@angular/core';\nimport { HeaderService } from '../header.service';\n\n@Component({\n  selector: 'c8y-title',\n  templateUrl: './title.component.html'\n})\nexport class TitleComponent implements AfterViewInit, OnDestroy {\n  @ViewChild('template', {static: true}) template;\n  private viewInitTimeout;\n\n  constructor(\n    private headerService: HeaderService\n  ) {}\n\n  ngAfterViewInit() {\n    this.viewInitTimeout = setTimeout(() =>\n      this.headerService.changeTitle(this.template)\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.headerService.state.title === this.template) {\n      clearTimeout(this.viewInitTimeout);\n      this.headerService.changeTitle();\n    }\n  }\n}\n","import { Component, TemplateRef, ViewChild, Input} from '@angular/core';\nimport { NavigatorNode } from './navigator-node';\nimport { NavigatorService } from './navigator.service';\n\n@Component({\n  selector: 'c8y-navigator-item',\n  template: '<ng-template #iconTpl><ng-content></ng-content></ng-template>',\n})\nexport class NavigatorItemComponent  {\n  @ViewChild('iconTpl', {static: true}) template: TemplateRef<any>;\n  @Input() label: string;\n  @Input() icon: string;\n  @Input() path: string;\n  @Input() priority = 0;\n  nodeData: NavigatorNode;\n  constructor(\n    private service: NavigatorService\n  ) {\n    this.nodeData = new NavigatorNode();\n  }\n\n  ngOnInit(): void {\n    this.ngOnChanges();\n    setTimeout(() => this.service.add(this.nodeData));\n  }\n\n  ngOnChanges(): void {\n    this.nodeData.icon = this.icon;\n    this.nodeData.label = this.label;\n    this.nodeData.path = this.path;\n    this.nodeData.priority = this.priority;\n    this.nodeData.iconTemplate = !this.icon ? this.template : undefined;\n    this.nodeData.icon = this.icon;\n  }\n\n  ngOnDestroy(): void {\n    this.service.remove(this.nodeData);\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { NavigatorNode } from './navigator-node';\n\n@Component({\n  selector: 'c8y-navigator-icon',\n  template: `<i class=\"icon\" [c8yIcon]=\"icon\"></i>`\n})\nexport class NavigatorIconComponent {\n  @Input() node: NavigatorNode;\n  get icon() {\n    const DEFAULT_ICON = 'cog';\n    return this.node.icon || DEFAULT_ICON;\n  }\n\n  get iconClass() {\n    return `fa-${this.icon}`;\n  }\n}\n","// tslint:disable-next-line:max-line-length\nimport { Component, ComponentFactoryResolver, Input, QueryList, ViewChild, ViewChildren, ViewContainerRef, Output, EventEmitter, OnDestroy, HostListener } from '@angular/core';\nimport { RouterLinkActive, Router } from '@angular/router';\nimport { NavigatorIconComponent } from './navigator-icon.component';\nimport { NavigatorNode, ClickOptions } from './navigator-node';\nimport { NavigatorService } from './navigator.service';\nimport { PopoverConfirmComponent } from '../modal/popover-confirm.component';\n\n@Component({\n  selector: 'c8y-navigator-node-display',\n  templateUrl: './navigator-node.component.html'\n})\nexport class NavigatorNodeComponent implements OnDestroy {\n  @ViewChild('icon', { read: ViewContainerRef, static: false }) iconSlot: ViewContainerRef;\n  @Input() node: NavigatorNode;\n  @Input() isRoot: boolean;\n  @ViewChild(RouterLinkActive, {static: false}) routerLinkActive: RouterLinkActive;\n  @ViewChildren(NavigatorNodeComponent) childrenNodes: QueryList<NavigatorNodeComponent>;\n  @Output() nodeClick: EventEmitter<string> = new EventEmitter();\n  @ViewChild(PopoverConfirmComponent, {static: false}) confirm: PopoverConfirmComponent;\n\n  parentNode: NavigatorNodeComponent;\n\n  private viewInitTimeout;\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private navigator: NavigatorService\n  ) {}\n\n  ngAfterViewInit() {\n    this.childrenNodes.forEach((n) => n.parentNode = this);\n    this.viewInitTimeout = setTimeout(() => {\n      this.updateIcon();\n      this.openOnFirstUrl();\n      this.expandParentIfActive();\n      this.node.confirm = this.confirm;\n    });\n  }\n\n  openOnFirstUrl() {\n    if (this.navigator.openOnFirstUrl(this.node) && !this.node.open) {\n      this.expandCollapse(true);\n    }\n  }\n\n  get expandTitle() {\n    return !this.node.open ? 'Expand' : 'Collapse';\n  }\n\n  click(from: 'icon' | 'expander' | 'link' = 'link', $event?) {\n    let open;\n    if (from === 'expander') {\n      if ($event) {\n        $event.stopPropagation();\n        $event.preventDefault();\n      }\n      open = !this.node.open;\n    } else {\n      open = this.routerLinkActive && this.routerLinkActive.isActive ? true : !this.node.open;\n    }\n    if (open !== this.node.open) {\n      this.expandCollapse(open, false, { [from]: true, $event });\n    }\n    this.nodeClick.emit(from);\n  }\n\n  expandCollapse(open, recursive?, forNode: ClickOptions = {}) {\n    this.node.open = open;\n    // Also close children\n    if (recursive) {\n      this.childrenNodes.forEach((n) => n.expandCollapse(open, recursive));\n    }\n    forNode.open = open;\n    this.node.click(forNode);\n  }\n\n  ngOnDestroy(): void {\n    clearTimeout(this.viewInitTimeout);\n    this.node.destroy();\n  }\n\n  private expandParentIfActive() {\n    if (this.routerLinkActive && this.routerLinkActive.isActive && this.parentNode) {\n      this.parentNode.expandCollapse(true);\n    }\n  }\n\n  private updateIcon() {\n    if (this.node.iconTemplate) {\n      this.updateIconTemplate();\n    } else {\n      this.updateIconComponent();\n    }\n  }\n\n  private updateIconComponent() {\n    let componentType = NavigatorIconComponent;\n    if (this.node && this.node.iconComponent) {\n      componentType = this.node.iconComponent;\n    }\n    this.iconSlot.clear();\n    const iconComponentFactory = this.componentFactoryResolver.resolveComponentFactory(componentType);\n    const componentRef = this.iconSlot.createComponent(iconComponentFactory);\n    componentRef.instance.node = this.node;\n  }\n\n  private updateIconTemplate() {\n    this.iconSlot.clear();\n    this.iconSlot.createEmbeddedView(this.node.iconTemplate);\n  }\n}\n","import { Component, Input, SimpleChanges } from '@angular/core';\nimport { NavigatorNode } from './navigator-node';\nimport { HeaderService } from '../header/public-api';\n\n@Component({\n  selector: 'c8y-navigator-outlet, c8y-ui-navigator',\n  templateUrl: './navigator-outlet.template.html',\n})\nexport class NavigatorOutletComponent {\n  @Input() nodes: NavigatorNode[];\n  @Input() open = true;\n\n  constructor(private headerService: HeaderService) {}\n\n  /**\n   * Closes the navigator on click if the window is small.\n   */\n  collapseNavigator(from: 'icon' | 'expander' | 'link') {\n    if (from === 'link' && !this.headerService.largeWidth) {\n      this.headerService.closeNavigator();\n    }\n  }\n\n  trackByPathOrLabel(index, node) {\n    return node.path ? node.path : node.label;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { CommonModule } from '../common/common.module';\nimport { NavigatorItemComponent } from './navigator-entry.component';\nimport { NavigatorIconComponent } from './navigator-icon.component';\nimport { NavigatorNodeComponent } from './navigator-node.component';\nimport { NavigatorOutletComponent } from './navigator-outlet.component';\nimport { NavigatorService } from './navigator.service';\nimport { ModalModule } from '../modal/modal.module';\n\n/**\n * The angular module definition for the navigator.\n * @exports NavigatorOutletComponent\n * @exports NavigatorItemComponent\n */\n@NgModule({\n  declarations: [\n    NavigatorOutletComponent,\n    NavigatorNodeComponent,\n    NavigatorItemComponent,\n    NavigatorIconComponent\n  ],\n  imports: [\n    RouterModule,\n    CollapseModule.forRoot(),\n    CommonModule,\n    ModalModule\n  ],\n  exports: [\n    NavigatorOutletComponent,\n    NavigatorItemComponent\n  ],\n  entryComponents: [\n    NavigatorIconComponent\n  ]\n})\nexport class NavigatorModule { }\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'c8y-right-drawer',\n  templateUrl: './right-drawer.component.html'\n})\nexport class RightDrawerComponent {\n  @Input('quickLinks') set _quickLinks(data: any[]) {\n    if (data) {\n      this.quickLinks = data.filter(d => d.type === 'quicklink');\n    }\n  }\n  @Input('helpAndSupport') set _helpAndSupport(data: any[]) {\n    if (data) {\n      this.helpAndSupport = data.filter(d => d.type === 'doc');\n    }\n  }\n  @Input() app: any;\n  quickLinks: any[] = [];\n  helpAndSupport: any[] = [];\n}\n","import { NgModule } from '@angular/core';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ActionModule } from '../action/action.module';\nimport { BreadcrumbModule } from '../breadcrumb/breadcrumb.module';\nimport { CommonModule } from '../common/common.module';\nimport { SearchModule } from '../search/search.module';\nimport { UserModule } from '../user/user.module';\nimport { AppIconComponent } from './application/app-icon.component';\nimport { AppSwitcherComponent } from './application/app-switcher.component';\nimport { HeaderBarComponent } from './header-bar/header-bar.component';\nimport { HeaderService } from './header.service';\nimport { TitleOutletComponent } from './title/title-outlet.component';\nimport { TitleComponent } from './title/title.component';\nimport { NavigatorModule } from '../navigator/navigator.module';\nimport { RightDrawerComponent } from './right-drawer/right-drawer.component';\n\n/**\n * The angular module definition for the header of the application.\n * @exports HeaderBarComponent\n * @exports TitleComponent\n * @exports TitleOutletComponent\n * @exports AppIconComponent\n * @exports AppSwitcherComponent\n */\n@NgModule({\n  declarations: [\n    TitleComponent,\n    HeaderBarComponent,\n    TitleOutletComponent,\n    AppIconComponent,\n    AppSwitcherComponent,\n    RightDrawerComponent\n  ],\n  imports: [\n    BsDropdownModule,\n    UserModule,\n    SearchModule,\n    CommonModule,\n    ActionModule,\n    BreadcrumbModule,\n    NavigatorModule\n  ],\n  exports: [\n    HeaderBarComponent,\n    TitleComponent,\n    TitleOutletComponent,\n    AppIconComponent,\n    AppSwitcherComponent,\n    RightDrawerComponent\n  ]\n})\nexport class HeaderModule {}\n","import { Component, OnInit, Output, Input, EventEmitter } from '@angular/core';\nimport { LoginService } from './login.service';\nimport { PasswordService } from '../authentication/password.service';\nimport { IResetPassword, ICredentials, UserService } from '@c8y/client';\nimport { OptionsService } from '../common/public-api';\nimport { AlertService } from '../alert/public-api';\nimport { LoginViews } from './login.model';\n\n@Component({\n  selector: 'c8y-change-password',\n  templateUrl: './change-password.component.html',\n  styles: []\n})\nexport class ChangePasswordComponent implements OnInit {\n  @Input() credentials: ICredentials;\n  @Output() onChangeView = new EventEmitter();\n\n  passwordPattern = /^[a-zA-Z0-9`~!@#$%^&*()_|+\\-=?;:'\",.<>{}[\\]\\\\/]{8,32}$/;\n  isLoading = false;\n  model = {\n    tenantId: '',\n    email: '',\n    newPassword: '',\n    newPasswordConfirm: ''\n  };\n  enforcePasswordStrength = false;\n  emailReadOnly = false;\n\n  private TOKEN_PARAM = 'token';\n  private EMAIL_PARAM = 'email';\n\n  constructor(\n    public loginService: LoginService,\n    private users: UserService,\n    private passwordStrengthCheckerService: PasswordService,\n    private options: OptionsService,\n    private alert: AlertService\n  ) { }\n\n  async ngOnInit() {\n    this.model.tenantId = this.loginService.getTenant();\n    this.model.email = this.options.get(this.EMAIL_PARAM, '');\n    this.emailReadOnly = !!this.model.email;\n    this.enforcePasswordStrength = await this.loginService.getEnforcePasswordStrength();\n  }\n\n  async changePassword() {\n    const passwordStrengthColor: any = this.passwordStrengthCheckerService.getStrengthColor(\n      this.model.newPassword\n    );\n    const resetPassword: IResetPassword = {\n      token: this.credentials.token,\n      email: this.model.email,\n      newPassword: this.model.newPassword,\n      passwordStrength: passwordStrengthColor.passwordStrength\n    };\n    try {\n      this.isLoading = true;\n      const { res } = await this.users.resetPassword(resetPassword, this.model.tenantId);\n      if (res.status === 200) {\n        this.loginService.addSuccessMessage('password_changed');\n        this.credentials.token = undefined;\n        this.options.set(this.TOKEN_PARAM, undefined);\n        this.onChangeView.emit({ view: LoginViews.Credentials });\n      }\n    } catch (e) {\n      this.alert.addServerFailure(e);\n    } finally {\n      this.loginService.reset();\n      this.isLoading = false;\n    }\n  }\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { LoginService } from './login.service';\nimport { ICredentials } from '@c8y/client';\nimport { AlertService } from '../alert/alert.service';\nimport { AppStateService } from '../common/ui-state.service';\nimport { gettext } from '../i18n/gettext';\nimport { LoginViews } from './login.model';\n\n@Component({\n  selector: 'c8y-credentials',\n  templateUrl: './credentials.component.html',\n  styles: []\n})\n\nexport class CredentialsComponent implements OnInit {\n\n  @Output() onChangeView = new EventEmitter();\n\n  LOGIN_VIEWS = LoginViews;\n  model: ICredentials = {};\n  isLoading: boolean = false;\n  showLoginForm: boolean = false;\n  showBasicAuth: boolean = false;\n  oauthOptions: any = {};\n\n  private readonly PASSWORD_RESET_HEADER_NAME = 'passwordresettoken';\n\n  constructor(\n    public loginService: LoginService,\n    public alert: AlertService,\n    public ui: AppStateService\n  ) {}\n\n  ngOnInit() {\n    const { oauthOptions, loginMode } = this.loginService;\n    this.model.tenant = this.loginService.getTenant();\n    this.showLoginForm = typeof loginMode.visibleOnLoginPage === 'undefined' || loginMode.visibleOnLoginPage;\n    this.showBasicAuth = loginMode.type === 'BASIC';\n    this.oauthOptions = oauthOptions;\n  }\n\n  redirectToOauth() {\n    this.loginService.redirectToOauth();\n  }\n\n  /**\n   * Allows to login into the application using basic auth.\n   * If successful logged in the client is set in shared/cumulocity.service.ts\n   */\n  async login() {\n    try {\n      this.isLoading = true;\n      const basicAuth = this.loginService.useBasicAuth(this.model);\n      await this.loginService.login(basicAuth, this.model);\n    } catch (e) {\n      if (e.res && e.res.headers && e.res.headers.get(this.PASSWORD_RESET_HEADER_NAME)) {\n        this.handlePasswordReset(e.res);\n      } else if (e.res && e.res.status === 401 && (/pin/i).test(e.data.message)) {\n        this.handleSmsChallenge(e.data.message);\n      } else if (e.res && e.res.status === 401 && (/TOTP/i).test(e.data.message)) {\n        this.handleTotpChallenge(e.data.message);\n      } else {\n        this.loginService.reset();\n        this.alert.addServerFailure(e);\n      }\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  private handlePasswordReset(e: any) {\n    this.alert.removeLastDanger();\n    this.model.token = e.headers.get(this.PASSWORD_RESET_HEADER_NAME);\n    this.onChangeView.emit({ view: LoginViews.ChangePassword, credentials: this.model });\n  }\n\n  private handleTotpChallenge(message) {\n    if ((/TOTP setup required/i).test(message)) {\n      this.onChangeView.emit({ view: LoginViews.TotpSetup, credentials: this.model });\n    } else {\n      this.onChangeView.emit({ view: LoginViews.TotpChallenge, credentials: this.model });\n    }\n  }\n\n  private handleSmsChallenge(message: string) {\n    if ((/pin has already been generated/i).test(message)) {\n      this.alert.warning(\n        gettext('The verification code was already sent. For a new verification code, please click on the link above.')\n      );\n    }\n    this.alert.removeLastDanger();\n    this.onChangeView.emit({ view: LoginViews.SmsChallenge, credentials: this.model });\n  }\n}\n","import { Component, Input, OnInit, HostBinding, HostListener, ViewChild } from '@angular/core';\nimport { ICredentials } from '@c8y/client';\nimport { LoginService } from './login.service';\nimport { OptionsService } from '../common/options.service';\nimport { LoginViews } from './login.model';\nimport { AlertService } from '../alert/alert.service';\nimport { gettext } from '../i18n/gettext';\n\n@Component({\n  selector: 'c8y-login',\n  templateUrl: './login.component.html',\n  styles: []\n})\nexport class LoginComponent implements OnInit {\n  currentView: LoginViews = LoginViews.None;\n  LOGIN_VIEWS = LoginViews;\n\n  disabled = false;\n\n  @Input() name: string;\n\n  credentials: ICredentials = {};\n  displayAlerts: boolean = false;\n  private TOKEN_PARAM = 'token';\n\n  /**\n   * Just DI.\n   */\n  constructor(\n    public loginService: LoginService,\n    private options: OptionsService,\n    private alert: AlertService\n  ) {}\n\n  ngOnInit() {\n    const token = this.getResetPasswordToken();\n    if (this.loginService.isFirstLogin) {\n      if (!token) {\n        this.loginAutomatically();\n      } else {\n        this.credentials.token = token;\n        this.reset();\n      }\n    }\n    this.loginService.isFirstLogin = false;\n  }\n\n  handleLoginTemplate(event) {\n    this.currentView = event.view;\n    this.credentials = event.credentials || {};\n  }\n\n  @HostListener('keyup', ['$event']) onkeyup(event: KeyboardEvent) {\n    if (event.key !== 'Enter') {\n      this.loginService.cleanMessages();\n    }\n  }\n\n  reset() {\n    this.loginService.reset();\n    this.setView();\n    this.loginService.cleanMessages();\n  }\n\n  private async loginAutomatically() {\n    try {\n      await this.loginService.login();\n    } catch (e) {\n      const loginMode = this.loginService.loginMode.type;\n      if (loginMode === 'OAUTH2') {\n        this.loginService.redirectToOauth();\n      } else {\n        this.reset();\n        if (loginMode === 'OAUTH2_INTERNAL' && window.location.protocol !== 'https:') {\n          this.alert.danger(gettext('Current login mode only supports HTTPS.'));\n        } else if (e.res && e.res.status === 403) {\n          this.alert.addServerFailure(e);\n        }\n      }\n    }\n  }\n\n  private setView() {\n    if (this.credentials && this.credentials.token) {\n      this.handleLoginTemplate({ view: LoginViews.ChangePassword, credentials: this.credentials });\n    } else {\n      this.handleLoginTemplate({ view: LoginViews.Credentials });\n    }\n  }\n\n  private getResetPasswordToken() {\n    const token = this.options.get(this.TOKEN_PARAM);\n    if (token) {\n      this.options.set(this.TOKEN_PARAM, undefined); // only use once\n    }\n    return token;\n  }\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { UserService } from '@c8y/client';\nimport { LoginService } from './login.service';\nimport { LoginViews } from './login.model';\n\n@Component({\n  selector: 'c8y-recover-password',\n  templateUrl: './recover-password.component.html',\n  styles: []\n})\n\nexport class RecoverPasswordComponent implements OnInit {\n\n  @Output() onChangeView = new EventEmitter();\n  LOGIN_VIEWS = LoginViews;\n  isLoading = false;\n  model = {\n    email: '',\n    tenantId: ''\n  };\n\n  constructor(\n    private users: UserService,\n    public loginService: LoginService) {\n  }\n\n  ngOnInit() {\n    this.model.tenantId = this.loginService.getTenant();\n  }\n\n  async resetPassword() {\n    try {\n      this.isLoading = true;\n      const { res } = await this.users.sendPasswordResetMail(this.model.email, this.model.tenantId);\n      if (res.status === 200) {\n        this.loginService.addSuccessMessage('password_reset_requested');\n      }\n    } finally {\n      this.loginService.reset();\n      this.isLoading = false;\n    }\n  }\n\n}\n","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { ICredentials, UserService } from '@c8y/client';\nimport { AlertService } from '../alert/alert.service';\nimport { LoginService } from './login.service';\nimport { LoginViews } from './login.model';\n\n@Component({\n  selector: 'c8y-totp-auth',\n  templateUrl: './totp-auth.component.html',\n})\nexport class TotpAuthComponent implements OnInit {\n  @Input() credentials: ICredentials;\n  @Input() view: LoginViews;\n  @Output() onCancel = new EventEmitter();\n  LOGIN_VIEWS = LoginViews;\n  loading = false;\n  hasError = false;\n\n  get isSetup() {\n    return this.view === LoginViews.TotpSetup;\n  }\n\n  constructor(\n    public loginService: LoginService,\n    private userService: UserService,\n    private alert: AlertService\n  ) { }\n\n  /**\n   * In case of a setup we need the user to be authorized\n   * first.\n   */\n  async ngOnInit() {\n    if (this.view === this.LOGIN_VIEWS.TotpSetup) {\n      await this.loginService.switchLoginMode(this.credentials);\n    }\n  }\n\n  async onTotpSuccess(code) {\n    try {\n      this.loading = true;\n      this.hasError = false;\n      this.credentials.tfa = code;\n      if (this.isSetup) {\n        await this.userService.activateTotp();\n      }\n      await this.loginService.switchLoginMode(this.credentials);\n      await this.loginService.verifyAppAccess();\n      await this.loginService.authFulfilled();\n    } catch (e) {\n      this.alert.removeLastDanger();\n      if (e.data && e.data.message === 'Access is denied') {\n        this.alert.addServerFailure(e);\n      } else {\n        this.hasError = true;\n      }\n    } finally {\n      this.loading = false;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { FormsModule as C8yFormsModule } from '../forms/public-api';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { CommonModule } from '../common/common.module';\nimport { ChangePasswordComponent } from './change-password.component';\nimport { CredentialsComponent } from './credentials.component';\nimport { LoginComponent } from './login.component';\nimport { LoginService } from './login.service';\nimport { RecoverPasswordComponent } from './recover-password.component';\nimport { AuthenticationModule } from '../authentication/authentication.module';\nimport { AlertModule } from '../alert/alert.module';\nimport { TotpAuthComponent } from './totp-auth.component';\n\n/**\n * The angular module definition for the login.\n * @exports LoginComponent\n */\n@NgModule({\n  declarations: [\n    LoginComponent,\n    RecoverPasswordComponent,\n    ChangePasswordComponent,\n    CredentialsComponent,\n    TotpAuthComponent\n  ],\n  imports: [\n    FormsModule,\n    TooltipModule,\n    CommonModule,\n    AuthenticationModule,\n    AlertModule,\n    C8yFormsModule\n  ],\n  exports: [LoginComponent]\n})\nexport class LoginModule {\n  static forRoot() {\n    return {\n      ngModule: LoginModule,\n      providers: LoginModule.providers()\n    };\n  }\n  static providers() {\n    return [LoginService];\n  }\n}\n","import {\n  Component,\n  ViewChild,\n  Input,\n  ViewContainerRef,\n  AfterContentInit,\n  OnDestroy\n} from '@angular/core';\nimport { TabsService } from './tabs.service';\nimport { Tab } from './tab.model';\n\n@Component({\n  selector: 'c8y-tab',\n  template: '<ng-template #tpl><ng-content></ng-content></ng-template>'\n})\nexport class TabComponent implements AfterContentInit, OnDestroy, Tab {\n  @ViewChild('tpl', { static: false }) template: ViewContainerRef;\n  @Input() path: string;\n  @Input() label: string = '';\n  @Input() icon: string;\n  @Input() priority: number;\n  @Input() orientation: 'horizontal' | 'vertical';\n  constructor(private tabs: TabsService) {}\n\n  ngAfterContentInit() {\n    setTimeout(() => this.tabs.add(this as Tab));\n  }\n\n  ngOnDestroy() {\n    this.tabs.remove(this as Tab);\n  }\n}\n","import {\n  Component,\n  Input,\n  HostBinding,\n  Renderer2,\n  ElementRef,\n  OnChanges,\n  ViewChild,\n  OnDestroy,\n  AfterContentInit,\n  AfterContentChecked} from '@angular/core';\nimport { debounceTime } from 'rxjs/operators';\nimport { fromEventPattern, fromEvent, merge, Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Tab } from './tab.model';\n\n@Component({\n  selector: 'c8y-tabs-outlet,c8y-ui-tabs',\n  templateUrl: './tabs-outlet.component.html',\n})\nexport class TabsOutletComponent implements OnDestroy, AfterContentInit {\n  @Input() tabs: any[] = [];\n  @Input() orientation: 'vertical' | 'horizontal' = 'vertical';\n  @Input() navigatorOpen = false;\n  showLeft: boolean = false;\n  showRight: boolean = false;\n  @HostBinding('class.navigator-open') get isNavigatorOpen() {\n    return this.navigatorOpen;\n  }\n  @HostBinding('class.page-tabs') get hasTabs() {\n    return this.tabs && this.tabs.length;\n  }\n  @HostBinding('class.page-tabs-horizontal') get isHorizontal() {\n    return this.orientation === 'horizontal';\n  }\n  @HostBinding('class.page-tabs-vertical') get isVertical() {\n    return this.orientation !== 'horizontal';\n  }\n  @ViewChild('container', {read: ElementRef, static: true}) private container: ElementRef;\n  @ViewChild('left', {read: ElementRef, static: false}) private leftBtn: ElementRef;\n  @ViewChild('right', {read: ElementRef, static: false}) private rightBtn: ElementRef;\n  @ViewChild('tabsContainer', {read: ElementRef, static: false}) private tabsContainer: ElementRef;\n  private scrollSubscription: Subscription;\n\n  constructor(\n    private router: Router,\n    private renderer: Renderer2,\n    private el: ElementRef\n  ) {}\n\n  ngOnDestroy() {\n    if (this.scrollSubscription) {\n      this.scrollSubscription.unsubscribe();\n    }\n  }\n\n  ngAfterContentInit() {\n    if (this.orientation === 'horizontal') {\n      this.scrollSubscribe();\n    }\n\n  }\n\n  isActive(tab: Tab) {\n    if (tab && tab.path) {\n      return this.router.isActive(tab.path, false);\n    } else {\n      return false;\n    }\n  }\n\n  navigateTo(path) {\n    this.router.navigate([path]);\n  }\n\n  scroll(direction: 'right' | 'left' = 'right') {\n    const { widthScroll, width, scrollLeft } = this.getDimensions();\n    const multiplier = direction === 'left' ? -1 : 1;\n\n    let targetScroll = scrollLeft + width * multiplier;\n    if (targetScroll < 0) {\n      targetScroll = 0;\n    }\n    if (targetScroll > widthScroll - width) {\n      targetScroll = widthScroll - width;\n    }\n    // TODO: we should animate this\n    this.container.nativeElement.scrollLeft = targetScroll;\n  }\n\n  private scrollSubscribe() {\n    let unlisten;\n    this.scrollSubscription = merge(\n      fromEvent(this.container.nativeElement, 'scroll'),\n      fromEventPattern(\n        (handler: any) => {\n          unlisten = this.renderer.listen('window', 'resize', handler);\n        },\n        () => unlisten()\n      )\n    ).pipe(\n      debounceTime(250)\n    ).subscribe(() => this.updateScroll());\n  }\n\n  private updateScroll() {\n    const { widthScroll, width, scrollLeft } = this.getDimensions();\n    this.showLeft = !!scrollLeft;\n    this.showRight = widthScroll > width + scrollLeft;\n  }\n\n  private getDimensions() {\n    const elTabs = this.tabsContainer.nativeElement;\n    const el = this.container.nativeElement;\n    const widthScroll =   elTabs.scrollWidth;\n    const width = el.clientWidth;\n    const scrollLeft = el.scrollLeft;\n    return { widthScroll, width, scrollLeft };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '../common/common.module';\nimport { TabComponent } from './tab.component';\nimport { TabsOutletComponent } from './tabs-outlet.component';\nimport { TabsService } from './tabs.service';\n\n@NgModule({\n  declarations: [\n    TabsOutletComponent,\n    TabComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild([])\n  ],\n  exports: [\n    TabsOutletComponent,\n    TabComponent\n  ]\n})\nexport class TabsModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { OptionsService } from '../../common/options.service';\n\n@Component({\n  selector: 'c8y-cookie-banner',\n  templateUrl: './cookie-banner.template.html'\n})\nexport class CookieBannerComponent implements OnInit {\n  readonly storageKey: string = 'acceptCookieNotice';\n  readonly acceptValue: string = '1';\n  showBanner: boolean;\n  settings: { cookieBannerTitle?: string; cookieBannerText: string; policyUrl?: string };\n\n  constructor(private options: OptionsService) {}\n\n  ngOnInit() {\n    this.settings = this.options.get('cookieBanner');\n    if (this.settings && this.settings.cookieBannerText && !localStorage.getItem(this.storageKey)) {\n      this.showBanner = true;\n    }\n  }\n\n  acceptCookies() {\n    localStorage.setItem(this.storageKey, this.acceptValue);\n    this.showBanner = false;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ActionBarModule } from '../action-bar/action-bar.module';\nimport { AlertModule } from '../alert/alert.module';\nimport { HeaderModule } from '../header/header.module';\nimport { LoginModule } from '../login/login.module';\nimport { NavigatorModule } from '../navigator/navigator.module';\nimport { TabsModule } from '../tabs/tabs.module';\nimport { BootstrapComponent } from './bootstrap.component';\nimport { CommonModule } from '../common/common.module';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { CookieBannerComponent } from './cookie-banner/cookie-banner.component';\n\n/**\n * The module which allows to bootstrap a custom application.\n * Use it as `bootstrap: []` component in your main app module\n * or as `<c8y-bootstrap>` in your main app.\n */\n@NgModule({\n  declarations: [\n    BootstrapComponent,\n    CookieBannerComponent\n  ],\n  imports: [\n    CommonModule,\n    HeaderModule,\n    LoginModule,\n    RouterModule,\n    TabsModule,\n    ActionBarModule,\n    AlertModule,\n    NavigatorModule,\n    TooltipModule\n  ],\n  exports: [\n    BootstrapComponent\n  ],\n  entryComponents: [\n    BootstrapComponent\n  ]\n})\nexport class BootstrapModule {}\n","/* tslint:disable:max-classes-per-file */\n\nimport { Directive, TemplateRef, Type } from '@angular/core';\n\nimport { Column } from '../data-grid.model';\n\nexport interface CellRendererDef {\n  template: TemplateRef<any>;\n}\n\nexport interface CellRendererSpec {\n  renderer: TemplateRef<CellRendererContext> | Type<any>;\n  context: CellRendererContext;\n}\n\nexport class CellRendererContext {\n  value: any;\n  item?: any;\n  property: Column;\n}\n\n@Directive({ selector: '[c8yCellRendererDef]' })\nexport class CellRendererDefDirective implements CellRendererDef {\n  constructor(public template: TemplateRef<any>) {}\n}\n\n@Directive({ selector: '[c8yHeaderCellRendererDef]' })\nexport class HeaderCellRendererDefDirective implements CellRendererDef {\n  constructor(public template: TemplateRef<any>) {}\n}\n","/* tslint:disable:max-classes-per-file */\n\nimport { Directive, TemplateRef, Type } from '@angular/core';\nimport { Column, FilterPredicateFunction } from '../data-grid.model';\n\nexport interface FilteringFormRendererSpec {\n  renderer: TemplateRef<FilteringFormRendererContext> | Type<any>;\n  context: FilteringFormRendererContext;\n}\n\nexport class FilteringFormRendererContext {\n  property: Column;\n  applyFilter: (filteringModifier: FilteringModifier) => void;\n  resetFilter: () => void;\n}\n\nexport interface FilteringModifier {\n  filterPredicate?: string | FilterPredicateFunction;\n  externalFilterQuery?: string | object;\n}\n\n@Directive({ selector: '[c8yFilteringFormRendererDef]' })\nexport class FilteringFormRendererDefDirective {\n  constructor(public template: TemplateRef<any>) {}\n}\n","import { ContentChild, Directive, Input } from '@angular/core';\n\nimport { CellRendererDefDirective, HeaderCellRendererDefDirective } from './cell-renderer';\nimport { FilteringFormRendererDefDirective } from './filtering-form-renderer';\n\n@Directive({ selector: 'c8y-column' })\nexport class ColumnDirective {\n  @Input() name: string;\n\n  @ContentChild(CellRendererDefDirective, { static: false })\n  cellRendererDef: CellRendererDefDirective;\n\n  @ContentChild(HeaderCellRendererDefDirective, { static: false })\n  headerCellRendererDef: HeaderCellRendererDefDirective;\n\n  @ContentChild(FilteringFormRendererDefDirective, { static: false })\n  filteringFormRendererDef: FilteringFormRendererDefDirective;\n}\n","import { CollectionViewer, DataSource } from '@angular/cdk/collections';\nimport {\n  chunk,\n  flow,\n  get,\n  isNaN as _isNaN,\n  isNil,\n  mapValues,\n  omitBy,\n  orderBy,\n  parseInt as _parseInt,\n  pick\n} from 'lodash-es';\nimport { BehaviorSubject, defer, from, isObservable, Observable, of, empty } from 'rxjs';\nimport { catchError, finalize, map, tap, switchMap } from 'rxjs/operators';\n\nimport { Column, DataSourceStats, ServerSideDataResult } from './data-grid.model';\n\nexport class GridDataSource implements DataSource<object> {\n  loading$: Observable<boolean>;\n  data$: Observable<object[]>;\n  stats$: Observable<DataSourceStats>;\n  selection$: Observable<any>;\n\n  private loadingSubject = new BehaviorSubject<boolean>(false);\n  private dataSourceSubject = new BehaviorSubject<object[]>([]);\n  private dataStatsSubject = new BehaviorSubject<DataSourceStats>({\n    size: 0,\n    filteredSize: 0,\n    currentPage: 0,\n    currentPageSize: 0,\n    firstPageSize: 0\n  });\n  private dataSelectionSubject = new BehaviorSubject<any>({\n    filteredDataIds: []\n  });\n\n  constructor() {\n    this.loading$ = this.loadingSubject.asObservable();\n    this.data$ = this.dataSourceSubject.asObservable();\n    this.stats$ = this.dataStatsSubject.asObservable();\n    this.selection$ = this.dataSelectionSubject.asObservable();\n  }\n\n  connect(collectionViewer: CollectionViewer): Observable<object[]> {\n    return this.data$;\n  }\n\n  disconnect(collectionViewer: CollectionViewer): void {\n    this.loadingSubject.complete();\n    this.dataSourceSubject.complete();\n    this.dataStatsSubject.complete();\n    this.dataSelectionSubject.complete();\n  }\n\n  loadData({\n    rows,\n    columns,\n    pagination,\n    searchText,\n    serverSideDataCallback,\n    selectable,\n    selectionPrimaryKey\n  }) {\n    const clientSideData$ = this.toObservable(rows).pipe(\n      map(initialData => {\n        let filteredSize = 0;\n        let filteredDataIds = [];\n\n        const transformedData = flow(\n          data => this.doClientSideSearch({ data, columns, searchText }),\n          data => this.doClientSideFiltering({ data, columns }),\n          data => this.doClientSideSorting({ data, columns }),\n          data => {\n            filteredSize = data.length;\n            filteredDataIds = selectable\n              ? data.map(item => item[selectionPrimaryKey])\n              : filteredDataIds;\n\n            return data;\n          },\n          data => this.doClientSidePagination({ data, pagination })\n        )(initialData);\n\n        this.dataStatsSubject.next({\n          size: initialData.length,\n          filteredSize,\n          currentPage: pagination.currentPage,\n          currentPageSize: transformedData.length,\n          firstPageSize: pagination.pageSize\n        });\n        this.dataSelectionSubject.next({ filteredDataIds });\n\n        return transformedData;\n      })\n    );\n\n    const serverSideData$ = defer(() =>\n      this.toObservable(\n        serverSideDataCallback({\n          columns,\n          searchText,\n          pagination,\n          selection: { enabled: selectable, primaryKey: selectionPrimaryKey }\n        })\n      )\n    ).pipe(\n      map((result: ServerSideDataResult) => {\n        const { data, paging, size, filteredSize, filteredDataIds } = result;\n\n        this.dataStatsSubject.next({\n          size,\n          filteredSize,\n          currentPage: paging.currentPage,\n          currentPageSize: data.length,\n          firstPageSize: paging.pageSize\n        });\n        this.dataSelectionSubject.next({ filteredDataIds: filteredDataIds || [] });\n\n        return data;\n      })\n    );\n\n    const data$ = typeof serverSideDataCallback === 'function' ? serverSideData$ : clientSideData$;\n\n    of([])\n      .pipe(\n        tap(() => this.loadingSubject.next(true)),\n        switchMap(() => data$),\n        catchError(err => {\n          this.dataStatsSubject.next({\n            size: 0,\n            filteredSize: 0,\n            currentPage: 0,\n            currentPageSize: 0,\n            firstPageSize: 0\n          });\n          this.dataSelectionSubject.next({ filteredDataIds: [] });\n          return of([]);\n        }),\n        finalize(() => this.loadingSubject.next(false))\n      )\n      .subscribe(data => {\n        this.dataSourceSubject.next(data);\n      });\n  }\n\n  resolveValue(x, path) {\n    return get(x, path);\n  }\n\n  resolveFunction(x) {\n    return typeof x === 'function' ? x() : x;\n  }\n\n  normalizeNil(x) {\n    return isNil(x) ? '' : x;\n  }\n\n  private doClientSideFiltering({ data, columns }) {\n    return columns.reduce((result, column) => {\n      const { filterPredicate } = column;\n\n      if (typeof filterPredicate === 'string') {\n        return this.doClientSideSearch({\n          data: result,\n          columns: [column],\n          searchText: filterPredicate\n        });\n      }\n\n      if (typeof filterPredicate === 'function') {\n        return result.filter(item => filterPredicate(item, column.path));\n      }\n\n      return result;\n    }, data);\n  }\n\n  private doClientSideSearch({ data, columns, searchText }) {\n    const propPaths = columns.map(({ path }) => path).filter(column => !isNil(column));\n\n    const regexSearch = this.createRegexSearch(searchText);\n\n    return data.filter(item => {\n      const itemWithResolvedValues = flow(\n        x => pick(x, propPaths),\n        x => mapValues(x, this.resolveFunction),\n        x => omitBy(x, isNil)\n      )(item);\n\n      const cellValues = Object.values(itemWithResolvedValues);\n\n      return cellValues.some(cellValue => regexSearch.test(cellValue.toString()));\n    });\n  }\n\n  private doClientSideSorting({ data, columns }) {\n    const actives: Column[] = columns.filter(({ sortOrder }: Column) => !!sortOrder);\n\n    const sortingState = {\n      paths: actives.map(({ path }) => path),\n      orders: actives.map(({ sortOrder }) => sortOrder)\n    };\n\n    return orderBy(data, sortingState.paths, sortingState.orders);\n  }\n\n  private doClientSidePagination({ data, pagination }) {\n    return pagination\n      ? get(chunk(data, pagination.pageSize), pagination.currentPage - 1, [])\n      : data;\n  }\n\n  private createRegexSearch(filterValue) {\n    return RegExp(escapeRegExpPattern(filterValue), 'i');\n  }\n\n  private toObservable(x): Observable<any> {\n    return isObservable(x) ? x : x instanceof Promise ? from(x) : of(x);\n  }\n}\n\n/**\n *\n * @param string pattern Regex pattern.\n * @return string The escaped regex.\n * @see https://stackoverflow.com/a/3561711/2013891\n */\nfunction escapeRegExpPattern(pattern = '') {\n  return pattern.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n","import { gettext } from '../i18n/gettext';\nimport { formatDate } from '@angular/common';\n// TODO remove  when c8y-icon will works\n\nexport const deviceAvailabilityIconMap = {\n  sendData: {\n    AVAILABLE: {\n      icon: 'long-arrow-right',\n      class: 'statusOk'\n    },\n    UNAVAILABLE: {\n      icon: 'long-arrow-right',\n      class: 'statusNok'\n    },\n    UNKNOWN: {\n      icon: 'long-arrow-right',\n      class: 'statusUnknown'\n    },\n    NOT_MONITORED: {\n      icon: 'long-arrow-right',\n      class: 'statusUnknown'\n    }\n  },\n  push: {\n    CONNECTED: {\n      icon: 'long-arrow-left',\n      class: 'statusOk'\n    },\n    DISCONNECTED: {\n      icon: 'long-arrow-left',\n      class: 'statusUnknown'\n    },\n    UNKNOWN: {\n      icon: 'long-arrow-left',\n      class: 'statusUnknown'\n    },\n    MAINTENANCE: {\n      icon: 'wrench',\n      class: 'statusAlert'\n    }\n  },\n  device: {\n    MAINTENANCE: {\n      icon: 'wrench',\n      class: 'statusAlert'\n    }\n  }\n};\n\nexport const tooltips = {\n  sendStatusConnected: (lastMessage, translateService) => {\n    const date = formatDate(new Date(lastMessage), 'medium', translateService.currentLang);\n    return translateService.instant(gettext('Device last request:\\n{{date}}'),\n      { date });\n  },\n  sendStatusDisconnected: gettext('Connection not monitored'),\n  pushStatusConnected: gettext('Connection to device established'),\n  pushStatusDisconnected: gettext('Connection to device not established (not supported by device or no connectivity)'),\n  maintenance: gettext('Under maintenance')\n};\n\nexport enum PushStatusLabels {\n  CONNECTED = gettext('Push connection: active'),\n  DISCONNECTED = gettext('Push connection: inactive'),\n  UNKNOWN = gettext('Push connection: inactive')\n}\n\nexport enum SendStatusLabels {\n  AVAILABLE = gettext('Send connection: online'),\n  NOT_MONITORED = gettext('Send connection: not monitored'),\n  UNAVAILABLE = gettext('Send connection: offline'),\n  UNKNOWN = gettext('Send connection status unknown'),\n  MAINTENANCE = gettext('Under maintenance')\n}\n","import { CdkHeaderCell } from '@angular/cdk/table';\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  QueryList,\n  ViewChildren\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { flow, get, parseInt as _parseInt, union, without } from 'lodash-es';\nimport { combineLatest, Subject } from 'rxjs';\nimport {\n  debounceTime,\n  distinctUntilChanged,\n  first,\n  mergeMap,\n  takeUntil,\n  tap\n} from 'rxjs/operators';\n\nimport { ColumnDirective } from './column/column.directive';\nimport { CellRendererSpec } from './column/cell-renderer';\nimport { FilteringFormRendererSpec, FilteringModifier } from './column/filtering-form-renderer';\nimport {\n  ActionControl,\n  BuiltInActionType,\n  BulkActionControl,\n  Column,\n  ColumnDataType,\n  DataGrid,\n  DisplayOptions,\n  FilteringActionType,\n  minColumnGridTrackSize,\n  Pagination,\n  ratiosByColumnTypes,\n  Row,\n  ServerSideDataCallback,\n  SortOrder,\n  SpecialColumnName,\n  DataSourceStats\n} from './data-grid.model';\nimport { GridDataSource } from './grid-data-source';\nimport { gettext } from '../i18n/gettext';\n\n@Component({\n  selector: 'c8y-data-grid',\n  templateUrl: './data-grid.component.html'\n})\nexport class DataGridComponent implements DataGrid, OnChanges, AfterViewInit {\n  @Input() title: string = gettext('Items');\n  @Input() loadingItemsLabel: string = gettext('Loading items…');\n  @Input() noMatchingItemsLabel: string = gettext('No matching items.');\n\n  columns: Column[];\n  @Input('columns')\n  set _columns(columns) {\n    this.columns = columns || [];\n  }\n\n  dataSource = new GridDataSource();\n  rows: Row[];\n  @Input('rows')\n  set _rows(rows) {\n    this.rows = rows || [];\n  }\n\n  filteringLabelsParams = {\n    filteredItemsCount: 0,\n    allItemsCount: 0\n  };\n\n  pagination: Pagination;\n  paginationLabelParams = {\n    pageFirstItemIdx: 0,\n    pageLastItemIdx: 0,\n    itemsTotal: 0\n  };\n  readonly possiblePageSizes: number[] = [10, 15, 20, 30, 50];\n  readonly minPossiblePageSize = Math.min(...this.possiblePageSizes);\n  @Input('pagination')\n  set _pagination(pagination) {\n    this.pagination = pagination;\n    const pageSize = get(this.pagination, 'pageSize');\n\n    if (\n      pageSize &&\n      !this.possiblePageSizes.find(possiblePageSize => possiblePageSize === pageSize)\n    ) {\n      this.pagination = { ...this.pagination, pageSize: 10 };\n    }\n  }\n\n  serverSideDataCallback: ServerSideDataCallback;\n  @Input('serverSideDataCallback')\n  set _serverSideDataCallback(serverSideDataCallback) {\n    this.serverSideDataCallback = serverSideDataCallback;\n  }\n\n  selectable = false;\n  @Input('selectable')\n  set _selectable(selectable) {\n    this.selectable = selectable;\n  }\n\n  selectionPrimaryKey = 'id';\n  @Input('selectionPrimaryKey')\n  set _selectionPrimaryKey(selectionPrimaryKey) {\n    this.selectionPrimaryKey = selectionPrimaryKey;\n  }\n\n  displayOptions: DisplayOptions = {\n    striped: true,\n    bordered: false,\n    gridHeader: true\n  };\n  @Input('displayOptions')\n  set _displayOptions(displayOptions) {\n    this.displayOptions = { ...this.displayOptions, ...displayOptions };\n  }\n\n  actionControls: ActionControl[];\n  @Input('actionControls')\n  set _actionControls(actionControls) {\n    this.actionControls = actionControls || [];\n  }\n\n  bulkActionControls: BulkActionControl[];\n  @Input('bulkActionControls')\n  set _bulkActionControls(bulkActionControls) {\n    this.bulkActionControls = bulkActionControls || [];\n  }\n\n  @Output() rowMouseOver = new EventEmitter<object>();\n  @Output() rowMouseLeave = new EventEmitter<object>();\n  @Output() rowClick = new EventEmitter<object>();\n\n  @Output() itemsSelect = new EventEmitter<string[]>();\n\n  @ContentChildren(ColumnDirective) columnRenderers: QueryList<ColumnDirective>;\n\n  columnNames = [];\n\n  styles = {\n    tableCursor: 'auto',\n    gridTemplateColumns: undefined\n  };\n\n  searchText$ = new EventEmitter<string>();\n  searchText = '';\n  filteringApplied = false;\n  totalPagesCount = Infinity;\n\n  selectedItemIds: string[] = [];\n  currentPageSelectionState = {\n    allSelected: false,\n    allDeselected: true\n  };\n\n  builtInActionType = {\n    Edit: BuiltInActionType.Edit,\n    Delete: BuiltInActionType.Delete,\n    Export: BuiltInActionType.Export\n  };\n\n  resizeHandleMouseDown$ = new EventEmitter<any>();\n  resizeHandleContainerMouseMove$ = new EventEmitter<any>();\n  resizeHandleContainerMouseUp$ = new EventEmitter<any>();\n  private headerBeingResized: {\n    columnName: string;\n    el: HTMLElement;\n  };\n  @ViewChildren(CdkHeaderCell, { read: ElementRef }) private thRefs: QueryList<ElementRef>;\n  private thEls;\n\n  private unsubscribe$ = new Subject<any>();\n\n  constructor(\n    private sanitizer: DomSanitizer,\n    private hostRef: ElementRef,\n    private cd: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    this.searchText$\n      .pipe(\n        takeUntil(this.unsubscribe$),\n        debounceTime(300),\n        distinctUntilChanged(),\n        tap(searchText => {\n          this.searchText = searchText;\n        })\n      )\n      .subscribe(() => {\n        this.reload();\n      });\n\n    if (this.selectable) {\n      combineLatest(this.dataSource.data$, this.itemsSelect.asObservable())\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(([data]) => {\n          const currentPageEmpty = data.length === 0;\n\n          this.currentPageSelectionState = {\n            allSelected: currentPageEmpty ? false : data.every(item => this.isItemSelected(item)),\n            allDeselected: currentPageEmpty ? true : data.every(item => !this.isItemSelected(item))\n          };\n        });\n    }\n  }\n\n  ngOnChanges() {\n    this.updateColumns();\n    this.loadData();\n  }\n\n  ngAfterViewInit() {\n    this.updateGridColumnsSize();\n    this.thEls = this.thRefs.toArray().map(({ nativeElement }) => nativeElement);\n    this.setupResizeHandle();\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  trackByName(index, item) {\n    return item.name;\n  }\n\n  resolveCellValue(row, path) {\n    return flow([\n      x => this.dataSource.resolveValue(x, path),\n      this.dataSource.resolveFunction,\n      this.dataSource.normalizeNil\n    ])(row);\n  }\n\n  changeSortOrder(columnName) {\n    const column = this.columns.find(({ name }) => name === columnName);\n\n    if (column) {\n      const { sortOrder } = column;\n\n      if (!sortOrder) {\n        this.updateSorting([columnName], 'asc');\n      } else if (sortOrder === 'asc') {\n        this.updateSorting([columnName], 'desc');\n      } else {\n        this.updateSorting([columnName], '');\n      }\n    }\n  }\n\n  updateSorting(columnNames: string[], sortOrder: SortOrder) {\n    this.columns = this.columns.map(\n      (column): Column => {\n        if (columnNames.includes(column.name)) {\n          return { ...column, sortOrder };\n        }\n\n        return column;\n      }\n    );\n\n    this.reload();\n  }\n\n  applyFilter(columnName, dropdown, filteringModifier) {\n    this.updateFiltering([columnName], {\n      type: FilteringActionType.ApplyFilter,\n      payload: { filteringModifier }\n    });\n    dropdown.hide();\n  }\n\n  resetFilter(columnName, dropdown) {\n    this.updateFiltering([columnName], { type: FilteringActionType.ResetFilter });\n    dropdown.hide();\n  }\n\n  clearFilters() {\n    this.updateFiltering(this.columns.map(({ name }) => name), {\n      type: FilteringActionType.ResetFilter\n    });\n  }\n\n  updateFiltering(\n    columnNames: string[],\n    action: {\n      type: FilteringActionType;\n      payload?: { filteringModifier: FilteringModifier };\n    }\n  ) {\n    this.columns = this.columns.map(column => {\n      if (columnNames.includes(column.name)) {\n        return {\n          ...column,\n          ...(action.type === FilteringActionType.ApplyFilter\n            ? action.payload.filteringModifier\n            : { filterPredicate: undefined, externalFilterQuery: undefined })\n        };\n      }\n\n      return column;\n    });\n\n    this.updateFilteringApplied();\n    this.reload();\n  }\n\n  updateFilteringApplied() {\n    this.filteringApplied = this.columns.some(this.isColumnFilteringApplied);\n  }\n\n  isColumnFilteringApplied(column: Column): boolean {\n    const { filterable, filterPredicate, externalFilterQuery } = column;\n\n    return !!(filterable && (filterPredicate || externalFilterQuery));\n  }\n\n  updatePagination({ itemsPerPage, page }) {\n    this.pagination = { ...this.pagination, pageSize: itemsPerPage, currentPage: page };\n    this.loadData();\n  }\n\n  reload() {\n    this.pagination = { ...this.pagination, currentPage: 1 };\n    this.loadData();\n  }\n\n  getCellRendererSpec({ value, row, columnName }): CellRendererSpec {\n    return this._getCellRendererSpec({ type: 'CELL', value, row, columnName });\n  }\n\n  getHeaderCellRendererSpec({ value, columnName }): CellRendererSpec {\n    return this._getCellRendererSpec({ type: 'HEADER', value, row: undefined, columnName });\n  }\n\n  getFilteringFormRendererSpec({ column, dropdown }): FilteringFormRendererSpec {\n    return {\n      renderer:\n        get(this.getColumnRenderer(column), 'filteringFormRendererDef.template') ||\n        column.filteringFormRendererComponent,\n      context: {\n        property: column,\n        applyFilter: this.applyFilter.bind(this, column.name, dropdown),\n        resetFilter: this.resetFilter.bind(this, column.name, dropdown)\n      }\n    };\n  }\n\n  setAllItemsSelected(selected) {\n    this.dataSource.selection$\n      .pipe(first())\n      .subscribe(({ filteredDataIds }) => this.setItemsSelected(filteredDataIds, selected));\n  }\n\n  setAllItemsInCurrentPageSelected(selected) {\n    this.dataSource.data$.pipe(first()).subscribe(data => this.setItemsSelected(data, selected));\n  }\n\n  setItemsSelected(items: any[], selected) {\n    const itemIds = items.map((item: object | string) =>\n      typeof item === 'object' ? item[this.selectionPrimaryKey] : item\n    );\n\n    this.selectedItemIds = selected\n      ? union(this.selectedItemIds, itemIds)\n      : without(this.selectedItemIds, ...itemIds);\n\n    this.itemsSelect.emit(this.selectedItemIds);\n  }\n\n  isItemSelected(item) {\n    return this.selectedItemIds.includes(item[this.selectionPrimaryKey]);\n  }\n\n  onColumnDrop({ previousIndex, currentIndex }) {\n    const differentIndex = previousIndex !== currentIndex;\n\n    if (differentIndex) {\n      const column = this.columns.splice(previousIndex, 1);\n      this.columns.splice(currentIndex, 0, column[0]);\n    }\n\n    this.updateColumnNames();\n    this.updateGridColumnsSize();\n  }\n\n  updateGridColumnsSize() {\n    this.styles = {\n      ...this.styles,\n      gridTemplateColumns: this.sanitizer.bypassSecurityTrustStyle(\n        this.columns\n          .filter(column => column.visible)\n          .map(({ gridTrackSize }) => gridTrackSize)\n          .join(' ')\n      )\n    };\n  }\n\n  private updateColumns() {\n    const specialColumn = {\n      gridTrackSize: '42px',\n      sortable: false,\n      positionFixed: true\n    };\n\n    this.columns = [\n      this.selectable ? { ...specialColumn, name: SpecialColumnName.Checkbox } : undefined,\n      ...this.columns,\n      this.actionControls.length > 0\n        ? { ...specialColumn, name: SpecialColumnName.Actions }\n        : undefined\n    ]\n      .filter(Boolean)\n      .map(this.withColumnDefaults);\n\n    this.updateColumnNames();\n    this.updateGridColumnsSize();\n    this.updateFilteringApplied();\n  }\n\n  private withColumnDefaults(column): Column {\n    const dataType = column.dataType || ColumnDataType.TextShort;\n    const { headerCSSClassName, cellCSSClassName } = column;\n\n    return {\n      visible: true,\n      positionFixed: false,\n      sortable: true,\n      sortOrder: '',\n      filterable: false,\n      ...column,\n      dataType,\n      gridTrackSize:\n        column.gridTrackSize ||\n        `minmax(${minColumnGridTrackSize}px, ${ratiosByColumnTypes[dataType]}fr)`,\n      headerCSSClassName:\n        (typeof headerCSSClassName === 'string'\n          ? headerCSSClassName.split(' ')\n          : headerCSSClassName) || [],\n      cellCSSClassName:\n        (typeof cellCSSClassName === 'string' ? cellCSSClassName.split(' ') : cellCSSClassName) ||\n        []\n    };\n  }\n\n  private updateColumnNames() {\n    this.columnNames = this.columns.map(({ name }) => name);\n  }\n\n  private setupResizeHandle() {\n    const resizeHandleDrag$ = this.resizeHandleMouseDown$.pipe(\n      takeUntil(this.unsubscribe$),\n      tap(() => this.clearMouseHighlights()),\n      mergeMap(({ event, targetColumnName }) => {\n        this.columns = this.columns.map(column => {\n          if (column.name === targetColumnName) {\n            return {\n              ...column,\n              headerCSSClassName: union(column.headerCSSClassName, ['header--being-resized'])\n            };\n          }\n\n          return column;\n        });\n\n        this.headerBeingResized = {\n          columnName: targetColumnName,\n          el: event.target.parentNode\n        };\n\n        this.styles = {\n          ...this.styles,\n          tableCursor: 'col-resize'\n        };\n\n        return this.resizeHandleContainerMouseMove$.pipe(\n          tap(() => this.clearMouseHighlights()),\n          takeUntil(this.resizeHandleContainerMouseUp$)\n        );\n      })\n    );\n\n    resizeHandleDrag$.subscribe(event => {\n      requestAnimationFrame(() => {\n        this.columns = this.columns.map((column, i) => {\n          if (column.name === this.headerBeingResized.columnName) {\n            const wrapper = this.hostRef.nativeElement;\n\n            // Read wrapper's offset left relative to the document.\n            const horizontalOffset = wrapper.getBoundingClientRect().left;\n\n            // Adjust with the wrapper horizontal scroll position.\n            const horizontalScrollOffset = wrapper.scrollLeft - horizontalOffset;\n\n            // Calculate the desired width.\n            const width =\n              horizontalScrollOffset + event.clientX - (this.headerBeingResized.el.offsetLeft || 0);\n\n            return {\n              ...column,\n              // Update the column object with the new size value, enforce our minimum size.\n              gridTrackSize: `${Math.max(minColumnGridTrackSize, width)}px`\n            };\n          }\n\n          // For the other headers which don't have a set width, fix it to their computed width.\n          if (column.gridTrackSize.startsWith('minmax')) {\n            return {\n              ...column,\n              // isn't fixed yet (it would be a px value)\n              gridTrackSize: `${_parseInt(this.thEls[i].clientWidth)}px`\n            };\n          }\n\n          return column;\n        });\n\n        /*\n         * Update the column sizes.\n         * Note: grid-template-columns sets the width for all columns in one value.\n         */\n        this.updateGridColumnsSize();\n      });\n    });\n\n    this.resizeHandleContainerMouseUp$.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n      if (this.headerBeingResized) {\n        this.columns = this.columns.map(column => {\n          if (column.name === this.headerBeingResized.columnName) {\n            return {\n              ...column,\n              headerCSSClassName: without(column.headerCSSClassName, 'header--being-resized')\n            };\n          }\n\n          return column;\n        });\n        this.headerBeingResized = undefined;\n\n        this.styles = {\n          ...this.styles,\n          tableCursor: 'auto'\n        };\n      }\n    });\n  }\n\n  private clearMouseHighlights() {\n    if (window.getSelection) {\n      window.getSelection().removeAllRanges();\n    }\n  }\n\n  private _getCellRendererSpec({ type, value, row, columnName }): CellRendererSpec {\n    const column = this.columns.find(({ name }) => name === columnName);\n    const columnRenderer = this.getColumnRenderer(column);\n    const rendererTemplate = get(\n      columnRenderer,\n      `${type === 'HEADER' ? 'headerCellRendererDef' : 'cellRendererDef'}.template`\n    );\n\n    const { cellRendererComponent, headerCellRendererComponent } = column;\n    const rendererComponent =\n      type === 'HEADER' ? headerCellRendererComponent : cellRendererComponent;\n\n    return {\n      renderer: rendererTemplate || rendererComponent,\n      context: {\n        value,\n        item: row,\n        property: column\n      }\n    };\n  }\n\n  private getColumnRenderer(column): ColumnDirective {\n    return this.columnRenderers.toArray().find(({ name }) => name === column.name);\n  }\n\n  private loadData() {\n    const {\n      rows,\n      columns,\n      pagination,\n      searchText,\n      serverSideDataCallback,\n      selectable,\n      selectionPrimaryKey\n    } = this;\n\n    this.dataSource.loadData({\n      rows,\n      columns,\n      pagination,\n      searchText,\n      serverSideDataCallback,\n      selectable,\n      selectionPrimaryKey\n    });\n\n    this.dataSource.stats$.subscribe(stats => {\n      this.updateFilteringLabelsParams(stats);\n      this.updatePaginationLabelParams(stats);\n    });\n  }\n\n  private updateFilteringLabelsParams(stats: DataSourceStats) {\n    this.filteringLabelsParams = {\n      filteredItemsCount: stats.filteredSize,\n      allItemsCount: stats.size\n    };\n  }\n\n  private updatePaginationLabelParams(stats: DataSourceStats) {\n    const pageFirstItemIdx = (stats.currentPage - 1) * stats.firstPageSize + 1;\n    this.paginationLabelParams = {\n      pageFirstItemIdx,\n      pageLastItemIdx: pageFirstItemIdx + (stats.currentPageSize - 1),\n      itemsTotal: stats.filteredSize\n    };\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  DoCheck,\n  Injector,\n  Input,\n  OnChanges,\n  TemplateRef,\n  Type\n} from '@angular/core';\n\nimport { CellRendererContext, CellRendererSpec } from './cell-renderer';\n\n@Component({\n  selector: 'c8y-cell-renderer',\n  templateUrl: './cell-renderer.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CellRendererComponent implements OnChanges, DoCheck {\n  spec: CellRendererSpec;\n  @Input('spec')\n  set _spec(spec: CellRendererSpec) {\n    this.spec = spec;\n  }\n  prevSpec: CellRendererSpec;\n\n  rendererType: 'TEMPLATE' | 'COMPONENT';\n  rendererInjector: Injector;\n\n  constructor(private injector: Injector, private cd: ChangeDetectorRef) {}\n\n  ngOnChanges() {\n    if (!this.prevSpec) {\n      this.prevSpec = this.spec;\n    }\n\n    const { renderer } = this.spec;\n\n    if (renderer instanceof TemplateRef) {\n      this.rendererType = 'TEMPLATE';\n    } else if (renderer instanceof Type) {\n      this.rendererType = 'COMPONENT';\n\n      this.rendererInjector = Injector.create({\n        providers: [{ provide: CellRendererContext, useValue: this.spec.context }],\n        parent: this.injector\n      });\n    }\n  }\n\n  ngDoCheck() {\n    if (!this.spec.context.value === this.prevSpec.context.value) {\n      this.prevSpec = this.spec;\n      this.cd.markForCheck();\n    }\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  DoCheck,\n  Injector,\n  Input,\n  OnChanges,\n  TemplateRef,\n  Type\n} from '@angular/core';\nimport { isEqual } from 'lodash-es';\n\nimport { FilteringFormRendererContext, FilteringFormRendererSpec } from './filtering-form-renderer';\n\n@Component({\n  selector: 'c8y-filtering-form-renderer',\n  templateUrl: './filtering-form-renderer.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FilteringFormRendererComponent implements OnChanges {\n  spec: FilteringFormRendererSpec;\n  @Input('spec')\n  set _spec(spec: FilteringFormRendererSpec) {\n    this.spec = spec;\n  }\n\n  rendererType: 'TEMPLATE' | 'COMPONENT';\n  rendererInjector: Injector;\n  defaultRendererFilterText = '';\n\n  constructor(private injector: Injector, private cd: ChangeDetectorRef) {}\n\n  ngOnChanges() {\n    const { renderer, context } = this.spec;\n\n    if (renderer instanceof TemplateRef) {\n      this.rendererType = 'TEMPLATE';\n    } else if (renderer instanceof Type) {\n      this.rendererType = 'COMPONENT';\n\n      this.rendererInjector = Injector.create({\n        providers: [{ provide: FilteringFormRendererContext, useValue: this.spec.context }],\n        parent: this.injector\n      });\n    }\n\n    const { filterPredicate } = context.property;\n    if (typeof filterPredicate === 'string') {\n      this.defaultRendererFilterText = filterPredicate;\n    }\n  }\n}\n","import { CdkTableModule } from '@angular/cdk/table';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { CommonModule as C8YCommonModule } from '../common/common.module';\nimport { DataGridComponent } from './data-grid.component';\nimport { ColumnDirective } from './column/column.directive';\nimport { CellRendererDefDirective, HeaderCellRendererDefDirective } from './column/cell-renderer';\nimport { CellRendererComponent } from './column/cell-renderer.component';\nimport { FilteringFormRendererDefDirective } from './column/filtering-form-renderer';\nimport { FilteringFormRendererComponent } from './column/filtering-form-renderer.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CdkTableModule,\n    DragDropModule,\n    FormsModule,\n    ReactiveFormsModule,\n    C8YCommonModule,\n    BsDropdownModule.forRoot(),\n    PopoverModule.forRoot(),\n    PaginationModule.forRoot()\n  ],\n  declarations: [\n    CellRendererDefDirective,\n    HeaderCellRendererDefDirective,\n    CellRendererComponent,\n    FilteringFormRendererDefDirective,\n    FilteringFormRendererComponent,\n    ColumnDirective,\n    DataGridComponent\n  ],\n  exports: [\n    CellRendererDefDirective,\n    HeaderCellRendererDefDirective,\n    FilteringFormRendererDefDirective,\n    ColumnDirective,\n    DataGridComponent\n  ],\n  entryComponents: [DataGridComponent]\n})\nexport class DataGridModule {}\n","import { Type } from '@angular/core';\nimport {\n  DeviceGridColumn,\n  DeviceGridColumnFilteringConfig,\n  DeviceGridColumnSortingConfig\n} from '../device-grid.models';\nimport {\n  ColumnDataType,\n  SortOrder,\n  FilterPredicateFunction\n} from '../../data-grid/data-grid.model';\n\nexport class BaseDeviceGridColumn implements DeviceGridColumn {\n  name: string;\n  path?: string;\n  header?: string;\n  dataType?: ColumnDataType;\n\n  visible?: boolean;\n  positionFixed?: boolean;\n  gridTrackSize?: string;\n\n  headerCSSClassName?: string | string[];\n  headerCellRendererComponent?: Type<any>;\n\n  cellCSSClassName?: string | string[];\n  cellRendererComponent?: Type<any>;\n\n  sortable?: boolean;\n  sortingConfig?: DeviceGridColumnSortingConfig;\n  sortOrder?: SortOrder;\n\n  filterable?: boolean;\n  filteringConfig?: DeviceGridColumnFilteringConfig;\n  filteringFormRendererComponent?: Type<any>;\n  filterPredicate?: string | FilterPredicateFunction;\n  externalFilterQuery?: string | object;\n}\n","import { Component } from '@angular/core';\nimport { CellRendererContext } from '../../data-grid/column/cell-renderer';\n\n@Component({\n  template: `\n    <device-status [mo]=\"context.item\"></device-status>\n  `\n})\nexport class StatusCellRendererComponent {\n  constructor(public context: CellRendererContext) {}\n}\n","import { BaseDeviceGridColumn } from './base.device-grid-column';\nimport { StatusCellRendererComponent } from './status.cell-renderer.component';\nimport { ColumnDataType } from '../../data-grid/data-grid.model';\nimport { gettext } from '../../i18n/gettext';\n\nexport class StatusDeviceGridColumn extends BaseDeviceGridColumn {\n  constructor() {\n    super();\n\n    const availabilityStatusPath = 'c8y_Availability.status';\n    const requiredAvailabilityPath = 'c8y_RequiredAvailability';\n    const connectionStatusPath = 'c8y_Connection.status';\n\n    this.name = 'status';\n    this.header = gettext('Status');\n    this.dataType = ColumnDataType.Icon;\n    this.cellRendererComponent = StatusCellRendererComponent;\n\n    this.filterable = true;\n    this.filteringConfig = {\n      schema: {\n        type: 'object',\n        properties: {\n          sendOnline: {\n            type: 'boolean'\n          },\n          sendOffline: {\n            type: 'boolean'\n          },\n          sendUnknown: {\n            type: 'boolean'\n          },\n          sendNotMonitored: {\n            type: 'boolean'\n          },\n          pushOnline: {\n            type: 'boolean'\n          },\n          pushOffline: {\n            type: 'boolean'\n          },\n          pushUnknown: {\n            type: 'boolean'\n          },\n          maintenance: {\n            type: 'boolean'\n          }\n        }\n      },\n      form: [\n        {\n          type: 'template',\n          template: `<label><span translate>${gettext(\n            'Show devices with send status'\n          )}</span>:</label>`\n        },\n        {\n          key: 'sendOnline',\n          title: gettext('Online')\n        },\n        {\n          key: 'sendOffline',\n          title: gettext('Offline')\n        },\n        {\n          key: 'sendUnknown',\n          title: gettext('Unknown')\n        },\n        {\n          key: 'sendNotMonitored',\n          title: gettext('Not monitored')\n        },\n        {\n          type: 'template',\n          template: `<label><span translate>${gettext(\n            'Show devices with push status'\n          )}</span>:</label>`\n        },\n        {\n          key: 'pushOnline',\n          title: gettext('Online')\n        },\n        {\n          key: 'pushOffline',\n          title: gettext('Offline')\n        },\n        {\n          key: 'pushUnknown',\n          title: gettext('Not monitored')\n        },\n        {\n          type: 'template',\n          template: `<label><span translate>${gettext(\n            'Show devices with maintenance status'\n          )}</span>:</label>`\n        },\n        {\n          key: 'maintenance',\n          title: gettext('Under maintenance')\n        }\n      ],\n      getFilter(model) {\n        const filter: any = {};\n        const ors = [];\n        const sendIns = [];\n        const pushIns = [];\n        if (model) {\n          if (model.sendOnline) {\n            sendIns.push('AVAILABLE');\n          }\n          if (model.maintenance) {\n            sendIns.push('MAINTENANCE');\n          }\n          if (model.sendOffline) {\n            sendIns.push('UNAVAILABLE');\n          }\n          if (model.sendUnknown) {\n            ors.push({\n              __and: [\n                { __not: { __has: availabilityStatusPath } },\n                { __has: requiredAvailabilityPath }\n              ]\n            });\n          }\n          if (model.sendNotMonitored) {\n            ors.push({\n              __and: [\n                { __not: { __has: availabilityStatusPath } },\n                { __not: { __has: requiredAvailabilityPath } }\n              ]\n            });\n          }\n\n          if (model.pushOnline) {\n            pushIns.push('CONNECTED');\n          }\n          if (model.pushOffline) {\n            pushIns.push('DISCONNECTED');\n          }\n          if (model.pushUnknown) {\n            ors.push({\n              __not: { __has: connectionStatusPath }\n            });\n          }\n          if (sendIns.length) {\n            ors.push({ [availabilityStatusPath]: { __in: sendIns } });\n          }\n          if (pushIns.length) {\n            ors.push({ [connectionStatusPath]: { __in: pushIns } });\n          }\n          if (ors.length) {\n            filter.__or = ors;\n          }\n        }\n        return filter;\n      }\n    };\n\n    this.sortable = true;\n    this.sortingConfig = {\n      pathSortingConfigs: [{ path: availabilityStatusPath }]\n    };\n  }\n}\n","import { Component, forwardRef, Inject } from '@angular/core';\nimport { CellRendererContext } from '../../data-grid/column/cell-renderer';\nimport { DeviceGridService } from '../device-grid.service';\n\n@Component({\n  template: `\n    <a\n      [href]=\"deviceGridService.getDeviceHref(context.item)\"\n      title=\"{{ deviceGridService.getProperName(context.item) }}\"\n      class=\"interact\"\n    >\n      {{ deviceGridService.getProperName(context.item) }}\n    </a>\n  `\n})\nexport class NameCellRendererComponent {\n  constructor(\n    public context: CellRendererContext,\n    @Inject(forwardRef(() => DeviceGridService)) public deviceGridService: DeviceGridService\n  ) {}\n}\n","import { BaseDeviceGridColumn } from './base.device-grid-column';\nimport { NameCellRendererComponent } from './name.cell-renderer.component';\nimport { ColumnDataRecordClassName } from '../../data-grid/data-grid.model';\nimport { gettext } from '../../i18n/gettext';\n\nexport class NameDeviceGridColumn extends BaseDeviceGridColumn {\n  constructor() {\n    super();\n\n    this.name = 'name';\n    this.path = 'name';\n    this.header = gettext('Name');\n    this.cellCSSClassName = ColumnDataRecordClassName.Header;\n    this.cellRendererComponent = NameCellRendererComponent;\n\n    this.filterable = true;\n    this.filteringConfig = {\n      schema: {\n        type: 'object',\n        properties: {\n          names: {\n            type: 'array',\n            items: {\n              type: 'string'\n            }\n          }\n        }\n      },\n      form: [\n        {\n          key: 'names',\n          title: gettext('Show devices with name'),\n          add: gettext('Or'),\n          items: [\n            {\n              key: 'names[]',\n              notitle: true,\n              placeholder: gettext(\n                'e.g. My Device, you can use an asterisk (*) as wildcard character'\n              )\n            }\n          ]\n        }\n      ],\n      getFilter(model: any): any {\n        const filter: any = {};\n        if (model.names.length) {\n          filter.name = { __in: model.names };\n        }\n        return filter;\n      }\n    };\n\n    this.sortable = true;\n    this.sortingConfig = {\n      pathSortingConfigs: [{ path: this.path }]\n    };\n  }\n}\n","import { Component, forwardRef, Inject } from '@angular/core';\nimport { CellRendererContext } from '../../data-grid/column/cell-renderer';\nimport { DeviceGridService } from '../device-grid.service';\n\n@Component({\n  template: `\n    {{ deviceGridService.getModel(context.item) }}\n  `\n})\nexport class ModelCellRendererComponent {\n  constructor(\n    public context: CellRendererContext,\n    @Inject(forwardRef(() => DeviceGridService)) public deviceGridService: DeviceGridService\n  ) {}\n}\n","import { BaseDeviceGridColumn } from './base.device-grid-column';\nimport { ModelCellRendererComponent } from './model.cell-renderer.component';\nimport { gettext } from '../../i18n/gettext';\n\nexport class ModelDeviceGridColumn extends BaseDeviceGridColumn {\n  constructor() {\n    super();\n\n    const hardwareModelPath = 'c8y_Hardware.model';\n    const vendingModelPath = 'com_nsn_startups_vendme_fragments_VendingMachineTypeInfo.model';\n\n    this.name = 'model';\n    this.header = gettext('Model');\n    this.cellRendererComponent = ModelCellRendererComponent;\n\n    this.filterable = true;\n    this.filteringConfig = {\n      schema: {\n        type: 'object',\n        properties: {\n          models: {\n            type: 'array',\n            items: {\n              type: 'string'\n            }\n          }\n        }\n      },\n      form: [\n        {\n          key: 'models',\n          title: gettext('Show devices with model'),\n          add: gettext('Or'),\n          items: [\n            {\n              key: 'models[]',\n              notitle: true,\n              placeholder: gettext(\n                'e.g. ModelName, you can use an asterisk (*) as wildcard character'\n              )\n            }\n          ]\n        }\n      ],\n      getFilter(model: any): any {\n        const filter: any = {};\n        if (model.models.length) {\n          filter.__or = {\n            [hardwareModelPath]: { __in: model.models },\n            [vendingModelPath]: { __in: model.models }\n          };\n        }\n        return filter;\n      }\n    };\n\n    this.sortable = true;\n    this.sortingConfig = {\n      pathSortingConfigs: [{ path: hardwareModelPath }, { path: vendingModelPath }]\n    };\n  }\n}\n","import { Component, forwardRef, Inject } from '@angular/core';\nimport { CellRendererContext } from '../../data-grid/column/cell-renderer';\nimport { DeviceGridService } from '../device-grid.service';\n\n@Component({\n  template: `\n    {{ deviceGridService.getSerialNumber(context.item) }}\n  `\n})\nexport class SerialNumberCellRendererComponent {\n  constructor(\n    public context: CellRendererContext,\n    @Inject(forwardRef(() => DeviceGridService)) public deviceGridService: DeviceGridService\n  ) {}\n}\n","import { BaseDeviceGridColumn } from './base.device-grid-column';\nimport { SerialNumberCellRendererComponent } from './serial-number.cell-renderer.component';\nimport { gettext } from '../../i18n/gettext';\n\nexport class SerialNumberDeviceGridColumn extends BaseDeviceGridColumn {\n  constructor() {\n    super();\n\n    const hardwareSerialNumberPath = 'c8y_Hardware.serialNumber';\n    const vendingSerialNumberPath =\n      'com_nsn_startups_vendme_fragments_VendingMachineTypeInfo.serial';\n\n    this.name = 'serialNumber';\n    this.header = gettext('Serial number');\n    this.cellRendererComponent = SerialNumberCellRendererComponent;\n\n    this.filterable = true;\n    this.filteringConfig = {\n      schema: {\n        type: 'object',\n        properties: {\n          serialNumbers: {\n            type: 'array',\n            items: {\n              type: 'string'\n            }\n          }\n        }\n      },\n      form: [\n        {\n          key: 'serialNumbers',\n          title: gettext('Show devices with serial number'),\n          add: gettext('Or'),\n          items: [\n            {\n              key: 'serialNumbers[]',\n              notitle: true,\n              placeholder: gettext(\n                'e.g. 54321-123, you can use an asterisk (*) as wildcard character'\n              )\n            }\n          ]\n        }\n      ],\n      getFilter(model: any): any {\n        const filter: any = {};\n        if (model.serialNumbers.length) {\n          filter.__or = {\n            [hardwareSerialNumberPath]: { __in: model.serialNumbers },\n            [vendingSerialNumberPath]: { __in: model.serialNumbers }\n          };\n        }\n        return filter;\n      }\n    };\n\n    this.sortable = true;\n    this.sortingConfig = {\n      pathSortingConfigs: [{ path: hardwareSerialNumberPath }, { path: vendingSerialNumberPath }]\n    };\n  }\n}\n","import { Component, forwardRef, Inject } from '@angular/core';\nimport { CellRendererContext } from '../../data-grid/column/cell-renderer';\nimport { DeviceGridService } from '../device-grid.service';\n\n@Component({\n  templateUrl: './group.cell-renderer.component.html'\n})\nexport class GroupCellRendererComponent {\n  constructor(\n    public context: CellRendererContext,\n    @Inject(forwardRef(() => DeviceGridService)) public deviceGridService: DeviceGridService\n  ) {}\n}\n","import { BaseDeviceGridColumn } from './base.device-grid-column';\nimport { GroupCellRendererComponent } from './group.cell-renderer.component';\nimport { gettext } from '../../i18n/gettext';\n\nexport class GroupDeviceGridColumn extends BaseDeviceGridColumn {\n  constructor() {\n    super();\n\n    this.name = 'group';\n    this.header = gettext('Group');\n    this.cellRendererComponent = GroupCellRendererComponent;\n\n    this.filterable = true;\n    this.filteringConfig = {\n      schema: {\n        type: 'object',\n        properties: {\n          deviceGroupId: {\n            type: 'integer',\n            format: 'deviceGroupId'\n          }\n        }\n      },\n      form: [\n        {\n          key: 'deviceGroupId',\n          title: gettext('Show devices in group')\n        }\n      ],\n      getFilter(model) {\n        const filter: any = {};\n        if (model.deviceGroupId) {\n          filter.__bygroupid = model.deviceGroupId;\n        }\n        return filter;\n      }\n    };\n\n    this.sortable = false;\n  }\n}\n","import { Component } from '@angular/core';\nimport { CellRendererContext } from '../../data-grid/column/cell-renderer';\n\n@Component({\n  template: `\n    {{ context.value | date: 'medium' }}\n  `\n})\nexport class RegistrationDateCellRendererComponent {\n  constructor(public context: CellRendererContext) {}\n}\n","import { BaseDeviceGridColumn } from './base.device-grid-column';\nimport { RegistrationDateCellRendererComponent } from './registration-date.cell-renderer.component';\nimport { gettext } from '../../i18n/gettext';\n\nexport class RegistrationDateDeviceGridColumn extends BaseDeviceGridColumn {\n  constructor() {\n    super();\n\n    const self = this;\n\n    this.path = 'creationTime';\n    this.name = 'registrationDate';\n    this.header = gettext('Registration date');\n    this.cellRendererComponent = RegistrationDateCellRendererComponent;\n\n    this.filterable = true;\n    this.filteringConfig = {\n      schema: {\n        type: 'object',\n        properties: {\n          registrationDate: {\n            type: 'object',\n            properties: {\n              after: {\n                type: 'string',\n                format: 'datetime'\n              },\n              before: {\n                type: 'string',\n                format: 'datetime'\n              }\n            }\n          }\n        }\n      },\n      form: [\n        {\n          key: 'registrationDate.after',\n          title: gettext('Show devices registered after'),\n          maxDateKey: 'registrationDate.before'\n        },\n        {\n          key: 'registrationDate.before',\n          title: gettext('And before`date`'),\n          minDateKey: 'registrationDate.after'\n        }\n      ],\n      getFilter(model) {\n        const filter: any = {};\n        const dates = model && model.registrationDate;\n        if (dates && (dates.after || dates.before)) {\n          filter.__and = [];\n          if (dates.after) {\n            const after = self.formatDate(dates.after);\n            filter.__and.push({\n              __or: {\n                [self.path]: { __gt: after },\n                [`${self.path}.date`]: { __gt: after }\n              }\n            });\n          }\n          if (dates.before) {\n            const before = self.formatDate(dates.before);\n            filter.__and.push({\n              __or: {\n                [self.path]: { __lt: before },\n                [`${self.path}.date`]: { __lt: before }\n              }\n            });\n          }\n        }\n        return filter;\n      }\n    };\n\n    this.sortable = true;\n    this.sortingConfig = {\n      pathSortingConfigs: [{ path: `${this.path}.date` }, { path: this.path }]\n    };\n  }\n\n  protected formatDate(dateToFormat: string): string {\n    return new Date(dateToFormat).toISOString();\n  }\n}\n","import { BaseDeviceGridColumn } from './base.device-grid-column';\nimport { gettext } from '../../i18n/gettext';\n\nexport class SystemIdDeviceGridColumn extends BaseDeviceGridColumn {\n  constructor() {\n    super();\n\n    const self = this;\n\n    this.path = 'id';\n    this.name = 'systemId';\n    this.header = gettext('System ID');\n\n    this.filterable = true;\n    this.filteringConfig = {\n      schema: {\n        type: 'object',\n        properties: {\n          ids: {\n            type: 'array',\n            items: {\n              type: 'string'\n            }\n          }\n        }\n      },\n      form: [\n        {\n          key: 'ids',\n          title: gettext('Show devices with system ID'),\n          add: gettext('Or'),\n          items: [\n            {\n              key: 'ids[]',\n              notitle: true,\n              placeholder: gettext('e.g. 10300, you can use an asterisk (*) as wildcard character')\n            }\n          ]\n        }\n      ],\n      getFilter(model: any): any {\n        const filter: any = {};\n        if (model.ids.length) {\n          filter[self.path] = { __in: model.ids };\n        }\n        return filter;\n      }\n    };\n\n    this.sortable = true;\n    this.sortingConfig = {\n      pathSortingConfigs: [{ path: this.path }]\n    };\n  }\n}\n","import { BaseDeviceGridColumn } from './base.device-grid-column';\nimport { gettext } from '../../i18n/gettext';\n\nexport class ImeiDeviceGridColumn extends BaseDeviceGridColumn {\n  constructor() {\n    super();\n\n    const self = this;\n\n    this.path = 'c8y_Mobile.imei';\n    this.name = 'imei';\n    this.header = gettext('IMEI');\n\n    this.filterable = true;\n    this.filteringConfig = {\n      schema: {\n        type: 'object',\n        properties: {\n          imeis: {\n            type: 'array',\n            items: {\n              type: 'string'\n            }\n          }\n        }\n      },\n      form: [\n        {\n          key: 'imeis',\n          title: gettext('Show devices with IMEI'),\n          add: gettext('Or'),\n          items: [\n            {\n              key: 'imeis[]',\n              notitle: true,\n              placeholder: gettext(\n                'e.g. 46543432321, you can use an asterisk (*) as wildcard character'\n              )\n            }\n          ]\n        }\n      ],\n      getFilter(model: any): any {\n        const filter: any = {};\n        if (model.imeis.length) {\n          filter[self.path] = { __in: model.imeis };\n        }\n        return filter;\n      }\n    };\n\n    this.sortable = true;\n    this.sortingConfig = {\n      pathSortingConfigs: [{ path: this.path }]\n    };\n  }\n}\n","import { Component, forwardRef, Inject } from '@angular/core';\nimport { CellRendererContext } from '../../data-grid/column/cell-renderer';\nimport { DeviceGridService } from '../device-grid.service';\n\n@Component({\n  templateUrl: './alarms.cell-renderer.component.html'\n})\nexport class AlarmsCellRendererComponent {\n  constructor(\n    public context: CellRendererContext,\n    @Inject(forwardRef(() => DeviceGridService)) public deviceGridService: DeviceGridService\n  ) {}\n}\n","import { BaseDeviceGridColumn } from './base.device-grid-column';\nimport { AlarmsCellRendererComponent } from './alarms.cell-renderer.component';\nimport { gettext } from '../../i18n/gettext';\nimport { map } from 'lodash-es';\n\nexport class AlarmsDeviceGridColumn extends BaseDeviceGridColumn {\n  constructor() {\n    super();\n\n    this.name = 'alarms';\n    this.header = gettext('Alarms');\n    this.cellRendererComponent = AlarmsCellRendererComponent;\n\n    this.filterable = true;\n    this.filteringConfig = {\n      schema: {\n        type: 'object',\n        properties: {\n          critical: {\n            type: 'boolean'\n          },\n          major: {\n            type: 'boolean'\n          },\n          minor: {\n            type: 'boolean'\n          },\n          warning: {\n            type: 'boolean'\n          },\n          none: {\n            type: 'boolean'\n          }\n        }\n      },\n      form: [\n        {\n          type: 'template',\n          template: `<label><span translate>${gettext('Show devices with active')}</span>:</label>`\n        },\n        {\n          key: 'critical',\n          title: gettext('Critical alarms')\n        },\n        {\n          key: 'major',\n          title: gettext('Major alarms')\n        },\n        {\n          key: 'minor',\n          title: gettext('Minor alarms')\n        },\n        {\n          key: 'warning',\n          title: gettext('Warnings')\n        },\n        {\n          key: 'none',\n          title: gettext('No alarms')\n        }\n      ],\n      getFilter(model) {\n        const filter: any = {};\n        const ors = [];\n        if (model.critical) {\n          ors.push({ 'c8y_ActiveAlarmsStatus.critical': { __gt: 0 } });\n        }\n        if (model.major) {\n          ors.push({ 'c8y_ActiveAlarmsStatus.major': { __gt: 0 } });\n        }\n        if (model.minor) {\n          ors.push({ 'c8y_ActiveAlarmsStatus.minor': { __gt: 0 } });\n        }\n        if (model.warning) {\n          ors.push({ 'c8y_ActiveAlarmsStatus.warning': { __gt: 0 } });\n        }\n        if (model.none) {\n          ors.push({ __not: { __has: 'c8y_ActiveAlarmsStatus' } });\n          ors.push({\n            __and: map(['critical', 'major', 'minor', 'warning'], sev => {\n              const zero = {};\n              const has = { __not: { __has: undefined } };\n              const key = `c8y_ActiveAlarmsStatus.${sev}`;\n              zero[key] = 0;\n              has.__not.__has = key;\n              return { __or: [zero, has] };\n            })\n          });\n        }\n        if (ors.length) {\n          filter.__or = ors;\n        }\n        return filter;\n      }\n    };\n\n    this.sortable = true;\n    this.sortingConfig = {\n      pathSortingConfigs: [\n        { path: 'c8y_ActiveAlarmsStatus.critical' },\n        { path: 'c8y_ActiveAlarmsStatus.major' },\n        { path: 'c8y_ActiveAlarmsStatus.minor' },\n        { path: 'c8y_ActiveAlarmsStatus.warning' }\n      ]\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { DeviceGridColumn, DeviceGridActionType } from './device-grid.models';\nimport { IManagedObject, InventoryService, QueriesUtil } from '@c8y/client';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Pagination, ActionControl, BulkActionControl, Row } from '../data-grid/data-grid.model';\nimport { StatusDeviceGridColumn } from './columns/status.device-grid-column';\nimport { NameDeviceGridColumn } from './columns/name.device-grid-column';\nimport { ModelDeviceGridColumn } from './columns/model.device-grid-column';\nimport { SerialNumberDeviceGridColumn } from './columns/serial-number.device-grid-column';\nimport { GroupDeviceGridColumn } from './columns/group.device-grid-column';\nimport { RegistrationDateDeviceGridColumn } from './columns/registration-date.device-grid-column';\nimport { SystemIdDeviceGridColumn } from './columns/system-id.device-grid-column';\nimport { ImeiDeviceGridColumn } from './columns/imei.device-grid-column';\nimport { AlarmsDeviceGridColumn } from './columns/alarms.device-grid-column';\nimport { map, sortBy, get, identity, remove, transform, assign, forEach } from 'lodash-es';\n\n@Injectable()\nexport class DeviceGridService {\n  queriesUtil: QueriesUtil;\n\n  constructor(\n    private inventoryService: InventoryService,\n    private translateService: TranslateService\n  ) {\n    this.queriesUtil = new QueriesUtil();\n  }\n\n  getDefaultColumns(): DeviceGridColumn[] {\n    return [\n      new StatusDeviceGridColumn(),\n      new NameDeviceGridColumn(),\n      new ModelDeviceGridColumn(),\n      new SerialNumberDeviceGridColumn(),\n      new GroupDeviceGridColumn(),\n      new RegistrationDateDeviceGridColumn(),\n      new SystemIdDeviceGridColumn(),\n      new ImeiDeviceGridColumn(),\n      new AlarmsDeviceGridColumn()\n    ];\n  }\n\n  getDefaultPagination(): Pagination {\n    return {\n      pageSize: 10,\n      currentPage: 1\n    };\n  }\n\n  getDefaultActionControls(): ActionControl[] {\n    return [\n      {\n        type: DeviceGridActionType.Delete,\n        callback: (item: Row) => this.delete(item as IManagedObject)\n      }\n    ];\n  }\n\n  getDefaultBulkActionControls(): BulkActionControl[] {\n    return [];\n  }\n\n  getProperName(device: IManagedObject): string {\n    const { id, name } = device;\n    return name ? name : this.translateService.instant('Device {{id}}', { id });\n  }\n\n  getModel(device: IManagedObject): string {\n    const hardware = this.getHardware(device);\n    return hardware && hardware.model;\n  }\n\n  getSerialNumber(device: IManagedObject): string {\n    const hardware = this.getHardware(device);\n    const serialPropertyName = this.isVendme(device) ? 'serial' : 'serialNumber';\n    return hardware && hardware[serialPropertyName];\n  }\n\n  getParentsNames(device: IManagedObject, featuredParentId?: string | number): string {\n    const assetParentsReferences = device.assetParents.references;\n    const assetParents = map(assetParentsReferences, 'managedObject');\n    const sortedByName = sortBy(assetParents, ['name']);\n    const featuredItems = remove(sortedByName, { id: featuredParentId });\n    const items = featuredItems.concat(sortedByName);\n    const names = map(items, 'name');\n    return names.join(', ');\n  }\n\n  getDeviceHref(device: IManagedObject): string {\n    return `#/device/${device.id}`;\n  }\n\n  getAlarmsHref(device: IManagedObject): string {\n    return `${this.getDeviceHref(device)}/alarms`;\n  }\n\n  delete(device: IManagedObject) {\n    console.log('should delete', device);\n  }\n\n  async getDevices(columns: DeviceGridColumn[], pagination: Pagination) {\n    const filters = {\n      ...this.getDevicesFilters(columns, pagination),\n      withParents: true\n    };\n    return this.inventoryService.list(filters);\n  }\n\n  async getDevicesCount(columns: DeviceGridColumn[], pagination: Pagination) {\n    const filters = {\n      ...this.getDevicesFilters(columns, pagination),\n      pageSize: 1,\n      currentPage: 1\n    };\n    return (await this.inventoryService.list(filters)).paging.totalPages;\n  }\n\n  async getDevicesTotal(): Promise<number> {\n    const filters = {\n      q: '',\n      pageSize: 1,\n      withTotalPages: true\n    };\n    return (await this.inventoryService.list(filters)).paging.totalPages;\n  }\n\n  getDeviceQueryString(columns: DeviceGridColumn[]): string {\n    return this.queriesUtil.buildQuery(this.getQueryObj(columns));\n  }\n\n  private getHardware(device: IManagedObject): any {\n    const hardwarePropertyName = this.isVendme(device)\n      ? 'com_nsn_startups_vendme_fragments_VendingMachineTypeInfo'\n      : 'c8y_Hardware';\n    return device && device[hardwarePropertyName];\n  }\n\n  private isVendme(device: IManagedObject) {\n    return device.type === 'com_nsn_startups_vendme_VendingMachine';\n  }\n\n  private getDevicesFilters(columns: DeviceGridColumn[], pagination: Pagination) {\n    return {\n      q: this.getDeviceQueryString(columns),\n      pageSize: pagination.pageSize,\n      currentPage: pagination.currentPage,\n      withTotalPages: true\n    };\n  }\n\n  private getQueryObj(columns: DeviceGridColumn[]): any {\n    return transform(columns, (query, column) => this.extendQueryByColumn(query, column), {\n      __filter: {},\n      __orderby: []\n    });\n  }\n\n  private extendQueryByColumn(query: any, column: DeviceGridColumn): void {\n    if (column.filterable && column.externalFilterQuery) {\n      const getFilter = column.filteringConfig.getFilter || identity;\n      const queryObj = getFilter(column.externalFilterQuery);\n\n      if (queryObj.__or) {\n        query.__filter.__and = query.__filter.__and || [];\n        query.__filter.__and.push(queryObj);\n      } else if (queryObj.__and && get(query, '__filter.__and')) {\n        queryObj.__and.map(obj => query.__filter.__and.push(obj));\n      } else {\n        assign(query.__filter, queryObj);\n      }\n    }\n\n    if (column.sortable && column.sortOrder) {\n      const cs = {};\n      forEach(column.sortingConfig.pathSortingConfigs, pathSortingConfig => {\n        cs[pathSortingConfig.path] =\n          (column.sortOrder === 'asc' ? 1 : -1) * (pathSortingConfig.sortOrderModifier || 1);\n      });\n      query.__orderby.push(cs);\n    }\n    return query;\n  }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport {\n  ActionControl,\n  BulkActionControl,\n  DataSourceModifier,\n  Pagination,\n  ServerSideDataResult\n} from '../data-grid/data-grid.model';\nimport { DeviceGridService } from './device-grid.service';\nimport { DeviceGridColumn } from './device-grid.models';\nimport { gettext } from '../i18n/gettext';\n\n@Component({\n  selector: 'c8y-device-grid',\n  templateUrl: './device-grid.component.html'\n})\nexport class DeviceGridComponent {\n  @Input() title: string = gettext('Devices');\n  @Input() loadingItemsLabel: string = gettext('Loading devices…');\n  @Input() noMatchingItemsLabel: string = gettext('No matching devices.');\n  @Input('columns') set _columns(value: DeviceGridColumn[]) {\n    if (value) {\n      this.columns = value;\n    } else {\n      this.columns = this.deviceGridService.getDefaultColumns();\n    }\n  }\n  @Input('pagination') set _pagination(value: Pagination) {\n    if (value) {\n      this.pagination = value;\n    } else {\n      this.pagination = this.deviceGridService.getDefaultPagination();\n    }\n  }\n  @Input('actionControls') set _actionControls(value: ActionControl[]) {\n    if (value) {\n      this.actionControls = value;\n    } else {\n      this.actionControls = this.deviceGridService.getDefaultActionControls();\n    }\n  }\n  @Input() selectable: boolean = false;\n  @Input('bulkActionControls') set _bulkActionControls(value: BulkActionControl[]) {\n    if (value) {\n      this.bulkActionControls = value;\n    } else {\n      this.bulkActionControls = this.deviceGridService.getDefaultBulkActionControls();\n    }\n  }\n  @Output() onColumnsChange: EventEmitter<DeviceGridColumn[]> = new EventEmitter<\n    DeviceGridColumn[]\n  >();\n  @Output() onDeviceQueryStringChange: EventEmitter<string> = new EventEmitter<string>();\n\n  columns: DeviceGridColumn[] = this.deviceGridService.getDefaultColumns();\n  pagination: Pagination = this.deviceGridService.getDefaultPagination();\n  actionControls: ActionControl[] = this.deviceGridService.getDefaultActionControls();\n  bulkActionControls: BulkActionControl[] = this.deviceGridService.getDefaultBulkActionControls();\n  serverSideDataCallback: any;\n\n  constructor(public deviceGridService: DeviceGridService) {\n    this.serverSideDataCallback = this.onDataSourceModifier.bind(this);\n  }\n\n  trackByName(_index, column: DeviceGridColumn): string {\n    return column.name;\n  }\n\n  async onDataSourceModifier(\n    dataSourceModifier: DataSourceModifier\n  ): Promise<ServerSideDataResult> {\n    const { res, data, paging } = await this.deviceGridService.getDevices(\n      dataSourceModifier.columns,\n      dataSourceModifier.pagination\n    );\n    const filteredSize: number = await this.deviceGridService.getDevicesCount(\n      dataSourceModifier.columns,\n      dataSourceModifier.pagination\n    );\n    const size: number = await this.deviceGridService.getDevicesTotal();\n\n    this.onColumnsChange.emit(dataSourceModifier.columns);\n    this.onDeviceQueryStringChange.emit(\n      this.deviceGridService.getDeviceQueryString(dataSourceModifier.columns)\n    );\n\n    return {\n      res,\n      data,\n      paging,\n      filteredSize,\n      size\n    };\n  }\n}\n","import {\n  Component,\n  ViewChild,\n  ElementRef,\n  Input,\n  OnInit,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { some } from 'lodash-es';\n\n@Component({\n  selector: 'c8y-drop-area',\n  templateUrl: './drop-area.component.html'\n})\nexport class DropAreaComponent implements OnInit {\n  @Input() title = 'Upload file';\n  @Input() message = 'Drop file here';\n  @Input() icon = 'plus-square';\n  @Input() loadingMessage = 'Uploading ...';\n  @Input() alwaysShow = false;\n  @Input() clickToOpen = true;\n  @Input() loading = false;\n  @Input() progress = -1; // -1 = spinner\n  @Output() dropped: EventEmitter<DroppedFile[]> = new EventEmitter();\n  isOver = false;\n\n  fileIsEmpty = false;\n  @ViewChild('area', { static: true }) area: ElementRef;\n  @ViewChild('zone', { static: false }) zone: ElementRef;\n  @ViewChild('picker', { static: false }) picker: ElementRef;\n\n  ngOnInit() {\n    this.alwaysShow = this.alwaysShow || this.area.nativeElement.children.length === 0;\n  }\n\n  toggle($event?) {\n    this.zone.nativeElement.style.height = this.area.nativeElement.offsetHeight + 'px';\n    this.onOver();\n  }\n\n  showPicker($event?) {\n    this.preventDefault($event);\n    this.picker.nativeElement.value = '';\n    this.picker.nativeElement.click();\n  }\n\n  onOver() {\n    if (!this.isOver) {\n      this.isOver = true;\n      document.addEventListener('dragover', this.preventDefault);\n      document.addEventListener('drop', this.preventDefault);\n    }\n  }\n\n  onPick($event) {\n    this.fileIsEmpty = false;\n    this.preventDefault($event);\n    this.onFilesSelected($event.target.files);\n  }\n\n  onDrop($event) {\n    this.preventDefault($event);\n    this.onFilesSelected($event.dataTransfer.files);\n    this.stopDragging();\n  }\n\n  onFilesSelected(files) {\n    this.fileIsEmpty = false;\n    if (files && files.length > 0) {\n      if (this.isAnyFileEmpty(files)) {\n        this.fileIsEmpty = true;\n        this.dropped.emit([]);\n      } else {\n        this.dropped.emit(this.compose(files));\n      }\n    }\n  }\n\n  isAnyFileEmpty(files) {\n    return some(Array.from(files), ['size', 0]);\n  }\n\n  stopDragging() {\n    document.removeEventListener('dragover', this.preventDefault);\n    document.removeEventListener('drop', this.preventDefault);\n    this.isOver = false;\n  }\n\n  private preventDefault($event?) {\n    if ($event) {\n      $event.preventDefault();\n    }\n  }\n\n  private compose(files: FileList) {\n    return Array.from(files).map(file => ({\n      file,\n      readAsJson: async () => JSON.parse(await this.read(file, ReadAsType.TEXT)),\n      readAsText: async () => this.read(file, ReadAsType.TEXT),\n      readAsArrayBuffer: async () => this.read(file, ReadAsType.ARRAY_BUFFER),\n      readAsBinaryString: async () => this.read(file, ReadAsType.BINARY_STRING),\n      readAsDataURL: async () => this.read(file, ReadAsType.DATA_URL)\n    }));\n  }\n\n  private async read(file, type: ReadAsType): Promise<string> {\n    return new Promise<string>((resolve, reject) => {\n      const reader = new FileReader();\n      switch (type) {\n        case ReadAsType.TEXT: {\n          reader.readAsText(file);\n          break;\n        }\n        case ReadAsType.ARRAY_BUFFER: {\n          reader.readAsArrayBuffer(file);\n          break;\n        }\n        case ReadAsType.BINARY_STRING: {\n          reader.readAsBinaryString(file);\n          break;\n        }\n        case ReadAsType.DATA_URL: {\n          reader.readAsDataURL(file);\n          break;\n        }\n      }\n      reader.onload = () => this.onLoad(reader, resolve, reject);\n    });\n  }\n\n  private onLoad(reader, resolve, reject) {\n    if (reader.readyState !== 2) {\n      return;\n    }\n    if (reader.error) {\n      reject(reader.error);\n    }\n    resolve(reader.result);\n  }\n}\n\nexport interface DroppedFile {\n  file: File;\n  readAsText();\n  readAsArrayBuffer();\n  readAsBinaryString();\n  readAsDataURL();\n  readAsJson();\n}\n\nenum ReadAsType {\n  TEXT,\n  DATA_URL,\n  ARRAY_BUFFER,\n  BINARY_STRING\n}\n","import { Component, Input } from '@angular/core';\nimport { deviceAvailabilityIconMap, PushStatusLabels, SendStatusLabels, tooltips } from './device-availability';\nimport { TranslateService } from '@ngx-translate/core';\nimport { get } from 'lodash-es';\n\n@Component({\n  selector: 'device-status',\n  templateUrl: './device-status.component.html'\n})\nexport class DeviceStatusComponent {\n  @Input('mo') set node(value) {\n    this._mo = value.mo || value;\n  }\n\n  private _mo;\n  private requiredAvailability;\n  private availabilityStatus;\n  private pushStatus;\n  private sendStatus;\n\n  constructor(\n    private translateService: TranslateService\n  ) {}\n\n  get() {\n    return this._mo;\n  }\n\n  ngAfterContentInit() {\n    this.requiredAvailability = get(this._mo, 'c8y_RequiredAvailability');\n    this.availabilityStatus = get(this._mo, 'c8y_Availability.status');\n\n    this.pushStatus = get(this._mo, 'c8y_Connection.status') || 'UNKNOWN';\n    this.sendStatus = this.availabilityStatus || (this.requiredAvailability ? ('UNKNOWN') : ('NOT_MONITORED'));\n  }\n\n  status() {\n    let statuses;\n\n    if (this.availabilityStatus === 'MAINTENANCE' || this.pushStatus === 'MAINTENANCE') {\n      statuses = this.getMaintenanceStatus();\n    } else {\n      statuses = this.getSendPushStatus();\n    }\n\n    return statuses;\n  }\n\n  getMaintenanceStatus() {\n    return ({\n      sendStatus: false,\n      pushStatus: false,\n      maintenanceStatus: {\n        icon: deviceAvailabilityIconMap.device.MAINTENANCE.icon,\n        class: deviceAvailabilityIconMap.device.MAINTENANCE.class,\n        tooltip: tooltips.maintenance\n      }\n    });\n  }\n\n  private getSendPushStatus() {\n    return ({\n      sendStatus: {\n        icon: deviceAvailabilityIconMap.sendData[this.sendStatus].icon,\n        class: deviceAvailabilityIconMap.sendData[this.sendStatus].class,\n        status: this.sendStatus,\n        label: SendStatusLabels[this.sendStatus],\n        tooltip: this.getSendStatusTooltip(this._mo)\n      },\n      pushStatus: {\n        icon: deviceAvailabilityIconMap.push[this.pushStatus].icon,\n        class: deviceAvailabilityIconMap.push[this.pushStatus].class,\n        status: this.pushStatus,\n        label: PushStatusLabels[this.pushStatus],\n        tooltip: this.getPushStatusTooltip(this.pushStatus === 'CONNECTED')\n      },\n      maintenanceStatus: false\n    });\n  }\n\n  private getSendStatusTooltip(device) {\n    const availability = device && device.c8y_Availability;\n    const lastMessage = availability && availability.lastMessage;\n    if (lastMessage) {\n      return tooltips.sendStatusConnected(lastMessage, this.translateService);\n    }\n    return tooltips.sendStatusDisconnected;\n  }\n\n  private getPushStatusTooltip(isActive) {\n    return isActive ? tooltips.pushStatusConnected : tooltips.pushStatusDisconnected;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { DeviceStatusComponent } from './device-status.component';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { CommonModule } from '../common/common.module';\n/**\n * The angular module definition for a device-status.\n * @exports DeviceStatusComponent\n */\n@NgModule({\n    imports: [\n        CommonModule,\n        TooltipModule\n    ],\n    exports: [\n        DeviceStatusComponent\n    ],\n    declarations: [\n        DeviceStatusComponent\n    ]\n})\nexport class DeviceStatusModule { }\n","import { Component, forwardRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { get, cloneDeep } from 'lodash-es';\nimport { SchemaFormComponent } from '../forms/schema-form.component';\nimport { FilteringFormRendererContext } from '../data-grid/column/filtering-form-renderer';\nimport { DeviceGridColumn } from './device-grid.models';\n\n@Component({\n  selector: 'c8y-filtering-form',\n  templateUrl: './filtering-form.component.html'\n})\nexport class FilteringFormComponent implements OnInit {\n  @Input() context: FilteringFormRendererContext;\n  @ViewChild(forwardRef(() => SchemaFormComponent), { static: false }) schemaFormComponent: any;\n\n  schema;\n  form;\n  model;\n  options;\n\n  ngOnInit() {\n    const column: DeviceGridColumn = this.context.property;\n    this.schema = cloneDeep(column.filteringConfig.schema);\n    this.form = cloneDeep(column.filteringConfig.form);\n    this.model = cloneDeep(column.externalFilterQuery || {});\n    this.options = { formDefaults: { ngModelOptions: { debounce: 100 } } };\n  }\n\n  canApply() {\n    return get(this.schemaFormComponent, '$componentScope.vm.ngForm.$invalid');\n  }\n\n  applyFilter() {\n    this.context.applyFilter({\n      externalFilterQuery: this.model\n    });\n  }\n\n  resetFilter() {\n    this.context.resetFilter();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '../common/common.module';\nimport { DeviceGridComponent } from './device-grid.component';\nimport { DataGridModule } from '../data-grid/data-grid.module';\nimport { DeviceGridService } from './device-grid.service';\nimport { DeviceStatusModule } from '../device-status/device-status.module';\nimport { FilteringFormComponent } from './filtering-form.component';\nimport { FormsModule } from '../forms/forms.module';\n\nimport { StatusCellRendererComponent } from './columns/status.cell-renderer.component';\nimport { NameCellRendererComponent } from './columns/name.cell-renderer.component';\nimport { ModelCellRendererComponent } from './columns/model.cell-renderer.component';\nimport { SerialNumberCellRendererComponent } from './columns/serial-number.cell-renderer.component';\nimport { GroupCellRendererComponent } from './columns/group.cell-renderer.component';\nimport { RegistrationDateCellRendererComponent } from './columns/registration-date.cell-renderer.component';\nimport { AlarmsCellRendererComponent } from './columns/alarms.cell-renderer.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, DeviceStatusModule, DataGridModule],\n  declarations: [\n    DeviceGridComponent,\n    FilteringFormComponent,\n    StatusCellRendererComponent,\n    NameCellRendererComponent,\n    ModelCellRendererComponent,\n    SerialNumberCellRendererComponent,\n    GroupCellRendererComponent,\n    RegistrationDateCellRendererComponent,\n    AlarmsCellRendererComponent\n  ],\n  exports: [\n    DeviceGridComponent,\n    FilteringFormComponent,\n    StatusCellRendererComponent,\n    NameCellRendererComponent,\n    ModelCellRendererComponent,\n    SerialNumberCellRendererComponent,\n    GroupCellRendererComponent,\n    RegistrationDateCellRendererComponent,\n    AlarmsCellRendererComponent\n  ],\n  entryComponents: [\n    DeviceGridComponent,\n    FilteringFormComponent,\n    StatusCellRendererComponent,\n    NameCellRendererComponent,\n    ModelCellRendererComponent,\n    SerialNumberCellRendererComponent,\n    GroupCellRendererComponent,\n    RegistrationDateCellRendererComponent,\n    AlarmsCellRendererComponent\n  ],\n  providers: [DeviceGridService]\n})\nexport class DeviceGridModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '../common/common.module';\nimport { DropAreaComponent } from './drop-area.component';\n\n/**\n * The angular module definition for a drop-area.\n * @exports DropAreaComponent\n */\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    DropAreaComponent,\n  ],\n  declarations: [\n    DropAreaComponent,\n  ]\n})\nexport class DropAreaModule { }\n","import { BsDropdownDirective } from 'ngx-bootstrap/dropdown';\nimport {\n  Component,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\n\nexport interface Item {\n  name: string;\n  _selected?: boolean;\n  [key: string]: any;\n}\n\nexport type selectedFunction = (item: Item) => boolean;\nexport type selectedLabelFunction = (items: Item[]) => string;\n\n@Component({\n  selector: 'c8y-select',\n  templateUrl: './select.component.html'\n})\nexport class SelectComponent implements OnChanges {\n  @Input() placeholder: string = 'Select item';\n  @Input() selectedLabel: string | selectedLabelFunction;\n  @Input() applyLabel: string = 'Apply';\n  @Input() items: Item[];\n  @Input() selected: Item[] | selectedFunction;\n  @Output() onChange: EventEmitter<Item[]> = new EventEmitter();\n  @ViewChild(BsDropdownDirective, { static: false }) dropdown: BsDropdownDirective;\n  textFilter = '';\n  labelText = '';\n  isOpen = false;\n  filteredItems: Item[] = [];\n  readonly sizeToShowFilter: number = 5;\n  private itemsSelected: Set<Item> = new Set();\n  private stopClicks = false;\n\n  @HostListener('click', ['$event'])\n  preventClick(evt) {\n    if (this.stopClicks) {\n      evt.stopPropagation();\n    }\n    this.stopClicks = this.isOpen;\n  }\n\n  isOpenChange(isOpen: boolean) {\n    this.isOpen = isOpen;\n    if (isOpen) {\n      this.updateSelected();\n    } else {\n      this.stopClicks = false;\n    }\n  }\n\n  outterSelected(item: Item) {\n    const { selected, itemsSelected, items } = this;\n    let isSelected: any = () => false;\n    if (typeof selected === 'function') {\n      isSelected = selected;\n    } else if (Array.isArray(selected)) {\n      isSelected = (i: Item) => selected.indexOf(i) > -1;\n    }\n    return isSelected(item);\n  }\n\n  isSelected(item: Item) {\n    return this.itemsSelected.has(item);\n  }\n\n  applyChanges() {\n    const selected = Array.from(this.itemsSelected.values());\n    this.onChange.emit(selected);\n    this.dropdown.hide();\n  }\n\n  selectAll(checked: boolean) {\n    this.filteredItems.forEach(item => this.onChangeItem(checked, item));\n  }\n\n  allSelected() {\n    return this.filteredItems.length === this.itemsSelected.size;\n  }\n\n  onChangeItem(checked: boolean, item: Item) {\n    if (checked) {\n      this.itemsSelected.add(item);\n    } else {\n      this.itemsSelected.delete(item);\n    }\n  }\n\n  updateFiltered(term: string) {\n    if (term) {\n      const search = new RegExp(term, 'i');\n      this.filteredItems = this.items.filter(({ name }) => search.test(name));\n    } else {\n      this.filteredItems = this.items;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.isOpen) {\n      return;\n    }\n    if (changes.items || changes.selected || changes.applyLabel) {\n      this.updateSelected();\n      this.updateLabel();\n    }\n  }\n\n  private updateLabel() {\n    const outterSelected = this.items.filter(i => this.outterSelected(i));\n    if (typeof this.selectedLabel === 'string') {\n      this.labelText = this.selectedLabel;\n    } else if (typeof this.selectedLabel === 'function') {\n      this.labelText = this.selectedLabel(outterSelected);\n    } else {\n      this.labelText = outterSelected.map(({ name }) => name).join(', ');\n    }\n  }\n\n  private updateSelected() {\n    const { itemsSelected, items } = this;\n    itemsSelected.clear();\n    items.forEach(item => {\n      if (this.outterSelected(item)) {\n        itemsSelected.add(item);\n      }\n    });\n    this.filteredItems = items;\n  }\n}\n","import { Component, Output, Input, ViewChild, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'c8y-list-item-action, c8y-li-action',\n  templateUrl: './list-item-action.component.html'\n})\nexport class ListItemActionComponent {\n  @ViewChild('template', { static: false })\n  template: any;\n  @Input()\n  label: string;\n  @Input()\n  icon: string;\n  @Output()\n  click = new EventEmitter<any>();\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'c8y-list-item-collapse, c8y-li-collapse',\n  templateUrl: './list-item-collapse.component.html'\n})\nexport class ListItemCollapseComponent {\n\n  @Input()\n  item: any;\n\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'c8y-list-item-footer, c8y-li-footer',\n  templateUrl: './list-item-footer.component.html'\n})\nexport class ListItemFooterComponent {\n\n  @Input()\n  footer: string;\n\n}\n","import {\n  Component,\n  ContentChild,\n  ElementRef,\n  ContentChildren,\n  HostBinding,\n  Input,\n  QueryList\n} from '@angular/core';\nimport { ListItemActionComponent } from './list-item-action.component';\nimport { ListItemCollapseComponent } from './list-item-collapse.component';\nimport { ListItemFooterComponent } from './list-item-footer.component';\n\n@Component({\n  selector: 'c8y-list-item, c8y-li',\n  templateUrl: './list-item.component.html',\n  host: {\n    class: 'c8y-list__item'\n  }\n})\nexport class ListItemComponent {\n  @Input()\n  @HostBinding('class.active')\n  active: boolean = false;\n  @Input()\n  collapsed: boolean = true;\n  @ContentChild(ListItemFooterComponent, { static: false })\n  itemFooter: ListItemFooterComponent;\n  @ContentChildren(ListItemActionComponent)\n  itemActions: QueryList<ListItemActionComponent>;\n  @ContentChild(ListItemCollapseComponent, { static: false })\n  itemCollapse: ListItemCollapseComponent;\n\n  showFooter: boolean = false;\n  showActions: boolean = false;\n  showCollapse: boolean = false;\n  actions: ListItemActionComponent[];\n  dropdownUp: boolean = false;\n\n  private readonly ACTION_ITEM_HEIGHT = 40;\n\n  constructor(public element: ElementRef) {}\n\n  ngAfterContentChecked(): void {\n    this.actions = this.itemActions.toArray();\n    this.showFooter = this.itemFooter != null;\n    this.showActions = this.itemActions.length > 0;\n    this.showCollapse = this.itemCollapse != null;\n  }\n\n  /**\n   * A helper function which helps to determine if the dropdown\n   * should toggle up.\n   * @param dropdown The dropdown instance.\n   */\n  showDropdownUp() {\n    const rect = this.element.nativeElement.getBoundingClientRect();\n    this.dropdownUp =\n      rect.bottom + this.itemActions.length * this.ACTION_ITEM_HEIGHT > window.innerHeight;\n  }\n}\n","import {\n  ContentChildren,\n  Input,\n  Output,\n  EventEmitter,\n  Component,\n  ViewChild,\n  ElementRef,\n  QueryList\n} from '@angular/core';\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { debounceTime, map, distinctUntilChanged, filter } from 'rxjs/operators';\nimport { IIdentified } from '@c8y/client';\nimport { BsDropdownDirective } from 'ngx-bootstrap/dropdown';\nimport { ListItemComponent } from '../list-group/list-item.component';\nimport { findIndex } from 'lodash-es';\n\n@Component({\n  selector: 'c8y-typeahead',\n  templateUrl: './typeahead.component.html',\n  viewProviders: [{ provide: ControlContainer, useExisting: NgForm }]\n})\nexport class TypeaheadComponent {\n  @ViewChild('searchControl', { static: false }) searchControl: ElementRef;\n  @ViewChild('dropdown', { static: false }) dropdown: BsDropdownDirective;\n  @ContentChildren(ListItemComponent) list: QueryList<ListItemComponent>;\n\n  @Input()\n  required: boolean = false;\n\n  @Input()\n  placeholder: string;\n\n  @Input()\n  displayProperty: string = 'name';\n\n  @Input()\n  name: string = this.displayProperty;\n\n  @Input()\n  selected: IIdentified = {\n    id: null,\n    [this.displayProperty]: ''\n  };\n\n  @Output()\n  selectedChange = new EventEmitter<IIdentified>();\n\n  @Output()\n  onSearch = new EventEmitter<string>();\n\n  private subscription: Subscription;\n  private readonly KEYCODE_UP = 38;\n  private readonly KEYCODE_DOWN = 40;\n  private readonly KEYCODE_TAB = 9;\n  private readonly KEYCODE_ENTER = 13;\n  private readonly KEYCODE_ESC = 27;\n\n  onShown() {\n    this.searchControl.nativeElement.focus();\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.subscription = fromEvent(this.searchControl.nativeElement, 'keydown')\n      .pipe(\n        map((e: any) => this.handleKeyboard(e)),\n        filter((e: any) => e),\n        debounceTime(200),\n        map((e: any) => e.target.value),\n        distinctUntilChanged()\n      )\n      .subscribe(value => {\n        this.selectedChange.emit({\n          id: null,\n          [this.displayProperty]: value\n        });\n        this.onSearch.emit(value);\n      });\n  }\n\n  handleKeyboard(event): void {\n    const keyCode = event.keyCode;\n    if (\n      [this.KEYCODE_ENTER, this.KEYCODE_DOWN, this.KEYCODE_TAB, this.KEYCODE_UP].includes(keyCode)\n    ) {\n      const items = this.list.toArray();\n      const index = findIndex(items, item => item.active);\n      if (keyCode === this.KEYCODE_ENTER || keyCode === this.KEYCODE_TAB) {\n        if (index > -1) {\n          event.preventDefault();\n          items[index].element.nativeElement.click();\n        }\n        this.dropdown.hide();\n        this.searchControl.nativeElement.blur();\n      } else {\n        this.dropdown.show();\n        const upOrDown = keyCode === this.KEYCODE_DOWN ? 1 : -1;\n        if (index > -1) {\n          items[index].active = false;\n        }\n        if (items[index + upOrDown]) {\n          items[index + upOrDown].active = true;\n        }\n      }\n      return;\n    } else if (keyCode === this.KEYCODE_ESC) {\n      event.stopPropagation();\n      this.dropdown.hide();\n      this.searchControl.nativeElement.blur();\n      return;\n    } else {\n      this.dropdown.show();\n    }\n    return event;\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'c8y-list-group',\n  templateUrl: './list-group.component.html',\n  host: {\n    class: 'c8y-list__group'\n  }\n})\nexport class ListGroupComponent {\n\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'c8y-list-item-icon, c8y-li-icon',\n  templateUrl: './list-item-icon.component.html',\n  host: {\n    class: 'c8y-list__item__icon'\n  }\n})\nexport class ListItemIconComponent {\n  @Input()\n  icon: string;\n\n  @Input()\n  status?: 'statusOk' | 'statusUnknown' | 'statusAlert' | 'statusNok' | 'status critical' | 'status warning' | 'status minor' | 'status major';\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'c8y-list-item-body, c8y-li-body',\n  templateUrl: './list-item-body.component.html'\n})\nexport class ListItemBodyComponent {\n\n  @Input()\n  body: string;\n\n}\n","import { Output, EventEmitter, Component, Input, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'c8y-list-item-checkbox, c8y-li-checkbox',\n  templateUrl: './list-item-checkbox.component.html',\n  host: {\n    class: 'c8y-list__item__check'\n  }\n})\nexport class ListItemCheckboxComponent {\n  @Input()\n  selected = false;\n  @Output()\n  onSelect = new EventEmitter<boolean>();\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.selected && !changes.selected.firstChange) {\n      this.onSelect.emit(changes.selected.currentValue);\n    }\n  }\n}\n","import { Output, EventEmitter, Component, Input, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'c8y-list-item-radio, c8y-li-radio',\n  templateUrl: './list-item-radio.component.html',\n  host: {\n    class: 'c8y-list__item__radio'\n  }\n})\nexport class ListItemRadioComponent {\n  @Input()\n  selected = false;\n  @Input()\n  name = 'list_item_radio';\n  @Output()\n  onSelect = new EventEmitter<boolean>();\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.selected && !changes.selected.firstChange) {\n      this.onSelect.emit(changes.selected.currentValue);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ListGroupComponent } from './list-group.component';\nimport { ListItemComponent } from './list-item.component';\nimport { CommonModule } from '../common/common.module';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { ListItemIconComponent } from './list-item-icon.component';\nimport { ListItemBodyComponent } from './list-item-body.component';\nimport { ListItemFooterComponent } from './list-item-footer.component';\nimport { ListItemActionComponent } from './list-item-action.component';\nimport { ListItemCollapseComponent } from './list-item-collapse.component';\nimport { ListItemCheckboxComponent } from './list-item-checkbox.component';\nimport { ListItemRadioComponent } from './list-item-radio.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CollapseModule.forRoot(),\n    BsDropdownModule\n  ],\n  declarations: [\n    ListGroupComponent,\n    ListItemComponent,\n    ListItemIconComponent,\n    ListItemBodyComponent,\n    ListItemFooterComponent,\n    ListItemActionComponent,\n    ListItemCollapseComponent,\n    ListItemCheckboxComponent,\n    ListItemRadioComponent\n  ],\n  exports: [\n    ListGroupComponent,\n    ListItemComponent,\n    ListItemIconComponent,\n    ListItemBodyComponent,\n    ListItemFooterComponent,\n    ListItemActionComponent,\n    ListItemCollapseComponent,\n    ListItemCheckboxComponent,\n    ListItemRadioComponent\n  ]\n})\nexport class ListGroupModule {}\n","import { NgModule } from '@angular/core';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { SelectComponent } from './select.component';\nimport { CommonModule } from '../common/common.module';\nimport { TypeaheadComponent } from './typeahead.component';\nimport { ListGroupModule } from '../list-group/list-group.module';\nimport { FormsModule } from '../forms/forms.module';\n\n/**\n * The angular module definition for a select.\n * @exports SelectComponent\n */\n@NgModule({\n  imports: [\n    BsDropdownModule.forRoot(),\n    CommonModule,\n    ListGroupModule,\n    FormsModule\n  ],\n  exports: [\n    SelectComponent,\n    TypeaheadComponent\n  ],\n  declarations: [\n    SelectComponent,\n    TypeaheadComponent\n  ]\n})\nexport class SelectModule { }\n","import { Directive, Input, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[c8y-guide-href]'\n})\nexport class GuideHrefDirective {\n  @Input('c8y-guide-href')\n  c8yGuideHref;\n\n  private htmlAnchor: HTMLAnchorElement;\n\n  set baseHref(href) {\n    this.htmlAnchor.href = `${href}/${this.c8yGuideHref}`;\n  }\n\n  constructor(private elementRef: ElementRef) {\n    this.htmlAnchor = this.elementRef.nativeElement as HTMLAnchorElement;\n    if (!this.htmlAnchor.hasAttribute('target')) {\n      this.htmlAnchor.setAttribute('target', '_blank');\n    }\n  }\n}\n","import { Component, OnInit, ContentChildren, QueryList } from '@angular/core';\nimport { GuideHrefDirective } from './guide-href.directive';\nimport { DocsService } from './docs.service';\n\n@Component({\n  selector: '[c8y-guide-docs]',\n  templateUrl: './guide-docs.component.html'\n})\nexport class GuideDocsComponent implements OnInit {\n  baseUrl: string;\n  @ContentChildren(GuideHrefDirective, { descendants: true }) links: QueryList<GuideHrefDirective>;\n\n  constructor(private docs: DocsService) {}\n\n  ngOnInit(): void {\n    this.baseUrl = this.docs.getBaseUrl();\n  }\n\n  ngAfterViewInit(): void {\n    this.links.forEach(guide => {\n      guide.baseHref = this.baseUrl;\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DocsService } from './docs.service';\nimport { GuideHrefDirective } from './guide-href.directive';\nimport { GuideDocsComponent } from './guide-docs.component';\n\n@NgModule({\n  declarations: [\n    GuideHrefDirective,\n    GuideDocsComponent\n  ],\n  imports: [CommonModule],\n  exports: [\n    GuideHrefDirective,\n    GuideDocsComponent\n  ],\n  providers: [DocsService],\n})\nexport class DocsModule {}\n","import { Component, InjectionToken, Type } from '@angular/core';\n\n/**\n * A hook to add dynamic components to the UI (e.g. widgets).\n */\nexport const HOOK_COMPONENTS = new InjectionToken('Hook Dynamic Component');\n\n/**\n * A hook to add dynamic components to the UI (e.g. widgets).\n * @deprecated: Use HOOK_COMPONENTS\n */\nexport const HOOK_COMPONENT = new InjectionToken('Hook Dynamic Component @deprecated');\n\n/**\n * A dynamic component can be defined in a the HOOK_COMPONENTS to display any kind\n * of component dynamically just by referencing it's id. The most common use case is on dashboards,\n * where the `configComponent` is used to define what is displayed on the `component`\n * on the dashboard.\n *\n * To use the component you can use the c8y-dynamic-component.\n *\n * ```\n *   <c8y-dynamic-component\n *     componentId=\"angular.widget.demo\"\n *     [config]=\"{ text: 'Hello world' }\"\n *     [mode]=\"editComponent ? 'config' : 'component'\"\n *   ></c8y-dynamic-component>\n *   ```\n */\nexport interface DynamicComponentDefinition {\n  /**\n   * Unique serializable id\n   */\n  id: string;\n  /**\n   * The component which is used when the component should be displayed (e.g. on a dashboard)\n   */\n  component: Type<Component>;\n  /**\n   * The configuration component used when a widget is added or edited.\n   */\n  configComponent?: Type<Component>;\n  /**\n   * The label shown for this dynamic component on add widgets\n   */\n  label: string;\n  /**\n   * The description shown on add widget\n   */\n  description: string;\n  /**\n   * Add any random data, specially to angular.js dashboards.\n   * Should be searilzabled to allow to save it to the API.\n   */\n  data?: any;\n  /**\n   * An url to an preview image.\n   */\n  previewImage?: string;\n}\n\n/**\n * Use this interface on any component to define the interchange between\n * config and display component.\n */\nexport interface DynamicComponent {\n  /**\n   * The configuration which is shared between configuration component and display component.\n   * Should be searilzabled to allow to save it to the API.\n   */\n  config: any;\n  /**\n   * A reference to the ng1Form on angularjs dashboards to disable/enable the save button.\n   * @deprecated: Will not work on Angular-Dashboards (1.6.1.0). Use `ContextServiceDashboard.formDisabled` instead.\n   */\n  ng1FormRef?: any;\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\nimport { filter, mergeMap, take } from 'rxjs/operators';\nimport { ExtensionPoint, fromFactories } from '../common/extension-hooks';\nimport { StateService } from '../common/state-service.abstract';\nimport {\n  DynamicComponentDefinition,\n  HOOK_COMPONENT,\n  HOOK_COMPONENTS\n} from './dynamic-component.model';\n\ndeclare const __MODE__: string;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DynamicComponentService extends StateService\n  implements ExtensionPoint<DynamicComponentDefinition> {\n  items$: Observable<DynamicComponentDefinition[]>;\n  readonly refreshTrigger = new Subject();\n  readonly state$ = new BehaviorSubject<Set<DynamicComponentDefinition>>(\n    new Set<DynamicComponentDefinition>()\n  );\n\n  constructor(private injector: Injector, router: Router) {\n    super();\n\n    this.items$ = fromFactories(\n      [() => this.injector.get(HOOK_COMPONENTS, []), () => this.getComponentsViaDeprecatedHook()],\n      router,\n      false\n    );\n    this.items$.subscribe(cmps => {\n      cmps.forEach(cmp => {\n        this.state.add(cmp);\n      });\n      this.emitNewState();\n    });\n  }\n\n  getComponentsViaDeprecatedHook() {\n    const componentsViaDeprecatedHook: DynamicComponentDefinition[] = this.injector.get(\n      HOOK_COMPONENT,\n      []\n    ) as DynamicComponentDefinition[];\n    if (\n      componentsViaDeprecatedHook &&\n      componentsViaDeprecatedHook.length &&\n      __MODE__ !== 'production'\n    ) {\n      console.warn('HOOK_COMPONENT is now deprecated. Use HOOK_COMPONENTS instead.');\n    }\n\n    return componentsViaDeprecatedHook;\n  }\n\n  refresh() {\n    this.refreshTrigger.next(1);\n  }\n\n  get state() {\n    return this.state$.value;\n  }\n\n  /**\n   * Returns a component by it's id as an observable.\n   * @param id The id of the component.\n   */\n  getById$(id) {\n    return this.state$.pipe(\n      filter((cmps: Set<DynamicComponentDefinition>) => cmps.size > 0),\n      mergeMap((cmps: Set<DynamicComponentDefinition>) =>\n        of(Array.from(cmps).find(cmp => cmp.id === id))\n      ),\n      take(1)\n    );\n  }\n\n  add(component: DynamicComponentDefinition) {\n    this.state.add(component);\n    this.emitNewState();\n  }\n\n  remove(component: DynamicComponentDefinition) {\n    this.state.delete(component);\n    this.emitNewState();\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ComponentFactoryResolver,\n  ViewContainerRef\n} from '@angular/core';\nimport { DynamicComponent } from './dynamic-component.model';\nimport { DynamicComponentService } from './dynamic-component.service';\n\n/**\n * C8y dynamic component.\n * ## Example:\n *\n * register component in HOOK in module:\n * ```typescript\n *  import { HOOK_COMPONENT } from '@c8y/ngx-components';\n *\n * @NgModule({\n *  ...,\n *  providers: [{\n *      provide: HOOK_COMPONENT,\n *      multi: true,\n *      useValue: [{\n *          id: 'test-component',\n *          label: 'My test component',\n *          description: 'this is test component',\n *          component: TestComponent\n *      }],\n *  ...\n *  }]\n *\n * ```\n * Showing dynamic component:\n * ```html\n * <c8y-dynamic-component [componentId]=\"'test-component'\" [config]=\"config\"></c8y-dynamic-component>\n * ```\n */\n@Component({\n  selector: 'c8y-dynamic-component',\n  templateUrl: './dynamic-component.component.html'\n})\nexport class DynamicComponentComponent {\n  @Input() componentId: string;\n  @Input() config: any;\n  @Input() mode: 'config' | 'component' = 'component';\n  @Input() notFoundError = true;\n  @ViewChild('host', { read: ViewContainerRef, static: true }) host: ViewContainerRef;\n  error: any;\n  expandErrorDetails = false;\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private dynamicComponentService: DynamicComponentService\n  ) {}\n\n  ngOnChanges(): void {\n    this.dynamicComponentService\n      .getById$(this.componentId)\n      .subscribe(cmp => this.loadComponent(cmp));\n  }\n\n  loadComponent(dynamicComponent) {\n    try {\n      this.error = undefined;\n      const componentFactory = this.componentFactoryResolver.resolveComponentFactory(\n        this.mode === 'component' ? dynamicComponent.component : dynamicComponent.configComponent\n      );\n      this.host.clear();\n      const componentRef = this.host.createComponent(componentFactory);\n      (componentRef.instance as DynamicComponent).config = this.config;\n    } catch (ex) {\n      this.error = ex;\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { DynamicComponentComponent } from './dynamic-component.component';\nimport { DynamicComponentService } from './dynamic-component.service';\nimport { I18nModule } from '../i18n/i18n.module';\n\n@NgModule({\n  declarations: [DynamicComponentComponent],\n  imports: [CommonModule, CollapseModule, RouterModule.forChild([]), I18nModule],\n  exports: [DynamicComponentComponent],\n  providers: [DynamicComponentService]\n})\nexport class DynamicComponentModule {}\n","import { Component, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'c8y-dashboard-child-action',\n  templateUrl: './dashboard-child-action.component.html'\n})\nexport class DashboardChildActionComponent {\n  @ViewChild('template', { static: false }) template: any;\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'c8y-dashboard-child-title',\n  templateUrl: './dashboard-child-title.component.html'\n})\nexport class DashboardChildTitleComponent {}\n","import {\n  Component,\n  ContentChildren,\n  ElementRef,\n  HostBinding,\n  Input,\n  AfterContentInit,\n  QueryList,\n  forwardRef,\n  Output,\n  EventEmitter,\n  HostListener,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { DashboardChildComponent } from './dashboard-child.component';\nimport { DashboardChange } from './dashboard.model';\n\n/**\n * Displays a CSS grid which is customizable by the customer. You can set\n * `c8y-dashboard-child`-components on it or position any element on it by\n * setting the grid CSS properties. On change (resize, or rearrange) the\n * component emits an change event.\n *\n * ## Example:\n *\n * ```html\n * <c8y-title>Hello from outlet</c8y-title>\n *\n * <c8y-action-bar-item [placement]=\"'right'\">\n *   <button class=\"btn btn-link\" (click)=\"addRandom()\"><i class=\"fa fa-plus\"></i> Add random</button>\n * </c8y-action-bar-item>\n * <c8y-action-bar-item [placement]=\"'right'\">\n *   <button class=\"btn btn-link\" (click)=\"isFrozen = !isFrozen\">\n *     <i [c8yIcon]=\"isFrozen ? 'lock' : 'unlock'\"></i> Toggle freeze\n *   </button>\n * </c8y-action-bar-item>\n *\n * <c8y-dashboard (dashboardChange)=\"dashboardChange($event)\">\n *   <c8y-dashboard-child\n *     [isFrozen]=\"isFrozen\"\n *     title=\"dynamic\"\n *     *ngFor=\"let widget of widgets\"\n *     #current\n *   >\n *     x: {{ current.x }}<br />\n *     y: {{ current.y }}<br />\n *     width: {{ current.width }}<br />\n *     height: {{ current.height }}<br />\n *   </c8y-dashboard-child>\n *   <c8y-dashboard-child\n *     #cpWidget\n *     [isFrozen]=\"isFrozen\"\n *     [x]=\"0\"\n *     [y]=\"1\"\n *     [width]=\"3\"\n *     [height]=\"2\"\n *     [data]=\"widget\"\n *     [class]=\"'card card-dashboard panel-title-regular panel-content-branded panel-title-overlay'\"\n *   >\n *     <c8y-dashboard-child-title>\n *       <span>World!</span>\n *     </c8y-dashboard-child-title>\n *     x: {{ cpWidget.x }}<br />\n *     y: {{ cpWidget.y }}<br />\n *     width: {{ cpWidget.width }}<br />\n *     height: {{ cpWidget.height }}<br />\n *   </c8y-dashboard-child>\n *   <c8y-dashboard-child\n *     #cpWidget2\n *     [isFrozen]=\"isFrozen\"\n *     [x]=\"8\"\n *     [y]=\"1\"\n *     [width]=\"4\"\n *     [height]=\"4\"\n *     [class]=\"'card card-dashboard panel-content-dark'\"\n *   >\n *     <c8y-dashboard-child-title>\n *       <span>Hello!</span>\n *     </c8y-dashboard-child-title>\n *     <c8y-dashboard-child-action>\n *       <a href=\"\" (click)=\"cpWidget2.isFrozen = !cpWidget2.isFrozen; (false)\">\n *         <i [c8yIcon]=\"cpWidget2.isFrozen ? 'lock' : 'unlock'\"></i> Toggle freeze\n *       </a>\n *     </c8y-dashboard-child-action>\n *     x: {{ cpWidget2.x }}<br />\n *     y: {{ cpWidget2.y }}<br />\n *     width: {{ cpWidget2.width }}<br />\n *     height: {{ cpWidget2.height }}<br />\n *   </c8y-dashboard-child>\n *\n *   <c8y-dashboard-child\n *     #cpWidget3\n *     [isFrozen]=\"isFrozen\"\n *     [x]=\"0\"\n *     [y]=\"3\"\n *     [width]=\"4\"\n *     [height]=\"4\"\n *     [class]=\"'card-dashboard panel-content-transparent'\"\n *   >\n *     <c8y-dashboard-child-title *ngIf=\"showTitle\">\n *       <span>Transparent!</span>\n *     </c8y-dashboard-child-title>\n *     <c8y-dashboard-child-action>\n *       <a href=\"\" (click)=\"showTitle = !showTitle; (false)\">\n *         <i [c8yIcon]=\"'heading'\"></i> Hide/show title\n *       </a>\n *     </c8y-dashboard-child-action>\n *     <c8y-dashboard-child-action>\n *       <a href=\"\" (click)=\"cpWidget3.isFrozen = !cpWidget3.isFrozen; (false)\">\n *         <i [c8yIcon]=\"cpWidget3.isFrozen ? 'lock' : 'unlock'\"></i> Toggle freeze\n *       </a>\n *     </c8y-dashboard-child-action>\n *     x: {{ cpWidget3.x }}<br />\n *     y: {{ cpWidget3.y }}<br />\n *     width: {{ cpWidget3.width }}<br />\n *     height: {{ cpWidget3.height }}<br />\n *   </c8y-dashboard-child>\n * </c8y-dashboard>\n * ```\n */\n@Component({\n  selector: 'c8y-dashboard',\n  templateUrl: './dashboard.component.html',\n  host: {\n    class: 'c8y-grid-dashboard dashboard-grid'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DashboardComponent implements AfterContentInit {\n  /**\n   * All children in that dashboard.\n   */\n  @ContentChildren(forwardRef(() => DashboardChildComponent)) children: QueryList<\n    DashboardChildComponent\n  >;\n\n  /**\n   * The amount of columns on that dashboard.\n   */\n  @Input() columns = 12;\n\n  /**\n   * The spacing between each children in pixel.\n   */\n  @Input() gap = 12;\n\n  /**\n   * The amount of rows to dusplay. Set to auto to\n   * auto extend the rows.\n   */\n  @Input() rows: number | 'auto' = 'auto';\n\n  /**\n   * An event fired if the dashboard was changed.\n   */\n  @Output() dashboardChange = new EventEmitter<DashboardChange>();\n\n  dashboardRect;\n  private lastRow = 1;\n  private readonly DEFAULT_ROW_SIZE = 68;\n\n  /**\n   * The current column size.\n   */\n  get columnSize() {\n    return this.dashboardRect.width / this.columns;\n  }\n\n  /**\n   * The current row size.\n   */\n  get rowSize() {\n    return this.rows === 'auto' ? this.DEFAULT_ROW_SIZE : this.calculateRowSize();\n  }\n\n  /**\n   * Returns all positioning styles. Nasty workaround for that issue:\n   * https://github.com/angular/angular/issues/9343\n   */\n  @HostBinding('attr.style')\n  get inlineStyle() {\n    return this.sanitizer.bypassSecurityTrustStyle(\n      `\n        -ms-grid-columns: (1fr)[${this.columns}];\n        grid-template-columns: repeat(${this.columns}, 1fr);\n        ${this.rows !== 'auto' ? `grid-template-rows: repeat(${this.rows}, 1fr);` : ''}\n        grid-auto-rows: ${this.rowSize + this.gap}px;\n        -ms-grid-rows: (${this.rowSize + this.gap}px)[${\n        this.rows === 'auto' ? this.lastRow : this.rows\n      }];\n        margin: -${this.gap}px;\n      `\n    );\n  }\n\n  constructor(private element: ElementRef, private sanitizer: DomSanitizer) {}\n\n  ngAfterContentInit(): void {\n    this.onResize();\n    this.getLastRow();\n  }\n\n  @HostListener('window:resize')\n  onResize() {\n    this.updateRectSize();\n  }\n\n  /**\n   * Gets the last row\n   * (mainly for IE11 which doesn't support grid-auto-rows CSS property)\n   */\n  getLastRow() {\n    let lastRow = 1;\n    this.children.forEach(widget => {\n      if (lastRow < widget.y + widget.width) {\n        lastRow = widget.y + widget.width;\n      }\n    });\n    this.lastRow = lastRow + 1;\n  }\n\n  /**\n   * Updates the current rect size of the dashboard.\n   */\n  updateRectSize() {\n    const ele = this.element.nativeElement as HTMLElement;\n    this.dashboardRect =  ele.getBoundingClientRect();\n  }\n\n  emitChange(widget: DashboardChildComponent) {\n    this.dashboardChange.emit({ source: widget, children: this.children.toArray() });\n  }\n\n  private calculateRowSize() {\n    return this.dashboardRect.height / (this.rows as number);\n  }\n}\n","import { CdkDragMove } from '@angular/cdk/drag-drop';\nimport { sortBy } from 'lodash-es';\nimport { pipe } from 'rxjs';\nimport { distinctUntilChanged, expand, filter, map, tap } from 'rxjs/operators';\nimport { DashboardComponent } from './dashboard.component';\nimport {\n  DashboardChildDimension,\n  DashboardChildResizeDimension,\n  DashboardChildArrangement\n} from './dashboard.model';\nimport { DashboardChildComponent } from './dashboard-child.component';\n\nexport class DashboardChildChange {\n  child: DashboardChildComponent;\n  children: DashboardChildComponent[];\n  private dashboard: DashboardComponent;\n\n  private readonly MIN_WIDTH = 2;\n  private MIN_HEIGHT = 1;\n  private readonly PIXEL_SIZE_THRESHOLD = 10;\n\n  private diffX = 0;\n  private diffY = 0;\n\n  constructor(childToChange: DashboardChildComponent) {\n    this.dashboard = childToChange.dashboard;\n    this.children = childToChange.dashboard.children\n      ? childToChange.dashboard.children.filter(child => childToChange !== child)\n      : [];\n    this.child = childToChange;\n  }\n\n  get resize$() {\n    return this.child.dragSource.moved.pipe(\n      map(move => this.getPixelSize(move)),\n      tap(resizeDimension => this.setPixelSize(resizeDimension)),\n      map(resizeDimension => this.getDimensionSize(resizeDimension)),\n      distinctUntilChanged(\n        (prev, next) => prev.width === next.width && prev.height === next.height\n      ),\n      map(dimension => this.setDimension(dimension)),\n      this.arrangePipe()\n    );\n  }\n\n  get drag$() {\n    return this.child.dragSource.moved.pipe(\n      map(move => this.getDimensionPosition(move)),\n      filter(\n        dimension =>\n          dimension.x >= 0 &&\n          dimension.x <= this.dashboard.columns - this.child.width &&\n          dimension.y >= 0\n      ),\n      distinctUntilChanged((prev, next) => prev.x === next.x && prev.y === next.y),\n      this.arrangePipe()\n    );\n  }\n\n  findFreeDimension() {\n    let y = -1;\n    let x = 0;\n    let found = false;\n    const { width, height } = this.child;\n    if (width > this.dashboard.columns) {\n      throw new Error('The child does not fit on the current dashboard.');\n    }\n    do {\n      x = 0;\n      y++;\n      while (x + width <= this.dashboard.columns) {\n        if (this.getCollided({ x, y, width, height }).length === 0) {\n          found = true;\n          break;\n        }\n        x++;\n      }\n    } while (!found);\n    return { x, y, width, height } as DashboardChildDimension;\n  }\n\n  collapseUpAll(): void {\n    return sortBy([this.child, ...this.children], ['y']).forEach(w => {\n      const ds = new DashboardChildChange(w);\n      const newPosition = ds.collapseUp(w);\n      ds.setDimension(newPosition);\n    });\n  }\n\n  arrangeAll(arrange: DashboardChildArrangement) {\n    const { current, scan, spacing, origin } = arrange;\n    const collided = this.getCollided(current, sortBy(scan, ['y']));\n    return collided.map(child => {\n      const ds = new DashboardChildChange(child);\n      ds.setDimension({ ...child, y: spacing });\n      return {\n        current: child,\n        scan: scan.filter(w => w !== child),\n        spacing: child.y + child.height,\n        origin\n      };\n    });\n  }\n\n  private arrangePipe() {\n    return pipe(\n      map(\n        (dimension: DashboardChildDimension) =>\n          ({\n            current: dimension,\n            scan: this.children,\n            spacing: dimension.y + dimension.height,\n            origin: { ...dimension }\n          } as DashboardChildArrangement)\n      ),\n      expand((dimensions: DashboardChildArrangement) => this.arrangeAll(dimensions)),\n      map(({ origin }) => origin),\n      map(dimension => this.setDimension(dimension, true)),\n      tap(() => this.collapseUpAll()),\n      tap(() => this.dashboard.getLastRow())\n    );\n  }\n\n  private collapseUp(dimension: DashboardChildDimension) {\n    let { y } = dimension;\n    while (y > 0) {\n      if (this.getCollided({ ...dimension, y: y - 1 }).length !== 0) {\n        break;\n      }\n      y--;\n    }\n    return { ...dimension, y };\n  }\n\n  private setDimension(dimension: DashboardChildDimension, notIfColliding = false) {\n    if (notIfColliding && this.getCollided(dimension).length > 0) {\n      return;\n    }\n\n    this.child.x = dimension.x;\n    this.child.y = dimension.y;\n    if (\n      dimension.width >= this.MIN_WIDTH &&\n      dimension.x + dimension.width <= this.dashboard.columns\n    ) {\n      this.child.width = dimension.width;\n    } else if (dimension.width < this.MIN_WIDTH) {\n      dimension.width = this.MIN_WIDTH;\n    } else {\n      dimension.width = this.dashboard.columns - dimension.x;\n    }\n    if (dimension.height >= this.MIN_HEIGHT) {\n      this.child.height = dimension.height;\n    } else {\n      dimension.height = this.MIN_WIDTH;\n    }\n    return dimension;\n  }\n\n  private setPixelSize({ width, height }) {\n    if (width >= this.dashboard.columnSize * this.MIN_WIDTH - this.dashboard.gap) {\n      this.child.pxWidth = width + this.PIXEL_SIZE_THRESHOLD;\n    }\n    if (height >= this.dashboard.rowSize * this.MIN_HEIGHT - this.dashboard.gap) {\n      this.child.pxHeight = height + this.PIXEL_SIZE_THRESHOLD;\n    }\n  }\n\n  private getPixelSize(moveEvent: CdkDragMove) {\n    const draggedElement = moveEvent.source.element.nativeElement.parentNode as HTMLElement;\n    if (!this.diffX) {\n      const rect = draggedElement.getBoundingClientRect();\n      this.diffX =  rect.left;\n      this.diffY =  rect.top;\n    }\n    const { x, y } = moveEvent.pointerPosition;\n    const width = Math.round(x - this.diffX);\n    const height = Math.round(y - this.diffY);\n    return { width, height, pointer: { x, y } } as DashboardChildResizeDimension;\n  }\n\n  private getDimensionSize(resizePosition: DashboardChildResizeDimension) {\n    const { x, y } = this.child;\n    const ds = this.dashboard.dashboardRect;\n    const column = this.dashboard.columnSize;\n    const row = this.dashboard.rowSize + this.dashboard.gap;\n    const width =\n      Math.round((resizePosition.pointer.x - ds.left + this.dashboard.gap) / column) - x;\n    const height = Math.round((resizePosition.pointer.y - ds.top + this.dashboard.gap) / row) - y;\n    return { x, y, width, height } as DashboardChildDimension;\n  }\n\n  private getDimensionPosition(moveEvent: CdkDragMove) {\n    const draggedElement = moveEvent.source.element.nativeElement.nextElementSibling;\n    if (!this.diffX) {\n      const rect = draggedElement.getBoundingClientRect();\n      this.diffX =  moveEvent.pointerPosition.x - rect.left;\n      this.diffY =  moveEvent.pointerPosition.y - rect.top;\n    }\n\n    const left = moveEvent.pointerPosition.x - this.diffX;\n    const top = moveEvent.pointerPosition.y - this.diffY;\n    const { width, height } = this.child;\n    const ds = this.dashboard.dashboardRect;\n    const column = this.dashboard.columnSize;\n    const row = this.dashboard.rowSize + this.dashboard.gap / 2;\n    const x = Math.round((left - ds.left) / column);\n    const y = Math.round((top - ds.top) / row);\n    return { x, y, width, height } as DashboardChildDimension;\n  }\n\n  private doesCollide(a: DashboardChildDimension, b: DashboardChildDimension) {\n    if (b.x === undefined) {\n      return false;\n    }\n    return !(\n      a.y + a.height - 1 < b.y ||\n      a.y > b.y + b.height - 1 ||\n      a.x + a.width - 1 < b.x ||\n      a.x > b.x + b.width - 1\n    );\n  }\n\n  private getCollided(currentDimension: DashboardChildDimension, dimensions = this.children) {\n    const collided = dimensions.filter(dimension => this.doesCollide(currentDimension, dimension));\n    return collided;\n  }\n}\n","import { CdkDrag, CdkDragEnd, CdkDragStart } from '@angular/cdk/drag-drop';\nimport {\n  Component,\n  forwardRef,\n  HostBinding,\n  Inject,\n  Input,\n  ContentChildren,\n  Output,\n  EventEmitter,\n  ElementRef\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Subscription } from 'rxjs';\nimport { DashboardComponent } from './dashboard.component';\nimport { DashboardChildDimension, Widget } from './dashboard.model';\nimport { DashboardChildChange } from './dashboard-child-change';\nimport { DashboardChildActionComponent } from './dashboard-child-action.component';\n\n/**\n * A dashboard child allows to position elements\n * correctly on a grid. The user can then resize and\n * rearrange the elements, as long as they are not `frozen`.\n *\n * By setting `c8y-dashboard-child-actions` and\n * `c8y-dashboard-child-title` on the element you can add\n * custom actions or a custom title to the current child.\n *\n * By adding the correct branded classes, you can define\n * the look and feel of the child. By default it is displayed\n * as a card.\n *\n * Example:\n *\n * ```html\n *   <c8y-dashboard-child\n *     #cpWidget3\n *     [isFrozen]=\"isFrozen\"\n *     [x]=\"0\"\n *     [y]=\"3\"\n *     [width]=\"4\"\n *     [height]=\"4\"\n *     [class]=\"'card-dashboard panel-content-transparent'\"\n *   >\n *     <c8y-dashboard-child-title *ngIf=\"showTitle\">\n *       <span>Transparent!</span>\n *     </c8y-dashboard-child-title>\n *     <c8y-dashboard-child-action>\n *       <a href=\"\" (click)=\"showTitle = !showTitle; (false)\">\n *         <i [c8yIcon]=\"'heading'\"></i> Hide/show title\n *       </a>\n *     </c8y-dashboard-child-action>\n *     <c8y-dashboard-child-action>\n *       <a href=\"\" (click)=\"cpWidget3.isFrozen = !cpWidget3.isFrozen; (false)\">\n *         <i [c8yIcon]=\"cpWidget3.isFrozen ? 'lock' : 'unlock'\"></i> Toggle freeze\n *       </a>\n *     </c8y-dashboard-child-action>\n *     x: {{ cpWidget3.x }}<br />\n *     y: {{ cpWidget3.y }}<br />\n *     width: {{ cpWidget3.width }}<br />\n *     height: {{ cpWidget3.height }}<br />\n *   </c8y-dashboard-child>\n * ```\n */\n@Component({\n  selector: 'c8y-dashboard-child',\n  templateUrl: './dashboard-child.component.html',\n  host: {\n    class: 'dashboard-grid-child'\n  }\n})\nexport class DashboardChildComponent implements DashboardChildDimension {\n  @ContentChildren(DashboardChildActionComponent) actions = [];\n  dragSource: CdkDrag;\n  isResize = false;\n  isDragging = false;\n  klasses = {};\n\n  _pxWidth = '100%';\n  _pxHeight = '100%';\n\n  /**\n   * The x position of the child.\n   */\n  @Input() x;\n\n  /**\n   * The y position of the child.\n   */\n  @Input() y;\n\n  /**\n   * The width of the component in grid-columns.\n   */\n  @Input() width = 1;\n\n  /**\n   * The height of the component in grid-rows.\n   */\n  @Input() height = 1;\n\n  /**\n   * The data object can be used as a dataTransfer object for events of the child.\n   */\n  @Input() data: Widget | any;\n\n  /**\n   * The margin of the child in pixel.\n   */\n  @Input() margin = 12;\n\n  /**\n   * If a dashboard is frozen, all children cannot be moved\n   * or resized.\n   */\n  @Input() isFrozen = false;\n\n  /**\n   * The child content is initialized, as soon it is scrolled into viewport\n   */\n  @Input() useIntersection = false;\n\n  /**\n   * An event fired if a child change is started (dragging or resizing)\n   */\n  @Output() changeStart = new EventEmitter<DashboardChildComponent>();\n\n  /**\n   * An event fired if a child change is ended\n   */\n  @Output() changeEnd = new EventEmitter<DashboardChildComponent>();\n\n  /**\n   * All classes added to this child\n   */\n  @Input()\n  class: string[] | { [key: string]: boolean } = {};\n\n  /**\n   * Updates the pixel width of the child (used for resizing)\n   */\n  set pxWidth(value) {\n    this._pxWidth = `${value}px`;\n  }\n\n  /**\n   * Updates the pixel height of the child (used for resizing)\n   */\n  set pxHeight(value) {\n    this._pxHeight = `${value}px`;\n  }\n\n  /**\n   * An indicator if the child is intersected (that mean visible for the user)\n   */\n  intersected = false;\n\n  /**\n   * nasty workaround for that issue:\n   * https://github.com/angular/angular/issues/9343\n   */\n  @HostBinding('attr.style')\n  get inlineStyle() {\n    return this.sanitizer.bypassSecurityTrustStyle(`\n    grid-column-start: ${this.x + 1};\n    -ms-grid-column: ${this.x + 1};\n    grid-row-start: ${this.y + 1};\n    -ms-grid-row: ${this.y + 1};\n    grid-column-end: span ${this.width};\n    -ms-grid-column-span: ${this.width};\n    grid-row-end: span ${this.height};\n    -ms-grid-row-span: ${this.height};\n    display: block;\n    margin: ${this.margin || 12}px;\n    `);\n  }\n\n  /**\n   * The observable subscription which is listen to\n   * on changes (drag or resize).\n   */\n  changeSubscription: Subscription;\n\n  constructor(\n    @Inject(forwardRef(() => DashboardComponent)) public dashboard: DashboardComponent,\n    private sanitizer: DomSanitizer,\n    private element: ElementRef\n  ) {}\n\n  ngOnChanges(): void {\n    this.klasses = {\n      card: true,\n      'card-dashboard': true,\n      disabled: this.isFrozen,\n      'on-resize': this.isResize,\n      ...this.class\n    };\n  }\n\n  ngOnInit(): void {\n    if (this.x === undefined || this.y === undefined) {\n      setTimeout(() => this.setDynamicDimension());\n    }\n    if (this.useIntersection && 'IntersectionObserver' in window) {\n      const intersectionObserver = new IntersectionObserver(\n        event => (this.intersected = this.childInView(event[0], intersectionObserver))\n      );\n      intersectionObserver.observe(this.element.nativeElement);\n    } else {\n      this.intersected = true;\n    }\n  }\n\n  setDynamicDimension() {\n    const ds = new DashboardChildChange(this);\n    const { x, y } = ds.findFreeDimension();\n    this.x = x;\n    this.y = y;\n  }\n\n  resizeStarted($event: CdkDragStart) {\n    this.isResize = true;\n    this.dashboard.updateRectSize();\n    this.dragSource = $event.source;\n    const positioning = new DashboardChildChange(this);\n    this.changeSubscription = positioning.resize$.subscribe();\n    this.changeStart.emit(this);\n    this.ngOnChanges();\n  }\n\n  dragStarted($event: CdkDragStart) {\n    this.isDragging = true;\n    this.dashboard.updateRectSize();\n    this.dragSource = $event.source;\n    const positioning = new DashboardChildChange(this);\n    this.changeSubscription = positioning.drag$.subscribe();\n    this.changeStart.emit(this);\n  }\n\n  reset($event?: CdkDragEnd) {\n    this.isResize = false;\n    this.isDragging = false;\n    this._pxWidth = '100%';\n    this._pxHeight = '100%';\n    this.ngOnChanges();\n    if ($event) {\n      $event.source.reset();\n    }\n    if (this.changeSubscription) {\n      this.changeSubscription.unsubscribe();\n      this.dashboard.emitChange(this);\n      this.changeEnd.emit(this);\n    }\n  }\n\n  private childInView(event, observer) {\n    if (event.isIntersecting) {\n      observer.unobserve(event.target);\n      return true;\n    }\n    return false;\n  }\n}\n","import { Component, EventEmitter, Input, Output, SimpleChanges } from '@angular/core';\nimport { DashboardSettings, Widget, WidgetChange, DashboardChange } from './dashboard.model';\nimport { DashboardComponent } from './dashboard.component';\n\n@Component({\n  selector: 'c8y-widgets-dashboard',\n  templateUrl: './widgets-dashboard.component.html',\n  host: {\n    style: `\n      display: block;\n    `,\n    class: 'dashboard c8y-grid-dashboard'\n  }\n})\nexport class WidgetsDashboardComponent {\n  @Input()\n  widgets: Widget[];\n\n  @Input()\n  context: any;\n\n  @Input()\n  contextDashboard: any;\n\n  @Input('settings')\n  set _settings(settings: Partial<DashboardSettings>) {\n    this.settings = { ...this.settings, ...settings };\n  }\n  settings: DashboardSettings = {\n    isFrozen: false,\n    isDisabled: false,\n    widgetMargin: 12,\n    translateWidgetTitle: false,\n    defaultHeight: 4,\n    defaultWidth: 4,\n    allowFullscreen: false,\n    canDelete: true,\n    isLoading: false,\n  };\n\n  @Output()\n  onAddWidget: EventEmitter<DashboardComponent> = new EventEmitter();\n\n  @Output()\n  onEditWidget: EventEmitter<WidgetChange> = new EventEmitter();\n\n  @Output()\n  onDeleteWidget: EventEmitter<WidgetChange> = new EventEmitter();\n\n  @Output()\n  onChangeDashboard: EventEmitter<DashboardChange> = new EventEmitter();\n\n  @Output()\n  onEditDashboard: EventEmitter<DashboardComponent> = new EventEmitter();\n\n  @Output()\n  onDeleteDashboard: EventEmitter<DashboardComponent> = new EventEmitter();\n\n  @Output()\n  onFreeze: EventEmitter<DashboardSettings> = new EventEmitter();\n\n  @Output()\n  onChangeStart: EventEmitter<WidgetChange> = new EventEmitter();\n\n  @Output()\n  onChangeEnd: EventEmitter<WidgetChange> = new EventEmitter();\n\n  toggleFullscreen() {\n    const elem = document.body as any;\n    const doc = document as any;\n    if (!this.fullScreen()) {\n      if (elem.requestFullscreen) {\n        elem.requestFullscreen();\n      } else if (elem.msRequestFullscreen) {\n        elem.msRequestFullscreen();\n      } else if (elem.mozRequestFullScreen) {\n        elem.mozRequestFullScreen();\n      } else if (elem.webkitRequestFullscreen) {\n        elem.webkitRequestFullscreen((Element as any).ALLOW_KEYBOARD_INPUT);\n      }\n    } else if (doc.exitFullscreen) {\n      doc.exitFullscreen();\n    } else if (doc.msExitFullscreen) {\n      doc.msExitFullscreen();\n    } else if (doc.mozCancelFullScreen) {\n      doc.mozCancelFullScreen();\n    } else if (doc.webkitExitFullscreen) {\n      doc.webkitExitFullscreen();\n    }\n  }\n\n  fullScreen() {\n    const doc: any = document;\n    return !!(\n      doc.fullscreenElement ||\n      doc.mozFullScreenElement ||\n      doc.webkitFullscreenElement ||\n      doc.msFullscreenElement\n    );\n  }\n}\n","import { DragDropModule } from '@angular/cdk/drag-drop';\nimport { NgModule } from '@angular/core';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ActionBarModule } from '../action-bar/action-bar.module';\nimport { CommonModule } from '../common/common.module';\nimport { DynamicComponentModule } from '../dynamic-component/dynamic-component.module';\nimport { DashboardChildActionComponent } from './dashboard-child-action.component';\nimport { DashboardChildTitleComponent } from './dashboard-child-title.component';\nimport { DashboardChildComponent } from './dashboard-child.component';\nimport { DashboardComponent } from './dashboard.component';\nimport { WidgetsDashboardComponent } from './widgets-dashboard.component';\nimport { HeaderModule } from '../header/header.module';\nimport { DocsModule } from '../docs/docs.module';\n\n@NgModule({\n  declarations: [\n    DashboardChildComponent,\n    DashboardComponent,\n    DashboardChildTitleComponent,\n    DashboardChildActionComponent,\n    WidgetsDashboardComponent\n  ],\n  imports: [\n    CommonModule,\n    ActionBarModule,\n    DynamicComponentModule,\n    DragDropModule,\n    BsDropdownModule.forRoot(),\n    HeaderModule,\n    DocsModule\n  ],\n  exports: [\n    DashboardComponent,\n    DashboardChildComponent,\n    DashboardChildTitleComponent,\n    DashboardChildActionComponent,\n    WidgetsDashboardComponent\n  ]\n})\nexport class DashboardModule {}\n","import { Directive, Input, TemplateRef } from '@angular/core';\nimport { StepState } from '@angular/cdk/stepper';\n\n/**\n * Template to be used to override the icons inside the step header.\n */\n@Directive({\n  selector: 'ng-template[c8yStepperIcon]'\n})\nexport class C8yStepperIcon {\n  /** Name of the icon to be overridden. */\n  @Input('c8yStepperIcon') name: StepState;\n\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n","import {\n  Component,\n  TemplateRef,\n  Input,\n  Output,\n  ContentChildren,\n  QueryList,\n  AfterContentInit,\n  OnDestroy,\n  EventEmitter\n} from '@angular/core';\nimport { CdkStepper, StepState, STEP_STATE } from '@angular/cdk/stepper';\nimport { C8yStepperIcon } from './stepper-icon.directive';\nimport { Subject, Subscription } from 'rxjs';\n\n/**\n * C8yStepper extends the CdkStepper. You can use cdk based functionality and inputs.\n * Additional to that you are able to modify the behavior and also the look and feel when\n * using the C8yStepper.\n *\n * The C8yStepper is used to present any step-based process to the user.\n * A stepper, C8yStepper and/or CdkStepper is the parent of cdk-steps.\n * Each cdk-step represents one step in the whole process that you want to provide to the user.\n *\n * The C8yStepper will create, based on the given cdk-steps, a kind of stepper-progress which looks like this:\n * (1)---(2)---(3)---(n)\n * The stepper will handle the state of each step and provides styles for active steps, done-steps or in edit-mode.\n * You are able to override icons for each step in the stepper-progress with a template. You are also able to activate\n * default-icons for states like 'edit' and 'done'.\n *\n * To force users through every provided step, set the stepper to 'linear'.\n * This will disable the possibility to move for example from step one to step three.\n *\n * Whenever it comes to validation try to use formGroups. It is possible to\n * assign a formGroup to a cdk-step input called [stepControl], which automatically respects the\n * validation-rules that you created for this formGroup. If fields are required but not filled or\n * any other validation, like a pattern, is not matched the formGroup will be invalid. In this case\n * stepping in a linear stepper to the next step gets impossible.\n *\n * If there is the need to execute asynchronous code you have at least two possibilities.\n * First: As you learned, a cdk-step works with formGroups and Validators, so you are able to use\n * asyncValidators as well.\n * Second: The C8yStepper provides an event-emitter onStepChange which is called whenever a step-button (1)--(2)--(n)\n * in the stepper-progress is clicked. The event of this emitter holds the index of the step as number. You can\n * use this EventEmitter to call for example a custom navigate-method which performs first any async-call and then moves\n * on to the given step.\n *\n * @example\n * ```\n * <c8y-stepper\n * (onStepChange)=\"navigate($event)\"\n * [disableDefaultIcons]=\"{ edit: true, done: false }\"\n * [customClasses]=\"['m-l-40', 'm-r-40', 'm-t-32']\"\n * linear\n * >\n * <!-- override icons -->\n * <ng-template c8yStepperIcon=\"final\">\n *   <span [c8yIcon]=\"'hand-peace-o'\"></span>\n * </ng-template>\n *\n * <cdk-step [stepControl]=\"formGroupStepOne\" label=\"Name of the hero\">\n *   <div class=\"m-l-40 m-r-40 m-t-32\">\n *     <h4 class=\"p-b-8\" translate>What is the name of your hero?</h4>\n *     <c8y-form-group>\n *      <div [formGroup]=\"formGroupStepOne\">\n *       <input\n *         class=\"form-control\"\n *         type=\"text\"\n *         formControlName=\"name\"\n *         placeholder=\"Mister X\"\n *         #nameRef\n *         required\n *       />\n *       <c8y-messages>\n *         <c8y-message *ngIf=\"!formGroupStepOne.untouched && !nameRef.value\" translate\n *           >Enter the name of the Superhero</c8y-message\n *         >\n *       </c8y-messages>\n *      </div>\n *     </c8y-form-group>\n *   </div>\n *   <c8y-stepper-buttons></c8y-stepper-buttons>\n * </cdk-step>\n * <cdk-step>\n *  ...\n * </cdk-step state=\"final\">\n * </c8y-stepper>\n * ```\n */\n@Component({\n  selector: 'c8y-stepper',\n  templateUrl: './stepper.component.html',\n  providers: [{ provide: CdkStepper, useExisting: C8yStepper }]\n})\nexport class C8yStepper extends CdkStepper implements AfterContentInit, OnDestroy {\n  /**\n   * Optional\n   * Indicator if icons for edit and done state should be shown in step-header buttons\n   */\n  @Input() disableDefaultIcons?: { edit: boolean; done: boolean } = { edit: true, done: true };\n  /**\n   * Optional\n   * Possibility to add any kind of custom css classes to the step-header\n   */\n  @Input() customClasses?: [string];\n  /**\n   * Will emit the step index number whenever a step-header button was clicked\n   * It listens to the stepIndex Subject.\n   */\n  @Output() onStepChange = new EventEmitter<number>();\n\n  /**\n   * Holding a QueryList of C8yStepperIcons\n   * These are templateRefs which overrides any step-header button icon with matching state of cdk-step\n   *\n   * @example:\n   * ```\n   * <!-- override icons -->\n   *  <ng-template c8yStepperIcon=\"final\">\n   *   <span [c8yIcon]=\"'hand-peace-o'\"></span>\n   *  </ng-template>\n   *\n   * <cdk-step state=\"final\" label=\"Job done!\">\n   *  <div class=\"m-l-40 m-r-40 m-t-32\">\n   *    <h4 class=\"p-b-32\" style=\"text-align: center;\" translate>\n   *     Your Superhero is now ready to save the world!\n   *   </h4>\n   *  </div>\n   *  <c8y-stepper-buttons\n   *    [hidden]=\"!isModal\"\n   *    (onBack)=\"close()\"\n   *    [labels]=\"{ back: 'Got it!' }\"\n   *  ></c8y-stepper-buttons>\n   *  <c8y-stepper-buttons [hidden]=\"isModal\"></c8y-stepper-buttons>\n   * </cdk-step>\n   * ```\n   */\n  @ContentChildren(C8yStepperIcon, { descendants: true }) _icons: QueryList<C8yStepperIcon>;\n\n  /** Consumer-specified template-refs to be used to override the header icons. */\n  _iconOverrides: { [key: string]: TemplateRef<any> } = {};\n\n  private _stepIndex: Subject<number> = new Subject();\n  private _stepIndexSubscription: Subscription;\n\n  ngAfterContentInit() {\n    this._icons.forEach(({ name, templateRef }) => (this._iconOverrides[name] = templateRef));\n    this._stepIndexSubscription = this._stepIndex.subscribe(index => this.onStepChange.emit(index));\n  }\n\n  ngOnDestroy() {\n    if (this._stepIndexSubscription && !this._stepIndexSubscription.closed) {\n      this._stepIndexSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Manipulates the state based on the disabledDefaultIcons Input()\n   * Changing edit or done to false will change the icons within step-header buttons\n   * @param index step index\n   * @param state step state, like 'done', 'edit', 'error'\n   */\n  getIndicatorType(index: number, state: StepState) {\n    const stepState = this._getIndicatorType(index, state);\n    let _state = state;\n    switch (stepState) {\n      case STEP_STATE.EDIT:\n        if (!this.disableDefaultIcons.edit) {\n          _state = STEP_STATE.EDIT;\n        }\n        break;\n\n      case STEP_STATE.DONE:\n        if (!this.disableDefaultIcons.done) {\n          _state = STEP_STATE.DONE;\n        } else {\n          _state = '_done';\n        }\n        break;\n    }\n    return _state;\n  }\n\n  /**\n   * Pushs the step index to the subject\n   * @param index step index\n   */\n  setIndex(index: number) {\n    this._stepIndex.next(index);\n  }\n}\n","import { Component, Input, Output, TemplateRef, EventEmitter } from '@angular/core';\nimport { StepState } from '@angular/cdk/stepper';\n\n@Component({\n  selector: 'c8y-stepper-progress',\n  templateUrl: './stepper-progress.component.html'\n})\nexport class C8yStepperProgress {\n  /** List of overriden icons as TemplateRef. Also default icons could be overriden.\n   *  The given overriden icons will replace an icon with matching state: StepState\n   *\n   * <ng-container\n   * *ngSwitchCase=\"true\"\n   * [ngTemplateOutlet]=\"iconOverrides[state]\"\n   * ></ng-container>\n   *\n   */\n  @Input() iconOverrides: { [key: string]: TemplateRef<any> };\n  /** The index of the current step */\n  @Input() index: number;\n  /** Whether the step is cuurently selected or not  */\n  @Input() selected: boolean;\n  /** The current state of the step */\n  @Input() state: StepState;\n\n  /** Emits the index: number of the step which was clicked */\n  @Output() onStepClicked = new EventEmitter<number>();\n\n  /** Called on click and emits the step index */\n  stepSelected() {\n    this.onStepClicked.emit(this.index);\n  }\n}\n","import {\n  Host,\n  Component,\n  OnDestroy,\n  OnChanges,\n  Input,\n  Output,\n  EventEmitter,\n  AfterContentInit,\n  SimpleChanges\n} from '@angular/core';\nimport { C8yStepper } from './stepper.component';\nimport { CdkStep } from '@angular/cdk/stepper';\nimport { Subscription } from 'rxjs';\n\n/**\n * C8yStepperButtons provides a convinient way to have, according to\n * the C8yStepper and each cdk-step, buttons to navigate between steps or to cancel the whole\n * step-process. Buttons rendered with the help of this component will use the branding css.\n *\n * By default all steps with this component in use will render a next button, expect the last step.\n * The other way around, every step using this component will render a back button, expect the first step.\n * To get a cancel button rendered you need to handle the onCancel event.\n * For next and back button you don't need to handle the available events onNext and onBack because default behavior\n * is implemented. The default will just call, according to the button, the stepper.next() or stepper.previous()\n * methods and moves the stepper forth or back. Using the EventEmitter onNext and onBack will emit for you the following\n * object: {stepper: C8yStepper, step: CdkStep}. This is useful if you need to implement custom logic before moving\n * to the next step or sending data to a backend. In this case you need to tell the stepper to move forward or back\n * on your own.\n *\n * With the component input [labels] you can change the label of each button in each step. It takes an object like this:\n * {next?: string, back?: string, cancel?: string}\n *\n * The [pending] input is of type boolean and will enable css animation for the next button when true.\n *\n * If the cdk-step provides a stepControl the component will set the next button disabled when the formGroup\n * behind it is invalid. As long as the [pending] input is true the back and next button is also disabled.\n * This will prevent multiple clicks while running a request or stepping back while a request is ongoing.\n *\n * @example\n * ```\n * <c8y-stepper>\n *  <cdk-step>\n *    <!--\n *      your html code\n *          ...\n *          ...    -->\n *    <c8y-stepper-buttons\n *     (onNext)=\"save()\"\n *     [labels]=\"{ next: 'Save' }\"\n *     [pending]=\"pendingStatus\"\n *     ></c8y-stepper-buttons>\n *  </cdk-step>\n * </c8y-stepper>\n *\n * // in your component:\n * async save() {\n *   this.pendingStatus = true;\n *   // your async request goes here ...\n *   // await something();\n *   this.pendingStatus = false;\n *   this.stepper.next();\n * }\n * ```\n */\n@Component({\n  selector: 'c8y-stepper-buttons',\n  templateUrl: './stepper-buttons.component.html'\n})\nexport class C8yStepperButtons implements AfterContentInit, OnDestroy, OnChanges {\n  /**\n   * Optional\n   * Specify custom labels for each button (cancel, back or next)\n   */\n  @Input() labels?: { cancel?: string; back?: string; next?: string };\n  /**\n   * Optional\n   * Indicates if a request is pending and sets the next button\n   * to disabled when true\n   */\n  @Input() pending?: boolean = false;\n\n  /**\n   * EventEmitter which emits when cancel button is clicked\n   */\n  @Output() onCancel = new EventEmitter();\n  /**\n   * EventEmitter which emits {stepper: C8yStepper; step: CdkStep} when next button is clicked.\n   */\n  @Output() onNext = new EventEmitter<{ stepper: C8yStepper; step: CdkStep }>();\n\n  /**\n   * EventEmitter which emits {stepper: C8yStepper; step: CdkStep} when back button is clicked.\n   */\n  @Output() onBack = new EventEmitter<{ stepper: C8yStepper; step: CdkStep }>();\n\n  /**\n   * Indicator which button should be shown.\n   * Based on the cdk-steps within the c8y-stepper\n   * next and back buttons are rendered.\n   */\n  showBtns = {\n    cancel: false,\n    back: false,\n    next: false\n  };\n\n  /**\n   * Disabled state of a button\n   */\n  disabled: boolean = false;\n\n  private statusChangeSubscription: Subscription;\n\n  constructor(@Host() private stepper: C8yStepper, @Host() private step: CdkStep) {}\n\n  ngAfterContentInit() {\n    this.showBtns.cancel = this.onCancel.observers.length > 0;\n\n    if (this.stepper && this.stepper.steps && this.step) {\n      this.showBtns.back = this.stepper.steps.first !== this.step;\n      this.showBtns.next = this.stepper.steps.last !== this.step;\n    }\n\n    if (this.step && this.step.stepControl) {\n      this.disabled = this.step.stepControl.invalid;\n\n      this.statusChangeSubscription = this.step.stepControl.statusChanges.subscribe(status => {\n        this.disabled = this.step.stepControl.invalid;\n      });\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    /**\n     * Disable save/next button while the status is pending\n     * This will prevent multiple clicks and therefore multiple requests\n     */\n    if (changes && changes.pending) {\n      this.disabled = changes.pending.currentValue;\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.statusChangeSubscription && !this.statusChangeSubscription.closed) {\n      this.statusChangeSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Gets called when cancel button is clicked.\n   * It will emit immediate.\n   */\n  cancel() {\n    this.onCancel.emit();\n  }\n\n  /**\n   * Gets called when next button is clicked. When onNext EventEmitter has an observer registered\n   * it will emit the following object {stepper: C8yStepper; step: CdkStep}.\n   * Otherwise it will call stepper.next() as default.\n   */\n  next() {\n    if (this.onNext.observers.length > 0) {\n      this.onNext.emit({ stepper: this.stepper, step: this.step });\n    } else {\n      this.stepper.next();\n    }\n  }\n\n  /**\n   * Gets called when back button is clicked. When onBack EventEmitter has an observer registered\n   * it will emit the following object {stepper: C8yStepper; step: CdkStep}.\n   * Otherwise it will call stepper.previous() as default.\n   */\n  back() {\n    if (this.onBack.observers.length > 0) {\n      this.onBack.emit({ stepper: this.stepper, step: this.step });\n    } else {\n      this.stepper.previous();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CdkStepperModule, CdkStep, STEPPER_GLOBAL_OPTIONS } from '@angular/cdk/stepper';\nimport { C8yStepper } from './stepper.component';\nimport { CommonModule } from '../common/common.module';\nimport { C8yStepperIcon } from './stepper-icon.directive';\nimport { C8yStepperProgress } from './stepper-progress.component';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { C8yStepperButtons } from './stepper-buttons.component';\n\n/**\n * The angular module definition for c8y-stepper (Wizard).\n * @exports C8yStepper\n * @exports C8yStepperIcon\n * @exports C8yStepperButtons\n * @exports CdkStep\n */\n@NgModule({\n  imports: [CommonModule, CdkStepperModule, TooltipModule],\n  declarations: [C8yStepper, C8yStepperIcon, C8yStepperProgress, C8yStepperButtons],\n  exports: [C8yStepper, CdkStep, C8yStepperIcon, C8yStepperButtons],\n  providers: [\n    {\n      /**\n       * This emables additional states, like: edit, done and error\n       * These states are used to display custom icons, if needed.\n       * Any change in here will most probably result in not showing custom icons anymore\n       */\n      provide: STEPPER_GLOBAL_OPTIONS,\n      useValue: { displayDefaultIndicatorType: false }\n    }\n  ]\n})\nexport class StepperModule {}\n","import { NgModule } from '@angular/core';\nimport { ActionBarModule } from './action-bar/action-bar.module';\nimport { ActionModule } from './action/action.module';\nimport { AlertModule } from './alert/alert.module';\nimport { BootstrapModule } from './bootstrap/bootstrap.module';\nimport { BreadcrumbModule } from './breadcrumb/breadcrumb.module';\nimport { CommonModule } from './common/common.module';\nimport { DataGridModule } from './data-grid/data-grid.module';\nimport { DeviceGridModule } from './device-grid/device-grid.module';\nimport { DropAreaModule } from './drop-area/drop-area.module';\nimport { HeaderModule } from './header/header.module';\nimport { LoginModule } from './login/login.module';\nimport { ModalModule } from './modal/modal.module';\nimport { NavigatorModule } from './navigator/navigator.module';\nimport { AuthenticationModule } from './authentication/authentication.module';\nimport { SearchModule } from './search/search.module';\nimport { SelectModule } from './select/select.module';\nimport { TabsModule } from './tabs/tabs.module';\nimport { UserModule } from './user/user.module';\nimport { FormsModule as c8yFormsModule } from './forms/forms.module';\nimport { DeviceStatusModule } from './device-status/device-status.module';\nimport { DocsModule } from './docs/docs.module';\nimport { DynamicComponentModule } from './dynamic-component/dynamic-component.module';\nimport { DashboardModule } from './dashboard/dashboard.module';\nimport { StepperModule as c8yStepperModule } from './stepper/stepper.module';\nimport { ListGroupModule } from './list-group/list-group.module';\n\ntry {\n  // Levarage webpack to load ngx-bootstrap style\n  // it's here and not in @c8y/styles because it's not a dependency of styles\n  // @ts-ignore\n  // tslint:disable-next-line:no-var-requires\n  require('ngx-bootstrap/datepicker/bs-datepicker.css');\n} catch (e) {\n  // empty block\n}\n\n@NgModule({\n  exports: [\n    ActionBarModule,\n    ActionModule,\n    AlertModule,\n    BootstrapModule,\n    BreadcrumbModule,\n    CommonModule,\n    DataGridModule,\n    DeviceGridModule,\n    DropAreaModule,\n    HeaderModule,\n    LoginModule,\n    ModalModule,\n    NavigatorModule,\n    AuthenticationModule,\n    SearchModule,\n    SelectModule,\n    TabsModule,\n    UserModule,\n    c8yFormsModule,\n    DeviceStatusModule,\n    DocsModule,\n    c8yStepperModule,\n    DynamicComponentModule,\n    DashboardModule,\n    ListGroupModule\n  ]\n})\nexport class CoreModule {\n  static forRoot() {\n    return {\n      ngModule: CoreModule,\n      providers: [...CommonModule.providers(), ...LoginModule.providers()]\n    };\n  }\n}\n","import { Route as ngRoute } from '@angular/router';\nimport { ExtensionFactory } from '../common/extension-hooks';\nimport { Tab } from '../tabs/tab.model';\n\nexport enum ViewContext {\n  Device = 'device/:id',\n  Group = 'group/:id',\n  User = 'users/:id',\n  Application = 'applications/:id',\n  SubscribedApplications = 'subscribedApplications/:id',\n  Tenant = 'tenants/:id'\n}\n\nexport type Route = Partial<ngRoute> & {\n  path: string;\n  label?: string;\n  icon?: string;\n  context?: ViewContext;\n  priority?: number;\n\n  /**\n   * Allow to emit multiple tabs on one context route.\n   */\n  tabs?: Tab[];\n};\n\nexport type RouteFactory = ExtensionFactory<Route>;\n","import { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { fromFactories } from '../common/extension-hooks';\nimport { RouteFactory, Route } from './router.models';\n\n/**\n * A hook to use for Multi Provider extension.\n */\nexport const HOOK_ONCE_ROUTE = new InjectionToken('RouteFactory');\n\n/**\n * A service which defines routes\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouterService {\n  constructor(\n    @Optional() @Inject(HOOK_ONCE_ROUTE) factories: RouteFactory[],\n    private router: Router\n  ) {\n    fromFactories(factories).subscribe((routes: Route[]) => {\n      this.addRoute(routes);\n    });\n  }\n\n  /**\n   * Add a new route to the router configuration or a context.\n   * @param route The route to add\n   */\n  addRoute(route: Route | Route[]) {\n    this.addRoutes(Array.isArray(route) ? route : [route]);\n  }\n\n  private addRoutes(routes) {\n    const emptyRoute = this.router.config.find(r => r.path === '**');\n    this.router.resetConfig(\n      [\n        ...this.router.config.filter(r => r.path !== '**'),\n        ...routes\n          .map((r: Route) => this.convertRoute(this.router.config, r)),\n        emptyRoute\n      ].filter(Boolean)\n    );\n  }\n\n  private convertRoute(initialConfig, route: Route) {\n    if (route.context) {\n      initialConfig.forEach((r: Route) => {\n        if (r.data && r.data.context === route.context) {\n          r.children = [route, ...(r.children || [])];\n        }\n      });\n      return;\n    }\n    return route;\n  }\n}\n","import { Injector, Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router } from '@angular/router';\nimport { from, isObservable, of, iif } from 'rxjs';\nimport { every, filter, map, mergeMap, toArray, tap, switchMap } from 'rxjs/operators';\nimport { Tab } from '../tabs/tab.model';\nimport { Route } from './router.models';\n\n@Injectable()\nexport class RouterTabsResolver {\n  constructor(private injector: Injector, private router: Router) {}\n\n  get routerStateSnapshot() {\n    return this.router.routerState.snapshot;\n  }\n\n  resolve(route: ActivatedRouteSnapshot) {\n    return from(route.routeConfig.children || []).pipe(\n      mergeMap((child: Route) =>\n        from(this.getGuards(child)).pipe(\n          map((guard: CanActivate) => guard.canActivate(route, this.routerStateSnapshot)),\n          mergeMap((result: any) => {\n            if (isObservable(result)) {\n              return result;\n            }\n            if (result && typeof result.then === 'function') {\n              return from(result);\n            }\n            return of(result);\n          }),\n          tap(result => {\n            if (Array.isArray(result)) {\n              child.tabs = result;\n            }\n          }),\n          every(result => !!result),\n          filter(result => result),\n          mergeMap(() => Array.isArray(child.tabs) ? from(child.tabs) : of(child as Tab)),\n          map((result) =>  result.label\n              ? ({\n                  label: result.label,\n                  icon: result.icon,\n                  path: `${route.url.join('/')}/${result.path}`,\n                  priority: result.priority\n                } as Tab)\n              : undefined\n          )\n        )\n      ),\n      filter(tabs => !!tabs),\n      toArray()\n    );\n  }\n\n  private getGuards(child: Route) {\n    const guards = (child.canActivate || []).map(guard => {\n      return this.injector.get(guard);\n    });\n    if (child.data && child.data.showIf) {\n      guards.push({ canActivate: child.data.showIf });\n    }\n    return guards;\n  }\n}\n","import {\n  InventoryService,\n  UserService,\n  ApplicationService,\n  TenantService,\n} from '@c8y/client';\nimport { ViewContext } from './router.models';\n\nexport class ViewContextServices {\n  static services = new Map<ViewContext, any>([\n    [ViewContext.Device, InventoryService],\n    [ViewContext.Group, InventoryService],\n    [ViewContext.User, UserService],\n    [ViewContext.Application, ApplicationService],\n    [ViewContext.SubscribedApplications, ApplicationService],\n    [ViewContext.Tenant, TenantService],\n  ]);\n\n  static contextToService(context: ViewContext) {\n    return ViewContextServices.services.get(context);\n  }\n}\n","import { Component, Injector } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, PRIMARY_OUTLET, Router, UrlSegmentGroup, UrlTree } from '@angular/router';\nimport { ApiService, ApiCall } from '@c8y/ngx-components/api';\nimport { NEVER, Observable, Subject, Subscription } from 'rxjs';\nimport { filter, map, merge, switchMap } from 'rxjs/operators';\nimport { Tab } from '../tabs/tab.model';\nimport { TabsService } from '../tabs/tabs.service';\nimport { RouterTabsResolver } from './router-tabs.resolver';\nimport { ViewContextServices } from './view-context.service';\n\n@Component({\n  selector: 'c8y-context-route',\n  templateUrl: './context-route.component.html'\n})\nexport class ContextRouteComponent {\n  private dataSubscription: Subscription;\n  private routerSubscription: Subscription;\n  private lastAddedTabs = [];\n  private refreshTrigger = new Subject();\n\n  constructor(\n    private tabsResolver: RouterTabsResolver,\n    private tabsService: TabsService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private apiService: ApiService,\n    private injector: Injector\n  ) {}\n\n  ngOnInit(): void {\n    this.routerSubscription = this.router.events\n      .pipe(filter(e => e instanceof NavigationEnd))\n      .subscribe(() => this.redirectToFirstTab());\n    const refreshObservable = this.refreshTrigger.pipe(\n      merge(this.updatedContext()),\n      switchMap(() => this.tabsResolver.resolve(this.route.snapshot))\n    );\n    this.dataSubscription = this.route.data.pipe(\n      map(({ tabs }) => tabs),\n      merge(refreshObservable)\n    ).subscribe((tabs) => this.updateTabs(tabs));\n  }\n\n  ngOnDestroy(): void {\n    this.dataSubscription.unsubscribe();\n    this.routerSubscription.unsubscribe();\n    this.lastAddedTabs.forEach(t => this.tabsService.remove(t));\n  }\n\n  refreshTabs() {\n    this.refreshTrigger.next();\n  }\n\n  updatedContext(): Observable<ApiCall> {\n    const { data } = this.route.snapshot;\n    const serviceInstance = ViewContextServices.contextToService(data.context);\n    if (serviceInstance) {\n      const service = this.injector.get(serviceInstance);\n      const contextRegex = new RegExp(service.getDetailUrl(data.contextData), 'i');\n      const childrenRegex = new RegExp(`${service.getDetailUrl(data.contextData)}/child`, 'i');\n      const filterResponse = ({ url, method }) => {\n        const contextChanged = contextRegex.test(url) && method === 'PUT';\n        const childrenAffected = childrenRegex.test(url) && ['POST', 'DELETE'].includes(method);\n        return contextChanged || childrenAffected;\n      };\n      return this.apiService.hookResponse(filterResponse);\n    }\n    return NEVER;\n  }\n\n  private updateTabs(tabs = []) {\n    this.lastAddedTabs.forEach(t => this.tabsService.remove(t));\n    this.lastAddedTabs = tabs;\n    tabs.forEach(t => this.tabsService.add(t));\n    this.redirectToFirstTab();\n  }\n\n  private redirectToFirstTab() {\n    if (this.needsRedirect()) {\n      this.tabsService.firstTab$.subscribe((tab: Tab) => {\n        if (tab) {\n          this.router.navigateByUrl(tab.path, { replaceUrl: true });\n        }\n      });\n    }\n  }\n\n  private needsRedirect() {\n    const tree: UrlTree = this.router.parseUrl(this.router.url);\n    const groups: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n    const isContextRoute = groups.segments.length === 2;\n    return isContextRoute;\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate } from '@angular/router';\nimport { from, of } from 'rxjs';\nimport { catchError, map, shareReplay, tap } from 'rxjs/operators';\nimport { ViewContextServices } from './view-context.service';\n\n@Injectable()\nexport class ContextRouteGuard implements CanActivate {\n  private caches = new Map();\n  constructor(\n    private injector: Injector\n  ) {}\n\n  canActivate(route: ActivatedRouteSnapshot) {\n    const id = route.paramMap.get('id');\n    const service = this.service(route);\n    this.clearDetailCached(service, id);\n    return this.detailCached(service, id).pipe(\n      tap((contextData) => route.data = { ...route.data, contextData }),\n      map(() => true),\n      catchError((ex) => of(false))\n    );\n  }\n\n  private service(route) {\n    const serviceInstance = ViewContextServices.contextToService(route.data.context);\n    return this.injector.get(serviceInstance);\n  }\n\n  private detailCached(service, id) {\n    const cache = this.getCache(service);\n    let cached = cache[id];\n    if (!cached) {\n      cached = from(service.detail(id)).pipe(\n        map(({ data }) => data),\n        shareReplay(1)\n      );\n      cache[id] = cached;\n    }\n    return cached;\n  }\n\n  private clearDetailCached(service, id) {\n    const cache: Map<any, any> = this.getCache(service);\n    delete cache[id];\n  }\n\n  private getCache(service) {\n    let cache = this.caches.get(service);\n    if (!cache) {\n      cache = {};\n      this.caches.set(service, cache);\n    }\n    return cache;\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({selector: 'empty', template: ''})\nexport class EmptyComponent {}\n","import { NgModule } from '@angular/core';\nimport { RouterModule as NgRouterModule } from '@angular/router';\nimport { RouterService } from './router.service';\nimport { ContextRouteComponent } from './context-route.component';\nimport { HeaderModule } from '../header/header.module';\nimport { CommonModule } from '../common/common.module';\nimport { ContextRouteGuard } from './context-route.guard';\nimport { ViewContext, Route } from './router.models';\nimport { RouterTabsResolver } from './router-tabs.resolver';\nimport { EmptyComponent } from './empty.component';\n\nexport const routes: Route[] = [{\n  path: 'users/new',\n  component: EmptyComponent\n},\n{\n  path: 'tenants/new',\n  component: EmptyComponent\n}];\n// tslint:disable-next-line: forin\nfor (const key in ViewContext) {\n  const context = ViewContext[key];\n  routes.push({\n    path: context,\n    component: ContextRouteComponent,\n    canActivate: [ ContextRouteGuard ],\n    data: { context, contextData: {} },\n    resolve: {\n      tabs: RouterTabsResolver,\n    }\n  });\n}\n\n@NgModule({\n  declarations: [ ContextRouteComponent, EmptyComponent],\n  imports: [\n    NgRouterModule.forRoot(routes),\n    HeaderModule,\n    CommonModule\n  ],\n  entryComponents: [ContextRouteComponent, EmptyComponent]\n})\nexport class RouterModule {\n  static providers() {\n    return [\n      ContextRouteGuard,\n      RouterTabsResolver,\n      RouterService\n    ];\n  }\n\n  static forRoot() {\n    return {\n      ngModule: RouterModule,\n      providers: RouterModule.providers()\n    };\n  }\n\n  constructor(routerService: RouterService) {\n    // Declared but never used is intended: to always have a instance of RouterService.\n  }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'c8y-quick-link',\r\n  templateUrl: './quick-link.component.html'\r\n})\r\nexport class QuickLinkComponent {\r\n  @Input() icon;\r\n  @Input() label;\r\n}\r\n","import { CoreModule } from '../core.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { QuickLinkComponent } from './quick-link.component';\r\n\r\n@NgModule({\r\n  declarations: [QuickLinkComponent],\r\n  imports: [CoreModule],\r\n  exports: [QuickLinkComponent],\r\n  providers: []\r\n})\r\nexport class QuickLinkModule {}\r\n","import { BaseDeviceGridColumn } from './base.device-grid-column';\nimport { gettext } from '../../i18n/gettext';\n\nexport class CustomDeviceGridColumn extends BaseDeviceGridColumn {\n  constructor() {\n    super();\n\n    const self = this;\n\n    this.name = 'custom';\n    this.header = gettext('Custom');\n\n    this.filterable = true;\n    this.filteringConfig = {\n      schema: {\n        type: 'object',\n        properties: {\n          exists: {\n            type: 'boolean',\n            default: false,\n            title: gettext('Only rows where value is defined')\n          },\n          equals: {\n            type: 'array',\n            items: {\n              type: 'string'\n            }\n          }\n        }\n      },\n      form: [\n        {\n          key: 'exists'\n        },\n        {\n          key: 'equals',\n          title: gettext('Only rows where value equals to:'),\n          add: gettext('Or'),\n          items: [\n            {\n              key: 'equals[]',\n              notitle: true,\n              placeholder: gettext('e.g. value, you can use an asterisk (*) as wildcard character')\n            }\n          ]\n        }\n      ],\n      getFilter(model: any): any {\n        const filter: any = {};\n        if (model.exists) {\n          filter.__has = self.path;\n        }\n        if (model.equals) {\n          filter[self.path] = { __in: model.equals };\n        }\n        return filter;\n      }\n    };\n\n    this.sortable = true;\n  }\n\n  get sortingConfig() {\n    return {\n      pathSortingConfigs: [{ path: this.path }]\n    };\n  }\n}\n"]}