import * as tslib_1 from "tslib";
import { Component, Input } from '@angular/core';
import { PasswordService } from './password.service';
import { LoginService } from '../login/login.service';
import { assign, map } from 'lodash-es';
import { gettext } from '../i18n/gettext';
var PasswordCheckListComponent = /** @class */ (function () {
    function PasswordCheckListComponent(loginService, passwordStrengthChecker) {
        var _this = this;
        this.loginService = loginService;
        this.passwordStrengthChecker = passwordStrengthChecker;
        this.minGreenLength = 0;
        this.checklist = [
            {
                label: gettext('Include lowercase characters (e.g. abcdef)'),
                check: this.passwordStrengthChecker.hasLowerCase,
                icon: '',
                contextualColor: ''
            },
            {
                label: gettext('Include uppercase characters (e.g. ABCDEF)'),
                check: this.passwordStrengthChecker.hasUpperCase,
                icon: '',
                contextualColor: ''
            },
            {
                label: gettext('Include numbers (e.g. 123456)'),
                check: this.passwordStrengthChecker.hasNumbers,
                icon: '',
                contextualColor: ''
            },
            {
                label: gettext('Include symbols (e.g. !@#$%^)'),
                check: this.passwordStrengthChecker.hasSpecialChars,
                icon: '',
                contextualColor: ''
            },
            {
                label: gettext('Must have at least {{length}} characters'),
                check: function (password) { return password.length >= _this.minGreenLength; },
                icon: '',
                contextualColor: ''
            }
        ];
    }
    Object.defineProperty(PasswordCheckListComponent.prototype, "password", {
        set: function (password) {
            if (typeof password === 'string') {
                this.onPasswordChange(password);
            }
        },
        enumerable: true,
        configurable: true
    });
    PasswordCheckListComponent.prototype.ngOnInit = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var _a;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _a = this;
                        return [4 /*yield*/, this.loginService.getGreenMinLength()];
                    case 1:
                        _a.minGreenLength = _b.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    Object.defineProperty(PasswordCheckListComponent.prototype, "translateParams", {
        get: function () {
            return {
                length: this.minGreenLength
            };
        },
        enumerable: true,
        configurable: true
    });
    PasswordCheckListComponent.prototype.onPasswordChange = function (password) {
        this.checklist = map(this.checklist, function (requirement) {
            var checked = requirement.check(password);
            assign(requirement, {
                icon: checked ? 'check' : '',
                contextualColor: checked ? '' : 'text-muted'
            });
            return requirement;
        });
    };
    PasswordCheckListComponent.ctorParameters = function () { return [
        { type: LoginService },
        { type: PasswordService }
    ]; };
    tslib_1.__decorate([
        Input('password')
    ], PasswordCheckListComponent.prototype, "password", null);
    PasswordCheckListComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-password-check-list',
            template: "<div>\n    <span class=\"small\">{{'Please meet 4 out of 5 the conditions below' | translate}}:</span>\n    <ul class=\"list-unstyled\">\n        <li class=\"small\" *ngFor=\"let requirement of checklist\">\n            <i style=\"color:lightgreen;\" [c8yIcon]=\"requirement.icon\"></i>&nbsp;\n            <span\n              [translate]=\"requirement.label\"\n              [translateParams]=\"this.translateParams\"\n              class=\"small {{requirement.contextualColor}}\"\n            ></span>\n        </li>\n    </ul>\n</div>\n"
        })
    ], PasswordCheckListComponent);
    return PasswordCheckListComponent;
}());
export { PasswordCheckListComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFzc3dvcmQtY2hlY2stbGlzdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYzh5L25neC1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsiY29yZS9hdXRoZW50aWNhdGlvbi9wYXNzd29yZC1jaGVjay1saXN0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFekQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN0RCxPQUFPLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUN4QyxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFRMUM7SUE2Q0Usb0NBQW1CLFlBQTBCLEVBQ3pCLHVCQUF3QztRQUQ1RCxpQkFFQztRQUZrQixpQkFBWSxHQUFaLFlBQVksQ0FBYztRQUN6Qiw0QkFBdUIsR0FBdkIsdUJBQXVCLENBQWlCO1FBckM1RCxtQkFBYyxHQUFXLENBQUMsQ0FBQztRQUUzQixjQUFTLEdBQUc7WUFDVjtnQkFDRSxLQUFLLEVBQUUsT0FBTyxDQUFDLDRDQUE0QyxDQUFDO2dCQUM1RCxLQUFLLEVBQUUsSUFBSSxDQUFDLHVCQUF1QixDQUFDLFlBQVk7Z0JBQ2hELElBQUksRUFBRSxFQUFFO2dCQUNSLGVBQWUsRUFBRSxFQUFFO2FBRXBCO1lBQ0Q7Z0JBQ0UsS0FBSyxFQUFFLE9BQU8sQ0FBQyw0Q0FBNEMsQ0FBQztnQkFDNUQsS0FBSyxFQUFFLElBQUksQ0FBQyx1QkFBdUIsQ0FBQyxZQUFZO2dCQUNoRCxJQUFJLEVBQUUsRUFBRTtnQkFDUixlQUFlLEVBQUUsRUFBRTthQUNwQjtZQUNEO2dCQUNFLEtBQUssRUFBRSxPQUFPLENBQUMsK0JBQStCLENBQUM7Z0JBQy9DLEtBQUssRUFBRSxJQUFJLENBQUMsdUJBQXVCLENBQUMsVUFBVTtnQkFDOUMsSUFBSSxFQUFFLEVBQUU7Z0JBQ1IsZUFBZSxFQUFFLEVBQUU7YUFDcEI7WUFDRDtnQkFDRSxLQUFLLEVBQUUsT0FBTyxDQUFDLCtCQUErQixDQUFDO2dCQUMvQyxLQUFLLEVBQUUsSUFBSSxDQUFDLHVCQUF1QixDQUFDLGVBQWU7Z0JBQ25ELElBQUksRUFBRSxFQUFFO2dCQUNSLGVBQWUsRUFBRSxFQUFFO2FBQ3BCO1lBQ0Q7Z0JBQ0UsS0FBSyxFQUFFLE9BQU8sQ0FBQywwQ0FBMEMsQ0FBQztnQkFDMUQsS0FBSyxFQUFFLFVBQUMsUUFBUSxJQUFLLE9BQUEsUUFBUSxDQUFDLE1BQU0sSUFBSSxLQUFJLENBQUMsY0FBYyxFQUF0QyxDQUFzQztnQkFDM0QsSUFBSSxFQUFFLEVBQUU7Z0JBQ1IsZUFBZSxFQUFFLEVBQUU7YUFDcEI7U0FDRixDQUFDO0lBSUYsQ0FBQztJQTVDRCxzQkFBSSxnREFBUTthQUFaLFVBQWEsUUFBZ0I7WUFDM0IsSUFBSSxPQUFPLFFBQVEsS0FBSyxRQUFRLEVBQUU7Z0JBQ2hDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxRQUFRLENBQUMsQ0FBQzthQUNqQztRQUNILENBQUM7OztPQUFBO0lBMENLLDZDQUFRLEdBQWQ7Ozs7Ozt3QkFDRSxLQUFBLElBQUksQ0FBQTt3QkFBa0IscUJBQU0sSUFBSSxDQUFDLFlBQVksQ0FBQyxpQkFBaUIsRUFBRSxFQUFBOzt3QkFBakUsR0FBSyxjQUFjLEdBQUcsU0FBMkMsQ0FBQzs7Ozs7S0FDbkU7SUFFRCxzQkFBSSx1REFBZTthQUFuQjtZQUNFLE9BQU87Z0JBQ0wsTUFBTSxFQUFFLElBQUksQ0FBQyxjQUFjO2FBQzVCLENBQUM7UUFDSixDQUFDOzs7T0FBQTtJQUVELHFEQUFnQixHQUFoQixVQUFpQixRQUFRO1FBQ3ZCLElBQUksQ0FBQyxTQUFTLEdBQUcsR0FBRyxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsVUFBQyxXQUFXO1lBQy9DLElBQU0sT0FBTyxHQUFHLFdBQVcsQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDNUMsTUFBTSxDQUFDLFdBQVcsRUFBRTtnQkFDbEIsSUFBSSxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUFFO2dCQUM1QixlQUFlLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLFlBQVk7YUFDN0MsQ0FBQyxDQUFDO1lBQ0gsT0FBTyxXQUFXLENBQUM7UUFDckIsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDOztnQkF2QmdDLFlBQVk7Z0JBQ0EsZUFBZTs7SUEzQzVEO1FBREMsS0FBSyxDQUFDLFVBQVUsQ0FBQzs4REFLakI7SUFQVSwwQkFBMEI7UUFOdEMsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLHlCQUF5QjtZQUNuQyx1aUJBQW1EO1NBRXBELENBQUM7T0FFVywwQkFBMEIsQ0FxRXRDO0lBQUQsaUNBQUM7Q0FBQSxBQXJFRCxJQXFFQztTQXJFWSwwQkFBMEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFN1YmplY3QgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IFBhc3N3b3JkU2VydmljZSB9IGZyb20gJy4vcGFzc3dvcmQuc2VydmljZSc7XG5pbXBvcnQgeyBMb2dpblNlcnZpY2UgfSBmcm9tICcuLi9sb2dpbi9sb2dpbi5zZXJ2aWNlJztcbmltcG9ydCB7IGFzc2lnbiwgbWFwIH0gZnJvbSAnbG9kYXNoLWVzJztcbmltcG9ydCB7IGdldHRleHQgfSBmcm9tICcuLi9pMThuL2dldHRleHQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktcGFzc3dvcmQtY2hlY2stbGlzdCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9wYXNzd29yZC1jaGVjay1saXN0LmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVzOiBbXVxufSlcblxuZXhwb3J0IGNsYXNzIFBhc3N3b3JkQ2hlY2tMaXN0Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICBASW5wdXQoJ3Bhc3N3b3JkJylcbiAgc2V0IHBhc3N3b3JkKHBhc3N3b3JkOiBzdHJpbmcpIHtcbiAgICBpZiAodHlwZW9mIHBhc3N3b3JkID09PSAnc3RyaW5nJykge1xuICAgICAgdGhpcy5vblBhc3N3b3JkQ2hhbmdlKHBhc3N3b3JkKTtcbiAgICB9XG4gIH1cblxuICBtaW5HcmVlbkxlbmd0aDogbnVtYmVyID0gMDtcblxuICBjaGVja2xpc3QgPSBbXG4gICAge1xuICAgICAgbGFiZWw6IGdldHRleHQoJ0luY2x1ZGUgbG93ZXJjYXNlIGNoYXJhY3RlcnMgKGUuZy4gYWJjZGVmKScpLFxuICAgICAgY2hlY2s6IHRoaXMucGFzc3dvcmRTdHJlbmd0aENoZWNrZXIuaGFzTG93ZXJDYXNlLFxuICAgICAgaWNvbjogJycsXG4gICAgICBjb250ZXh0dWFsQ29sb3I6ICcnXG5cbiAgICB9LFxuICAgIHtcbiAgICAgIGxhYmVsOiBnZXR0ZXh0KCdJbmNsdWRlIHVwcGVyY2FzZSBjaGFyYWN0ZXJzIChlLmcuIEFCQ0RFRiknKSxcbiAgICAgIGNoZWNrOiB0aGlzLnBhc3N3b3JkU3RyZW5ndGhDaGVja2VyLmhhc1VwcGVyQ2FzZSxcbiAgICAgIGljb246ICcnLFxuICAgICAgY29udGV4dHVhbENvbG9yOiAnJ1xuICAgIH0sXG4gICAge1xuICAgICAgbGFiZWw6IGdldHRleHQoJ0luY2x1ZGUgbnVtYmVycyAoZS5nLiAxMjM0NTYpJyksXG4gICAgICBjaGVjazogdGhpcy5wYXNzd29yZFN0cmVuZ3RoQ2hlY2tlci5oYXNOdW1iZXJzLFxuICAgICAgaWNvbjogJycsXG4gICAgICBjb250ZXh0dWFsQ29sb3I6ICcnXG4gICAgfSxcbiAgICB7XG4gICAgICBsYWJlbDogZ2V0dGV4dCgnSW5jbHVkZSBzeW1ib2xzIChlLmcuICFAIyQlXiknKSxcbiAgICAgIGNoZWNrOiB0aGlzLnBhc3N3b3JkU3RyZW5ndGhDaGVja2VyLmhhc1NwZWNpYWxDaGFycyxcbiAgICAgIGljb246ICcnLFxuICAgICAgY29udGV4dHVhbENvbG9yOiAnJ1xuICAgIH0sXG4gICAge1xuICAgICAgbGFiZWw6IGdldHRleHQoJ011c3QgaGF2ZSBhdCBsZWFzdCB7e2xlbmd0aH19IGNoYXJhY3RlcnMnKSxcbiAgICAgIGNoZWNrOiAocGFzc3dvcmQpID0+IHBhc3N3b3JkLmxlbmd0aCA+PSB0aGlzLm1pbkdyZWVuTGVuZ3RoLFxuICAgICAgaWNvbjogJycsXG4gICAgICBjb250ZXh0dWFsQ29sb3I6ICcnXG4gICAgfVxuICBdO1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBsb2dpblNlcnZpY2U6IExvZ2luU2VydmljZSxcbiAgICAgICAgICAgICAgcHJpdmF0ZSBwYXNzd29yZFN0cmVuZ3RoQ2hlY2tlcjogUGFzc3dvcmRTZXJ2aWNlKSB7XG4gIH1cblxuICBhc3luYyBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLm1pbkdyZWVuTGVuZ3RoID0gYXdhaXQgdGhpcy5sb2dpblNlcnZpY2UuZ2V0R3JlZW5NaW5MZW5ndGgoKTtcbiAgfVxuXG4gIGdldCB0cmFuc2xhdGVQYXJhbXMoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGxlbmd0aDogdGhpcy5taW5HcmVlbkxlbmd0aFxuICAgIH07XG4gIH1cblxuICBvblBhc3N3b3JkQ2hhbmdlKHBhc3N3b3JkKSB7XG4gICAgdGhpcy5jaGVja2xpc3QgPSBtYXAodGhpcy5jaGVja2xpc3QsIChyZXF1aXJlbWVudCkgPT4ge1xuICAgICAgY29uc3QgY2hlY2tlZCA9IHJlcXVpcmVtZW50LmNoZWNrKHBhc3N3b3JkKTtcbiAgICAgIGFzc2lnbihyZXF1aXJlbWVudCwge1xuICAgICAgICBpY29uOiBjaGVja2VkID8gJ2NoZWNrJyA6ICcnLFxuICAgICAgICBjb250ZXh0dWFsQ29sb3I6IGNoZWNrZWQgPyAnJyA6ICd0ZXh0LW11dGVkJ1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gcmVxdWlyZW1lbnQ7XG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==