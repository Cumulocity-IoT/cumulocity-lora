import * as tslib_1 from "tslib";
import { Component, Output, EventEmitter, ViewChild } from '@angular/core';
import { UserService, ICredentials, FetchClient, Client, BasicAuth } from '@c8y/client';
import { AppStateService } from '../common/ui-state.service';
import { AlertService } from '../alert/alert.service';
import { LoginService } from '../login/public-api';
import { clone } from 'lodash-es';
import { gettext } from '../i18n/gettext';
var PasswordConfirmModalComponent = /** @class */ (function () {
    function PasswordConfirmModalComponent(user, ui, client, alert, loginService) {
        this.user = user;
        this.ui = ui;
        this.client = client;
        this.alert = alert;
        this.loginService = loginService;
        this.passwordConfirmedEmitter = new EventEmitter();
        this.loading = false;
    }
    PasswordConfirmModalComponent.prototype.passwordConfirm = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var credentials, strategy, newClient, e_1;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.password) return [3 /*break*/, 5];
                        credentials = {
                            password: this.password,
                            user: this.ui.currentUser.value.id,
                            tenant: this.client.tenant
                        };
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 3, 4, 5]);
                        this.loading = true;
                        strategy = clone(this.loginService.useBasicAuth({}));
                        delete credentials.tfa;
                        strategy.updateCredentials(credentials);
                        newClient = new Client(strategy, this.client.baseUrl);
                        return [4 /*yield*/, newClient.user.current()];
                    case 2:
                        _a.sent();
                        this.emitSuccessAndClose();
                        return [3 /*break*/, 5];
                    case 3:
                        e_1 = _a.sent();
                        if (e_1.res && e_1.res.status === 401 && e_1.data && (/pin|totp/i).test(e_1.data.message)) {
                            this.emitSuccessAndClose();
                        }
                        else {
                            this.alert.danger(gettext('Provided password doesn\'t match your current one.'));
                        }
                        return [3 /*break*/, 5];
                    case 4:
                        this.loading = false;
                        return [7 /*endfinally*/];
                    case 5: return [2 /*return*/];
                }
            });
        });
    };
    PasswordConfirmModalComponent.prototype.cancel = function () {
        this.passwordConfirmedEmitter.emit(false);
        this.modal._dismiss();
    };
    PasswordConfirmModalComponent.prototype.emitSuccessAndClose = function () {
        this.passwordConfirmedEmitter.emit(true);
        this.modal._dismiss();
    };
    PasswordConfirmModalComponent.ctorParameters = function () { return [
        { type: UserService },
        { type: AppStateService },
        { type: FetchClient },
        { type: AlertService },
        { type: LoginService }
    ]; };
    tslib_1.__decorate([
        Output()
    ], PasswordConfirmModalComponent.prototype, "passwordConfirmedEmitter", void 0);
    tslib_1.__decorate([
        ViewChild('modal', { static: false })
    ], PasswordConfirmModalComponent.prototype, "modal", void 0);
    PasswordConfirmModalComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-password-confirm-modal',
            template: "<c8y-modal [customFooter]=\"true\" [title]=\"'Confirm password' | translate\" #modal>\r\n  <form #confirmForm=\"ngForm\" (ngSubmit)=\"confirmForm.form.valid && passwordConfirm()\">\r\n    <c8y-form-group>\r\n      <label translate for=\"currentPassword\">Current password</label>\r\n      <input\r\n        id=\"currentPassword\"\r\n        [(ngModel)]=\"password\"\r\n        type=\"password\"\r\n        name=\"password\"\r\n        class=\"form-control\"\r\n        placeholder=\"{{ 'Current password' | translate }}\"\r\n        required\r\n      />\r\n    </c8y-form-group>\r\n\r\n    <div class=\"modal-footer\">\r\n      <button\r\n        title=\"{{ 'Cancel' | translate }}\"\r\n        class=\"btn btn-default\"\r\n        type=\"button\"\r\n        (click)=\"cancel()\"\r\n        translate\r\n      >\r\n        Cancel\r\n      </button>\r\n      <button\r\n        title=\"{{ 'Save' | translate }}\"\r\n        class=\"btn btn-primary\"\r\n        type=\"submit\"\r\n        [disabled]=\"!confirmForm.form.valid || loading\"\r\n        translate\r\n      >\r\n        Save\r\n      </button>\r\n    </div>\r\n  </form>\r\n</c8y-modal>\r\n"
        })
    ], PasswordConfirmModalComponent);
    return PasswordConfirmModalComponent;
}());
export { PasswordConfirmModalComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFzc3dvcmQtY29uZmlybS1tb2RhbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYzh5L25neC1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsiY29yZS9hdXRoZW50aWNhdGlvbi9wYXNzd29yZC1jb25maXJtLW1vZGFsLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzRSxPQUFPLEVBQUUsV0FBVyxFQUFFLFlBQVksRUFBRSxXQUFXLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUN4RixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDN0QsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBRXRELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNuRCxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQ2xDLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQU0xQztJQVFFLHVDQUNTLElBQWlCLEVBQ2pCLEVBQW1CLEVBQ2xCLE1BQW1CLEVBQ25CLEtBQW1CLEVBQ25CLFlBQTBCO1FBSjNCLFNBQUksR0FBSixJQUFJLENBQWE7UUFDakIsT0FBRSxHQUFGLEVBQUUsQ0FBaUI7UUFDbEIsV0FBTSxHQUFOLE1BQU0sQ0FBYTtRQUNuQixVQUFLLEdBQUwsS0FBSyxDQUFjO1FBQ25CLGlCQUFZLEdBQVosWUFBWSxDQUFjO1FBWDFCLDZCQUF3QixHQUFHLElBQUksWUFBWSxFQUFXLENBQUM7UUFDakUsWUFBTyxHQUFHLEtBQUssQ0FBQztJQVdaLENBQUM7SUFFQyx1REFBZSxHQUFyQjs7Ozs7OzZCQUNNLElBQUksQ0FBQyxRQUFRLEVBQWIsd0JBQWE7d0JBQ1QsV0FBVyxHQUFpQjs0QkFDaEMsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFROzRCQUN2QixJQUFJLEVBQUUsSUFBSSxDQUFDLEVBQUUsQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLEVBQUU7NEJBQ2xDLE1BQU0sRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU07eUJBQzNCLENBQUM7Ozs7d0JBRUEsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7d0JBQ2QsUUFBUSxHQUFHLEtBQUssQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO3dCQUMzRCxPQUFPLFdBQVcsQ0FBQyxHQUFHLENBQUM7d0JBQ3ZCLFFBQVEsQ0FBQyxpQkFBaUIsQ0FBQyxXQUFXLENBQUMsQ0FBQzt3QkFDbEMsU0FBUyxHQUFHLElBQUksTUFBTSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDO3dCQUM1RCxxQkFBTSxTQUFTLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxFQUFBOzt3QkFBOUIsU0FBOEIsQ0FBQzt3QkFDL0IsSUFBSSxDQUFDLG1CQUFtQixFQUFFLENBQUM7Ozs7d0JBRTNCLElBQUksR0FBQyxDQUFDLEdBQUcsSUFBSSxHQUFDLENBQUMsR0FBRyxDQUFDLE1BQU0sS0FBSyxHQUFHLElBQUksR0FBQyxDQUFDLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFOzRCQUNqRixJQUFJLENBQUMsbUJBQW1CLEVBQUUsQ0FBQzt5QkFDNUI7NkJBQU07NEJBQ0wsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLG9EQUFvRCxDQUFDLENBQUMsQ0FBQzt5QkFDbEY7Ozt3QkFFRCxJQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQzs7Ozs7O0tBRzFCO0lBRUQsOENBQU0sR0FBTjtRQUNFLElBQUksQ0FBQyx3QkFBd0IsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDMUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUN4QixDQUFDO0lBRU8sMkRBQW1CLEdBQTNCO1FBQ0UsSUFBSSxDQUFDLHdCQUF3QixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN6QyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQ3hCLENBQUM7O2dCQTFDYyxXQUFXO2dCQUNiLGVBQWU7Z0JBQ1YsV0FBVztnQkFDWixZQUFZO2dCQUNMLFlBQVk7O0lBWDFCO1FBQVQsTUFBTSxFQUFFO21GQUF3RDtJQUk1QjtRQUFwQyxTQUFTLENBQUMsT0FBTyxFQUFFLEVBQUMsTUFBTSxFQUFFLEtBQUssRUFBQyxDQUFDO2dFQUErQjtJQU54RCw2QkFBNkI7UUFKekMsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLDRCQUE0QjtZQUN0Qywwb0NBQXNEO1NBQ3ZELENBQUM7T0FDVyw2QkFBNkIsQ0FvRHpDO0lBQUQsb0NBQUM7Q0FBQSxBQXBERCxJQW9EQztTQXBEWSw2QkFBNkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFVzZXJTZXJ2aWNlLCBJQ3JlZGVudGlhbHMsIEZldGNoQ2xpZW50LCBDbGllbnQsIEJhc2ljQXV0aCB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IEFwcFN0YXRlU2VydmljZSB9IGZyb20gJy4uL2NvbW1vbi91aS1zdGF0ZS5zZXJ2aWNlJztcbmltcG9ydCB7IEFsZXJ0U2VydmljZSB9IGZyb20gJy4uL2FsZXJ0L2FsZXJ0LnNlcnZpY2UnO1xuaW1wb3J0IHsgTW9kYWxDb21wb25lbnQgfSBmcm9tICcuLi9tb2RhbC9tb2RhbC5jb21wb25lbnQnO1xuaW1wb3J0IHsgTG9naW5TZXJ2aWNlIH0gZnJvbSAnLi4vbG9naW4vcHVibGljLWFwaSc7XG5pbXBvcnQgeyBjbG9uZSB9IGZyb20gJ2xvZGFzaC1lcyc7XG5pbXBvcnQgeyBnZXR0ZXh0IH0gZnJvbSAnLi4vaTE4bi9nZXR0ZXh0JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LXBhc3N3b3JkLWNvbmZpcm0tbW9kYWwnLFxuICB0ZW1wbGF0ZVVybDogJy4vcGFzc3dvcmQtY29uZmlybS1tb2RhbC5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgUGFzc3dvcmRDb25maXJtTW9kYWxDb21wb25lbnQge1xuXG4gIEBPdXRwdXQoKSBwYXNzd29yZENvbmZpcm1lZEVtaXR0ZXIgPSBuZXcgRXZlbnRFbWl0dGVyPGJvb2xlYW4+KCk7XG4gIGxvYWRpbmcgPSBmYWxzZTtcbiAgcGFzc3dvcmQ6IHN0cmluZztcblxuICBAVmlld0NoaWxkKCdtb2RhbCcsIHtzdGF0aWM6IGZhbHNlfSkgcHJpdmF0ZSBtb2RhbDogTW9kYWxDb21wb25lbnQ7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIHVzZXI6IFVzZXJTZXJ2aWNlLFxuICAgIHB1YmxpYyB1aTogQXBwU3RhdGVTZXJ2aWNlLFxuICAgIHByaXZhdGUgY2xpZW50OiBGZXRjaENsaWVudCxcbiAgICBwcml2YXRlIGFsZXJ0OiBBbGVydFNlcnZpY2UsXG4gICAgcHJpdmF0ZSBsb2dpblNlcnZpY2U6IExvZ2luU2VydmljZVxuICApIHsgfVxuXG4gIGFzeW5jIHBhc3N3b3JkQ29uZmlybSgpIHtcbiAgICBpZiAodGhpcy5wYXNzd29yZCkge1xuICAgICAgY29uc3QgY3JlZGVudGlhbHM6IElDcmVkZW50aWFscyA9IHtcbiAgICAgICAgcGFzc3dvcmQ6IHRoaXMucGFzc3dvcmQsXG4gICAgICAgIHVzZXI6IHRoaXMudWkuY3VycmVudFVzZXIudmFsdWUuaWQsXG4gICAgICAgIHRlbmFudDogdGhpcy5jbGllbnQudGVuYW50XG4gICAgICB9O1xuICAgICAgdHJ5IHtcbiAgICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZTtcbiAgICAgICAgY29uc3Qgc3RyYXRlZ3kgPSBjbG9uZSh0aGlzLmxvZ2luU2VydmljZS51c2VCYXNpY0F1dGgoe30pKTtcbiAgICAgICAgZGVsZXRlIGNyZWRlbnRpYWxzLnRmYTtcbiAgICAgICAgc3RyYXRlZ3kudXBkYXRlQ3JlZGVudGlhbHMoY3JlZGVudGlhbHMpO1xuICAgICAgICBjb25zdCBuZXdDbGllbnQgPSBuZXcgQ2xpZW50KHN0cmF0ZWd5LCB0aGlzLmNsaWVudC5iYXNlVXJsKTtcbiAgICAgICAgYXdhaXQgbmV3Q2xpZW50LnVzZXIuY3VycmVudCgpO1xuICAgICAgICB0aGlzLmVtaXRTdWNjZXNzQW5kQ2xvc2UoKTtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgaWYgKGUucmVzICYmIGUucmVzLnN0YXR1cyA9PT0gNDAxICYmIGUuZGF0YSAmJiAoL3Bpbnx0b3RwL2kpLnRlc3QoZS5kYXRhLm1lc3NhZ2UpKSB7XG4gICAgICAgICAgdGhpcy5lbWl0U3VjY2Vzc0FuZENsb3NlKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy5hbGVydC5kYW5nZXIoZ2V0dGV4dCgnUHJvdmlkZWQgcGFzc3dvcmQgZG9lc25cXCd0IG1hdGNoIHlvdXIgY3VycmVudCBvbmUuJykpO1xuICAgICAgICB9XG4gICAgICB9IGZpbmFsbHkge1xuICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBjYW5jZWwoKSB7XG4gICAgdGhpcy5wYXNzd29yZENvbmZpcm1lZEVtaXR0ZXIuZW1pdChmYWxzZSk7XG4gICAgdGhpcy5tb2RhbC5fZGlzbWlzcygpO1xuICB9XG5cbiAgcHJpdmF0ZSBlbWl0U3VjY2Vzc0FuZENsb3NlKCkge1xuICAgIHRoaXMucGFzc3dvcmRDb25maXJtZWRFbWl0dGVyLmVtaXQodHJ1ZSk7XG4gICAgdGhpcy5tb2RhbC5fZGlzbWlzcygpO1xuICB9XG59XG4iXX0=