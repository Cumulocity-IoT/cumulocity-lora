{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@c8y/ngx-components/context-dashboard/context-dashboard.model.ts","ng://@c8y/ngx-components/context-dashboard/context-dashboard.service.ts","ng://@c8y/ngx-components/context-dashboard/device-dashboard.guard.ts","ng://@c8y/ngx-components/context-dashboard/dashboard-detail.component.ts","ng://@c8y/ngx-components/context-dashboard/widget.service.ts","ng://@c8y/ngx-components/context-dashboard/widget-config.component.ts","ng://@c8y/ngx-components/context-dashboard/context-dashboard.component.ts","ng://@c8y/ngx-components/context-dashboard/group-dashboard.guard.ts","ng://@c8y/ngx-components/context-dashboard/dashboard-actions.factory.ts","ng://@c8y/ngx-components/context-dashboard/appearance-settings.component.ts","ng://@c8y/ngx-components/context-dashboard/widget-preview.component.ts","ng://@c8y/ngx-components/context-dashboard/context-dashboard.module.ts","ng://@c8y/ngx-components/context-dashboard/cockpit-dashboard.component.ts","ng://@c8y/ngx-components/context-dashboard/welcome/welcome.component.ts","ng://@c8y/ngx-components/context-dashboard/legacy-welcome/legacy-welcome.component.ts","ng://@c8y/ngx-components/context-dashboard/cockpit-dashboard.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__decorate","decorators","target","key","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","ContextDashboardType","CONTEXT_DASHBOARD_CONFIG","InjectionToken","WIDGET_HEADER_CLASSES","gettext","class","description","WIDGET_CONTENT_CLASSES","DASHBOARD_THEME_CLASSES","ContextDashboardService","inventory","tabs","modal","translateService","router","user","appState","cache","Map","DEFAULT_PAGESIZE","FRAGMENT_NAME","DASHBOARD_ROUTE_PATH","INDEX_SPLIT","_formDisabled","create","dashboardCfg","contextOrName","id","dashboardType","Named","contextData","getDashboardTypeFromViewContext","dashboard","c8y_Dashboard","DeviceType","deviceTypeValue","fragmentKey","createFragmentKey","shouldSetGlobal","c8y_Global","Group","Device","childAdditionsCreate","_a","_b","data","detail","dashboardMO","set","update","cleanedDashboard","clean","pick","delete","msg","isDeviceType","confirm","instant","dashboardName","name","deviceType","Status","DANGER","ok","cancel","tabToRemove","Array","from","state","find","tab","path","endsWith","_this","remove","refresh","activateDashboards","route","types","dashboardId","params","getDashboard$","parent","pipe","tap","map","catchError","of","getTabs$","getNamedDashboardOrCreate","defaultWidgets","children","mapWidgets","throwIfEmpty","refreshTabs","isNamed","tabToUpdate","icon","priority","name_1","navigateToDashboard","test","url","navigate","relativeTo","getActivatedRoute","hasPermission","hasAnyRole","currentUser","some","keys","prop","RegExp","getStyling","styleList","styleName","defaultValue","styling","style","widgets","keyBy","widget","String","Math","random","substr","dashboardIdOrName","mo","get","dashboards","getContextDashboards","getNamedDashboard","cacheRefresh","getContextDashboards$","cacheDashboard","filter","has","setBaseContextRoute","removeDashboardMoProperty","createDashboardTab","toArray","requests","mergeAll","mergeMap","response","type","includes","currentContextRoute","dashboardCopy","cloneDeep","updateDashboard","forEach","child","componentTransformConfigWithContext","config","dashboardMo","_dashboard","jsonString","JSON","stringify","parse","list","fragmentType","pageSize","context","ViewContext","contextDashboardType","join","InventoryService","TabsService","ModalService","TranslateService","Router","UserService","AppStateService","Injectable","DeviceDashboardGuard","contextDashboardService","canActivate","DashboardDetailComponent","iconList","themeClass","headerClass","possibleStyling","_save","_cancel","DEFAULT_DASHBOARD_MARGIN","DEFAULT_DASHBOARD_ICON","DEFAULT_DASHBOARD_PRIORITY","DEFAULT_DASHBOARD_NAME","icons","filteredIcons","ngAfterContentInit","defaultDashboardCfg","current","clone","setDashboardStyle","dashboardDetailForm","form","markAsDirty","save","classes","widgetClasses","close","hide","getDashboardPreviewStyle","cssClasses","selectIcon","updateFiltered","term","search_1","val","allClasses","split","BsModalRef","Inject","args","ICON_LIST","tslib_1.__decorate","ViewChild","static","Component","selector","template","tslib_1.__param","WidgetService","dynamicComponentService","moduleConfig","getWidgetDefinition","componentId","getById$","toPromise","getWidgetDefinitions","translatedComponents","cmp","sortBy","widgetFilter","DynamicComponentService","providedIn","WidgetConfigComponent","widgetService","mode","searchChange$","Subject","searchTerm","contentClass","defaultStyling","isUpgrade","components","selected","select","isEdit","searchSub","switchMap","event","iif","which","timer","subscribe","search","setDefaultStyle","dynamicComponent","callLifeCycleHooks","_c","_x","_y","_width","_height","widgetConfig","device","tslib_1.__assign","omit","title","getStyle","settings","widgetDefaults","formDisabled","composeWidgetConfig","componentLabel","searchResult","escapeRegExp","trim","resetSearch","undefined","changeMode","isPreview","isDashboardDefaultStyle","ngOnDestroy","unsubscribe","className","styles","cssClass","setClasses","selectedComponent","setting","applyTargetIfDeviceDashboard","hideTarget","ng1","options","noDeviceTarget","ContextDashboardComponent","alert","renderer","bsModal","childrenClasses","setTitle","disabled","canDelete","isLoading","ngOnInit","loadNamedDashboard","loadContextDashboard","applyDeviceTarget","dataSub","restore","onLoad","updateDashboardChildren","mappedChildren","componentToWidget","deleteDashboard","snapshot","segment","navigateByUrl","editDashboard","initialState","isNamedDashboard","show","ignoreBackdropClick","content","editWidget","change","source","x","width","height","component","addWidget","newWidget","mergeWidgetClasses","updateWidget","index","findIndex","isNew","mapLegacy","mappedWidget","splice","deleteWidget","removed","indexOf","setTimeout","DashboardChildChange","collapseUpAll","addDashboardClassToBody","addClass","document","removeDashboardClassFromBody","removeClass","toggleFreeze","toggleIsFrozenFlag","isFrozen","success","addServerFailure","ex_3","dashboardChildren","dashboardClasses","c8y-grid-dashboard","all","values","el","card","card-dashboard","kebabCase","widgetComponent","configComponent","templateUrl","configTemplateUrl","transformConfigWithContext","ActivatedRoute","AlertService","Renderer2","BsModalService","Input","HostBinding","host","GroupDashboardGuard","DashboardActionsFactory","activatedRoute","action","addDashboard","isEnabled","AppearanceSettingsComponent","themeClassChange","EventEmitter","headerClassChange","possibleStylingTheme","possibleStylingHeader","themeClassClick","resetToDefault","defaultThemeClass","emit","headerClassClick","defaultHeaderClass","compareTo","Output","viewProviders","provide","ControlContainer","useExisting","NgForm","WidgetPreviewComponent","previewClasses","dashboard-theme-light","panel-title-regular","defaultConfig","allowFullscreen","noNewWidgets","routes","ContextDashboardModule","ngModule","ContextDashboardModule_1","providers","useValue","HOOK_ONCE_ROUTE","multi","HOOK_ACTION","useClass","NgModule","declarations","imports","CoreModule","TooltipModule","PopoverModule","BsDropdownModule","forRoot","exports","entryComponents","CockpitDashboardComponent","DEFAULT_HOME_WIDGETS","panel-title-hidden","WelcomeToCockpit","tenantService","docs","navigator","applicationService","quickLinks","REPORT_NODE","CONFIGURATION_NODE","TRIAL","currentTenantType","tenantType","setMessage","navSubscription","items$","nodes","navNodes","docsSubscription","links","createConnectSmartphoneQuickLink","createQuicklinkRegisterDevice","createQuicklinkUserGuide","createQuicklinkAddGroup","createQuickLinkReports","createQuicklinkDataPointLibrary","createQuicklinkSmartRules","closed","welcomeMessage","addGroup","link","connectSmartphone","reports","reportsNode","findNavigatorNode","click","open","dataPointLib","configurationNode","smartRules","listByUser","deviceManagement","app","contextPath","deviceMgmtUrl_1","getHref","registerDevice","window","userGuide","userGuideURL","getUserGuideLink","nodeRealName","node","realName","TenantService","DocsService","NavigatorService","ApplicationService","LegacyWelcomeComponent","Host","previewImage","require","ex","ɵ1","groupsSelectable","ɵ2","CockpitDashboardModule","DocsModule","QuickLinkModule","TranslateModule","HOOK_NAVIGATOR_NODES","ɵ0","HOOK_COMPONENTS"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { InjectionToken } from '@angular/core';\nimport { IManagedObject } from '@c8y/client';\nimport { Widget, DynamicComponentDefinition, Route, gettext } from '@c8y/ngx-components';\n\nexport const CONTEXT_DASHBOARD_CONFIG = new InjectionToken<any>('ContextDashboardConfig');\n\nexport interface ContextDashboardConfig {\n  widgetFilter?: (component: DynamicComponentDefinition) => boolean;\n  allowFullscreen?: boolean;\n  routes?: Route[];\n}\n\nexport interface ContextWidgetConfig {\n  /**\n   * Settings that define how the default config component is\n   * displayed.\n   */\n  settings?: {\n    /**\n     * Avoids to show the widget in the \"add widget\" modal\n     */\n    noNewWidgets?: boolean;\n    ng1?: {\n      options: {\n        /**\n         * Set this to false, to hide the device/group selector\n         * @deprecated: This is currently only implemented in angularjs and will be exported to a separate component.\n         */\n        noDeviceTarget?: boolean;\n        /**\n         * Set this to false to only select devices\n         * @deprecated: This is currently only implemented in angularjs and will be exported to a separate component.\n         */\n        groupsSelectable?: boolean;\n      };\n      /**\n       * The context from the device selector.\n       */\n      context?: {\n        id?: string;\n        name?: string;\n      };\n    };\n    /**\n     * Any other information you want to pass to the config template\n     */\n    [key: string]: any;\n  };\n  /**\n   * The selected device or group (note: naming is inconsistent as group was added later\n   * but must stay for already implemented widgets)\n   */\n  device?: {\n    id?: string;\n    name?: string;\n  };\n  /**\n   * Any other information that should be stored here.\n   */\n  [key: string]: any;\n}\n\nexport interface ContextDashboardManagedObject extends IManagedObject {\n  c8y_Dashboard?: ContextDashboard;\n}\n\nexport interface ContextDashboard {\n  icon?: string;\n  name?: string;\n  priority?: number;\n  deviceType?: boolean;\n  deviceTypeValue?: string;\n  isFrozen?: boolean;\n  classes?: { [key: string]: boolean };\n  widgetClasses?: { [key: string]: boolean };\n  widgetMargin?: number;\n  translateWidgetTitle?: boolean;\n  global?: boolean;\n  children?: {\n    [id: string]: Widget;\n  };\n}\n\nexport enum ContextDashboardType {\n  Device = 'device',\n  DeviceType = 'type',\n  Group = 'group',\n  Named = 'name'\n}\n\nexport const WIDGET_HEADER_CLASSES = [\n  {\n    label: gettext('Regular`style`'),\n    class: 'panel-title-regular',\n    description: gettext('The widget has no border between header and content.')\n  },\n  {\n    label: gettext('Border`style`'),\n    class: 'panel-title-border',\n    description: gettext('The widget has a small separation border between header and content.')\n  },\n  {\n    label: gettext('Overlay`style`'),\n    class: 'panel-title-overlay',\n    description: gettext('The widget content overlays the header.')\n  },\n  {\n    label: gettext('Hidden`style`'),\n    class: 'panel-title-hidden',\n    description: gettext('The widget header is not shown.')\n  }\n];\n\nexport const WIDGET_CONTENT_CLASSES = [\n  {\n    label: gettext('Light`style`'),\n    class: 'panel-content-light',\n    description: gettext('The widget is styled with a light background and has low contrast.')\n  },\n  {\n    label: gettext('Dark`style`'),\n    class: 'panel-content-dark',\n    description: gettext('The widget is styled with a dark background and has high contrast.')\n  },\n  {\n    label: gettext('Transparent`style`'),\n    class: 'panel-content-transparent',\n    description: gettext(\n      'The widget is styled with a transparent background and therefore is border-less.'\n    )\n  },\n  {\n    label: gettext('Branded`style`'),\n    class: 'panel-content-branded',\n    description: gettext('The widget is styled with the main brand color.')\n  }\n];\n\nexport const DASHBOARD_THEME_CLASSES = [\n  {\n    label: gettext('Light`theme`'),\n    class: 'dashboard-theme-light',\n    description: gettext('The dashboard is styled with a light background and has low contrast.')\n  },\n  {\n    label: gettext('Dark`theme`'),\n    class: 'dashboard-theme-dark',\n    description: gettext('The dashboard is styled with a dark background and has high contrast.')\n  },\n  {\n    label: gettext('Transparent`theme`'),\n    class: 'dashboard-theme-transparent',\n    description: gettext(\n      'The dashboard is styled with a transparent background and therefore is border-less.'\n    )\n  },\n  {\n    label: gettext('Branded`theme`'),\n    class: 'dashboard-theme-branded',\n    description: gettext('The dashboard is styled with the main brand color.')\n  }\n];\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { IManagedObject, InventoryService, IResultList, UserService } from '@c8y/client';\nimport {\n  AppStateService,\n  getActivatedRoute,\n  gettext,\n  ModalService,\n  Status,\n  TabsService,\n  ViewContext,\n  Widget\n} from '@c8y/ngx-components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { assign, pick, some, keys, keyBy, has, get, forEach, cloneDeep } from 'lodash-es';\nimport { from, of } from 'rxjs';\nimport {\n  catchError,\n  filter,\n  map,\n  mergeAll,\n  mergeMap,\n  tap,\n  toArray,\n  throwIfEmpty\n} from 'rxjs/operators';\nimport {\n  ContextDashboard,\n  ContextDashboardManagedObject,\n  ContextDashboardType\n} from './context-dashboard.model';\n\n@Injectable()\nexport class ContextDashboardService {\n  private cache = new Map<string, ContextDashboardManagedObject>();\n  private readonly DEFAULT_PAGESIZE = 1000;\n  private readonly FRAGMENT_NAME = 'c8y_Dashboard';\n  private readonly DASHBOARD_ROUTE_PATH = 'dashboard';\n  private readonly INDEX_SPLIT = '!';\n  private currentContextRoute: string;\n  private _formDisabled = true;\n\n  get formDisabled() {\n    return this._formDisabled;\n  }\n\n  set formDisabled(value) {\n    this._formDisabled = value;\n  }\n\n  constructor(\n    private inventory: InventoryService,\n    private tabs: TabsService,\n    private modal: ModalService,\n    private translateService: TranslateService,\n    private router: Router,\n    private user: UserService,\n    private appState: AppStateService\n  ) {}\n\n  async create(dashboardCfg: ContextDashboard, contextOrName: { contextData: any } | string) {\n    let id;\n    let dashboardType;\n    if (typeof contextOrName === 'string') {\n      id = contextOrName as string;\n      dashboardType = ContextDashboardType.Named;\n    } else {\n      id = contextOrName.contextData.id as string;\n      dashboardType = this.getDashboardTypeFromViewContext(dashboardCfg, contextOrName);\n    }\n\n    const dashboard: Partial<IManagedObject> = {};\n    assign(dashboard, { c8y_Dashboard: dashboardCfg });\n\n    const value =\n      dashboardType === ContextDashboardType.DeviceType ? dashboardCfg.deviceTypeValue : id;\n\n    const fragmentKey = this.createFragmentKey(dashboardType, value);\n    dashboard[fragmentKey] = {};\n\n    if (this.shouldSetGlobal(dashboard)) {\n      assign(dashboard, { c8y_Global: {} });\n    }\n    const { data } = dashboardType === ContextDashboardType.Group || dashboardType === ContextDashboardType.Device\n      ? await this.inventory.childAdditionsCreate(dashboard, id)\n      : await this.inventory.create(dashboard);\n    return data as ContextDashboardManagedObject;\n  }\n\n  async detail(dashboardMO: ContextDashboardManagedObject) {\n    const { data } = await this.inventory.detail(dashboardMO);\n    this.cache.set(dashboardMO.id, data);\n    return data;\n  }\n\n  async update(dashboard: ContextDashboardManagedObject) {\n    const cleanedDashboard = this.clean(pick(dashboard, [this.FRAGMENT_NAME, 'id']));\n    cleanedDashboard.c8y_Global = this.shouldSetGlobal(dashboard);\n    const { data } = await this.inventory.update(cleanedDashboard);\n    this.cache.set(dashboard.id, data);\n    return data;\n  }\n\n  async delete(dashboard: ContextDashboardManagedObject) {\n    try {\n      let msg = gettext(\n        `You are about to delete the dashboard \"{{ dashboardName }}\". Do you want to proceed?`\n      );\n      if (this.isDeviceType(dashboard)) {\n        msg = gettext(\n          `You are about to delete the dashboard \"{{ dashboardName }}\" from all devices of the type \"{{ deviceType }}\".\n           Do you want to proceed?`\n        );\n      }\n      await this.modal.confirm(\n        gettext('Delete dashboard'),\n        this.translateService.instant(msg, {\n          dashboardName: dashboard.c8y_Dashboard.name,\n          deviceType: dashboard.c8y_Dashboard.deviceTypeValue\n        }),\n        Status.DANGER,\n        {\n          ok: gettext('Delete'),\n          cancel: gettext('Cancel')\n        }\n      );\n      await this.inventory.delete(dashboard);\n      const tabToRemove = Array.from(this.tabs.state).find(tab =>\n        tab.path.endsWith(`${this.DASHBOARD_ROUTE_PATH}/${dashboard.id}`)\n      );\n      this.tabs.remove(tabToRemove);\n      this.tabs.refresh();\n    } catch (ex) {\n      // intended empty\n    }\n  }\n\n  activateDashboards(route: ActivatedRouteSnapshot, types: ContextDashboardType[]) {\n    const { dashboardId } = route.params;\n    if (dashboardId) {\n      return this.getDashboard$(dashboardId, types, route.parent.data.contextData).pipe(\n        tap(dashboard => {\n          route.data = { dashboard };\n        }),\n        map(() => true),\n        catchError(() => {\n          return of(false);\n        })\n      );\n    }\n\n    return this.getTabs$(route.data.contextData, types);\n  }\n\n  getNamedDashboardOrCreate(name: string, defaultWidgets: Widget[]) {\n    const children = this.mapWidgets(defaultWidgets);\n    return this.getDashboard$(name, [ContextDashboardType.Named]).pipe(\n      throwIfEmpty(),\n      catchError(() =>\n        from(\n          this.create({children}, name)\n        )\n      )\n    );\n  }\n\n  async refreshTabs(dashboardMO: ContextDashboardManagedObject) {\n    if (!this.isNamed(dashboardMO)) {\n      const tabToUpdate = Array.from(this.tabs.state).find(tab =>\n        tab.path.endsWith(`${this.DASHBOARD_ROUTE_PATH}/${dashboardMO.id}`)\n      );\n\n      const data = await this.detail(dashboardMO);\n      if (tabToUpdate) {\n        const { icon, priority, name } = data.c8y_Dashboard;\n        tabToUpdate.icon = icon;\n        tabToUpdate.priority = priority;\n        tabToUpdate.label = name;\n      }\n      this.tabs.refresh();\n    }\n  }\n\n  async navigateToDashboard(dashboardMO: ContextDashboardManagedObject) {\n    if (/dashboard/.test(this.router.url)) {\n      this.router.navigate(['..', dashboardMO.id], {\n        relativeTo: getActivatedRoute(this.router)\n      });\n    } else {\n      this.router.navigate(['..', 'dashboard', dashboardMO.id], {\n        relativeTo: getActivatedRoute(this.router)\n      });\n    }\n  }\n\n  hasPermission() {\n    return this.user.hasAnyRole(this.appState.currentUser.value, [\n      'ROLE_INVENTORY_ADMIN',\n      'ROLE_INVENTORY_CREATE'\n    ]);\n  }\n\n  isNamed(dashboard: Partial<ContextDashboardManagedObject>) {\n    return some(keys(dashboard), prop =>\n      new RegExp(\n        `^${this.FRAGMENT_NAME}${this.INDEX_SPLIT}${ContextDashboardType.Named}${this.INDEX_SPLIT}`\n      ).test(prop)\n    );\n  }\n\n  isDeviceType(dashboard: Partial<ContextDashboardManagedObject>) {\n    return some(keys(dashboard), prop =>\n      new RegExp(\n        `^${this.FRAGMENT_NAME}${this.INDEX_SPLIT}${ContextDashboardType.DeviceType}${\n          this.INDEX_SPLIT\n        }`\n      ).test(prop)\n    );\n  }\n\n  getStyling(styleList, styleName, defaultValue) {\n    const styling = styleList.find(style => style && new RegExp(styleName, 'i').test(style.class));\n    return styling ? styling.class : defaultValue;\n  }\n\n  mapWidgets(widgets: Widget[]) {\n    return keyBy(\n      widgets.map(widget => {\n        widget.id = String(Math.random()).substr(2);\n        return widget;\n      }),\n      'id'\n    );\n  }\n\n  private getDashboard$(\n    dashboardIdOrName,\n    dashboardType: ContextDashboardType[],\n    mo?: IManagedObject\n  ) {\n    const cache = this.cache.get(dashboardIdOrName);\n\n    const dashboards = mo\n      ? this.getContextDashboards(mo, dashboardType)\n      : [this.getNamedDashboard(dashboardIdOrName)];\n\n    const cacheRefresh = this.getContextDashboards$(dashboards).pipe(\n      tap((dashboard) => this.cacheDashboard(dashboard)),\n      filter(\n        dashboard =>\n          dashboard.id === dashboardIdOrName ||\n          has(\n            dashboard,\n            `${this.FRAGMENT_NAME}${this.INDEX_SPLIT}${ContextDashboardType.Named}${\n              this.INDEX_SPLIT\n            }${dashboardIdOrName}`\n          )\n      )\n    );\n    return cache ? of(cache) : cacheRefresh;\n  }\n\n  private getTabs$(mo: ContextDashboardManagedObject, dashboardType: ContextDashboardType[]) {\n    const dashboards = this.getContextDashboards(mo, dashboardType);\n    this.setBaseContextRoute(mo, dashboardType);\n\n    return this.getContextDashboards$(dashboards).pipe(\n      map(dashboard => this.removeDashboardMoProperty(dashboard)),\n      tap(dashboard => this.cacheDashboard(dashboard)),\n      map(dashboard => this.createDashboardTab(dashboard)),\n      toArray()\n    );\n  }\n\n  private getContextDashboards$(requests: Array<Promise<IResultList<IManagedObject>>>) {\n    return from(requests).pipe(\n      mergeAll(),\n      mergeMap(response => response.data as ContextDashboardManagedObject[]));\n  }\n\n  private setBaseContextRoute(mo: IManagedObject, dashboardType: ContextDashboardType[]) {\n    const type = dashboardType.includes(ContextDashboardType.Device)\n      ? ContextDashboardType.Device\n      : ContextDashboardType.Group;\n    this.currentContextRoute = `${type}/${mo.id}`;\n  }\n\n /**\n  * Cleans already corrupted dashboards from dashboardMo property.\n  * Added to fix dashboards on the cloud instance (eu-latest).\n  * @deprecated This is going to be removed after 1007.7.0.\n  */\n  private removeDashboardMoProperty(\n    dashboard: ContextDashboardManagedObject\n  ): ContextDashboardManagedObject {\n    const dashboardCopy = cloneDeep(dashboard);\n    const children = get(dashboardCopy, 'c8y_Dashboard.children');\n    let updateDashboard = false;\n\n    forEach(children, child => {\n      if (get(child, 'componentTransformConfigWithContext')) {\n        delete child.componentTransformConfigWithContext;\n        updateDashboard = true;\n      }\n      if (get(child, 'config.dashboardMo')) {\n        delete child.config.dashboardMo;\n        updateDashboard = true;\n      }\n    });\n\n    if (updateDashboard) {\n      this.update(dashboardCopy);\n    }\n    return dashboardCopy;\n  }\n\n  private cacheDashboard(dashboard: ContextDashboardManagedObject) {\n    this.cache.set(dashboard.id, dashboard);\n  }\n\n  private createDashboardTab(dashboard: ContextDashboardManagedObject) {\n    const { c8y_Dashboard: _dashboard, id } = dashboard;\n    return ({\n      icon: _dashboard.icon,\n      path: `${this.DASHBOARD_ROUTE_PATH}/${id}`,\n      label: _dashboard.name,\n      priority: _dashboard.priority\n    });\n  }\n\n  private clean(dashboard) {\n    const jsonString = JSON.stringify(dashboard, (key, value) => {\n      if (key === '$$hashKey' || key === 'klasses') {\n        return undefined;\n      }\n\n      return value;\n    });\n    return JSON.parse(jsonString);\n  }\n\n  private getNamedDashboard(name: string) {\n    return this.inventory.list({\n      fragmentType: `${this.FRAGMENT_NAME}${this.INDEX_SPLIT}${ContextDashboardType.Named}${\n        this.INDEX_SPLIT\n      }${name}`,\n      pageSize: 1\n    });\n  }\n\n  private getContextDashboards(mo: IManagedObject, dashboardType: ContextDashboardType[]) {\n    return dashboardType.map((type: ContextDashboardType) =>\n      this.inventory.list({\n        fragmentType: `${this.FRAGMENT_NAME}${this.INDEX_SPLIT}${type}${this.INDEX_SPLIT}${\n          type === ContextDashboardType.DeviceType ? mo.type : mo.id\n        }`,\n        pageSize: this.DEFAULT_PAGESIZE\n      })\n    );\n  }\n\n  private getDashboardTypeFromViewContext(dashboardCfg, context) {\n    let dashboardType;\n    if (context.context === ViewContext.Device) {\n      dashboardType = dashboardCfg.deviceType\n        ? ContextDashboardType.DeviceType\n        : ContextDashboardType.Device;\n    }\n    if (context.context === ViewContext.Group) {\n      dashboardType = ContextDashboardType.Group;\n    }\n    return dashboardType;\n  }\n\n  private createFragmentKey(contextDashboardType: ContextDashboardType, value: string) {\n    return [this.FRAGMENT_NAME, contextDashboardType, value].join(this.INDEX_SPLIT);\n  }\n\n  private shouldSetGlobal(dashboard: Partial<ContextDashboardManagedObject>) {\n    if (this.isNamed(dashboard) || this.isDeviceType(dashboard)) {\n      return {};\n    }\n    return null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot } from '@angular/router';\nimport { ContextDashboardType } from './context-dashboard.model';\nimport { ContextDashboardService } from './context-dashboard.service';\n\n@Injectable()\nexport class DeviceDashboardGuard {\n  constructor(\n    private contextDashboardService: ContextDashboardService\n  ) {}\n\n  canActivate(route: ActivatedRouteSnapshot) {\n    return this.contextDashboardService.activateDashboards(route, [\n      ContextDashboardType.Device,\n      ContextDashboardType.DeviceType\n    ]);\n  }\n}\n","import { Component, Inject, ViewChild } from '@angular/core';\nimport { ICON_LIST } from '@c8y/ngx-components';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport {\n  ContextDashboard,\n  DASHBOARD_THEME_CLASSES,\n  WIDGET_HEADER_CLASSES\n} from './context-dashboard.model';\nimport { clone } from 'lodash-es';\nimport { ContextDashboardService } from './context-dashboard.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'c8y-dashboard-detail',\n  templateUrl: './dashboard-detail.component.html'\n})\nexport class DashboardDetailComponent {\n  @ViewChild('dashboardDetailForm', { static: true }) dashboardDetailForm: NgForm;\n  dashboard: ContextDashboard;\n  current: ContextDashboard;\n  deviceType: string;\n  isNamedDashboard: boolean;\n  icons: string[];\n  filteredIcons: string[];\n  styling = {\n    themeClass: 'dashboard-theme-light',\n    headerClass: 'panel-title-regular'\n  };\n  possibleStyling = { DASHBOARD_THEME_CLASSES, WIDGET_HEADER_CLASSES };\n  result: Promise<ContextDashboard> = new Promise((resolve, reject) => {\n    this._save = resolve;\n    this._cancel = reject;\n  });\n\n  readonly DEFAULT_DASHBOARD_MARGIN = 12;\n  readonly DEFAULT_DASHBOARD_ICON = 'th';\n  readonly DEFAULT_DASHBOARD_PRIORITY = 10000;\n  readonly DEFAULT_DASHBOARD_NAME = 'Dashboard';\n\n  private _save;\n  private _cancel;\n\n  constructor(\n    private modal: BsModalRef,\n    @Inject(ICON_LIST) iconList: string[],\n    private contextDashboardService: ContextDashboardService\n  ) {\n    this.icons = iconList;\n    this.filteredIcons = iconList;\n  }\n\n  ngAfterContentInit(): void {\n    const defaultDashboardCfg = {\n      name: this.DEFAULT_DASHBOARD_NAME,\n      priority: this.DEFAULT_DASHBOARD_PRIORITY,\n      icon: this.DEFAULT_DASHBOARD_ICON,\n      deviceTypeValue: this.deviceType\n    };\n\n    if (this.dashboard) {\n      this.current = clone(this.dashboard);\n      this.setDashboardStyle();\n    } else {\n      this.dashboard = defaultDashboardCfg;\n      this.dashboardDetailForm.form.markAsDirty();\n    }\n  }\n\n  save() {\n    this.dashboard.classes = { [this.styling.themeClass]: true };\n    this.dashboard.widgetClasses = { [this.styling.headerClass]: true };\n    this._save(this.dashboard);\n  }\n\n  close() {\n    this._cancel();\n    this.modal.hide();\n  }\n\n  getDashboardPreviewStyle() {\n    const cssClasses = {};\n    cssClasses[this.styling.headerClass] = true;\n    cssClasses[this.styling.themeClass] = true;\n    return cssClasses;\n  }\n\n  selectIcon(icon) {\n    this.dashboard.icon = icon;\n    this.dashboardDetailForm.form.markAsDirty();\n  }\n\n  updateFiltered(term: string) {\n    if (term) {\n      const search = new RegExp(term, 'i');\n      this.filteredIcons = this.icons.filter(val => search.test(val));\n    } else {\n      this.filteredIcons = this.icons;\n    }\n  }\n\n  private setDashboardStyle() {\n    const allClasses = {\n      ...this.dashboard.classes,\n      ...this.dashboard.widgetClasses\n    };\n\n    const styles = Object.keys(allClasses).map(c => c.split('-').pop());\n    styles.forEach(styleName => {\n      this.styling.themeClass = this.contextDashboardService.getStyling(\n        DASHBOARD_THEME_CLASSES,\n        styleName,\n        this.styling.themeClass\n      );\n      this.styling.headerClass = this.contextDashboardService.getStyling(\n        WIDGET_HEADER_CLASSES,\n        styleName,\n        this.styling.headerClass\n      );\n    });\n  }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { sortBy, cloneDeep } from 'lodash-es';\nimport { DynamicComponentService, DynamicComponentDefinition } from '@c8y/ngx-components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ContextDashboardConfig, CONTEXT_DASHBOARD_CONFIG } from './context-dashboard.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WidgetService {\n  constructor(\n    private dynamicComponentService: DynamicComponentService,\n    private translateService: TranslateService,\n    @Inject(CONTEXT_DASHBOARD_CONFIG) public moduleConfig: ContextDashboardConfig\n  ) {}\n\n  async getWidgetDefinition(componentId): Promise<DynamicComponentDefinition> {\n    return this.dynamicComponentService.getById$(componentId).toPromise();\n  }\n\n  getWidgetDefinitions() {\n    const translatedComponents = Array.from(this.dynamicComponentService.state).map(cmp => ({\n      ...cmp,\n      label: this.translateService.instant(cmp.label)\n    }));\n\n    return cloneDeep(sortBy(translatedComponents, 'label').filter(this.moduleConfig.widgetFilter));\n  }\n}\n","import { Component, OnDestroy, ViewChild } from '@angular/core';\nimport { DynamicComponentDefinition, Widget, DynamicComponentComponent } from '@c8y/ngx-components';\nimport { clone, cloneDeep, escapeRegExp, get, omit } from 'lodash-es';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { iif, Subject, Subscription, timer } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport {\n  ContextDashboardManagedObject,\n  WIDGET_CONTENT_CLASSES,\n  WIDGET_HEADER_CLASSES,\n  ContextWidgetConfig\n} from './context-dashboard.model';\nimport { WidgetService } from './widget.service';\nimport { ContextDashboardService } from './context-dashboard.service';\n\n@Component({\n  selector: 'c8y-widget-config',\n  templateUrl: './widget-config.component.html'\n})\nexport class WidgetConfigComponent implements OnDestroy {\n  mode: 'config' | 'select' | 'style' = 'select';\n  searchResult: DynamicComponentDefinition[];\n  components: DynamicComponentDefinition[];\n  selected: DynamicComponentDefinition;\n  searchChange$ = new Subject();\n  searchTerm = '';\n  context: any;\n  componentLabel: string;\n  mo: ContextDashboardManagedObject;\n  styling = {\n    headerClass: 'panel-title-regular',\n    contentClass: 'panel-content-light'\n  };\n  defaultStyling = {\n    headerClass: 'panel-title-regular',\n    contentClass: 'panel-content-light'\n  };\n  possibleStyling = { WIDGET_HEADER_CLASSES, WIDGET_CONTENT_CLASSES };\n  current: any;\n  widgetConfig: ContextWidgetConfig;\n  isUpgrade = false;\n\n  @ViewChild('config', { static: false })\n  dynamicComponent: DynamicComponentComponent;\n\n  get isEdit() {\n    return !!this.current;\n  }\n\n  result: Promise<Widget> = new Promise((resolve, reject) => {\n    this._save = resolve;\n    this._cancel = reject;\n  });\n\n  private searchSub: Subscription;\n  private _save;\n  private _cancel;\n\n  constructor(\n    private widgetService: WidgetService,\n    private modal: BsModalRef,\n    public contextDashboardService: ContextDashboardService\n  ) {}\n\n  ngAfterContentInit(): void {\n    this.components = this.widgetService.getWidgetDefinitions();\n\n    if (this.selected) {\n      this.current = clone(this.selected);\n      this.select(this.selected, this.isEdit ? 'config' : 'select');\n    }\n\n    this.searchSub = this.searchChange$\n      .pipe(\n        switchMap((event: KeyboardEvent) => iif(() => event.which !== 13, timer(200), timer(10)))\n      )\n      .subscribe(() => {\n        this.search();\n      });\n\n    if (this.mo.c8y_Dashboard.classes) {\n      this.styling = this.setDefaultStyle({\n        ...this.mo.c8y_Dashboard.classes,\n        ...this.mo.c8y_Dashboard.widgetClasses,\n        ...(this.isEdit ? this.current.data.classes : {})\n      });\n      this.defaultStyling = this.setDefaultStyle({\n        ...this.mo.c8y_Dashboard.classes,\n        ...this.mo.c8y_Dashboard.widgetClasses\n      });\n    }\n  }\n\n  async save() {\n    const hookSuccess = await this.dynamicComponent.callLifeCycleHooks().toPromise();\n    if (!hookSuccess) {\n      return;\n    }\n\n    const { _x, _y, _width, _height } = this.selected.data;\n\n    if (this.widgetConfig && this.widgetConfig.device) {\n      const { id, name } = this.widgetConfig.device;\n      this.widgetConfig.device = { id, name };\n    }\n\n    const widget = {\n      _x,\n      _y,\n      _width,\n      _height,\n      config: omit(this.widgetConfig, 'settings'),\n      title: this.selected.data.title,\n      componentId: this.selected.id,\n      id: this.isEdit ? this.current.data.id : String(Math.random()).substr(2),\n      classes: this.getStyle(),\n      ...(!this.isEdit ? this.widgetConfig.settings.widgetDefaults : {})\n    } as Widget;\n\n    this._save(widget);\n  }\n\n  select(cmp, mode: 'select' | 'config' = 'config') {\n    cmp.data = cmp.data || {};\n    this.selected = cmp;\n\n    this.isUpgrade = !!get(cmp, 'data.settings.upgrade');\n    this.contextDashboardService.formDisabled = this.isUpgrade;\n\n    if (this.isEdit) {\n      const { _x, _y, _width, _height, classes, title } = this.current.data;\n      this.selected.data = { ...this.selected.data, _x, _y, _width, _height, classes, title };\n    }\n\n    this.widgetConfig = cloneDeep(this.composeWidgetConfig(this.selected, this.context));\n\n    this.selected.data.title = this.selected.data.title || cmp.label;\n    this.componentLabel = cmp.label;\n    this.mode = mode;\n  }\n\n  search() {\n    if (this.searchTerm.length > 0) {\n      this.searchResult = this.components.filter(cmp =>\n        new RegExp(escapeRegExp(this.searchTerm.trim()), 'i').test(cmp.label)\n      );\n    } else {\n      this.resetSearch();\n    }\n  }\n\n  resetSearch() {\n    this.searchTerm = '';\n    this.searchResult = undefined;\n  }\n\n  changeMode(mode: 'config' | 'select' | 'style') {\n    this.mode = mode;\n  }\n\n  close() {\n    this._cancel();\n    this.modal.hide();\n  }\n\n  getStyle(isPreview = false) {\n    const cssClasses = {};\n    if (isPreview || !this.isDashboardDefaultStyle(this.styling.headerClass)) {\n      cssClasses[this.styling.headerClass] = true;\n    }\n\n    if (isPreview || !this.isDashboardDefaultStyle(this.styling.contentClass)) {\n      cssClasses[this.styling.contentClass] = true;\n    }\n\n    if (isPreview) {\n      cssClasses[`dashboard-theme-${this.defaultStyling.contentClass.split('-').pop()}`] = true;\n    }\n\n    return cssClasses;\n  }\n\n  ngOnDestroy(): void {\n    this.contextDashboardService.formDisabled = true;\n    if (this.searchSub) {\n      this.searchSub.unsubscribe();\n    }\n  }\n\n  private isDashboardDefaultStyle(className) {\n    const allClasses = {\n      ...this.mo.c8y_Dashboard.classes,\n      ...this.mo.c8y_Dashboard.widgetClasses\n    };\n    const styles = Object.keys(allClasses).map(cssClass => ({ class: cssClass }));\n    const style = this.contextDashboardService.getStyling(\n      styles,\n      className.split('-').pop(),\n      undefined\n    );\n    return !!style;\n  }\n\n  private setDefaultStyle(setClasses) {\n    let contentClass = this.styling.contentClass;\n    let headerClass = this.styling.headerClass;\n\n    const styles = Object.keys(setClasses).map(c => c.split('-').pop());\n    styles.forEach(styleName => {\n      contentClass = this.contextDashboardService.getStyling(\n        WIDGET_CONTENT_CLASSES,\n        styleName,\n        contentClass\n      );\n      headerClass = this.contextDashboardService.getStyling(\n        WIDGET_HEADER_CLASSES,\n        styleName,\n        headerClass\n      );\n    });\n\n    return { headerClass, contentClass };\n  }\n\n  private composeWidgetConfig(selectedComponent, context = {}) {\n    const setting = {\n      settings: {\n        ...selectedComponent.data.settings,\n        ...get(selectedComponent.data.settings, 'ng1.options'),\n        ...get(selectedComponent.data, 'ng1.options'),\n        context,\n        dashboardMo: this.mo.c8y_Dashboard\n      },\n      ...selectedComponent.data.config\n    } as ContextWidgetConfig;\n    return this.applyTargetIfDeviceDashboard(setting);\n  }\n\n  private applyTargetIfDeviceDashboard(widgetConfig: ContextWidgetConfig) {\n    const isDeviceType = this.contextDashboardService.isDeviceType(this.mo);\n\n    if (isDeviceType) {\n      widgetConfig.settings.hideTarget = isDeviceType;\n\n      const noDeviceTarget = widgetConfig.settings.ng1\n        ? widgetConfig.settings.ng1.options.noDeviceTarget\n        : widgetConfig.settings.noDeviceTarget;\n\n      if (!noDeviceTarget) {\n        widgetConfig.device = {\n          id: this.context.id,\n          name: this.context.name\n        };\n      }\n    }\n    return widgetConfig;\n  }\n}\n","import { Component, HostBinding, Inject, Input, OnDestroy, OnInit, Renderer2 } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  AlertService,\n  DashboardChildChange,\n  DashboardChildComponent,\n  DashboardSettings,\n  DynamicComponentDefinition,\n  gettext,\n  Widget,\n  WidgetChange\n} from '@c8y/ngx-components';\nimport { cloneDeep, findIndex, get, keyBy, omit, values } from 'lodash-es';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Subscription } from 'rxjs';\nimport {\n  ContextDashboard,\n  ContextDashboardConfig,\n  ContextDashboardManagedObject,\n  CONTEXT_DASHBOARD_CONFIG,\n  WIDGET_HEADER_CLASSES\n} from './context-dashboard.model';\nimport { ContextDashboardService } from './context-dashboard.service';\nimport { DashboardDetailComponent } from './dashboard-detail.component';\nimport { WidgetConfigComponent } from './widget-config.component';\nimport { WidgetService } from './widget.service';\nimport { kebabCase } from 'lodash-es';\n\n/**\n * The context dashboard is a dashboard which resolves it data from the current context (device or group)\n * it is displayed on. It usually uses the route.data for it, but you can pass\n * a different managedObject to the [mo] input parameter to change that behavior.\n */\n@Component({\n  selector: 'c8y-context-dashboard',\n  templateUrl: './context-dashboard.component.html',\n  host: {\n    style: `\n      display: block;\n    `,\n    class: 'dashboard c8y-grid-dashboard'\n  }\n})\nexport class ContextDashboardComponent implements OnInit, OnDestroy {\n  @Input()\n  name: string;\n  @Input()\n  childrenClasses = '';\n  @Input()\n  context: any;\n  @Input()\n  setTitle: boolean = false;\n  @Input()\n  disabled: boolean = false;\n  @Input()\n  defaultWidgets: Widget[] = [];\n  @Input()\n  canDelete: boolean = true;\n  @Input()\n  isLoading: boolean = true;\n\n  @HostBinding('class')\n  class = '';\n\n  widgets: Widget[] = [];\n  mo: ContextDashboardManagedObject;\n  dashboard: ContextDashboard;\n\n  private dataSub: Subscription;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private contextDashboardService: ContextDashboardService,\n    private alert: AlertService,\n    private renderer: Renderer2,\n    @Inject(CONTEXT_DASHBOARD_CONFIG) public moduleConfig: ContextDashboardConfig,\n    private widgetService: WidgetService,\n    private bsModal: BsModalService\n  ) {}\n\n  ngOnInit() {\n    if (!this.name) {\n      this.loadContextDashboard();\n      return;\n    }\n    this.loadNamedDashboard();\n  }\n\n  /**\n   * Applies the current context to the widget\n   * @param widget The widget to apply the context to.\n   */\n  applyDeviceTarget(widget) {\n    if (widget.config.device) {\n      widget.config.device = { id: this.context.id, name: this.context.name };\n    }\n  }\n\n  /**\n   * Removes the route listener.\n   */\n  ngOnDestroy(): void {\n    if (this.dataSub) {\n      this.dataSub.unsubscribe();\n    }\n  }\n\n  /**\n   * Restores the dashboard widgets to the default widgets.\n   */\n  async restore() {\n    this.isLoading = true;\n    this.mo.c8y_Dashboard.children = this.contextDashboardService.mapWidgets(this.defaultWidgets);\n    await this.contextDashboardService.update(this.mo);\n    this.onLoad();\n  }\n\n  /**\n   * Updates all dashboards children's. Useful for position changes on the dashboard.\n   * @param child The child to change.\n   */\n  async updateDashboardChildren(child: DashboardChildChange) {\n    const { children } = child;\n    const dashboardMO: ContextDashboardManagedObject = this.mo;\n    const mappedChildren: { [id: string]: Widget } = keyBy(\n      children.map(c => this.componentToWidget(c)),\n      'id'\n    );\n    dashboardMO.c8y_Dashboard.children = mappedChildren;\n    return this.contextDashboardService.update(dashboardMO);\n  }\n\n  /**\n   * Remove the complete dashboard and navigate away.\n   */\n  async deleteDashboard() {\n    await this.contextDashboardService.delete(this.mo);\n    if (this.route.parent) {\n      const route = this.route.parent.snapshot.url.map(segment => segment.path).join('/');\n      this.router.navigateByUrl(route);\n    }\n  }\n\n  /**\n   * Edits the current dashboard\n   */\n  async editDashboard() {\n    const initialState = {\n      dashboard: this.dashboard,\n      deviceType: this.context.type,\n      isNamedDashboard: this.contextDashboardService.isNamed(this.mo)\n    };\n    const modal = this.bsModal.show(DashboardDetailComponent, {\n      class: 'modal-lg',\n      initialState,\n      ignoreBackdropClick: true\n    }).content as DashboardDetailComponent;\n    try {\n      const dashboardMO = cloneDeep(this.mo);\n      dashboardMO.c8y_Dashboard = await modal.result;\n      await this.contextDashboardService.update(dashboardMO);\n      await this.contextDashboardService.refreshTabs(dashboardMO);\n      this.onLoad();\n      modal.close();\n    } catch (ex) {\n      // intended empty\n    }\n  }\n\n  /**\n   * Edits a widget on the dashboard.\n   * @param change The widget change event.\n   */\n  async editWidget(change: WidgetChange) {\n    const { x, y, width, height } = change.source;\n    const component = await this.widgetService.getWidgetDefinition(\n      change.widget.name || change.widget.componentId\n    );\n    if (!component) {\n      this.addWidget();\n      return;\n    }\n    await this.addWidget({\n      ...component,\n      data: { ...component.data, ...change.widget, _x: x, _y: y, _width: width, _height: height }\n    });\n  }\n\n  /**\n   * Adds a widget to the dashboard.\n   * @param selected Define a selected component to switch to edit mode directly.\n   */\n  async addWidget(selected?: DynamicComponentDefinition) {\n    const initialState = {\n      mo: this.mo,\n      context: this.context,\n      selected: cloneDeep(selected)\n    };\n\n    const modal = this.bsModal.show(WidgetConfigComponent, {\n      class: 'modal-lg',\n      initialState,\n      ignoreBackdropClick: true\n    }).content as WidgetConfigComponent;\n\n    try {\n      const newWidget = await modal.result;\n      if (!this.mo.c8y_Dashboard.children) {\n        this.mo.c8y_Dashboard.children = {};\n      }\n      this.mo.c8y_Dashboard.children[newWidget.id] = newWidget;\n      this.contextDashboardService.update(this.mo);\n      newWidget.classes = this.mergeWidgetClasses(newWidget);\n      await this.updateWidget(newWidget);\n      modal.close();\n    } catch (ex) {\n      // intended empty\n    }\n  }\n\n  /**\n   * Updates a widget or adds a new one if it doesn't exist on\n   * the dashboard.\n   * @param widget The new widget\n   */\n  async updateWidget(widget) {\n    const index = findIndex(this.widgets, { id: widget.id });\n    const isNew = index === -1;\n    const mappedWidget = await this.mapLegacy(widget);\n    if (isNew) {\n      this.widgets.push(mappedWidget);\n    } else {\n      this.widgets.splice(index, 1, mappedWidget);\n    }\n  }\n\n  /**\n   * Removes a widget and rearranges the remaining ones\n   * if necessary.\n   * @param change The change event.\n   */\n  deleteWidget(change: WidgetChange) {\n    const { widget, source } = change;\n    delete this.mo.c8y_Dashboard.children[widget.id];\n    const removed = this.widgets.find(({ id }) => id === widget.id);\n    this.widgets.splice(this.widgets.indexOf(removed), 1);\n\n    // using setTimeout to give the component the chance to remove it.\n    setTimeout(() => {\n      const child = new DashboardChildChange(source);\n      child.collapseUpAll();\n      this.updateDashboardChildren(child);\n    });\n  }\n\n  /**\n   * This is a workaround to ensure that the dragged-element\n   * (which is attached to the body) has the right styling.\n   */\n  addDashboardClassToBody() {\n    this.class.split(' ').forEach(cssClass => {\n      this.renderer.addClass(document.body, cssClass);\n    });\n  }\n\n  /**\n   * This is a workaround to ensure that the dragged-element\n   * (which is attached to the body) has the right styling.\n   */\n  removeDashboardClassFromBody() {\n    this.class.split(' ').forEach(cssClass => {\n      this.renderer.removeClass(document.body, cssClass);\n    });\n  }\n\n  /**\n   * Changes the dashboard settings to frozen or vice versa.\n   * @param settings The current settings of the dashboard.\n   */\n  async toggleFreeze(settings: DashboardSettings) {\n    this.toggleIsFrozenFlag(settings);\n    try {\n      await this.contextDashboardService.update(this.mo);\n      if (this.dashboard.isFrozen) {\n        this.alert.success(gettext('Your dashboard is locked now.'));\n      } else {\n        this.alert.success(gettext('Your dashboard is unlocked now.'));\n      }\n    } catch (ex) {\n      this.alert.addServerFailure(ex);\n      this.toggleIsFrozenFlag(settings);\n    }\n  }\n\n  private toggleIsFrozenFlag(settings: DashboardSettings) {\n    settings.isFrozen = !settings.isFrozen;\n    this.dashboard.isFrozen = settings.isFrozen;\n  }\n\n  private loadContextDashboard() {\n    this.dataSub = this.route.data.subscribe(({ dashboard }) => {\n      this.context = this.route.parent.snapshot.data.contextData;\n      this.mo = dashboard;\n      this.dashboard = this.mo.c8y_Dashboard;\n      this.onLoad();\n    });\n  }\n\n  private loadNamedDashboard() {\n    this.dataSub = this.contextDashboardService\n      .getNamedDashboardOrCreate(this.name, this.defaultWidgets)\n      .subscribe(mo => {\n        this.context = this.context || {};\n        this.mo = mo;\n        this.dashboard = this.mo.c8y_Dashboard;\n        this.onLoad();\n      });\n  }\n\n  private async onLoad() {\n    this.disabled = !this.contextDashboardService.hasPermission();\n    const dashboardChildren = cloneDeep(this.mo.c8y_Dashboard.children);\n    const isDeviceType = this.contextDashboardService.isDeviceType(this.mo);\n    const dashboardClasses = {\n      'c8y-grid-dashboard': true,\n      dashboard: true,\n      ...this.dashboard.classes\n    };\n\n    this.widgets = await Promise.all<Widget>(\n      values(dashboardChildren).map(widget => {\n        widget.classes = this.mergeWidgetClasses(widget);\n        if (isDeviceType) {\n          this.applyDeviceTarget(widget);\n        }\n        return this.mapLegacy(widget);\n      })\n    );\n    this.class = Object.keys(dashboardClasses).join(' ');\n    this.disabled = !this.contextDashboardService.hasPermission();\n    this.isLoading = false;\n  }\n\n  private mergeWidgetClasses(widget: Widget) {\n    const hasHeaderClass = WIDGET_HEADER_CLASSES.find(\n      el => widget.classes && widget.classes[el.class]\n    );\n    const widgetClasses = hasHeaderClass\n      ? { ...widget.classes }\n      : { ...this.dashboard.widgetClasses, ...widget.classes };\n    return {\n      card: true,\n      'card-dashboard': true,\n      [kebabCase(widget.componentId || widget.name)]: true,\n      ...widgetClasses\n    };\n  }\n\n  private componentToWidget(child: DashboardChildComponent) {\n    return {\n      ...omit(child.data, ['componentTransformConfigWithContext', 'transformConfigWithContext']), // remove legacy\n      ...({\n        _x: child.x,\n        _y: child.y,\n        _width: child.width,\n        _height: child.height\n      } as Widget)\n    };\n  }\n\n  private async mapLegacy(widget): Promise<Widget> {\n    const cmp = await this.widgetService.getWidgetDefinition(widget.componentId || widget.name);\n    if (get(cmp, 'data.settings.upgrade')) {\n      widget.widgetComponent = cmp.data.settings.widgetComponent;\n      widget.configComponent = cmp.data.settings.configComponent;\n      widget.templateUrl = cmp.data.settings.templateUrl;\n      widget.configTemplateUrl = cmp.data.settings.configTemplateUrl;\n      widget.transformConfigWithContext =\n        cmp.data.settings.componentTransformConfigWithContext ||\n        cmp.data.settings.transformConfigWithContext;\n    } else {\n      delete widget.templateUrl;\n      delete widget.configTemplateUrl;\n    }\n    return widget;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot } from '@angular/router';\nimport { ContextDashboardType } from './context-dashboard.model';\nimport { ContextDashboardService } from './context-dashboard.service';\n\n@Injectable()\nexport class GroupDashboardGuard {\n  constructor(\n    private contextDashboardService: ContextDashboardService\n  ) {}\n\n  canActivate(route: ActivatedRouteSnapshot) {\n    return this.contextDashboardService.activateDashboards(route, [\n      ContextDashboardType.Group\n    ]);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Action, ActionFactory, gettext, ViewContext } from '@c8y/ngx-components';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ContextDashboardService } from './context-dashboard.service';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { DashboardDetailComponent } from './dashboard-detail.component';\nimport { ContextDashboardManagedObject } from './context-dashboard.model';\n\n@Injectable()\nexport class DashboardActionsFactory implements ActionFactory {\n  constructor(\n    private router: Router,\n    private contextDashboardService: ContextDashboardService,\n    private bsModal: BsModalService\n  ) {}\n\n  get(activatedRoute: ActivatedRoute): Action[] {\n    const context =\n      !activatedRoute.parent || activatedRoute.snapshot.data.context\n        ? activatedRoute.snapshot.data\n        : activatedRoute.parent.snapshot.data;\n\n    return [\n      {\n        label: gettext('Add dashboard'),\n        priority: 2500,\n        action: () => this.addDashboard(context),\n        disabled: !this.isEnabled(context)\n      }\n    ];\n  }\n\n  async addDashboard(context) {\n    let initialState: { deviceType: string };\n\n    if (context.context === ViewContext.Device) {\n      initialState = {\n        deviceType: context.contextData.type\n      };\n    }\n\n    const modal = this.bsModal.show(DashboardDetailComponent, {\n      class: 'modal-lg',\n      initialState,\n      ignoreBackdropClick: true\n    }).content as DashboardDetailComponent;\n    try {\n      const dashboardCfg = await modal.result;\n      const dashboardMO: ContextDashboardManagedObject = await this.contextDashboardService.create(\n        dashboardCfg,\n        context\n      );\n      await this.contextDashboardService.navigateToDashboard(dashboardMO);\n      modal.close();\n    } catch (ex) {\n      // intended emptys\n    }\n  }\n\n  private isEnabled(context) {\n    return (\n      this.contextDashboardService.hasPermission() &&\n      [ViewContext.Device, ViewContext.Group].includes(context.context)\n    );\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { DASHBOARD_THEME_CLASSES, WIDGET_HEADER_CLASSES } from './context-dashboard.model';\nimport { ControlContainer, NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'c8y-appearance-settings',\n  templateUrl: './appearance-settings.component.html',\n  viewProviders: [ { provide: ControlContainer, useExisting: NgForm } ]\n})\nexport class AppearanceSettingsComponent {\n  @Input()\n  themeClass: string = 'dashboard-theme-light';\n  @Input()\n  headerClass: string = 'panel-title-regular';\n  @Input()\n  defaultThemeClass: string;\n  @Input()\n  defaultHeaderClass: string;\n  @Output()\n  themeClassChange = new EventEmitter<string>();\n  @Output()\n  headerClassChange = new EventEmitter<string>();\n\n  @Input()\n  possibleStylingTheme = DASHBOARD_THEME_CLASSES;\n\n  @Input()\n  possibleStylingHeader = WIDGET_HEADER_CLASSES;\n\n  themeClassClick(value) {\n    value = this.resetToDefault(value, this.themeClass, this.defaultThemeClass);\n    this.themeClass = value;\n    this.themeClassChange.emit(value);\n  }\n\n  headerClassClick(value) {\n    value = this.resetToDefault(value, this.headerClass, this.defaultHeaderClass);\n    this.headerClass = value;\n    this.headerClassChange.emit(value);\n  }\n\n  private resetToDefault(value: string, compareTo: string, defaultValue: string) {\n    if (defaultValue && value === compareTo) {\n      value = defaultValue;\n    }\n    return value;\n  }\n}\n","import { Input, Component } from '@angular/core';\n\n@Component({\n  selector: 'c8y-widget-preview',\n  templateUrl: './widget-preview.component.html'\n})\nexport class WidgetPreviewComponent {\n  @Input()\n  previewClasses: { [key: string]: boolean } = {\n    'dashboard-theme-light': true,\n    'panel-title-regular': true\n  };\n\n  @Input()\n  tab: { name: string; icon: string };\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport {\n  HOOK_ONCE_ROUTE,\n  ViewContext,\n  CoreModule,\n  HOOK_ACTION\n} from '@c8y/ngx-components';\nimport { ContextDashboardService } from './context-dashboard.service';\nimport { DeviceDashboardGuard } from './device-dashboard.guard';\nimport { ContextDashboardComponent } from './context-dashboard.component';\nimport { GroupDashboardGuard } from './group-dashboard.guard';\nimport { CONTEXT_DASHBOARD_CONFIG, ContextDashboardConfig } from './context-dashboard.model';\nimport { DashboardDetailComponent } from './dashboard-detail.component';\nimport { WidgetConfigComponent } from './widget-config.component';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { DashboardActionsFactory } from './dashboard-actions.factory';\nimport { AppearanceSettingsComponent } from './appearance-settings.component';\nimport { WidgetPreviewComponent } from './widget-preview.component';\n\nconst defaultConfig = {\n  allowFullscreen: true,\n  widgetFilter({ data }) {\n    return !(data && data.settings && data.settings.noNewWidgets);\n  },\n  routes: [\n    {\n      path: 'dashboard/:dashboardId',\n      component: ContextDashboardComponent,\n      canActivate: [DeviceDashboardGuard],\n      context: ViewContext.Device\n    },\n    {\n      path: 'dashboard/:dashboardId',\n      component: ContextDashboardComponent,\n      canActivate: [GroupDashboardGuard],\n      context: ViewContext.Group\n    }\n  ]\n};\n\n@NgModule({\n  declarations: [\n    AppearanceSettingsComponent,\n    ContextDashboardComponent,\n    WidgetConfigComponent,\n    WidgetPreviewComponent,\n    DashboardDetailComponent\n  ],\n  imports: [CoreModule, TooltipModule, PopoverModule, BsDropdownModule.forRoot()],\n  exports: [ContextDashboardComponent, WidgetConfigComponent],\n  entryComponents: [ContextDashboardComponent, WidgetConfigComponent, DashboardDetailComponent]\n})\nexport class ContextDashboardModule {\n  static config(config: ContextDashboardConfig = {}): ModuleWithProviders {\n    return {\n      ngModule: ContextDashboardModule,\n      providers: [\n        {\n          provide: CONTEXT_DASHBOARD_CONFIG,\n          useValue: { ...defaultConfig, ...config }\n        },\n        ContextDashboardService,\n        DeviceDashboardGuard,\n        GroupDashboardGuard,\n        {\n          provide: HOOK_ONCE_ROUTE,\n          useValue: { ...defaultConfig, ...config }.routes,\n          multi: true\n        },\n        {\n          provide: HOOK_ACTION,\n          useClass: DashboardActionsFactory,\n          multi: true\n        }\n      ]\n    };\n  }\n}\n","import { Component } from '@angular/core';\nimport { gettext, Widget } from '@c8y/ngx-components';\n\n@Component({\n  selector: 'c8y-cockpit-dashboard',\n  templateUrl: './cockpit-dashboard.component.html'\n})\nexport class CockpitDashboardComponent {\n  DEFAULT_HOME_WIDGETS = [\n    {\n      name: 'cockpit.welcome.widget',\n      title: gettext(''),\n      _x: 0,\n      _y: 0,\n      _height: 5,\n      _width: 12,\n      classes: { 'panel-title-hidden': true }\n    },\n    {\n      name: 'Asset Alarms',\n      title: gettext('Active, critical alarms'),\n      _x: 0,\n      _y: 5,\n      _height: 4,\n      _width: 6\n    },\n    {\n      name: 'Recent Alarms',\n      title: gettext('Recent alarms'),\n      _x: 0,\n      _y: 9,\n      _height: 4,\n      _width: 6\n    },\n    {\n      name: 'Map',\n      title: gettext('Map'),\n      _x: 6,\n      _y: 5,\n      _height: 8,\n      _width: 6\n    }\n  ] as Widget[];\n}\n","import { Component, Input, OnInit, OnDestroy } from '@angular/core';\nimport { gettext, DocsService, DocLink, NavigatorService } from '@c8y/ngx-components';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { TenantService, ApplicationService, IApplication } from '@c8y/client';\n\n@Component({\n  selector: 'c8y-welcome-to-cockpit',\n  templateUrl: './welcome.component.html'\n})\nexport class WelcomeToCockpit implements OnInit, OnDestroy {\n  @Input() config;\n  welcomeMessage;\n  quickLinks = [];\n\n  private readonly REPORT_NODE: string = 'Reports';\n  private readonly CONFIGURATION_NODE: string = 'Configuration';\n  private readonly TRIAL: string = 'TRIAL';\n  private tenantType: string;\n  private navNodes: any[];\n  private links: DocLink[];\n  private docsSubscription: Subscription;\n  private navSubscription: Subscription;\n\n  constructor(\n    private tenantService: TenantService,\n    private docs: DocsService,\n    private router: Router,\n    private navigator: NavigatorService,\n    private applicationService: ApplicationService\n  ) {}\n\n  async ngOnInit() {\n    this.tenantType = await this.tenantService.currentTenantType();\n    this.setMessage();\n    this.navSubscription = this.navigator.items$.subscribe(nodes => {\n      this.navNodes = nodes;\n    });\n    this.docsSubscription = this.docs.items$.subscribe(links => {\n      this.links = links;\n    });\n\n    // <---TRIAL & REGULAR TENANT --->\n    this.createConnectSmartphoneQuickLink();\n    await this.createQuicklinkRegisterDevice();\n\n    // <--- TRIAL TENANT --->\n    if (this.tenantType === this.TRIAL) {\n      this.createQuicklinkUserGuide();\n      return;\n    }\n\n    // <--- REGULAR TENANT --->\n    this.createQuicklinkAddGroup();\n    this.createQuickLinkReports();\n    this.createQuicklinkDataPointLibrary();\n    this.createQuicklinkSmartRules();\n  }\n\n  ngOnDestroy() {\n    if (this.docsSubscription && !this.docsSubscription.closed) {\n      this.docsSubscription.unsubscribe();\n    }\n\n    if (this.navSubscription && !this.navSubscription.closed) {\n      this.navSubscription.unsubscribe();\n    }\n  }\n\n  private setMessage() {\n    if (this.tenantType === this.TRIAL) {\n      this.welcomeMessage = gettext(`\n        The Cockpit application allows you to build IoT applications in minutes.\n        To get started, connect any device to the platform.\n        If you do not have an IoT device to hand, you can start by connecting your smartphone.\n        Click below to be guided through the process.\n      `);\n    } else {\n      this.welcomeMessage = gettext(`\n        The Cockpit application provides you with options to manage\n        and monitor Internet of Things assets and data from business perspective.\n      `);\n    }\n  }\n\n  private createQuicklinkAddGroup() {\n    // comes from angularJS factory c8yQuickLinks\n    const addGroup: Partial<DocLink> = this.links.find(link => link.label === 'Add group');\n    if (addGroup) {\n      this.quickLinks.push(addGroup);\n    }\n  }\n\n  private createConnectSmartphoneQuickLink() {\n    // Provider in SensorPhoneModule defines the\n    // 'Connect smartphone' quicklink.\n    const connectSmartphone = this.links.find(link => link.label === 'Connect smartphone');\n    if (connectSmartphone) {\n      this.quickLinks.push(connectSmartphone);\n    }\n  }\n\n  private createQuickLinkReports() {\n    const reports: Partial<DocLink> = {\n      icon: 'c8y-reports',\n      label: gettext('Reports'),\n      url: '/export'\n    };\n\n    const reportsNode = this.findNavigatorNode(this.REPORT_NODE);\n    if (reportsNode && reportsNode.show) {\n      reports.click = () => {\n        reportsNode.open = true;\n        this.router.navigateByUrl(reports.url);\n      };\n      this.quickLinks.push(reports);\n    }\n  }\n\n  private createQuicklinkDataPointLibrary() {\n    const dataPointLib: Partial<DocLink> = {\n      icon: 'c8y-data-points',\n      label: gettext('Data point library'),\n      url: '/datapointlibrary'\n    };\n\n    const configurationNode = this.findNavigatorNode(this.CONFIGURATION_NODE);\n    if (configurationNode && configurationNode.show) {\n      dataPointLib.click = () => {\n        configurationNode.open = true;\n        this.router.navigateByUrl(dataPointLib.url);\n      };\n      this.quickLinks.push(dataPointLib);\n    }\n  }\n\n  private createQuicklinkSmartRules() {\n    const smartRules: Partial<DocLink> = {\n      icon: 'c8y-smart-rules',\n      label: gettext('Smart rules'),\n      url: '/rules'\n    };\n    const configurationNode = this.findNavigatorNode(this.CONFIGURATION_NODE);\n    if (configurationNode && configurationNode.show) {\n      smartRules.click = () => {\n        configurationNode.open = true;\n        this.router.navigateByUrl(smartRules.url);\n      };\n      this.quickLinks.push(smartRules);\n    }\n  }\n\n  private async createQuicklinkRegisterDevice() {\n    const { data } = await this.applicationService.listByUser();\n    if (data) {\n      const deviceManagement: IApplication = data.find(\n        app => app.contextPath === 'devicemanagement'\n      );\n      if (deviceManagement) {\n        const deviceMgmtUrl = this.applicationService.getHref(deviceManagement);\n        const registerDevice: Partial<DocLink> = {\n          icon: 'c8y-device-connect',\n          label: gettext('Register device'),\n          click: () => window.open(`${deviceMgmtUrl}/#/deviceregistration`, '_self')\n        };\n        this.quickLinks.push(registerDevice);\n      }\n    }\n  }\n\n  private createQuicklinkUserGuide() {\n    const userGuide: Partial<DocLink> = {\n      icon: 'c8y-user',\n      label: gettext('User guide'),\n      url: '/users-guide/getting-started',\n      click: () => {\n        const userGuideURL = this.docs.getUserGuideLink(userGuide.url) as string;\n        window.open(userGuideURL);\n      }\n    };\n    this.quickLinks.push(userGuide);\n  }\n\n  private findNavigatorNode(nodeRealName: string) {\n    if (this.navNodes && this.navNodes.length > 0) {\n      return this.navNodes.find((node: any) => node.realName === nodeRealName);\n    }\n    return undefined;\n  }\n}\n","import { Component, Host } from '@angular/core';\r\nimport { ContextDashboardComponent } from '../context-dashboard.component';\r\n\r\n@Component({\r\n  selector: 'c8y-legacy-welcome-widget',\r\n  templateUrl: './legacy-welcome.component.html'\r\n})\r\nexport class LegacyWelcomeComponent {\r\n  constructor(@Host() private dashboard: ContextDashboardComponent) {}\r\n\r\n  restore() {\r\n    this.dashboard.restore();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { ContextDashboardModule } from './context-dashboard.module';\nimport { ContextDashboardComponent } from './context-dashboard.component';\nimport { DeviceDashboardGuard } from './device-dashboard.guard';\nimport { GroupDashboardGuard } from './group-dashboard.guard';\nimport {\n  ViewContext,\n  HOOK_NAVIGATOR_NODES,\n  gettext,\n  CoreModule,\n  HOOK_COMPONENTS,\n  DynamicComponentDefinition,\n  QuickLinkModule,\n  DocsModule\n} from '@c8y/ngx-components';\nimport { CockpitDashboardComponent } from './cockpit-dashboard.component';\nimport { ContextWidgetConfig } from './context-dashboard.model';\nimport { WelcomeToCockpit } from './welcome/welcome.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { LegacyWelcomeComponent } from './legacy-welcome/legacy-welcome.component';\n\n// import for the preview img to get into the build.\nlet previewImage = '';\ntry {\n  // tslint:disable-next-line: no-var-requires\n  previewImage = require('./welcome/img/welcome-widget-pr.png');\n} catch (ex) {\n  // intended empty\n}\n\n@NgModule({\n  entryComponents: [CockpitDashboardComponent, WelcomeToCockpit, LegacyWelcomeComponent],\n  imports: [\n    DocsModule,\n    CoreModule,\n    ContextDashboardModule.config({\n      routes: [\n        {\n          path: 'dashboard/:dashboardId',\n          component: ContextDashboardComponent,\n          canActivate: [DeviceDashboardGuard],\n          context: ViewContext.Device\n        },\n        {\n          path: 'dashboard/:dashboardId',\n          component: ContextDashboardComponent,\n          canActivate: [GroupDashboardGuard],\n          context: ViewContext.Group\n        },\n        {\n          path: '',\n          component: CockpitDashboardComponent\n        }\n      ]\n    }),\n    QuickLinkModule,\n    TranslateModule\n  ],\n  declarations: [CockpitDashboardComponent, WelcomeToCockpit, LegacyWelcomeComponent],\n  providers: [\n    {\n      provide: HOOK_NAVIGATOR_NODES,\n      useValue: [{ label: gettext('Home'), icon: 'home', priority: 10000, path: '/' }],\n      multi: true\n    },\n    {\n      provide: HOOK_COMPONENTS,\n      multi: true,\n      useValue: [\n        {\n          id: 'cockpit.welcome.widget',\n          label: gettext('Welcome to Cockpit'),\n          description: gettext('Displays a welcome message for Cockpit'),\n          component: WelcomeToCockpit,\n          previewImage,\n          data: {\n            settings: {\n              noNewWidgets: false,\n              widgetDefaults: {\n                _width: 12,\n                _height: 6\n              },\n              ng1: {\n                options: {\n                  noDeviceTarget: true,\n                  groupsSelectable: false\n                }\n              }\n            }\n          } as ContextWidgetConfig\n        }\n      ] as DynamicComponentDefinition[]\n    },\n    {\n      provide: HOOK_COMPONENTS,\n      multi: true,\n      useValue: [\n        {\n          id: 'Cockpit Welcome',\n          label: gettext('Welcome to Cockpit'),\n          description: gettext('Displays a welcome message for Cockpit'),\n          component: LegacyWelcomeComponent,\n          data: {\n            settings: {\n              noNewWidgets: true,\n              ng1: {\n                options: {\n                  noDeviceTarget: true,\n                  groupsSelectable: false\n                }\n              }\n            }\n          } as ContextWidgetConfig\n        }\n      ] as DynamicComponentDefinition[]\n    }\n  ]\n})\nexport class CockpitDashboardModule {}\n"]}