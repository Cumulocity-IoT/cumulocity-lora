!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@c8y/ngx-components"),require("ngx-bootstrap/dropdown"),require("ngx-bootstrap/tooltip"),require("ngx-bootstrap/popover"),require("rxjs"),require("rxjs/operators"),require("lodash-es"),require("@c8y/client"),require("@angular/router"),require("ngx-bootstrap/modal"),require("@ngx-translate/core"),require("ngx-bootstrap"),require("file-saver"),require("file-saver/FileSaver")):"function"==typeof define&&define.amd?define("@c8y/ngx-components/repository",["exports","@angular/core","@c8y/ngx-components","ngx-bootstrap/dropdown","ngx-bootstrap/tooltip","ngx-bootstrap/popover","rxjs","rxjs/operators","lodash-es","@c8y/client","@angular/router","ngx-bootstrap/modal","@ngx-translate/core","ngx-bootstrap","file-saver","file-saver/FileSaver"],t):t(((e=e||self).c8y=e.c8y||{},e.c8y["ngx-components"]=e.c8y["ngx-components"]||{},e.c8y["ngx-components"].repository={}),e.ng.core,e.c8y["ngx-components"],e.dropdown,e.tooltip,e.popover,e.rxjs,e.rxjs.operators,e.lodashEs,e.client,e.ng.router,e.modal,e.core$1,e.ngxBootstrap,e.fileSaver,e.FileSaver)}(this,(function(e,t,n,i,r,a,o,s,c,l,p,d,u,y,f,h){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */var v,g,m=function(){return(m=Object.assign||function(e){for(var t,n=1,i=arguments.length;n<i;n++)for(var r in t=arguments[n])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e}).apply(this,arguments)};function b(e,t,n,i){var r,a=arguments.length,o=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(o=(a<3?r(o):a>3?r(t,n,o):r(t,n))||o);return a>3&&o&&Object.defineProperty(t,n,o),o}function w(e,t,n,i){return new(n||(n=Promise))((function(r,a){function o(e){try{c(i.next(e))}catch(e){a(e)}}function s(e){try{c(i.throw(e))}catch(e){a(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,s)}c((i=i.apply(e,t||[])).next())}))}function S(e,t){var n,i,r,a,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return a={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function s(a){return function(s){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,i&&(r=2&a[0]?i.return:a[0]?i.throw||((r=i.return)&&r.call(i),0):i.next)&&!(r=r.call(i,a[1])).done)return r;switch(i=0,r&&(a=[2&a[0],r.value]),a[0]){case 0:case 1:r=a;break;case 4:return o.label++,{value:a[1],done:!1};case 5:o.label++,i=a[1],a=[0];continue;case 7:a=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==a[0]&&2!==a[0])){o=0;continue}if(3===a[0]&&(!r||a[1]>r[0]&&a[1]<r[3])){o.label=a[1];break}if(6===a[0]&&o.label<r[1]){o.label=r[1],r=a;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(a);break}r[2]&&o.ops.pop(),o.trys.pop();continue}a=t.call(e,o)}catch(e){a=[6,e],i=0}finally{n=r=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,s])}}}function x(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],i=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&i>=e.length&&(e=void 0),{value:e&&e[i++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}function I(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var i,r,a=n.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(i=a.next()).done;)o.push(i.value)}catch(e){r={error:e}}finally{try{i&&!i.done&&(n=a.return)&&n.call(a)}finally{if(r)throw r.error}}return o}function F(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(I(arguments[t]));return e}(g=e.RepositoryType||(e.RepositoryType={})).FIRMWARE="c8y_Firmware",g.SOFTWARE="c8y_Software",g.CONFIGURATION="c8y_ConfigurationDump";var T,C=((v={})[e.RepositoryType.SOFTWARE]="c8y_SoftwareBinary",v[e.RepositoryType.FIRMWARE]="c8y_FirmwareBinary",v[e.RepositoryType.CONFIGURATION]="c8y_ConfigurationDumpBinary",v);(T=e.DeviceConfigurationOperation||(e.DeviceConfigurationOperation={})).UPLOAD_CONFIG="c8y_UploadConfigFile",T.DOWNLOAD_CONFIG="c8y_DownloadConfigFile";var $=function(){function i(e,t,n,i,r,a,o){this.inventory=e,this.inventoryBinary=t,this.operation=n,this.alert=i,this.event=r,this.realtime=a,this.eventBinary=o,this.dateFrom=new Date(0),this.dateTo=new Date(Date.now()+864e5),this.queriesUtil=new l.QueriesUtil}return i.prototype.listRepositoryEntries=function(e,t){var n={type:e},i=t&&t.query||{};i=this.queriesUtil.addOrderbys(i,[{name:1}],"prepend"),i=this.queriesUtil.addAndFilter(i,n),t&&t.partialName&&(i=this.queriesUtil.addAndFilter(i,{name:"*"+t.partialName+"*"})),t&&t.skipLegacy&&(i=this.queriesUtil.addAndFilter(i,{__not:{__has:"url"}}));var r=m({query:this.queriesUtil.buildQuery(i),pageSize:50,withTotalPages:!0},t&&t.params||{});return this.inventory.list(r)},i.prototype.save=function(t,n,i){return void 0===i&&(i={}),w(this,void 0,void 0,(function(){var r,a;return S(this,(function(o){switch(o.label){case 0:switch(n){case e.RepositoryType.CONFIGURATION:Object.assign(i,{type:e.RepositoryType.CONFIGURATION,configurationType:t.selected?t.selected.configurationType:void 0,name:t.version,description:t.description,deviceType:t.deviceType,c8y_Global:{}})}return r=i.url,t.binary.url?(i.url=t.binary.url,[3,3]):[3,1];case 1:return t.binary.file?[4,this.inventoryBinary.create(t.binary.file,{c8y_Global:{}})]:[3,3];case 2:a=o.sent(),i.url=a.data.self,o.label=3;case 3:return i.id?[2,this.updateEntry(i,r)]:[2,this.createEntry(i)]}}))}))},i.prototype.create=function(t,n){return w(this,void 0,void 0,(function(){return S(this,(function(i){switch(n){case e.RepositoryType.FIRMWARE:case e.RepositoryType.SOFTWARE:return[2,this.createFirmwareOrSoftware(t,n)]}return[2]}))}))},i.prototype.createFirmwareOrSoftware=function(e,t){return w(this,void 0,void 0,(function(){var n,i,r,a,o,s,l,p,d,u;return S(this,(function(y){switch(y.label){case 0:o=[],s=e.selected.id,l=e.binary,p=l.file,d=l.url,y.label=1;case 1:return y.trys.push([1,9,,10]),p?[4,this.saveBinary(p)]:[3,3];case 2:return n=y.sent().data,i=n.self,o.push(n),[3,4];case 3:i=d,y.label=4;case 4:return[4,this.createOrUpdateRepositoryEntry(e,t)];case 5:return r=y.sent().data,c.isNil(s)&&o.push(r),[4,this.createRepositoryBinary(e,i,t,r)];case 6:return a=y.sent().data,o.push(a),p?[4,this.linkBinary(a,n)]:[3,8];case 7:y.sent(),y.label=8;case 8:return[2,r];case 9:throw u=y.sent(),this.cleanUp(o),this.errorMsg(),u;case 10:return[2]}}))}))},i.prototype.saveBinary=function(e){return this.inventoryBinary.create(e,{c8y_Global:{}})},i.prototype.createOrUpdateRepositoryEntry=function(e,t){var n=e.selected,i=n.id,r=n.name,a={id:i,name:i?void 0:r,description:e.description,type:i?void 0:t,c8y_Global:{}};return i?this.inventory.update(a):this.inventory.create(a)},i.prototype.createRepositoryBinary=function(e,t,n,i){var r=this.prepareRepositoryBinaryMO(e,t,n);return this.inventory.childAdditionsCreate(r,i)},i.prototype.prepareRepositoryBinaryMO=function(e,t,n){var i,r=e.version,a=e.patchVersion,o=e.dependency,s=((i={type:C[n]})[n]={url:t},i.c8y_Global={},i);return o?(c.set(s,[n,"version"],a),c.assign(s,{c8y_Patch:{dependency:o.c8y_Firmware.version}})):c.set(s,[n,"version"],r),s},i.prototype.linkBinary=function(e,t){return w(this,void 0,void 0,(function(){var n,i;return S(this,(function(r){return n=e.id,t?(i=t.id,[2,this.inventory.childAdditionsAdd(i,n)]):[2]}))}))},i.prototype.cleanUp=function(e){var t=this;e.forEach((function(e){var n=e.c8y_IsBinary;c.isUndefined(n)?t.delete(e):t.inventoryBinary.delete(e)}))},i.prototype.delete=function(e){return this.inventory.delete(e,{forceCascade:!0})},i.prototype.errorMsg=function(){var e=n.gettext("Failed to save");this.alert.danger(e)},i.prototype.getBaseVersionsCount$=function(e){return this.isLegacyEntry(e)?o.of(1):o.from(this.listBaseVersions(e,{pageSize:1,withTotalPages:!0})).pipe(s.map((function(e){return e.paging.totalPages})))},i.prototype.getBaseVersionFromMO=function(e){return this.isPatch(e)?c.get(e,"c8y_Patch.dependency"):c.get(e,"c8y_Firmware.version")},i.prototype.isPatch=function(e){return!!c.get(e,"c8y_Patch.dependency")},i.prototype.getPatchVersionsCount$=function(e,t){return this.isLegacyEntry(t)?o.of(0):o.from(this.listPatchVersions(e,t,{pageSize:1,withTotalPages:!0})).pipe(s.map((function(e){return e.paging.totalPages})))},i.prototype.isLegacyEntry=function(e){return Boolean(e.url)},i.prototype.listAllVersions=function(e,t){if(void 0===t&&(t={}),this.isLegacyEntry(e))return this.getBaseVersionResultListForLegacyEntry(e);return this.listChildren(e,{__filter:{},__orderby:[{"creationTime.date":-1},{creationTime:-1}]},t)},i.prototype.listBaseVersions=function(e,t){if(void 0===t&&(t={}),this.isLegacyEntry(e))return this.getBaseVersionResultListForLegacyEntry(e);return this.listChildren(e,{__filter:{__not:{__has:"c8y_Patch"}},__orderby:[{"creationTime.date":-1},{creationTime:-1}]},t)},i.prototype.listPatchVersions=function(e,t,n){void 0===n&&(n={});var i={__filter:{"c8y_Patch.dependency":c.isString(t)?t:c.get(t,"c8y_Firmware.version")},__orderby:[{"creationTime.date":-1},{creationTime:-1}]};return this.listChildren(e,i,n)},i.prototype.listBaseVersionAndPatches=function(e,t,n){if(void 0===n&&(n={}),this.isLegacyEntry(e))return Promise.resolve({data:[Object.assign({c8y_Firmware:{version:e.version,url:e.url}},e)]});var i={__filter:{__or:{"c8y_Patch.dependency":t.c8y_Firmware.version,"c8y_Firmware.version":t.c8y_Firmware.version}},__orderby:[{"c8y_Patch.dependency":1},{"c8y_Firmware.version":1}]};return this.listChildren(e,i,n)},i.prototype.listChildren=function(e,t,n){void 0===t&&(t={}),void 0===n&&(n={});var i={__bygroupid:e.id},r=this.queriesUtil.addAndFilter(t,i);return n.withTotalPages=!0,this.inventory.listQuery(r,n)},i.prototype.fetchAllItemsFromList=function(e){return w(this,void 0,void 0,(function(){var t,n,i,r,a;return S(this,(function(o){switch(o.label){case 0:return e.then?[3,1]:(t=F(e),[3,5]);case 1:return[4,e];case 2:n=o.sent(),i=n.paging,r=n.data,t=F(r),o.label=3;case 3:return i&&i.nextPage?[4,i.next()]:[3,5];case 4:return a=o.sent(),i=a.paging,r=a.data,t=F(t,r),[3,3];case 5:return[2,t]}}))}))},i.prototype.getRepositoryEntryMO$=function(e){if(!e)return o.of(void 0);var t=I(c.get(e,"additionParents.references"),1)[0],n=c.get(t,"managedObject.id");return n?o.from(this.inventory.detail(n,{withChildren:!1})).pipe(s.map((function(e){return e.data}))):o.of(void 0)},i.prototype.getRepositoryBinaryMoByVersion=function(e,t,n){var i,r,a=void 0===n?{}:n,o=a.skipLegacy,s=void 0!==o&&o,l=a.filters,p=void 0===l?{}:l,d=e.version,u=e.url,y=e.name,f=C[t],h=((i={})[t+".version"]=d,i[t+".url"]=u,i.type=f,i),v={url:u,type:t,name:y};return p=m({withChildren:!1,withParents:!0},p),r=s?{__and:m({},h)}:{__or:[{__and:m({},h)},{__and:m({},v)}]},this.inventory.listQuery(r,p).then((function(e){var t=e.data;return c.head(t)}))},i.prototype.getBinaryName$=function(e){if(!e)return o.of("---");var t=this.inventoryBinary.getIdFromUrl(e);return t?this.inventory.detail$(t).pipe(s.map((function(e){return e.name}))):o.of(e)},i.prototype.getDeviceTypeQuery=function(t,n){var i={type:t};return n.type&&(i=t===e.RepositoryType.CONFIGURATION?this.queriesUtil.addAndFilter(i,{__or:[{deviceType:n.type},{__not:{__has:"deviceType"}}]}):this.queriesUtil.addAndFilter(i,{__or:[{"c8y_Filter.type":n.type},{__not:{__has:"c8y_Filter.type"}}]})),i},i.prototype.getConfigurationTypeQuery=function(t,n){var i=this.getDeviceTypeQuery(e.RepositoryType.CONFIGURATION,t);return this.queriesUtil.addAndFilter(i,{__or:[{configurationType:n},{__not:{__has:"configurationType"}}]})},i.prototype.getDeviceSoftwareList=function(e){return e.c8y_SoftwareList?c.cloneDeep(e.c8y_SoftwareList):e.c8y_Software?c.map(e.c8y_Software,(function(e,t){return{name:t,version:e}})):[]},i.prototype.createSoftwareUpdateOperation=function(e,t){return w(this,void 0,void 0,(function(){var n;return S(this,(function(i){switch(i.label){case 0:return n=this.getSoftwareUpdateOperation(e,t),[4,this.operation.create(n)];case 1:return[2,i.sent().data]}}))}))},i.prototype.getSoftwareUpdateOperation=function(e,t){var n={deviceId:e.id,description:"Apply software changes: "+t.map((function(e){return e.action+' "'+e.name+'"'+(e.version?" (version: "+e.version+")":"")})).join(", ")};return e.c8y_SupportedOperations.includes("c8y_SoftwareUpdate")?n.c8y_SoftwareUpdate=c.cloneDeep(t):e.c8y_SupportedOperations.includes("c8y_SoftwareList")?(n.c8y_SoftwareList=c.cloneDeep(e.c8y_SoftwareList)||[],t.forEach((function(e){var t=c.pick(e,["name","version","url"]);"delete"===e.action&&c.remove(n.c8y_SoftwareList,t),"install"===e.action&&n.c8y_SoftwareList.push(t)}))):e.c8y_SupportedOperations.includes("c8y_Software")&&(n.c8y_Software=c.cloneDeep(e.c8y_Software)||{},t.forEach((function(e){"delete"===e.action&&delete n.c8y_Software[e.name],"install"===e.action&&(n.c8y_Software[e.name]=e.version)}))),n},i.prototype.getDeviceSoftwareChangesFromOperation=function(e,t){return e.c8y_SoftwareUpdate?c.cloneDeep(e.c8y_SoftwareUpdate):e.c8y_SoftwareList?this.getDeviceSoftwareChangesFromSoftwareListOperation(e,t):e.c8y_Software?this.getDeviceSoftwareChangesFromSoftwareOperation(e,t):[]},i.prototype.createFirmwareUpdateOperation=function(e,t){return w(this,void 0,void 0,(function(){var n;return S(this,(function(i){switch(i.label){case 0:return n=this.getFirmwareUpdateOperation(e,t),[4,this.operation.create(n)];case 1:return[2,i.sent().data]}}))}))},i.prototype.getFirmwareUpdateOperation=function(e,t){return delete t.id,{deviceId:e.id,description:'Update firmware to: "'+t.name+'"'+(t.version?" (version: "+t.version+")":""),c8y_Firmware:m({},t)}},i.prototype.getUploadConfigurationFileOperation=function(e,t,n){return void 0===n&&(n=!1),n?{deviceId:e.id,description:"Retrieve configuration snapshot from device "+e.name,c8y_UploadConfigFile:{}}:{deviceId:e.id,description:"Retrieve "+t+" configuration snapshot from device "+e.name,c8y_UploadConfigFile:{type:t}}},i.prototype.getDownloadConfigurationFileOperation=function(e,t,n,i){return void 0===i&&(i=!1),i?{deviceId:e.id,description:"Send configuration snapshot "+n.name+" to device "+e.name,c8y_DownloadConfigFile:{url:n.binaryUrl,c8y_ConfigurationDump:{id:n.id}}}:{deviceId:e.id,description:"Send configuration snapshot "+n.name+" of configuration type "+t+" to device "+e.name,c8y_DownloadConfigFile:{url:n.binaryUrl,type:t}}},i.prototype.getLastFirmwareUpdateOperation=function(e){return w(this,void 0,void 0,(function(){var t;return S(this,(function(n){return t={deviceId:e,dateFrom:new Date(0).toISOString(),dateTo:new Date(Date.now()).toISOString(),revert:!0,pageSize:1},[2,this.getFirstMatchingOperation([m({},t,{fragmentType:"c8y_Firmware"})])]}))}))},i.prototype.getLastSoftwareUpdateOperation=function(e){return w(this,void 0,void 0,(function(){var t;return S(this,(function(n){return t={deviceId:e,dateFrom:new Date(0).toISOString(),dateTo:new Date(Date.now()).toISOString(),revert:!0,pageSize:1},[2,this.getFirstMatchingOperation([m({},t,{fragmentType:"c8y_SoftwareUpdate"}),m({},t,{fragmentType:"c8y_SoftwareList"}),m({},t,{fragmentType:"c8y_Software"})])]}))}))},i.prototype.getFirstMatchingOperation=function(e){return w(this,void 0,void 0,(function(){var t,n,i,r,a,o,s,c;return S(this,(function(l){switch(l.label){case 0:t=null,l.label=1;case 1:l.trys.push([1,6,7,8]),n=x(e),i=n.next(),l.label=2;case 2:return i.done?[3,5]:(r=i.value,[4,this.operation.list(r)]);case 3:if((a=l.sent().data).length)return t=a[0],[3,5];l.label=4;case 4:return i=n.next(),[3,2];case 5:return[3,8];case 6:return o=l.sent(),s={error:o},[3,8];case 7:try{i&&!i.done&&(c=n.return)&&c.call(n)}finally{if(s)throw s.error}return[7];case 8:return[2,t]}}))}))},i.prototype.createObservedOperation=function(e){var t=this;return o.from(this.operation.create(e)).pipe(s.map((function(e){return e.data})),s.take(1),s.switchMap((function(e){return t.observeOperation(e)})))},i.prototype.observeOperation=function(e){var t=this,n=o.of(e),i=n.pipe(s.switchMap((function(e){return t.realtime.observable("/operations/"+e.deviceId)})),s.map((function(e){return e.data})),s.withLatestFrom(n),s.filter((function(e){var t=I(e,2),n=t[0],i=t[1];return n.id===i.id})),s.switchMap((function(e){var t=I(e,1)[0];return t.status===l.OperationStatus.FAILED?o.throwError(t):o.of(t)})),s.takeWhile((function(e){return e.status!==l.OperationStatus.SUCCESSFUL}),!0));return o.merge(n,i)},i.prototype.getLatestConfigurationEvent=function(e,t){return w(this,void 0,void 0,(function(){var n;return S(this,(function(i){switch(i.label){case 0:return n={source:e,type:t,dateFrom:this.dateFrom.toISOString(),dateTo:this.dateTo.toISOString(),pageSize:1},[4,this.event.list(n)];case 1:return[2,i.sent().data[0]]}}))}))},i.prototype.getConfigFileOperationList=function(e,t){return w(this,void 0,void 0,(function(){var n;return S(this,(function(i){switch(i.label){case 0:return n={deviceId:e,fragmentType:t,dateFrom:this.dateFrom.toISOString(),dateTo:this.dateTo.toISOString(),revert:!0,pageSize:2e3},[4,this.operation.list(n)];case 1:return[2,i.sent().data]}}))}))},i.prototype.getConfigSnapshot=function(e,t){return w(this,void 0,void 0,(function(){var i,r,a,o;return S(this,(function(s){switch(s.label){case 0:return[4,this.getLatestConfigurationEvent(e.id,t)];case 1:if(!(i=s.sent()))return[3,6];r={time:i.time,name:i.text,deviceType:e.type,configurationType:t},s.label=2;case 2:return s.trys.push([2,5,,6]),a=r,[4,this.eventBinary.download(i)];case 3:return[4,s.sent().text()];case 4:return a.binary=s.sent(),i.c8y_IsBinary&&(r.binaryType=i.c8y_IsBinary.type),[3,6];case 5:return s.sent(),o=n.gettext("Could not get the binary."),this.alert.danger(o),[3,6];case 6:return[2,r]}}))}))},i.prototype.getLegacyConfigSnapshot=function(e){return w(this,void 0,void 0,(function(){var t,n,i,r,a;return S(this,(function(o){switch(o.label){case 0:return[4,this.inventory.detail(e,{withChildren:!1})];case 1:if(i=o.sent().data,!(r=i.c8y_ConfigurationDump&&i.c8y_ConfigurationDump.id))return[2];o.label=2;case 2:return o.trys.push([2,4,,5]),[4,this.inventory.detail(r)];case 3:return n=o.sent().data,[3,5];case 4:return o.sent(),[3,5];case 5:return n?(t={time:n.creationTime,name:n.name},a=t,[4,this.getBinaryText(n.url,{allowExternal:!1})]):[3,7];case 6:a.binary=o.sent(),o.label=7;case 7:return[2,t]}}))}))},i.prototype.getBinaryFile=function(e,t){return w(this,void 0,void 0,(function(){var n,i,r;return S(this,(function(a){switch(a.label){case 0:return(n=this.inventoryBinary.getIdFromUrl(e))||t.allowExternal?[4,this.inventory.detail(n)]:[2];case 1:return i=a.sent().data,n?[4,this.getBinary(n)]:[3,3];case 2:return r=a.sent(),[3,4];case 3:r=this.fetchExternalBinary(e),a.label=4;case 4:return[2,new File([r],i.name,{type:i.contentType})]}}))}))},i.prototype.getBinaryText=function(e,t){var n=this.inventoryBinary.getIdFromUrl(e);return!n&&t.allowExternal?this.fetchExternalBinary(e):this.getBinary(n)},i.prototype.getBinary=function(e){return w(this,void 0,void 0,(function(){var t,i;return S(this,(function(r){switch(r.label){case 0:return r.trys.push([0,3,,4]),[4,this.inventoryBinary.download(e)];case 1:return[4,r.sent().text()];case 2:return t=r.sent(),[3,4];case 3:return r.sent(),i=n.gettext("Could not get the binary."),this.alert.danger(i),[3,4];case 4:return[2,t]}}))}))},i.prototype.fetchExternalBinary=function(e){return w(this,void 0,void 0,(function(){var t,i,r;return S(this,(function(a){switch(a.label){case 0:return a.trys.push([0,4,,5]),[4,fetch(e)];case 1:return 200!==(i=a.sent()).status?[3,3]:[4,i.text()];case 2:t=a.sent(),a.label=3;case 3:return[3,5];case 4:return a.sent(),r=n.gettext("Could not get the external binary."),this.alert.danger(r),[3,5];case 5:return[2,t]}}))}))},i.prototype.createEntry=function(e){return w(this,void 0,void 0,(function(){var t,n;return S(this,(function(i){switch(i.label){case 0:return[4,this.inventoryBinary.getIdFromUrl(e.url)];case 1:return t=i.sent(),[4,this.inventory.create(e)];case 2:return n=i.sent(),t?[4,this.inventory.childAdditionsAdd(t,n.data)]:[3,4];case 3:i.sent(),i.label=4;case 4:return[2,n]}}))}))},i.prototype.updateEntry=function(e,t){return w(this,void 0,void 0,(function(){var n,i,r;return S(this,(function(a){switch(a.label){case 0:return[4,this.inventoryBinary.getIdFromUrl(t)];case 1:return n=a.sent(),[4,this.inventoryBinary.getIdFromUrl(e.url)];case 2:return i=a.sent(),n&&n!==i?(r=this.inventoryBinary.getIdFromUrl(t),[4,this.inventoryBinary.delete(r)]):[3,4];case 3:a.sent(),a.label=4;case 4:return i?[4,this.inventory.childAdditionsAdd(i,e)]:[3,6];case 5:a.sent(),a.label=6;case 6:return[2,this.inventory.update(e)]}}))}))},i.prototype.getBaseVersionResultListForLegacyEntry=function(e){var t;return Promise.resolve({res:{},data:[m({},e,(t={},t[e.type]={version:e.version,url:e.url},t))]})},i.prototype.getDeviceSoftwareChangesFromSoftwareListOperation=function(e,t){var n=[];return c.forEach(t.c8y_SoftwareList,(function(t){var i=c.find(e.c8y_SoftwareList,{name:t.name});t.version!==i.version&&n.push(m({},t,{action:"delete"}))})),c.forEach(e.c8y_SoftwareList,(function(e){var i=c.find(t.c8y_SoftwareList,{name:e.name});e.version!==i.version&&n.push(m({},e,{action:"install"}))})),n},i.prototype.getDeviceSoftwareChangesFromSoftwareOperation=function(e,t){var n=[];return c.forEach(t.c8y_Software,(function(t,i){e.c8y_Software[i]!==t&&n.push({name:i,version:t,action:"delete"})})),c.forEach(e.c8y_Software,(function(e,i){t.c8y_Software[i]!==e&&n.push({name:i,version:e,action:"install"})})),n},i.ctorParameters=function(){return[{type:l.InventoryService},{type:l.InventoryBinaryService},{type:l.OperationService},{type:n.AlertService},{type:l.EventService},{type:l.Realtime},{type:l.EventBinaryService}]},i=b([t.Injectable()],i)}(),O=function(){function i(e,n,i){this.modal=e,this.repositoryService=n,this.alert=i,this.saved=new t.EventEmitter,this.onInput=new o.BehaviorSubject(""),this.model={selected:void 0,version:void 0,description:void 0,binary:{file:void 0,url:void 0}},this.saving=!1,this.firmwarePreselected=!1}return i.prototype.ngOnInit=function(){this.setInitialState(),this.loadFirmwares()},i.prototype.setInitialState=function(){this.model.selected&&(this.firmwarePreselected=!0)},i.prototype.loadFirmwares=function(){var e=this;this.inputSubscription$=this.onInput.pipe(s.tap((function(){e.firmwarePreselected||(e.model.description=null,e.form&&e.form.form.get("description").reset())})),s.debounceTime(300),s.distinctUntilChanged(),s.switchMap((function(t){return e.getFirmwareResult(t)}))).subscribe((function(t){e.firmwaresResult=t}))},i.prototype.getFirmwareResult=function(t){return o.from(this.repositoryService.listRepositoryEntries(e.RepositoryType.FIRMWARE,{partialName:t,skipLegacy:!0}))},i.prototype.save=function(){return w(this,void 0,void 0,(function(){var t=this;return S(this,(function(n){return this.saving=!0,this.repositoryService.create(this.model,e.RepositoryType.FIRMWARE).then((function(e){t.successMsg(),t.saving=!1,t.saved.next(e),t.cancel()})).catch((function(e){t.saving=!1,t.saved.error(e),t.cancel()})),[2]}))}))},i.prototype.successMsg=function(){var e=n.gettext("Firmware added, optionally set device type filter.");this.alert.success(e)},i.prototype.cancel=function(){this.modal.hide(),this.saved.complete()},i.prototype.ngOnDestroy=function(){this.inputSubscription$.unsubscribe()},i.prototype.onFile=function(e){c.isUndefined(e.url)?c.isUndefined(e.droppedFiles)?this.model.binary={file:void 0,url:void 0}:this.model.binary={file:e.droppedFiles[0].file}:this.model.binary={url:e.url}},i.ctorParameters=function(){return[{type:d.BsModalRef},{type:$},{type:n.AlertService}]},b([t.ViewChild("firmwareForm",{static:!1})],i.prototype,"form",void 0),b([t.Output()],i.prototype,"saved",void 0),i=b([t.Component({selector:"c8y-add-firmware-software-modal",template:'<div class="viewport-modal">\n  <div class="modal-header dialog-header">\n    <i [c8yIcon]="\'c8y-firmware\'"></i>\n    <h4 translate>\n      Add firmware\n    </h4>\n  </div>\n  <div class="p-16 text-center separator-bottom" *ngIf="!firmwarePreselected">\n    <p class="lead m-0" translate>\n      Select or create new firmware\n    </p>\n  </div>\n  <form\n    class="d-contents"\n    autocomplete="off"\n    #firmwareForm="ngForm"\n    (ngSubmit)="firmwareForm.form.valid && save()"\n  >\n    <div class="modal-inner-scroll">\n      <div class="modal-body">\n        <div [hidden]="firmwarePreselected">\n          <c8y-form-group>\n            <label for="firmwareName" translate>Firmware</label>\n            <c8y-typeahead\n              [(ngModel)]="model.selected"\n              name="firmwareName"\n              placeholder="{{ \'Select or enter\' | translate }}"\n              (onSearch)="onInput.next($event)"\n              [required]="true"\n            >\n              <c8y-li\n                *c8yFor="\n                  let firmware of firmwaresResult;\n                  loadMore: \'auto\';\n                  notFound: notFoundTemplate\n                "\n                class="p-l-8 p-r-8 c8y-list__item--link"\n                (click)="model.selected = firmware; model.description = firmware.description"\n                [active]="model.selected === firmware"\n              >\n                <c8y-highlight\n                  [text]="firmware.name || \'--\'"\n                  [pattern]="onInput | async"\n                ></c8y-highlight>\n              </c8y-li>\n              <ng-template #notFoundTemplate>\n                <c8y-li class="bg-gray-lighter p-8" *ngIf="(onInput | async)?.length > 0">\n                  <span translate>No match found, add new`firmware`? </span>\n                  <button\n                    title="{{ \'Create new`firmware`\' | translate }}"\n                    type="button"\n                    class="btn btn-primary btn-xs m-l-16"\n                    translate\n                  >\n                    Create new`firmware`\n                  </button>\n                </c8y-li>\n              </ng-template>\n            </c8y-typeahead>\n          </c8y-form-group>\n\n          <c8y-form-group>\n            <label for="firmwareDescription" translate>Description</label>\n            <input\n              id="firmwareDescription"\n              class="form-control"\n              autocomplete="off"\n              name="description"\n              [(ngModel)]="model.description"\n              placeholder="{{ \'e.g. Firmware for hardware revision b\' | translate }}"\n              [disabled]="model.selected?.id"\n              [required]="true"\n            />\n          </c8y-form-group>\n        </div>\n\n        <c8y-form-group>\n          <label for="firmwareVersion" translate>Version</label>\n          <input\n            id="firmwareVersion"\n            class="form-control"\n            autocomplete="off"\n            name="version"\n            [(ngModel)]="model.version"\n            placeholder="{{ \'e.g.\' | translate }} 1.0.0"\n            [required]="true"\n          />\n        </c8y-form-group>\n\n        <c8y-form-group>\n          <div class="legend form-block top-m-xxl" translate>Firmware file</div>\n          <c8y-file-picker [maxAllowedFiles]="1" (onFilesPicked)="onFile($event)">\n          </c8y-file-picker>\n        </c8y-form-group>\n      </div>\n    </div>\n    <div class="modal-footer">\n      <button\n        title="{{ \'Cancel\' | translate }}"\n        class="btn btn-default"\n        type="button"\n        (click)="cancel()"\n        [disabled]="saving"\n        translate\n      >\n        Cancel\n      </button>\n\n      <button\n        title="{{ \'Add firmware\' | translate }}"\n        class="btn btn-primary"\n        type="submit"\n        [ngClass]="{ \'btn-pending\': saving }"\n        [disabled]="\n          !firmwareForm.form.valid ||\n          firmwareForm.form.pristine ||\n          saving ||\n          (!model.binary?.url && !model.binary?.file)\n        "\n        translate\n      >\n        Add firmware\n      </button>\n    </div>\n  </form>\n</div>\n'})],i)}(),E=function(){function i(n,i,r){var a=this;this.modal=n,this.repository=i,this.alert=r,this.saved=new t.EventEmitter,this.model={selected:void 0,dependency:null,patchVersion:void 0,binary:{file:void 0,url:void 0}},this.firmwareInput$=new o.BehaviorSubject(""),this.firmwares$=this.firmwareInput$.pipe(s.debounceTime(300),s.distinctUntilChanged(),s.switchMap((function(t){return o.from(a.repository.listRepositoryEntries(e.RepositoryType.FIRMWARE,{partialName:t,skipLegacy:!0}))})),s.shareReplay(1)),this.firmwareSelected$=new o.BehaviorSubject(null),this.patchDependencyInput$=new o.BehaviorSubject(""),this.saving=!1,this.firmwarePreselected=!1,this.baseVersions$=o.merge(this.firmwareInput$.pipe(s.tap((function(){a.model.dependency=null,a.form&&a.form.form.get("patchDependency").reset()})),s.switchMap((function(){return o.of(null)}))),this.firmwareSelected$).pipe(s.switchMap((function(e){return e?a.repository.listBaseVersions(e):o.of(null)})),s.shareReplay(1)),this.baseVersionsFilterPipe=o.pipe(s.switchMap((function(e){return a.patchDependencyInput$.pipe(s.map((function(t){return e.filter((function(e){var n=e.c8y_Firmware.version.toLowerCase();return 0===t.length||n.indexOf(t.toLowerCase())>-1}))})))})))}return i.prototype.ngOnInit=function(){return w(this,void 0,void 0,(function(){return S(this,(function(e){return this.setInitialState(),[2]}))}))},i.prototype.setInitialState=function(){this.model.selected&&(this.firmwarePreselected=!0,this.firmwareSelected$.next(this.model.selected))},i.prototype.save=function(){return w(this,void 0,void 0,(function(){var t=this;return S(this,(function(n){return this.saving=!0,this.repository.create(this.model,e.RepositoryType.FIRMWARE).then((function(e){t.successMsg(),t.saving=!1,t.saved.next(e),t.cancel()})).catch((function(e){t.saving=!1,t.saved.error(e),t.cancel()})),[2]}))}))},i.prototype.successMsg=function(){var e=n.gettext("Firmware patch added.");this.alert.success(e)},i.prototype.cancel=function(){this.modal.hide(),this.saved.complete()},i.prototype.onFile=function(e){c.isUndefined(e.url)?c.isUndefined(e.droppedFiles)?this.model.binary={file:void 0,url:void 0}:this.model.binary={file:e.droppedFiles[0].file}:this.model.binary={url:e.url}},i.ctorParameters=function(){return[{type:d.BsModalRef},{type:$},{type:n.AlertService}]},b([t.Output()],i.prototype,"saved",void 0),b([t.ViewChild("dropdown",{static:!1})],i.prototype,"dropdown",void 0),b([t.ViewChild("firmwarePatchForm",{static:!1})],i.prototype,"form",void 0),i=b([t.Component({selector:"c8y-add-firmware-patch-modal.component",template:'<div class="viewport-modal">\n  <div class="modal-header dialog-header">\n    <i [c8yIcon]="\'c8y-firmware\'"></i>\n    <h4 translate>\n      Add firmware patch\n    </h4>\n  </div>\n  <div class="p-16 text-center separator-bottom">\n    <p class="lead m-0" translate>\n      Select a firmware version\n    </p>\n  </div>\n\n  <form class="d-contents" autocomplete="off" #firmwarePatchForm="ngForm" (ngSubmit)="save()">\n    <div class="modal-inner-scroll">\n      <div class="modal-body">\n        <div [hidden]="firmwarePreselected">\n          <c8y-form-group>\n            <label for="firmwareName" translate>Firmware</label>\n            <c8y-typeahead\n              [ngModel]="model.selected"\n              name="firmwareName"\n              placeholder="{{ \'Select or enter\' | translate }}"\n              (onSearch)="firmwareInput$.next($event)"\n              [allowFreeEntries]="false"\n              [required]="true"\n            >\n              <c8y-li\n                *c8yFor="let firmware of firmwares$ | async; loadMore: \'auto\'"\n                class="p-l-8 p-r-8 c8y-list__item--link"\n                (click)="model.selected = firmware; firmwareSelected$.next(firmware)"\n                [active]="model.selected === firmware"\n              >\n                <c8y-highlight\n                  [text]="firmware.name || \'--\'"\n                  [pattern]="firmwareInput$ | async"\n                ></c8y-highlight>\n              </c8y-li>\n            </c8y-typeahead>\n            <c8y-messages\n              ><c8y-message\n                name="notExisting"\n                [text]="\'Select one of the existing firmwares.\' | translate"\n              ></c8y-message>\n            </c8y-messages>\n          </c8y-form-group>\n        </div>\n\n        <c8y-form-group>\n          <label for="patchDependency" class="m-r-8" translate>Version</label>\n          <c8y-typeahead\n            [ngModel]="model.dependency"\n            name="patchDependency"\n            placeholder="{{ \'Select or enter\' | translate }}"\n            (onSearch)="patchDependencyInput$.next($event)"\n            [displayProperty]="\'c8y_Firmware.version\'"\n            [allowFreeEntries]="false"\n            [disabled]="\n              (baseVersions$ | async) === null || (baseVersions$ | async)?.data.length === 0\n            "\n            [required]="true"\n          >\n            <c8y-li\n              *c8yFor="\n                let baseVersion of baseVersions$;\n                loadMore: \'auto\';\n                pipe: baseVersionsFilterPipe\n              "\n              class="p-l-8 p-r-8 c8y-list__item--link"\n              (click)="model.dependency = baseVersion"\n              [active]="model.dependency === baseVersion"\n            >\n              <c8y-highlight\n                [text]="baseVersion.c8y_Firmware.version || \'--\'"\n                [pattern]="patchDependencyInput$ | async"\n              ></c8y-highlight>\n            </c8y-li>\n          </c8y-typeahead>\n          <c8y-messages\n            ><c8y-message\n              name="notExisting"\n              [text]="\'Select one of the existing versions.\' | translate"\n            ></c8y-message>\n          </c8y-messages>\n        </c8y-form-group>\n\n        <c8y-form-group>\n          <label for="patchVersion" translate>Patch</label>\n          <input\n            id="patchVersion"\n            class="form-control"\n            autocomplete="off"\n            name="patchVersion"\n            [(ngModel)]="model.patchVersion"\n            placeholder="{{ \'e.g.\' | translate }} 1.0.0"\n            required\n          />\n        </c8y-form-group>\n\n        <c8y-form-group>\n          <div class="legend form-block top-m-xxl" translate>Patch file</div>\n          <c8y-file-picker [maxAllowedFiles]="1" (onFilesPicked)="onFile($event)">\n          </c8y-file-picker>\n        </c8y-form-group>\n      </div>\n    </div>\n    <div class="modal-footer">\n      <button\n        title="{{ \'Cancel\' | translate }}"\n        class="btn btn-default"\n        type="button"\n        (click)="cancel()"\n        [disabled]="saving"\n        translate\n      >\n        Cancel\n      </button>\n      <button\n        title="{{ \'Add firmware patch\' | translate }}"\n        class="btn btn-primary"\n        [ngClass]="{ \'btn-pending\': saving }"\n        type="submit"\n        [disabled]="\n          !firmwarePatchForm.form.valid ||\n          firmwarePatchForm.form.pristine ||\n          (!model.binary?.url && !model.binary?.file) ||\n          saving\n        "\n        translate\n      >\n        Add firmware patch\n      </button>\n    </div>\n  </form>\n</div>\n'})],i)}(),R=function(){function i(t,i,r,a,c,l,p){var d=this;this.repositoryService=t,this.modalService=i,this.bsModalService=r,this.translateService=a,this.alertService=c,this.router=l,this.activatedRoute=p,this.textFilter$=new o.BehaviorSubject(""),this.reload$=new o.BehaviorSubject(null),this.reloading=!1,this.firmwares$=o.combineLatest(this.textFilter$.pipe(s.debounceTime(400),s.distinctUntilChanged()),this.reload$).pipe(s.tap((function(){d.reloading=!0})),s.switchMap((function(e){var t=I(e,1)[0];return d.getFirmwares(t)})),s.tap((function(){d.reloading=!1})),s.shareReplay(1)),this.canAddFirmwarePatch$=o.from(this.repositoryService.listRepositoryEntries(e.RepositoryType.FIRMWARE,{skipLegacy:!0})).pipe(s.map((function(e){return e.data.length>0}))),this.isLegacy=this.repositoryService.isLegacyEntry.bind(this.repositoryService),this.DEVICE_TYPE_NOT_AVAILABLE=n.gettext("No device type available")}return i.prototype.getFirmwares=function(t){return this.repositoryService.listRepositoryEntries(e.RepositoryType.FIRMWARE,{partialName:t})},i.prototype.addFirmware=function(){var e=this;this.bsModalService.show(O,{class:"modal-sm",ignoreBackdropClick:!0}).content.saved.subscribe((function(t){return e.editFirmware(t)}))},i.prototype.addFirmwarePatch=function(){var e=this;this.bsModalService.show(E,{class:"modal-sm",ignoreBackdropClick:!0}).content.saved.subscribe((function(t){return e.editFirmware(t)}))},i.prototype.editFirmware=function(e){this.router.navigate([e.id],{relativeTo:this.activatedRoute})},i.prototype.deleteFirmware=function(e){return w(this,void 0,void 0,(function(){var t,i,r,a;return S(this,(function(o){switch(o.label){case 0:return o.trys.push([0,3,,4]),t=n.gettext("Delete firmware"),i="\n        "+this.translateService.instant(n.gettext('You are about to delete firmware "{{ name }}" with all its versions and patches.'),{name:e.name})+"\n        "+this.translateService.instant(n.gettext("This operation is irreversible."))+"\n        "+this.translateService.instant(n.gettext("Do you want to proceed?"))+"\n      ",r={ok:n.gettext("Delete")},[4,this.modalService.confirm(t,i,n.Status.DANGER,r)];case 1:return o.sent(),[4,this.repositoryService.delete(e)];case 2:return o.sent(),this.alertService.success(n.gettext("Firmware deleted.")),this.reload$.next(),[3,4];case 3:return(a=o.sent())&&this.alertService.addServerFailure(a),[3,4];case 4:return[2]}}))}))},i.prototype.getBaseVersionsCount$=function(e){var t=this;return this.firmwares$.pipe(s.switchMap((function(){return t.repositoryService.getBaseVersionsCount$(e)})),s.shareReplay(1))},i.prototype.getDeviceTypeTitle=function(e){return c.get(e,"c8y_Filter.type",this.translateService.instant(this.DEVICE_TYPE_NOT_AVAILABLE))},i.ctorParameters=function(){return[{type:$},{type:n.ModalService},{type:d.BsModalService},{type:u.TranslateService},{type:n.AlertService},{type:p.Router},{type:p.ActivatedRoute}]},b([n.memoize(c.property("id"))],i.prototype,"getBaseVersionsCount$",null),i=b([t.Component({selector:"c8y-firmware-list",template:'<c8y-title>\n  {{ \'Firmware repository\' | translate }}\n</c8y-title>\n\n<c8y-action-bar-item [placement]="\'left\'" itemClass="navbar-form">\n  <div class="input-group input-group-search">\n    <input\n      type="search"\n      class="form-control"\n      title="{{ \'Filter firmware…\' | translate }}"\n      placeholder="{{ \'Filter firmware…\' | translate }}"\n      [ngModel]="textFilter$ | async"\n      (ngModelChange)="textFilter$.next($event)"\n    />\n    <span class="input-group-addon">\n      <i c8yIcon="filter" *ngIf="(textFilter$ | async).length === 0"></i>\n      <i\n        c8yIcon="times"\n        class="text-muted"\n        *ngIf="(textFilter$ | async).length > 0"\n        (click)="textFilter$.next(\'\')"\n      ></i>\n    </span>\n  </div>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]="\'right\'">\n  <button class="btn btn-link" title="{{ \'Add firmware\' | translate }}" (click)="addFirmware()">\n    <i c8yIcon="plus-circle"></i>\n    {{ \'Add firmware\' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]="\'right\'">\n  <button\n    *ngIf="canAddFirmwarePatch$ | async"\n    class="btn btn-link"\n    title="{{ \'Add firmware patch\' | translate }}"\n    (click)="addFirmwarePatch()"\n  >\n    <i c8yIcon="plus-circle"></i>\n    {{ \'Add firmware patch\' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]="\'right\'">\n  <button class="btn btn-link" title="{{ \'Reload\' | translate }}" (click)="reload$.next()">\n    <i c8yIcon="refresh" [ngClass]="{ \'fa-spin\': reloading }"></i>\n    {{ \'Reload\' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<div class="c8y-empty-state text-center" *ngIf="(firmwares$ | async)?.data.length === 0">\n  <h1 c8yIcon="c8y-firmware" class="c8y-icon-duocolor"></h1>\n  <h3 translate>No firmware to display.</h3>\n  <p translate>Add a new firmware by clicking below.</p>\n  <p>\n    <button\n      class="btn btn-primary"\n      title="{{ \'Add firmware\' | translate }}"\n      (click)="addFirmware()"\n      translate\n    >\n      Add firmware\n    </button>\n  </p>\n</div>\n\n<c8y-list-group class="elevation-1">\n  <c8y-li *c8yFor="let firmware of firmwares$ | async; let i = index; loadMore: \'auto\'">\n    <c8y-li-icon>\n      <i c8yIcon="c8y-firmware"></i>\n    </c8y-li-icon>\n\n    <c8y-li-body class="content-flex-50">\n      <div class="col-5 pointer" (click)="editFirmware(firmware)">\n        <div class="text-truncate" title="{{ firmware.name }}">\n          {{ firmware.name }}\n        </div>\n      </div>\n      <div class="col-5">\n        <div class="text-truncate" title="{{ \'Device type\' | translate }}: {{ getDeviceTypeTitle(firmware) }}">\n          <span class="text-label-small m-r-8" translate>\n            Device type\n          </span>\n          <span *ngIf="firmware.c8y_Filter?.type; else emptyText">\n            {{ firmware.c8y_Filter?.type }}\n          </span>\n          <ng-template #emptyText> --- </ng-template>\n        </div>\n      </div>\n      <div class="col-2">\n        <span *ngIf="isLegacy(firmware)" class="label label-warning flex-item-right-sm">\n          <span translate>Legacy</span>\n        </span>\n\n        <span *ngIf="!isLegacy(firmware)">\n          <span *ngIf="(getBaseVersionsCount$(firmware) | async) === null">\n            <span class="label label-info">\n              <i c8yIcon="circle-o-notch" class="fa-spin"></i>\n            </span>\n          </span>\n          <span *ngIf="(getBaseVersionsCount$(firmware) | async) !== null">\n            <span [ngPlural]="getBaseVersionsCount$(firmware) | async">\n              <ng-template ngPluralCase="=0">\n                <span class="label label-default flex-item-right-sm">\n                  <span translate>No versions</span>\n                </span>\n              </ng-template>\n              <ng-template ngPluralCase="=1">\n                <span class="label label-info"><span translate>1 version</span></span>\n              </ng-template>\n              <ng-template ngPluralCase="other">\n                <span class="label label-info">\n                  <span\n                    ngNonBindable\n                    translate\n                    [translateParams]="{ count: getBaseVersionsCount$(firmware) | async }"\n                    >{{ count }} versions</span\n                  >\n                </span>\n              </ng-template>\n            </span>\n          </span>\n        </span>\n      </div>\n    </c8y-li-body>\n\n    <c8y-li-action (click)="editFirmware(firmware)" icon="pencil">\n      {{ \'Edit\' | translate }}\n    </c8y-li-action>\n\n    <c8y-li-action (click)="deleteFirmware(firmware)" icon="trash">\n      {{ \'Delete\' | translate }}\n    </c8y-li-action>\n  </c8y-li>\n</c8y-list-group>\n'})],i)}(),_=function(){function e(e,t,n,i,r,a,c){var l=this;this.activatedRoute=e,this.inventoryService=t,this.repositoryService=n,this.alertService=i,this.translateService=r,this.modalService=a,this.bsModalService=c,this.reload$=new o.Subject,this.reloading$=new o.BehaviorSubject(!1),this.updateFirmware$=new o.Subject,this.firmwareUpdated$=new o.Subject,this.baseVersionsUpdated$=new o.Subject,this.patchVersionsUpdated$=new o.Subject,this.firmware$=o.merge(this.activatedRoute.params.pipe(s.map((function(e){return e.id})),s.switchMap((function(e){return l.inventoryService.detail$(e)}))),this.reload$.pipe(s.tap((function(){return l.reloading$.next(!0)})),s.switchMap((function(){return l.activatedRoute.params})),s.map((function(e){return e.id})),s.switchMap((function(e){return l.inventoryService.detail$(e)})),s.tap((function(){return l.reloading$.next(!1)}))),this.firmwareUpdated$).pipe(s.shareReplay(1)),this.baseVersions$=o.merge(this.firmware$.pipe(s.distinctUntilKeyChanged("id")),this.baseVersionsUpdated$,this.patchVersionsUpdated$,this.reload$).pipe(s.switchMap((function(){return l.firmware$})),s.switchMap((function(e){return l.repositoryService.listBaseVersions(e)})),s.shareReplay(1)),this.isLegacy$=this.firmware$.pipe(s.map((function(e){return l.repositoryService.isLegacyEntry(e)})),s.shareReplay(1)),this.canAddPatchVersions$=o.combineLatest(this.isLegacy$,this.baseVersions$.pipe(s.map((function(e){return e.data.length>0})))).pipe(s.map((function(e){var t=I(e,2),n=t[0],i=t[1];return!n&&i}))),this.expanded={},this.destroy$=new o.Subject}return e.prototype.ngOnInit=function(){var e=this;this.updateFirmware$.pipe(s.withLatestFrom(this.firmware$),s.switchMap((function(t){var n=I(t,2),i=n[0],r=n[1];return e.inventoryService.update(m({id:r.id},i))})),s.map((function(e){return e.data})),s.tap((function(t){return e.firmwareUpdated$.next(t)})),s.tap((function(){return e.alertService.success(n.gettext("Saved."))})),s.takeUntil(this.destroy$)).subscribe()},e.prototype.getPatchVersionsCount$=function(e){var t=this;return o.merge(this.firmware$.pipe(s.distinctUntilKeyChanged("id")),this.baseVersionsUpdated$,this.patchVersionsUpdated$,this.reload$).pipe(s.switchMap((function(){return t.firmware$})),s.switchMap((function(n){return t.repositoryService.getPatchVersionsCount$(n,e)})),s.shareReplay(1))},e.prototype.getBinaryName$=function(e){return this.repositoryService.getBinaryName$(e)},e.prototype.getPatchVersions$=function(e){var t=this;return o.merge(this.firmware$.pipe(s.distinctUntilKeyChanged("id")),this.patchVersionsUpdated$,this.reload$).pipe(s.switchMap((function(){return t.firmware$})),s.switchMap((function(n){return t.repositoryService.listPatchVersions(n,e)})),s.shareReplay(1))},e.prototype.addBaseVersion=function(){var e=this;this.firmware$.pipe(s.take(1),s.switchMap((function(t){var n={class:"modal-sm",ignoreBackdropClick:!0,initialState:{model:{selected:t,description:t.description}}};return e.bsModalService.show(O,n).content.saved}))).subscribe((function(){return e.baseVersionsUpdated$.next()}))},e.prototype.addPatchVersion=function(){var e=this;this.firmware$.pipe(s.take(1),s.switchMap((function(t){var n={class:"modal-sm",ignoreBackdropClick:!0,initialState:{model:{selected:t}}};return e.bsModalService.show(E,n).content.saved}))).subscribe((function(){return e.patchVersionsUpdated$.next()}))},e.prototype.deleteBaseVersion=function(e){return w(this,void 0,void 0,(function(){var t,i,r,a;return S(this,(function(o){switch(o.label){case 0:return o.trys.push([0,3,,4]),t=n.gettext("Delete firmware"),i="\n        "+this.translateService.instant(n.gettext("You are about to delete firmware {{ version }} with all its patches."),{version:e.c8y_Firmware.version})+"\n        "+this.translateService.instant(n.gettext("This operation is irreversible."))+"\n        "+this.translateService.instant(n.gettext("Do you want to proceed?"))+"\n      ",r={ok:n.gettext("Delete")},[4,this.modalService.confirm(t,i,n.Status.DANGER,r)];case 1:return o.sent(),[4,this.repositoryService.delete(e)];case 2:return o.sent(),this.alertService.success(n.gettext("Firmware deleted.")),this.baseVersionsUpdated$.next(),[3,4];case 3:return(a=o.sent())&&this.alertService.addServerFailure(a),[3,4];case 4:return[2]}}))}))},e.prototype.deletePatchVersion=function(e){return w(this,void 0,void 0,(function(){var t,i,r,a;return S(this,(function(o){switch(o.label){case 0:return o.trys.push([0,3,,4]),t=n.gettext("Delete firmware patch"),i="\n        "+this.translateService.instant(n.gettext("You are about to delete firmware patch {{ version }}."),{version:e.c8y_Firmware.version})+"\n        "+this.translateService.instant(n.gettext("This operation is irreversible."))+"\n        "+this.translateService.instant(n.gettext("Do you want to proceed?"))+"\n      ",r={ok:n.gettext("Delete")},[4,this.modalService.confirm(t,i,n.Status.DANGER,r)];case 1:return o.sent(),[4,this.repositoryService.delete(e)];case 2:return o.sent(),this.alertService.success(n.gettext("Firmware patch deleted.")),this.patchVersionsUpdated$.next(),[3,4];case 3:return(a=o.sent())&&this.alertService.addServerFailure(a),[3,4];case 4:return[2]}}))}))},e.prototype.ngOnDestroy=function(){this.destroy$.next(!0),this.destroy$.unsubscribe()},e.ctorParameters=function(){return[{type:p.ActivatedRoute},{type:l.InventoryService},{type:$},{type:n.AlertService},{type:u.TranslateService},{type:n.ModalService},{type:y.BsModalService}]},b([n.memoize(c.property("id"))],e.prototype,"getPatchVersionsCount$",null),b([n.memoize()],e.prototype,"getBinaryName$",null),b([n.memoize(c.property("id"))],e.prototype,"getPatchVersions$",null),e=b([t.Component({selector:"c8y-firmware-details",template:'<c8y-title>\n  {{ (firmware$ | async)?.name }}\n</c8y-title>\n\n<c8y-breadcrumb>\n  <c8y-breadcrumb-item\n    path="#/firmware"\n    label="{{ \'Firmware repository\' | translate }}"\n    icon="c8y-firmware"\n  >\n  </c8y-breadcrumb-item>\n</c8y-breadcrumb>\n\n<c8y-action-bar-item [placement]="\'right\'">\n  <button\n    *ngIf="!(isLegacy$ | async)"\n    class="btn btn-link"\n    title="{{ \'Add firmware\' | translate }}"\n    (click)="addBaseVersion()"\n  >\n    <i c8yIcon="plus-circle"></i>\n    {{ \'Add firmware\' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]="\'right\'">\n  <button\n    *ngIf="canAddPatchVersions$ | async"\n    class="btn btn-link"\n    title="{{ \'Add firmware patch\' | translate }}"\n    (click)="addPatchVersion()"\n  >\n    <i c8yIcon="plus-circle"></i>\n    {{ \'Add firmware patch\' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]="\'right\'">\n  <button class="btn btn-link" title="{{ \'Reload\' | translate }}" (click)="reload$.next()">\n    <i c8yIcon="refresh" [ngClass]="{ \'fa-spin\': reloading$ | async }"></i>\n    {{ \'Reload\' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<div class="card m-b-4">\n  <div class="card-header separator">\n    <h4 class="card-title" translate>\n      Name, description and device type filter\n    </h4>\n  </div>\n  <div class="card-block">\n    <div class="row">\n      <div class="col-md-4">\n        <c8y-form-group>\n          <label class="control-label">\n            {{ \'Name\' | translate }}\n          </label>\n          <div class="input-group input-group-editable">\n            <input\n              #nameInput\n              type="text"\n              class="form-control"\n              [ngModel]="(firmware$ | async)?.name"\n              #nameModel="ngModel"\n              placeholder="{{ \'e.g. My firmware\' | translate }}"\n              required\n            />\n            <span></span>\n            <div class="input-group-btn">\n              <button\n                class="btn btn-primary"\n                title="{{ \'Save\' | translate }}"\n                (click)="updateFirmware$.next({ name: nameInput.value }); nameModel.reset()"\n                [disabled]="nameInput.value.length == 0"\n              >\n                {{ \'Save\' | translate }}\n              </button>\n            </div>\n          </div>\n        </c8y-form-group>\n      </div>\n      <div class="col-md-4">\n        <c8y-form-group>\n          <label class="control-label">\n            {{ \'Description\' | translate }}\n          </label>\n          <div class="input-group input-group-editable">\n            <input\n              #descriptionInput\n              type="text"\n              class="form-control"\n              [ngModel]="(firmware$ | async)?.description"\n              #descriptionModel="ngModel"\n              placeholder="{{ \'e.g. Firmware for hardware revision b\' | translate }}"\n            />\n            <span></span>\n            <div class="input-group-btn">\n              <button\n                class="btn btn-primary"\n                title="{{ \'Save\' | translate }}"\n                (click)="\n                  updateFirmware$.next({ description: descriptionInput.value });\n                  descriptionModel.reset()\n                "\n              >\n                {{ \'Save\' | translate }}\n              </button>\n            </div>\n          </div>\n        </c8y-form-group>\n      </div>\n      <div class="col-md-4">\n        <c8y-form-group>\n          <label class="control-label">\n            {{ \'Device type filter\' | translate }}\n\n            <a\n              class="pointer"\n              popover="{{\n                \'If the filter is set, the firmware will show up for installation only for devices of that type. If no filter is set, it will be available for all devices.\'\n                  | translate\n              }}"\n              [outsideClick]="true"\n              container="body"\n            >\n              <i c8yIcon="question-circle-o"></i>\n            </a>\n          </label>\n          <div class="input-group input-group-editable">\n            <input\n              #deviceTypeInput\n              type="text"\n              class="form-control"\n              [ngModel]="(firmware$ | async)?.c8y_Filter?.type"\n              #deviceTypeModel="ngModel"\n              placeholder="{{ \'e.g.\' | translate }} c8y_Linux"\n            />\n            <span></span>\n            <div class="input-group-btn">\n              <button\n                class="btn btn-primary"\n                title="{{ \'Save\' | translate }}"\n                (click)="\n                  updateFirmware$.next({ c8y_Filter: { type: deviceTypeInput.value } });\n                  deviceTypeModel.reset()\n                "\n              >\n                {{ \'Save\' | translate }}\n              </button>\n            </div>\n          </div>\n        </c8y-form-group>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class="card">\n  <div class="card-header separator">\n    <h4 class="card-title" translate>\n      Versions and patches\n    </h4>\n  </div>\n\n  <div class="card-block p-t-0">\n    <div *ngIf="(baseVersions$ | async)?.data.length === 0">\n      <div class="c8y-empty-state text-center">\n        <h1 c8yIcon="c8y-firmware" class="c8y-icon-duocolor"></h1>\n        <h3 translate>No versions to display.</h3>\n        <p translate>Add a new version by clicking below.</p>\n        <p>\n          <button\n            class="btn btn-primary"\n            title="{{ \'Add firmware\' | translate }}"\n            (click)="addBaseVersion()"\n            translate\n          >\n            Add firmware\n          </button>\n        </p>\n      </div>\n    </div>\n\n    <c8y-list-group class="m-b-16" *ngIf="(baseVersions$ | async)?.data.length > 0">\n      <c8y-li\n        *c8yFor="let baseVersion of baseVersions$ | async; let i = index; loadMore: \'auto\'"\n        [ngClass]="{\n          \'c8y-list__item--empty-actions\': !(getPatchVersions$(baseVersion) | async)?.data.length\n        }"\n        [collapsed]="!expanded[baseVersion.id]"\n        (collapsedChange)="expanded[baseVersion.id] = !$event"\n      >\n        <c8y-li-icon>\n          <i c8yIcon="c8y-firmware"></i>\n        </c8y-li-icon>\n\n        <c8y-li-body class="content-flex-50">\n          <div class="col-4">\n            <p>{{ baseVersion.c8y_Firmware.version }}</p>\n          </div>\n          <div class="col-5 ">\n            <p class="text-truncate">\n              <span class="text-label-small m-r-8" translate>\n                File\n              </span>\n              <span title=" {{ getBinaryName$(baseVersion.c8y_Firmware.url) | async }}">\n                <a href="{{baseVersion.c8y_Firmware.url}}" target="_blank" rel="noopener noreferrer">{{ getBinaryName$(baseVersion.c8y_Firmware.url) | async }}</a>\n              </span>\n            </p>\n          </div>\n          <div class="col-2 flex-row">\n            <span *ngIf="isLegacy$ | async" class="label label-warning flex-item-right-sm">\n              {{ \'Legacy\' | translate }}\n            </span>\n\n            <span *ngIf="!(isLegacy$ | async)">\n              <span *ngIf="(getPatchVersionsCount$(baseVersion) | async) === null">\n                <span class="label label-info">\n                  <i c8yIcon="circle-o-notch" class="fa-spin"></i>\n                </span>\n              </span>\n              <span *ngIf="(getPatchVersionsCount$(baseVersion) | async) !== null">\n                <span [ngPlural]="getPatchVersionsCount$(baseVersion) | async">\n                  <ng-template ngPluralCase="=0">\n                    <span class="label label-default flex-item-right-sm">\n                      <span translate>No patches</span></span\n                    >\n                  </ng-template>\n                  <ng-template ngPluralCase="=1">\n                    <span class="label label-info">\n                      <span translate>1 patch</span>\n                    </span>\n                  </ng-template>\n                  <ng-template ngPluralCase="other">\n                    <span class="label label-info">\n                      <span\n                        ngNonBindable\n                        translate\n                        [translateParams]="{ count: getPatchVersionsCount$(baseVersion) | async }"\n                        >{{ count }} patches</span\n                      ></span\n                    >\n                  </ng-template>\n                </span>\n              </span>\n            </span>\n            <div class="v-fit-20" *ngIf="!(isLegacy$ | async)">\n              <button\n                class="btn btn-danger btn-xs visible-xs flex-item-right m-r-8 m-t-8"\n                (click)="deleteBaseVersion(baseVersion)"\n                title="{{ \'Delete\' | translate }}"\n              >\n                <i c8yIcon="minus-circle"></i> {{ \'Delete\' | translate }}\n              </button>\n            </div>\n          </div>\n          <div *ngIf="!(isLegacy$ | async)" class="flex-item-right v-fit-20 p-r-8 hidden-xs">\n            <button\n              class="btn btn-dot text-danger showOnHover"\n              (click)="deleteBaseVersion(baseVersion)"\n              title="{{ \'Delete\' | translate }}"\n            >\n              <i c8yIcon="minus-circle"></i>\n            </button>\n          </div>\n        </c8y-li-body>\n        <c8y-li-collapse\n          *ngIf="(getPatchVersions$(baseVersion) | async)?.data.length"\n          [item]="baseVersion"\n        >\n          <c8y-list-group>\n            <c8y-li\n              *c8yFor="\n                let patchVersion of getPatchVersions$(baseVersion) | async;\n                let i = index;\n                loadMore: \'auto\'\n              "\n            >\n              <c8y-li-icon>\n                <i c8yIcon="c8y-firmware"></i>\n              </c8y-li-icon>\n              <c8y-li-body class="content-flex-50">\n                <div class="col-5">\n                  {{ patchVersion.c8y_Firmware.version }}\n                </div>\n                <div class="col-5 text-truncate">\n                  <span class="text-label-small m-r-8" translate>\n                    File\n                  </span>\n                  <span title="{{ getBinaryName$(patchVersion.c8y_Firmware.url) | async }}">\n                    {{ getBinaryName$(patchVersion.c8y_Firmware.url) | async }}\n                  </span>\n\n                  <button\n                    class="btn btn-danger btn-xs visible-xs flex-item-right m-r-8"\n                    (click)="deletePatchVersion(patchVersion)"\n                    title="{{ \'Delete\' | translate }}"\n                  >\n                    <i c8yIcon="minus-circle"></i> {{ \'Delete\' | translate }}\n                  </button>\n                </div>\n                <div class="flex-item-right p-r-8 hidden-xs">\n                  <button\n                    class="btn btn-dot text-danger showOnHover"\n                    (click)="deletePatchVersion(patchVersion)"\n                    title="{{ \'Delete\' | translate }}"\n                  >\n                    <i c8yIcon="minus-circle"></i>\n                  </button>\n                </div>\n              </c8y-li-body>\n            </c8y-li>\n          </c8y-list-group>\n        </c8y-li-collapse>\n      </c8y-li>\n    </c8y-list-group>\n  </div>\n</div>\n'})],e)}(),A=function(){function i(e,n,i){this.modal=e,this.repositoryService=n,this.alert=i,this.saved=new t.EventEmitter,this.onInput=new o.BehaviorSubject(""),this.model={selected:void 0,version:void 0,description:void 0,binary:{file:void 0,url:void 0}},this.saving=!1,this.softwarePreselected=!1}return i.prototype.ngOnInit=function(){this.setInitialState(),this.loadSoftwares()},i.prototype.setInitialState=function(){this.model.selected&&(this.softwarePreselected=!0)},i.prototype.loadSoftwares=function(){var e=this;this.inputSubscription$=this.onInput.pipe(s.tap((function(){e.softwarePreselected||(e.model.description=null,e.form&&e.form.form.get("description").reset())})),s.debounceTime(300),s.distinctUntilChanged(),s.switchMap((function(t){return e.getSoftwareResult(t)}))).subscribe((function(t){e.softwaresResult=t}))},i.prototype.getSoftwareResult=function(t){return o.from(this.repositoryService.listRepositoryEntries(e.RepositoryType.SOFTWARE,{partialName:t,skipLegacy:!0}))},i.prototype.save=function(){return w(this,void 0,void 0,(function(){var t=this;return S(this,(function(n){return this.saving=!0,this.repositoryService.create(this.model,e.RepositoryType.SOFTWARE).then((function(e){t.successMsg(),t.saving=!1,t.saved.next(e),t.cancel()})).catch((function(e){t.saving=!1,t.saved.error(e),t.cancel()})),[2]}))}))},i.prototype.successMsg=function(){var e=n.gettext("Software added, optionally set device type filter.");this.alert.success(e)},i.prototype.cancel=function(){this.modal.hide(),this.saved.complete()},i.prototype.ngOnDestroy=function(){this.inputSubscription$.unsubscribe()},i.prototype.onFile=function(e){c.isUndefined(e.url)?c.isUndefined(e.droppedFiles)?this.model.binary={file:void 0,url:void 0}:this.model.binary={file:e.droppedFiles[0].file}:this.model.binary={url:e.url}},i.ctorParameters=function(){return[{type:d.BsModalRef},{type:$},{type:n.AlertService}]},b([t.ViewChild("softwareForm",{static:!1})],i.prototype,"form",void 0),b([t.Output()],i.prototype,"saved",void 0),i=b([t.Component({selector:"c8y-add-software-software-modal",template:'<div class="viewport-modal">\n  <div class="modal-header dialog-header">\n    <i [c8yIcon]="\'c8y-tools\'"></i>\n    <h4 translate>\n      Add software\n    </h4>\n  </div>\n  <div class="p-16 text-center separator-bottom" *ngIf="!softwarePreselected">\n    <p class="lead m-0" translate>\n      Select or create new software\n    </p>\n  </div>\n  <form\n    class="d-contents"\n    autocomplete="off"\n    #softwareForm="ngForm"\n    (ngSubmit)="softwareForm.form.valid && save()"\n  >\n    <div class="modal-inner-scroll">\n      <div class="modal-body">\n        <div [hidden]="softwarePreselected">\n          <c8y-form-group>\n            <label for="softwareName" translate>Software</label>\n            <c8y-typeahead\n              [(ngModel)]="model.selected"\n              name="softwareName"\n              placeholder="{{ \'Select or enter\' | translate }}"\n              (onSearch)="onInput.next($event)"\n              [required]="true"\n            >\n              <c8y-li\n                *c8yFor="\n                  let software of softwaresResult;\n                  loadMore: \'auto\';\n                  notFound: notFoundTemplate\n                "\n                class="p-l-8 p-r-8 c8y-list__item--link"\n                (click)="model.selected = software; model.description = software.description"\n                [active]="model.selected === software"\n              >\n                <c8y-highlight\n                  [text]="software.name || \'--\'"\n                  [pattern]="onInput | async"\n                ></c8y-highlight>\n              </c8y-li>\n              <ng-template #notFoundTemplate>\n                <c8y-li class="bg-gray-lighter p-8" *ngIf="(onInput | async)?.length > 0">\n                  <span translate>No match found, add new`software`? </span>\n                  <button\n                    title="{{ \'Create new`software`\' | translate }}"\n                    type="button"\n                    class="btn btn-primary btn-xs m-l-16"\n                    translate\n                  >\n                    Create new`software`\n                  </button>\n                </c8y-li>\n              </ng-template>\n            </c8y-typeahead>\n          </c8y-form-group>\n\n          <c8y-form-group>\n            <label for="softwareDescription" translate>Description</label>\n            <input\n              id="softwareDescription"\n              class="form-control"\n              autocomplete="off"\n              name="description"\n              [(ngModel)]="model.description"\n              placeholder="{{ \'e.g. Cloud connectivity software\' | translate }}"\n              [disabled]="model.selected?.id"\n              [required]="true"\n            />\n          </c8y-form-group>\n        </div>\n\n        <c8y-form-group>\n          <label for="softwareVersion" translate>Version</label>\n          <input\n            id="softwareVersion"\n            class="form-control"\n            autocomplete="off"\n            name="version"\n            [(ngModel)]="model.version"\n            placeholder="{{ \'e.g.\' | translate }} 1.0.0"\n            [required]="true"\n          />\n        </c8y-form-group>\n\n        <c8y-form-group>\n          <div class="legend form-block top-m-xxl" translate>Software file</div>\n          <c8y-file-picker [maxAllowedFiles]="1" (onFilesPicked)="onFile($event)">\n          </c8y-file-picker>\n        </c8y-form-group>\n      </div>\n    </div>\n    <div class="modal-footer">\n      <button\n        title="{{ \'Cancel\' | translate }}"\n        class="btn btn-default"\n        type="button"\n        (click)="cancel()"\n        [disabled]="saving"\n        translate\n      >\n        Cancel\n      </button>\n\n      <button\n        title="{{ \'Add software\' | translate }}"\n        class="btn btn-primary"\n        type="submit"\n        [ngClass]="{ \'btn-pending\': saving }"\n        [disabled]="\n          !softwareForm.form.valid ||\n          softwareForm.form.pristine ||\n          saving ||\n          (!model.binary?.url && !model.binary?.file)\n        "\n        translate\n      >\n        Add software\n      </button>\n    </div>\n  </form>\n</div>\n'})],i)}(),M=function(){function i(e,t,i,r,a,c,l){var p=this;this.repositoryService=e,this.modalService=t,this.bsModalService=i,this.translateService=r,this.alertService=a,this.router=c,this.activatedRoute=l,this.textFilter$=new o.BehaviorSubject(""),this.reload$=new o.BehaviorSubject(null),this.reloading=!1,this.softwares$=o.combineLatest(this.textFilter$.pipe(s.debounceTime(400),s.distinctUntilChanged()),this.reload$).pipe(s.tap((function(){p.reloading=!0})),s.switchMap((function(e){var t=I(e,1)[0];return p.getSoftwares(t)})),s.tap((function(){p.reloading=!1})),s.shareReplay(1)),this.isLegacy=this.repositoryService.isLegacyEntry.bind(this.repositoryService),this.DEVICE_TYPE_NOT_AVAILABLE=n.gettext("No device type available")}return i.prototype.getSoftwares=function(t){return this.repositoryService.listRepositoryEntries(e.RepositoryType.SOFTWARE,{partialName:t})},i.prototype.addSoftware=function(){var e=this;this.bsModalService.show(A,{class:"modal-sm",ignoreBackdropClick:!0}).content.saved.subscribe((function(t){return e.editSoftware(t)}))},i.prototype.editSoftware=function(e){this.router.navigate([e.id],{relativeTo:this.activatedRoute})},i.prototype.deleteSoftware=function(e){return w(this,void 0,void 0,(function(){var t,i,r,a;return S(this,(function(o){switch(o.label){case 0:return o.trys.push([0,3,,4]),t=n.gettext("Delete software"),i="\n        "+this.translateService.instant(n.gettext('You are about to delete software "{{ name }}" with all its versions.'),{name:e.name})+"\n        "+this.translateService.instant(n.gettext("This operation is irreversible."))+"\n        "+this.translateService.instant(n.gettext("Do you want to proceed?"))+"\n      ",r={ok:n.gettext("Delete")},[4,this.modalService.confirm(t,i,n.Status.DANGER,r)];case 1:return o.sent(),[4,this.repositoryService.delete(e)];case 2:return o.sent(),this.alertService.success(n.gettext("Software deleted.")),this.reload$.next(),[3,4];case 3:return(a=o.sent())&&this.alertService.addServerFailure(a),[3,4];case 4:return[2]}}))}))},i.prototype.getBaseVersionsCount$=function(e){var t=this;return this.softwares$.pipe(s.switchMap((function(){return t.repositoryService.getBaseVersionsCount$(e)})),s.shareReplay(1))},i.prototype.getDeviceTypeTitle=function(e){return c.get(e,"c8y_Filter.type",this.translateService.instant(this.DEVICE_TYPE_NOT_AVAILABLE))},i.ctorParameters=function(){return[{type:$},{type:n.ModalService},{type:d.BsModalService},{type:u.TranslateService},{type:n.AlertService},{type:p.Router},{type:p.ActivatedRoute}]},b([n.memoize(c.property("id"))],i.prototype,"getBaseVersionsCount$",null),i=b([t.Component({selector:"c8y-software-list",template:'<c8y-title>\n  {{ \'Software repository\' | translate }}\n</c8y-title>\n\n<c8y-action-bar-item [placement]="\'left\'" itemClass="navbar-form">\n  <div class="input-group input-group-search">\n    <input\n      type="search"\n      class="form-control"\n      title="{{ \'Filter software…\' | translate }}"\n      placeholder="{{ \'Filter software…\' | translate }}"\n      [ngModel]="textFilter$ | async"\n      (ngModelChange)="textFilter$.next($event)"\n    />\n    <span class="input-group-addon">\n      <i c8yIcon="filter" *ngIf="(textFilter$ | async).length === 0"></i>\n      <i\n        c8yIcon="times"\n        class="text-muted"\n        *ngIf="(textFilter$ | async).length > 0"\n        (click)="textFilter$.next(\'\')"\n      ></i>\n    </span>\n  </div>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]="\'right\'">\n  <button class="btn btn-link" title="{{ \'Add software\' | translate }}" (click)="addSoftware()">\n    <i c8yIcon="plus-circle"></i>\n    {{ \'Add software\' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]="\'right\'">\n  <button class="btn btn-link" title="{{ \'Reload\' | translate }}" (click)="reload$.next()">\n    <i c8yIcon="refresh" [ngClass]="{ \'fa-spin\': reloading }"></i>\n    {{ \'Reload\' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<div class="c8y-empty-state text-center" *ngIf="(softwares$ | async)?.data.length === 0">\n  <h1 c8yIcon="c8y-tools" class="c8y-icon-duocolor"></h1>\n  <h3 translate>No software to display.</h3>\n  <p translate>Add a new software by clicking below.</p>\n  <p>\n    <button\n      class="btn btn-primary"\n      title="{{ \'Add software\' | translate }}"\n      (click)="addSoftware()"\n      translate\n    >\n      Add software\n    </button>\n  </p>\n</div>\n\n<c8y-list-group class="elevation-1">\n  <c8y-li *c8yFor="let software of softwares$ | async; let i = index; loadMore: \'auto\'">\n    <c8y-li-icon>\n      <i c8yIcon="c8y-tools"></i>\n    </c8y-li-icon>\n\n    <c8y-li-body class="content-flex-50">\n      <div class="col-5 pointer" (click)="editSoftware(software)">\n        <div class="text-truncate" title="{{ software.name }}">\n          {{ software.name }}\n        </div>\n      </div>\n      <div class="col-5">\n        <div class="text-truncate" title="{{ \'Device type\' | translate }}: {{ getDeviceTypeTitle(software) }}">\n          <span class="text-label-small m-r-8" translate>\n            Device type\n          </span>\n          <span *ngIf="software.c8y_Filter?.type; else emptyText">\n            {{ software.c8y_Filter?.type }}\n          </span>\n          <ng-template #emptyText> --- </ng-template>\n        </div>\n      </div>\n      <div class="col-2">\n        <span *ngIf="isLegacy(software)" class="label label-warning flex-item-right-sm">\n          <span translate>Legacy</span>\n        </span>\n\n        <span *ngIf="!isLegacy(software)">\n          <span *ngIf="(getBaseVersionsCount$(software) | async) === null">\n            <span class="label label-info">\n              <i c8yIcon="circle-o-notch" class="fa-spin"></i>\n            </span>\n          </span>\n          <span *ngIf="(getBaseVersionsCount$(software) | async) !== null">\n            <span [ngPlural]="getBaseVersionsCount$(software) | async">\n              <ng-template ngPluralCase="=0">\n                <span class="label label-default flex-item-right-sm">\n                  <span translate>No versions</span>\n                </span>\n              </ng-template>\n              <ng-template ngPluralCase="=1">\n                <span class="label label-info"><span translate>1 version</span></span>\n              </ng-template>\n              <ng-template ngPluralCase="other">\n                <span class="label label-info">\n                  <span ngNonBindable translate [translateParams]="{ count: getBaseVersionsCount$(software) | async }">\n                    {{ count }} versions\n                  </span>\n                </span>\n              </ng-template>\n            </span>\n          </span>\n        </span>\n      </div>\n    </c8y-li-body>\n\n    <c8y-li-action (click)="editSoftware(software)" icon="pencil">\n      {{ \'Edit\' | translate }}\n    </c8y-li-action>\n\n    <c8y-li-action (click)="deleteSoftware(software)" icon="trash">\n      {{ \'Delete\' | translate }}\n    </c8y-li-action>\n  </c8y-li>\n</c8y-list-group>\n'})],i)}(),P=function(){function e(e,t,n,i,r,a,c){var l=this;this.activatedRoute=e,this.inventoryService=t,this.repositoryService=n,this.alertService=i,this.translateService=r,this.modalService=a,this.bsModalService=c,this.reload$=new o.Subject,this.reloading$=new o.BehaviorSubject(!1),this.updateSoftware$=new o.Subject,this.softwareUpdated$=new o.Subject,this.baseVersionsUpdated$=new o.Subject,this.software$=o.merge(this.activatedRoute.params.pipe(s.map((function(e){return e.id})),s.switchMap((function(e){return l.inventoryService.detail$(e)}))),this.reload$.pipe(s.tap((function(){return l.reloading$.next(!0)})),s.switchMap((function(){return l.activatedRoute.params})),s.map((function(e){return e.id})),s.switchMap((function(e){return l.inventoryService.detail$(e)})),s.tap((function(){return l.reloading$.next(!1)}))),this.softwareUpdated$).pipe(s.shareReplay(1)),this.baseVersions$=o.merge(this.software$.pipe(s.distinctUntilKeyChanged("id")),this.baseVersionsUpdated$,this.reload$).pipe(s.switchMap((function(){return l.software$})),s.switchMap((function(e){return l.repositoryService.listBaseVersions(e)})),s.shareReplay(1)),this.isLegacy$=this.software$.pipe(s.map((function(e){return l.repositoryService.isLegacyEntry(e)})),s.shareReplay(1)),this.destroy$=new o.Subject}return e.prototype.ngOnInit=function(){var e=this;this.updateSoftware$.pipe(s.withLatestFrom(this.software$),s.switchMap((function(t){var n=I(t,2),i=n[0],r=n[1];return e.inventoryService.update(m({id:r.id},i))})),s.map((function(e){return e.data})),s.tap((function(t){return e.softwareUpdated$.next(t)})),s.tap((function(){return e.alertService.success(n.gettext("Saved."))})),s.takeUntil(this.destroy$)).subscribe()},e.prototype.getBinaryName$=function(e){return this.repositoryService.getBinaryName$(e)},e.prototype.addBaseVersion=function(){var e=this;this.software$.pipe(s.take(1),s.switchMap((function(t){var n={class:"modal-sm",ignoreBackdropClick:!0,initialState:{model:{selected:t,description:t.description}}};return e.bsModalService.show(A,n).content.saved}))).subscribe((function(){return e.baseVersionsUpdated$.next()}))},e.prototype.deleteBaseVersion=function(e){return w(this,void 0,void 0,(function(){var t,i,r,a;return S(this,(function(o){switch(o.label){case 0:return o.trys.push([0,3,,4]),t=n.gettext("Delete software"),i="\n        "+this.translateService.instant(n.gettext("You are about to delete software {{ version }}."),{version:e.c8y_Software.version})+"\n        "+this.translateService.instant(n.gettext("This operation is irreversible."))+"\n        "+this.translateService.instant(n.gettext("Do you want to proceed?"))+"\n      ",r={ok:n.gettext("Delete")},[4,this.modalService.confirm(t,i,n.Status.DANGER,r)];case 1:return o.sent(),[4,this.repositoryService.delete(e)];case 2:return o.sent(),this.alertService.success(n.gettext("Software deleted.")),this.baseVersionsUpdated$.next(),[3,4];case 3:return(a=o.sent())&&this.alertService.addServerFailure(a),[3,4];case 4:return[2]}}))}))},e.prototype.ngOnDestroy=function(){this.destroy$.next(!0),this.destroy$.unsubscribe()},e.ctorParameters=function(){return[{type:p.ActivatedRoute},{type:l.InventoryService},{type:$},{type:n.AlertService},{type:u.TranslateService},{type:n.ModalService},{type:y.BsModalService}]},b([n.memoize()],e.prototype,"getBinaryName$",null),e=b([t.Component({selector:"c8y-software-details",template:'<c8y-title>\n  {{ (software$ | async)?.name }}\n</c8y-title>\n\n<c8y-breadcrumb>\n  <c8y-breadcrumb-item\n    path="#/software"\n    label="{{ \'Software repository\' | translate }}"\n    icon="c8y-tools"\n  >\n  </c8y-breadcrumb-item>\n</c8y-breadcrumb>\n\n<c8y-action-bar-item [placement]="\'right\'">\n  <button\n    *ngIf="!(isLegacy$ | async)"\n    class="btn btn-link"\n    title="{{ \'Add software\' | translate }}"\n    (click)="addBaseVersion()"\n  >\n    <i c8yIcon="plus-circle"></i>\n    {{ \'Add software\' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]="\'right\'">\n  <button class="btn btn-link" title="{{ \'Reload\' | translate }}" (click)="reload$.next()">\n    <i c8yIcon="refresh" [ngClass]="{ \'fa-spin\': reloading$ | async }"></i>\n    {{ \'Reload\' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<div class="card m-b-4">\n  <div class="card-header separator">\n    <h4 class="card-title" translate>\n      Name, description and device type filter\n    </h4>\n  </div>\n  <div class="card-block">\n    <div class="row">\n      <div class="col-md-4">\n        <c8y-form-group>\n          <label class="control-label">\n            {{ \'Name\' | translate }}\n          </label>\n          <div class="input-group input-group-editable">\n            <input\n              #nameInput\n              type="text"\n              class="form-control"\n              [ngModel]="(software$ | async)?.name"\n              #nameModel="ngModel"\n              placeholder="{{ \'e.g. My software\' | translate }}"\n              required\n            />\n            <span></span>\n            <div class="input-group-btn">\n              <button\n                class="btn btn-primary"\n                title="{{ \'Save\' | translate }}"\n                (click)="updateSoftware$.next({ name: nameInput.value }); nameModel.reset()"\n                [disabled]="nameInput.value.length == 0"\n              >\n                {{ \'Save\' | translate }}\n              </button>\n            </div>\n          </div>\n        </c8y-form-group>\n      </div>\n      <div class="col-md-4">\n        <c8y-form-group>\n          <label class="control-label">\n            {{ \'Description\' | translate }}\n          </label>\n          <div class="input-group input-group-editable">\n            <input\n              #descriptionInput\n              type="text"\n              class="form-control"\n              [ngModel]="(software$ | async)?.description"\n              #descriptionModel="ngModel"\n              placeholder="{{ \'e.g. Cloud connectivity software\' | translate }}"\n            />\n            <span></span>\n            <div class="input-group-btn">\n              <button\n                class="btn btn-primary"\n                title="{{ \'Save\' | translate }}"\n                (click)="\n                  updateSoftware$.next({ description: descriptionInput.value });\n                  descriptionModel.reset()\n                "\n              >\n                {{ \'Save\' | translate }}\n              </button>\n            </div>\n          </div>\n        </c8y-form-group>\n      </div>\n      <div class="col-md-4">\n        <c8y-form-group>\n          <label class="control-label">\n            {{ \'Device type filter\' | translate }}\n\n            <a\n              class="pointer"\n              popover="{{\n                \'If the filter is set, the software will show up for installation only for devices of that type. If no filter is set, it will be available for all devices.\'\n                  | translate\n              }}"\n              [outsideClick]="true"\n              container="body"\n            >\n              <i c8yIcon="question-circle-o"></i>\n            </a>\n          </label>\n          <div class="input-group input-group-editable">\n            <input\n              #deviceTypeInput\n              type="text"\n              class="form-control"\n              [ngModel]="(software$ | async)?.c8y_Filter?.type"\n              #deviceTypeModel="ngModel"\n              placeholder="{{ \'e.g.\' | translate }} c8y_Linux"\n            />\n            <span></span>\n            <div class="input-group-btn">\n              <button\n                class="btn btn-primary"\n                title="{{ \'Save\' | translate }}"\n                (click)="\n                  updateSoftware$.next({ c8y_Filter: { type: deviceTypeInput.value } });\n                  deviceTypeModel.reset()\n                "\n              >\n                {{ \'Save\' | translate }}\n              </button>\n            </div>\n          </div>\n        </c8y-form-group>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class="card">\n  <div class="card-header separator">\n    <h4 class="card-title" translate>\n      Versions\n    </h4>\n  </div>\n\n  <div class="card-block p-t-0">\n    <div *ngIf="(baseVersions$ | async)?.data.length === 0">\n      <div class="c8y-empty-state text-center">\n        <h1 c8yIcon="c8y-tools" class="c8y-icon-duocolor"></h1>\n        <h3 translate>No versions to display.</h3>\n        <p translate>Add a new version by clicking below.</p>\n        <p>\n          <button\n            class="btn btn-primary"\n            title="{{ \'Add software\' | translate }}"\n            (click)="addBaseVersion()"\n            translate\n          >\n            Add software\n          </button>\n        </p>\n      </div>\n    </div>\n\n    <c8y-list-group class="m-b-16" *ngIf="(baseVersions$ | async)?.data.length > 0">\n      <c8y-li *c8yFor="let baseVersion of baseVersions$ | async; let i = index; loadMore: \'auto\'">\n        <c8y-li-icon>\n          <i c8yIcon="c8y-tools"></i>\n        </c8y-li-icon>\n\n        <c8y-li-body class="content-flex-50">\n          <div class="col-4">\n            <p>{{ baseVersion.c8y_Software.version }}</p>\n          </div>\n          <div class="col-5 ">\n            <p class="text-truncate">\n              <span class="text-label-small m-r-8" translate>\n                File\n              </span>\n              <span title=" {{ getBinaryName$(baseVersion.c8y_Software.url) | async }}">\n                <a href="{{baseVersion.c8y_Software.url}}" target="_blank" rel="noopener noreferrer">{{ getBinaryName$(baseVersion.c8y_Software.url) | async }}</a>\n              </span>\n            </p>\n          </div>\n          <div class="col-2 flex-row">\n            <span *ngIf="isLegacy$ | async" class="label label-warning flex-item-right-sm">\n              {{ \'Legacy\' | translate }}\n            </span>\n\n            <div class="v-fit-20" *ngIf="!(isLegacy$ | async)">\n              <button\n                class="btn btn-danger btn-xs visible-xs flex-item-right m-r-8 m-t-8"\n                (click)="deleteBaseVersion(baseVersion)"\n                title="{{ \'Delete\' | translate }}"\n              >\n                <i c8yIcon="minus-circle"></i> {{ \'Delete\' | translate }}\n              </button>\n            </div>\n          </div>\n          <div *ngIf="!(isLegacy$ | async)" class="flex-item-right v-fit-20 p-r-8 hidden-xs">\n            <button\n              class="btn btn-dot text-danger showOnHover"\n              (click)="deleteBaseVersion(baseVersion)"\n              title="{{ \'Delete\' | translate }}"\n            >\n              <i c8yIcon="minus-circle"></i>\n            </button>\n          </div>\n        </c8y-li-body>\n      </c8y-li>\n    </c8y-list-group>\n  </div>\n</div>\n'})],e)}(),k=function(){function i(e,t,n){var i=this;this.repositoryService=e,this.bsModalRef=t,this.alert=n,this.binary={file:void 0,url:void 0},this.pattern="",this.mo={},this.saving=!1,this.uploadChoice="uploadBinary",this.result=new Promise((function(e,t){i._save=e,i._cancel=t}))}return i.prototype.ngOnInit=function(){return w(this,void 0,void 0,(function(){var t;return S(this,(function(i){switch(i.label){case 0:return t=this,[4,this.repositoryService.listRepositoryEntries(e.RepositoryType.CONFIGURATION)];case 1:return t.configs=i.sent(),this.selected&&(this.uploadChoice=this.binary.file?"uploadBinary":"uploadUrl",this.existingBinary=this.binary.file),this.setPipe(""),this.submitButtonTitle=this.mo.id?n.gettext("Update configuration"):n.gettext("Add configuration"),[2]}}))}))},i.prototype.cancel=function(){this.bsModalRef.hide(),this._cancel()},i.prototype.setPipe=function(e){this.pattern=e,this.filterPipe=o.pipe(s.map((function(e){return c.uniqBy(e,"configurationType")})),s.map((function(t){return t.filter((function(t){return t.configurationType&&t.configurationType.toLowerCase().indexOf(e.toLowerCase())>-1}))})))},i.prototype.onFile=function(e){this.configurationForm.form.markAsDirty(),c.isUndefined(e.url)?c.isUndefined(e.droppedFiles)?this.binary={file:void 0,url:void 0}:this.binary={file:e.droppedFiles[0].file}:this.binary={url:e.url}},i.prototype.save=function(){return w(this,void 0,void 0,(function(){var t,i,r,a,o,s,c;return S(this,(function(l){switch(l.label){case 0:return l.trys.push([0,2,3,4]),this.saving=!0,i=(t=this).selected,r=t.version,a=t.description,o=t.binary,s=t.deviceType,this.existingBinary===this.binary.file&&(o.file=void 0),[4,this.repositoryService.save({selected:i,version:r,description:a,binary:o,deviceType:s},e.RepositoryType.CONFIGURATION,this.mo)];case 1:return l.sent(),this.alert.success(this.mo.id?n.gettext("Configuration updated."):n.gettext("Configuration created.")),this.bsModalRef.hide(),this._save(),[3,4];case 2:return c=l.sent(),this.alert.addServerFailure(c),this._cancel(),[3,4];case 3:return this.saving=!1,[7];case 4:return[2]}}))}))},i.ctorParameters=function(){return[{type:$},{type:d.BsModalRef},{type:n.AlertService}]},b([t.ViewChild("configurationForm",{static:!0})],i.prototype,"configurationForm",void 0),i=b([t.Component({selector:"c8y-configuration-detail",template:'<div class="modal-header bg-primary text-white text-center">\n  <h1 c8yIcon="cogs" style="font-size: 55px;"></h1>\n  <h4 class="p-t-16 text-uppercase" translate *ngIf="mo.id">Update configuration</h4>\n  <h4 class="p-t-16 text-uppercase" translate *ngIf="!mo.id">Add configuration</h4>\n</div>\n\n<form #configurationForm="ngForm" (ngSubmit)="configurationForm.form.valid && save()">\n  <div class="modal-body">\n    <c8y-form-group>\n      <label translate>Name</label>\n      <input\n        type="text"\n        class="form-control"\n        placeholder="{{ \'e.g.\' | translate }} hosts"\n        autocomplete="off"\n        required\n        maxlength="254"\n        [(ngModel)]="version"\n        name="version"\n      />\n    </c8y-form-group>\n\n    <c8y-form-group>\n      <label translate>Device type</label>\n      <input\n        type="text"\n        class="form-control"\n        placeholder="{{ \'e.g.\' | translate }} c8y_Linux"\n        maxlength="254"\n        autocomplete="off"\n        [(ngModel)]="deviceType"\n        name="deviceType"\n      />\n    </c8y-form-group>\n\n    <c8y-form-group>\n      <label translate>Description</label>\n      <input\n        type="text"\n        class="form-control"\n        placeholder="{{ \'e.g. Host configuration\' | translate }} c8y_Linux"\n        maxlength="254"\n        autocomplete="off"\n        [(ngModel)]="description"\n        name="description"\n      />\n    </c8y-form-group>\n\n    <c8y-form-group>\n      <label translate>Configuration type</label>\n      <c8y-typeahead\n        [(ngModel)]="selected"\n        name="confType"\n        placeholder="{{ \'e.g.\' | translate }} ssh"\n        (onSearch)="setPipe($event)"\n        displayProperty="configurationType"\n      >\n        <c8y-li\n          *c8yFor="let config of configs; pipe: filterPipe; notFound: notFoundTemplate"\n          class="p-l-8 p-r-8 c8y-list__item--link"\n          (click)="selected = config; setPipe(\'\')"\n          [active]="selected === config"\n        >\n          <c8y-highlight\n            [text]="config.configurationType || \'--\'"\n            [pattern]="pattern"\n          ></c8y-highlight>\n        </c8y-li>\n        <ng-template #notFoundTemplate>\n          <c8y-li class="bg-gray-lighter p-8" *ngIf="pattern.length > 0">\n            <span translate>No match found, add new`configuration`?</span>\n            <button title="Create new`configuration`" type="button" class="btn btn-primary btn-xs m-l-16" translate>\n              Create new`configuration`\n            </button>\n          </c8y-li>\n        </ng-template>\n      </c8y-typeahead>\n    </c8y-form-group>\n\n    <c8y-form-group>\n      <div class="legend form-block top-m-xxl" translate>Configuration file</div>\n      <c8y-file-picker\n        [maxAllowedFiles]="1"\n        (onFilesPicked)="onFile($event)"\n        [uploadChoice]="uploadChoice"\n        [fileUrl]="binary.url"\n        [fileBinary]="binary.file"\n      >\n      </c8y-file-picker>\n    </c8y-form-group>\n  </div>\n\n  <div class="modal-footer">\n    <button\n      (click)="cancel()"\n      type="button"\n      class="btn btn-default"\n      title="{{ \'Cancel\' | translate }}"\n      [disabled]="saving"\n    >\n      <span translate>Cancel</span>\n    </button>\n    <button\n      class="btn btn-primary"\n      type="submit"\n      title="{{ submitButtonTitle | translate }}"\n      [ngClass]="{ \'btn-pending\': saving }"\n      [disabled]="\n        !configurationForm.valid ||\n        configurationForm.pristine ||\n        (!binary?.url && !binary?.file) ||\n        saving\n      "\n    >\n      {{ submitButtonTitle | translate }}\n    </button>\n  </div>\n</form>\n'})],i)}(),B=function(){function i(e,t,i,r,a,o,s){this.alert=e,this.repositoryService=t,this.bsModalService=i,this.modalService=r,this.translateService=a,this.inventoryBinaryService=o,this.inventoryService=s,this.filterTerm="",this.reloading=!1,this.DELETED_SUCCESS_MSG=n.gettext("Configuration deleted.")}return i.prototype.ngOnInit=function(){this.loadConfigurations()},i.prototype.loadConfigurations=function(){return w(this,void 0,void 0,(function(){var t,n;return S(this,(function(i){switch(i.label){case 0:return this.reloading=!0,t=this,n=o.of,[4,this.repositoryService.listRepositoryEntries(e.RepositoryType.CONFIGURATION)];case 1:return t.configurations$=n.apply(void 0,[i.sent()]),this.reloading=!1,this.reset(),[2]}}))}))},i.prototype.add=function(){return w(this,void 0,void 0,(function(){return S(this,(function(e){switch(e.label){case 0:return e.trys.push([0,3,,4]),[4,this.bsModalService.show(k,{class:"modal-sm",ignoreBackdropClick:!0}).content.result];case 1:return e.sent(),[4,this.loadConfigurations()];case 2:return e.sent(),[3,4];case 3:return e.sent(),[3,4];case 4:return[2]}}))}))},i.prototype.edit=function(e){return w(this,void 0,void 0,(function(){var t,n;return S(this,(function(i){switch(i.label){case 0:return[4,this.repositoryService.getBinaryFile(e.url,{allowExternal:!1})];case 1:t=i.sent(),i.label=2;case 2:return i.trys.push([2,5,,6]),(n=this.bsModalService.show(k,{class:"modal-sm",ignoreBackdropClick:!0,initialState:{selected:{id:e.id,configurationType:e.configurationType},version:e.name,deviceType:e.deviceType,description:e.description,binary:{file:t,url:e.url}}}).content).mo=e,[4,n.result];case 3:return i.sent(),[4,this.loadConfigurations()];case 4:return i.sent(),[3,6];case 5:return i.sent(),[3,6];case 6:return[2]}}))}))},i.prototype.isBinaryFile=function(e){return!!this.inventoryBinaryService.getIdFromUrl(e.url)},i.prototype.getBinaryName=function(e){return this.repositoryService.getBinaryName$(e.url)},i.prototype.download=function(e){return w(this,void 0,void 0,(function(){var t;return S(this,(function(n){switch(n.label){case 0:return[4,this.repositoryService.getBinaryFile(e.url,{allowExternal:!1})];case 1:return t=n.sent(),f.saveAs(t),[2]}}))}))},i.prototype.delete=function(e){return w(this,void 0,void 0,(function(){var t,i,r,a,o,s,c;return S(this,(function(l){switch(l.label){case 0:return l.trys.push([0,4,,5]),t=n.gettext("Delete configuration snapshot"),i=n.gettext("You are about to delete the configuration snapshot {{ name }}."),r=n.gettext("This operation is irreversible."),a=n.gettext("Do you want to proceed?"),o=[this.translateService.instant(i,{name:e.name}),this.translateService.instant(r),this.translateService.instant(a)].join(" "),s={ok:n.gettext("Delete")},[4,this.modalService.confirm(t,o,n.Status.DANGER,s)];case 1:return l.sent(),[4,this.repositoryService.delete(e)];case 2:return l.sent(),this.alert.success(this.DELETED_SUCCESS_MSG),[4,this.loadConfigurations()];case 3:return l.sent(),[3,5];case 4:return(c=l.sent())&&this.alert.addServerFailure(c),[3,5];case 5:return[2]}}))}))},i.prototype.setPipe=function(e){var t=this;this.filterTerm=e,this.filterPipe=o.pipe(s.map((function(n){return 0===e.trim().length?n:n.filter((function(n){return t.filterContainString(n.name,e)||t.filterContainString(n.configurationType,e)||t.filterContainString(n.deviceType,e)}))})))},i.prototype.reset=function(){this.filter.filterTerm="",this.setPipe("")},i.prototype.filterContainString=function(e,t){var n=t.toLowerCase().trim();return e&&e.toLowerCase().indexOf(n)>-1},i.ctorParameters=function(){return[{type:n.AlertService},{type:$},{type:d.BsModalService},{type:n.ModalService},{type:u.TranslateService},{type:l.InventoryBinaryService},{type:l.InventoryService}]},b([t.ViewChild(n.FilterInputComponent,{static:!1})],i.prototype,"filter",void 0),b([n.memoize(c.property("id"))],i.prototype,"getBinaryName",null),i=b([t.Component({selector:"c8y-configuration-list",template:'<c8y-title>\n  <span translate>Configuration snapshots repository</span>&nbsp;\n  <small *ngIf="(configurations$ | async)?.paging.totalPages === 1 && !filterTerm"\n    >{{ (configurations$ | async).data.length }} <span translate>snapshots</span></small\n  >\n  <small\n    *ngIf="(configurations$ | async)?.paging.totalPages > 1 && !filterTerm"\n    [tooltip]="\'More data available. Scroll to the bottom of the list to load it.\' | translate"\n    container="body"\n    >{{ (configurations$ | async).paging.pageSize }}+ <span translate>snapshots</span></small\n  >\n  <small *ngIf="filterTerm"\n    ><span translate>Search results for</span>&nbsp;"{{ this.filterTerm }}"</small\n  >\n</c8y-title>\n\n<c8y-action-bar-item itemClass="navbar-form">\n  <c8y-filter [icon]="\'search\'" (onSearch)="setPipe($event)"></c8y-filter>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]="\'right\'">\n  <button class="btn btn-link" (click)="add()">\n    <i c8yIcon="plus-circle"></i> {{ \'Add configuration snapshot\' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]="\'right\'">\n  <button class="btn btn-link" title="{{ \'Reload\' | translate }}" (click)="loadConfigurations()">\n    <i c8yIcon="refresh" [ngClass]="{ \'fa-spin\': reloading }"></i>\n    {{ \'Reload\' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<div\n  class="c8y-empty-state text-center"\n  *ngIf="!filterTerm && (configurations$ | async)?.data.length === 0"\n>\n  <h1 c8yIcon="gears"></h1>\n  <h3 translate>There are no configuration snapshots defined</h3>\n  <p translate>Add a configuration snapshot first.</p>\n  <div>\n    <button (click)="add()" class="btn btn-primary" translate>\n      Add configuration snapshot\n    </button>\n  </div>\n  <p c8y-guide-docs>\n    <small translate\n      >Find out more in the\n      <a c8y-guide-href="users-guide/device-management/#configuration-repository"\n        >User guide`KEEP_ORIGINAL`</a\n      >.</small\n    >\n  </p>\n</div>\n\n<ng-template #notFound>\n  <c8y-li class="p-8 text-center">\n    <p>\n      <span translate>No more entries found for filter:</span>&nbsp;<strong>{{\n        filterTerm\n      }}</strong>\n    </p>\n    <button class="btn btn-primary btn-xs m-t-8" translate (click)="setPipe(\'\'); reset()">\n      Reset filter\n    </button>\n  </c8y-li>\n</ng-template>\n<div class="p-b-32">\n  <c8y-list-group>\n    <c8y-li\n      *c8yFor="\n        let configuration of configurations$;\n        pipe: filterPipe;\n        notFound: this.filterTerm ? notFound : undefined\n      "\n    >\n      <c8y-li-icon icon="gears"></c8y-li-icon>\n      <div class="row flex-row">\n        <div class="col-xs-2">\n          <div class="text-truncate" title="{{ configuration.name || \'-\' }}">\n            <c8y-highlight\n              [text]="configuration.name || \'-\'"\n              elementClass="text-info">\n            </c8y-highlight>\n          </div>\n        </div>\n        <div class="col-xs-3">\n          <span class="text-muted text-truncate" [title]="configuration.description">\n            {{ configuration.description }}\n          </span>\n        </div>\n        <div class="col-xs-3">\n          <span class="text-truncate">\n            <small translate class="text-label-small m-r-4">File</small>\n            <span\n              *ngIf="isBinaryFile(configuration); else noFile"\n              title="{{ getBinaryName(configuration) | async }}"\n            >\n              {{ getBinaryName(configuration) | async }}\n            </span>\n            <ng-template #noFile>\n              <span title="{{ configuration.url }}">{{ configuration.url }}</span>\n            </ng-template>\n          </span>\n        </div>\n        <div class="col-xs-2">\n          <div class="text-truncate" title="{{\'Device type\' | translate}}: {{ configuration.deviceType || \'-\' }}">\n            <small translate class="text-muted text-uppercase">Device type</small>&nbsp;\n            <c8y-highlight\n              [text]="configuration.deviceType || \'-\'"\n              elementClass="text-info"\n              [pattern]="filterTerm">\n            </c8y-highlight>\n          </div>\n        </div>\n        <div class="col-xs-2">\n          <div class="text-right text-truncate" title="{{ configuration.configurationType }}">\n            <span class="label label-primary" *ngIf="configuration.configurationType">\n              <c8y-highlight\n                [text]="configuration.configurationType"\n                elementClass="text-info"\n                [pattern]="filterTerm">\n              </c8y-highlight>\n            </span>\n          </div>\n        </div>\n      </div>\n      <c8y-li-action\n        (click)="edit(configuration)"\n        icon="pencil"\n        label="{{ \'Edit\' | translate }}"\n      ></c8y-li-action>\n      <c8y-li-action\n        (click)="delete(configuration)"\n        icon="trash-o"\n        label="{{ \'Delete\' | translate }}"\n      >\n      </c8y-li-action>\n      <c8y-li-action\n        *ngIf="isBinaryFile(configuration)"\n        (click)="download(configuration)"\n        icon="download"\n        label="{{ \'Download\' | translate }}"\n      >\n      </c8y-li-action>\n    </c8y-li>\n  </c8y-list-group>\n</div>\n'})],i)}(),V=function(){function e(){this.navs=[]}return e.prototype.get=function(){return w(this,void 0,void 0,(function(){return S(this,(function(e){return 0===this.navs.length&&(this.navs.push(new n.NavigatorNode({label:n.gettext("Firmware repository"),path:"firmware",icon:"c8y-firmware",parent:n.gettext("Management"),priority:1e3})),this.navs.push(new n.NavigatorNode({label:n.gettext("Software repository"),path:"software",icon:"c8y-tools",parent:n.gettext("Management"),priority:900})),this.navs.push(new n.NavigatorNode({label:n.gettext("Configuration repository"),path:"configuration",icon:"gears",parent:n.gettext("Management"),priority:800}))),[2,this.navs]}))}))},e=b([t.Injectable()],e)}(),D=function(){function e(e,i){var r=this;this.repositoryService=e,this.translateService=i,this.repositoryEntriesWithVersions$=void 0,this.badgeTemplates={"=1":n.gettext("{{count}} version"),other:n.gettext("{{count}} versions")},this.title=n.gettext("Select repository entry"),this.load=new o.Subject,this.searchTerm=new o.BehaviorSubject(""),this.deviceTypeQuery={},this.searchQuery={},this.labels={ok:n.gettext("Save")},this.showFilter=!0,this.areMoreEntries=!1,this.resultEmitter=new t.EventEmitter,this.mode=n.ModalSelectionMode.SINGLE,this.disableSelected=!0,this.modalEntries=this.load.pipe(s.switchMap((function(){return r.repositoryEntriesWithVersions$})),s.mergeMap((function(e){return r.aggregate(e)})),s.tap((function(e){r.areMoreEntries=e.length>=r.PAGE_SIZE}))),this.PAGE_SIZE=100,this.queriesUtil=new l.QueriesUtil}return e.prototype.ngOnInit=function(){var e=this;if(!this.repositoryType)throw new Error("Repository type must be defined");this.repositoryEntriesWithVersions$||(this.repositoryEntriesWithVersions$=o.from(this.repositoryService.listRepositoryEntries(this.repositoryType,{query:this.queriesUtil.addOrFilter(this.deviceTypeQuery,this.searchQuery),params:{pageSize:this.PAGE_SIZE}})).pipe(s.map((function(e){return e.data})),s.map((function(t){return e.getAndAssignRepositoryBinaries(t)})),s.shareReplay(1)))},e.prototype.getAndAssignRepositoryBinaries=function(e){var t=this;return e.forEach((function(e){e.versions=t.repositoryService.listAllVersions(e)})),e},e.prototype.search=function(e){this.searchTerm.next(e),this.searchQuery=e?{name:"*"+e+"*"}:{},this.load.next()},e.prototype.result=function(e){this.resultEmitter.emit(e)},e.prototype.aggregate=function(e){return w(this,void 0,void 0,(function(){var t,n,i=this;return S(this,(function(r){return t=this.repositoryType,n=this.selected,[2,Promise.all(e.map((function(e){return w(i,void 0,void 0,(function(){var i,r;return S(this,(function(a){switch(a.label){case 0:return r=this.getSelectModalOptions,[4,this.repositoryService.fetchAllItemsFromList(e.versions)];case 1:return i=r.apply(this,[a.sent(),n,e,t]),[2,this.getSelectModalObject(e,i)]}}))}))})))]}))}))},e.prototype.getSelectModalOptions=function(e,t,i,r){var a=this,o=[];return e.forEach((function(e){var s=a.isBinaryRepositorySelected(t,i,e,r),l=e[""+r].version,p=l||"("+a.translateService.instant(n.gettext("not specified`version`"))+")",d=l?"":"text-muted";o.push({body:[{value:p,class:d}],obj:m({id:e.id,name:i.name,version:l},c.get(e,"c8y_Patch.dependency")&&{dependency:c.get(e,"c8y_Patch.dependency")},c.get(e,"c8y_Patch")&&{c8y_Patch:!0},{url:e[""+r].url}),selected:s})})),o},e.prototype.isBinaryRepositorySelected=function(e,t,n,i){return!!e&&e.filter((function(e){return e.name===t.name&&e.version===n[""+i].version})).length>0},e.prototype.getSelectModalObject=function(e,t){var n=1===t.length?this.translateService.instant(this.badgeTemplates["=1"],{count:t.length}):this.translateService.instant(this.badgeTemplates.other,{count:t.length});return{groupId:e.id,body:[{value:e.name,class:"text-truncate"},{value:e.description,class:"text-truncate text-muted"}],additionalInformation:{value:n,class:"label label-info"},options:t}},e.ctorParameters=function(){return[{type:$},{type:u.TranslateService}]},e=b([t.Component({selector:"c8y-repository-select-modal",template:'<c8y-select-modal\n  [icon]="icon"\n  [title]="title"\n  [subTitle]="subTitle"\n  [items]="modalEntries | async"\n  [mode]="mode"\n  [disableSelected]="disableSelected"\n  [labels]="labels"\n  [showFilter]="showFilter"\n  [areMoreEntries]="areMoreEntries"\n  (search)="search($event)"\n  (result)="result($event)"\n>\n</c8y-select-modal>\n'})],e)}(),L=function(){function i(t,n,i,r){var a=this;this.route=t,this.repository=n,this.inventory=i,this.bsModal=r,this.device$=new o.BehaviorSubject(this.route.parent.snapshot.data.contextData),this.reloading=!1,this.deviceFirmwareFragment$=this.device$.pipe(s.map((function(e){return e.c8y_Firmware}))),this.firmwareBinary$=this.deviceFirmwareFragment$.pipe(s.filter((function(e){return!c.isEmpty(e)})),s.switchMap((function(t){return o.from(a.repository.getRepositoryBinaryMoByVersion(t,e.RepositoryType.FIRMWARE))})),s.shareReplay(1)),this.repositoryEntry$=this.firmwareBinary$.pipe(s.switchMap((function(e){return a.repository.getRepositoryEntryMO$(e)})),s.shareReplay(1)),this.patches$=o.combineLatest(this.firmwareBinary$,this.repositoryEntry$).pipe(s.switchMap((function(e){var t=I(e,2),n=t[0],i=t[1];if(i&&n){var r=a.repository.getBaseVersionFromMO(n);return o.from(a.repository.listPatchVersions(i,r)).pipe(s.map((function(e){return e.data})))}return o.of([])})),s.shareReplay(1)),this.changesOperation$=new o.BehaviorSubject(null),this.changesInProgress$=this.changesOperation$.pipe(s.map((function(e){return a.isInProgress(e)})))}return i.prototype.ngOnInit=function(){return w(this,void 0,void 0,(function(){return S(this,(function(e){switch(e.label){case 0:return[4,this.loadDevice()];case 1:return e.sent(),[4,this.loadOperation()];case 2:return e.sent(),[2]}}))}))},i.prototype.installFirmware=function(){var t=this,i={repositoryEntriesWithVersions$:o.of([]),repositoryEntriesWithVersionsFn$:function(e){return t.getRepositoryEntriesWithVersions$(e.content.searchTerm)},repositoryType:e.RepositoryType.FIRMWARE,title:n.gettext("Install firmware"),subTitle:n.gettext("Available firmwares matching the device type"),icon:"c8y-firmware",mode:n.ModalSelectionMode.SINGLE,labels:{ok:n.gettext("Install")},disableSelected:!1};this.deviceFirmwareFragment$.pipe(s.take(1),s.switchMap((function(e){if(e){var n=[{name:e.name,version:e.version}];c.assign(i,{selected:n})}var r=t.bsModal.show(D,{ignoreBackdropClick:!0,initialState:i});return i.repositoryEntriesWithVersionsFn$&&(r.content.repositoryEntriesWithVersions$=i.repositoryEntriesWithVersionsFn$(r)),r.content.load.next(),r.content.resultEmitter}))).subscribe((function(e){t.handleOperation(e)}))},i.prototype.getRepositoryEntriesWithVersions$=function(t){var n=this;return t.pipe(s.distinctUntilChanged(),s.switchMap((function(t){return n.repository.listRepositoryEntries(e.RepositoryType.FIRMWARE,{query:n.repository.getDeviceTypeQuery(e.RepositoryType.FIRMWARE,n.device$.value),partialName:t,params:{pageSize:100}})})),s.map((function(e){return e.data})),s.map((function(e){return n.getAndAssignRepositoryBinaries(e)})),s.shareReplay(1))},i.prototype.getAndAssignRepositoryBinaries=function(e){var t=this;return e.forEach((function(e){e.versions=t.repository.listBaseVersions(e)})),e},i.prototype.addPatch=function(){var t=this,i={repositoryType:e.RepositoryType.FIRMWARE,repositoryEntriesWithVersions$:this.getRepositoryEntryWithPatches$(),title:n.gettext("Install firmware"),subTitle:n.gettext("Available firmwares matching the device type"),icon:"c8y-firmware",mode:n.ModalSelectionMode.SINGLE,labels:{ok:n.gettext("Install")},disableSelected:!1};this.deviceFirmwareFragment$.pipe(s.take(1),s.switchMap((function(e){if(e){var n=[{name:e.name,version:e.version}];c.assign(i,{selected:n})}var r=t.bsModal.show(D,{ignoreBackdropClick:!0,initialState:i});return r.content.load.next(),r.content.resultEmitter}))).subscribe((function(e){t.handleOperation(e)}))},i.prototype.getRepositoryEntryWithPatches$=function(){return o.combineLatest(this.repositoryEntry$,this.patches$).pipe(s.map((function(e){var t=I(e,2),n=t[0],i=t[1];return[m({},n,{versions:i})]})))},i.prototype.loadDevice=function(){return w(this,void 0,void 0,(function(){var e,t;return S(this,(function(n){switch(n.label){case 0:return this.reloading=!0,e=this.device$.value.id,[4,this.inventory.detail(e,{withChildren:!1})];case 1:return t=n.sent().data,this.device$.next(t),this.reloading=!1,[2]}}))}))},i.prototype.handleOperation=function(e){return w(this,void 0,void 0,(function(){var t;return S(this,(function(n){switch(n.label){case 0:return[4,this.repository.createFirmwareUpdateOperation(this.device$.value,e)];case 1:return t=n.sent(),this.trackOperation(t),[2]}}))}))},i.prototype.loadOperation=function(){return w(this,void 0,void 0,(function(){var e,t;return S(this,(function(n){switch(n.label){case 0:return e=this.device$.value.id,[4,this.repository.getLastFirmwareUpdateOperation(e)];case 1:return t=n.sent(),this.trackOperation(t),[2]}}))}))},i.prototype.trackOperation=function(e){var t=this;this.changesOperation$.next(e),this.isInProgress(e)&&this.repository.observeOperation(e).subscribe((function(e){t.changesOperation$.next(e),e.status===l.OperationStatus.SUCCESSFUL&&t.loadDevice()}),(function(e){t.changesOperation$.next(e)}))},i.prototype.isInProgress=function(e){return e&&[l.OperationStatus.PENDING,l.OperationStatus.EXECUTING].includes(e.status)},i.ctorParameters=function(){return[{type:p.ActivatedRoute},{type:$},{type:l.InventoryService},{type:d.BsModalService}]},i=b([t.Component({selector:"c8y-firmware-device-tab",template:'<c8y-action-bar-item [placement]="\'right\'">\n  <button class="btn btn-link" title="{{ \'Reload\' | translate }}" (click)="loadDevice()">\n    <i c8yIcon="refresh" [ngClass]="{ \'fa-spin\': reloading }"></i>\n    {{ \'Reload\' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<div class="card">\n  <div class="card-header separator">\n    <h4 class="card-title" translate>Current firmware</h4>\n  </div>\n  <fieldset *ngIf="changesOperation$ | async" class="card-block bg-gray-white">\n    <c8y-single-operation [operation]="changesOperation$ | async"></c8y-single-operation>\n  </fieldset>\n  <div class="card-block p-t-0">\n    \x3c!-- EMPTY STATE --\x3e\n    <ng-container *ngIf="!(deviceFirmwareFragment$ | async); else firmwareBlock">\n      <div class="c8y-empty-state text-center">\n        <h1 c8yIcon="c8y-firmware" class="c8y-icon-duocolor"></h1>\n        <p>\n          <strong translate>No firmware installed.</strong> <br /><small translate\n            >Click below to install firmware into this device.</small\n          >\n        </p>\n      </div>\n\n      \x3c!-- INSTALL FIRMWARE--\x3e\n      <div class="m-t-16">\n        <button class="btn btn-primary" (click)="installFirmware()" translate>\n          Install firmware\n        </button>\n      </div>\n    </ng-container>\n\n    \x3c!-- FIRMWARE --\x3e\n    <ng-template #firmwareBlock>\n      <c8y-list-group class="m-b-16">\n        <c8y-li>\n          <c8y-li-icon>\n            <i c8yIcon="c8y-firmware"></i>\n          </c8y-li-icon>\n\n          <c8y-li-body\n            *ngIf="deviceFirmwareFragment$ | async as deviceFirmwareFragment"\n            class="content-flex-50"\n          >\n            <div title="{{ deviceFirmwareFragment.name }}" class="col-3">\n              <p class="text-truncate">{{ deviceFirmwareFragment.name }}</p>\n            </div>\n\n            \x3c!-- BASE/PATCH VERSION --\x3e\n            <div class="col-3">\n              <p class="text-truncate">\n                <span class="text-label-small m-r-8" translate>\n                  Version\n                </span>\n                <span\n                  *ngIf="deviceFirmwareFragment.version; else versionNotSpecified"\n                  title="{{ deviceFirmwareFragment.version }}"\n                >\n                  {{ deviceFirmwareFragment.version }}\n                </span>\n                <ng-template #versionNotSpecified>\n                  <span class="text-muted" title="({{ \'not specified`version`\' | translate }})">\n                    ({{ \'not specified`version`\' | translate }})\n                  </span>\n                </ng-template>\n              </p>\n            </div>\n\n            <div *ngIf="repositoryEntry$ | async as repositoryEntry" class="col-4">\n              <p class="text-truncate">\n                <span class="text-label-small m-r-8" translate>\n                  Description\n                </span>\n                <span title="{{ repositoryEntry.description }}">\n                  {{ repositoryEntry.description }}\n                </span>\n              </p>\n            </div>\n\n            \x3c!-- ADD PATCH --\x3e\n            <div class="col-2">\n              <button\n                *ngIf="(this.patches$ | async)?.length > 0"\n                (click)="addPatch()"\n                class="btn btn-xs btn-primary"\n                [disabled]="changesInProgress$ | async"\n                translate\n              >\n                Patches available\n              </button>\n            </div>\n          </c8y-li-body>\n        </c8y-li>\n      </c8y-list-group>\n\n      \x3c!-- REPLACE FIRMWARE --\x3e\n      <div class="m-t-16">\n        <button\n          class="btn btn-primary"\n          (click)="installFirmware()"\n          [disabled]="changesInProgress$ | async"\n          translate\n        >\n          Replace firmware\n        </button>\n      </div>\n    </ng-template>\n  </div>\n</div>\n'})],i)}(),N=function(){function e(){}return e.prototype.canActivate=function(e){var t=c.get(e,"data.contextData")||c.get(e,"parent.data.contextData"),n=c.get(t,"c8y_SupportedOperations");return!!n&&c.indexOf(n,"c8y_Firmware")>=0},e=b([t.Injectable()],e)}(),U=function(){function n(t,n,i){var r=this;this.route=t,this.repository=n,this.inventory=i,this.deviceId=this.route.snapshot.parent.data.contextData.id,this.device$=new o.BehaviorSubject(this.route.snapshot.parent.data.contextData),this.deviceTypeQuery$=this.device$.pipe(s.map((function(t){return r.repository.getDeviceTypeQuery(e.RepositoryType.SOFTWARE,t)}))),this.list$=this.device$.pipe(s.map((function(e){return r.repository.getDeviceSoftwareList(e)}))),this.changes$=new o.BehaviorSubject([]),this.changesOperation$=new o.BehaviorSubject(null),this.changesInProgress$=this.changesOperation$.pipe(s.map((function(e){return r.isInProgress(e)}))),this.reloading=!1}return n.prototype.ngOnInit=function(){return w(this,void 0,void 0,(function(){return S(this,(function(e){switch(e.label){case 0:return[4,this.loadDevice()];case 1:return e.sent(),[4,this.loadOperation()];case 2:return e.sent(),[2]}}))}))},n.prototype.addChanges=function(e){this.changes$.next(F(this.changes$.value,e))},n.prototype.clearChanges=function(){this.changes$.next([])},n.prototype.applyChanges=function(){return w(this,void 0,void 0,(function(){var e;return S(this,(function(t){switch(t.label){case 0:return[4,this.repository.createSoftwareUpdateOperation(this.device$.value,this.changes$.value)];case 1:return e=t.sent(),this.trackOperation(e),[2]}}))}))},n.prototype.loadDevice=function(){return w(this,void 0,void 0,(function(){var e;return S(this,(function(t){switch(t.label){case 0:return this.reloading=!0,[4,this.inventory.detail(this.deviceId,{withChildren:!1})];case 1:return e=t.sent().data,this.device$.next(e),this.reloading=!1,[2]}}))}))},n.prototype.loadOperation=function(){return w(this,void 0,void 0,(function(){var e;return S(this,(function(t){switch(t.label){case 0:return[4,this.repository.getLastSoftwareUpdateOperation(this.deviceId)];case 1:return e=t.sent(),this.trackOperation(e),[2]}}))}))},n.prototype.trackOperation=function(e){var t=this;this.changesOperation$.next(e),this.isInProgress(e)&&(this.displayChangesFromOperation(e),this.repository.observeOperation(e).subscribe((function(e){t.changesOperation$.next(e),e.status===l.OperationStatus.SUCCESSFUL&&(t.clearChanges(),t.loadDevice())}),(function(e){t.changesOperation$.next(e)})))},n.prototype.displayChangesFromOperation=function(e){var t=this.repository.getDeviceSoftwareChangesFromOperation(e,this.device$.value);this.changes$.next(t)},n.prototype.isInProgress=function(e){return e&&[l.OperationStatus.PENDING,l.OperationStatus.EXECUTING].includes(e.status)},n.ctorParameters=function(){return[{type:p.ActivatedRoute},{type:$},{type:l.InventoryService}]},n=b([t.Component({selector:"c8y-software-device-tab",template:'<c8y-action-bar-item [placement]="\'right\'">\n  <button class="btn btn-link" title="{{ \'Reload\' | translate }}" (click)="loadDevice()">\n    <i c8yIcon="refresh" [ngClass]="{ \'fa-spin\': reloading }"></i>\n    {{ \'Reload\' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<div class="row">\n  <c8y-installed-software\n    class="col-md-8"\n    [deviceTypeQuery]="deviceTypeQuery$ | async"\n    [softwareList]="list$ | async"\n    [deviceSoftwareChanges]="changes$ | async"\n    [deviceSoftwareChangesOperation]="changesOperation$ | async"\n    [deviceSoftwareChangesInProgress]="changesInProgress$ | async"\n    (changes)="addChanges($event)"\n  ></c8y-installed-software>\n  <c8y-device-software-changes\n    class="col-md-4"\n    [changes]="changes$ | async"\n    [changesInProgress]="changesInProgress$ | async"\n    (clear)="clearChanges()"\n    (apply)="applyChanges()"\n  ></c8y-device-software-changes>\n</div>\n'})],n)}(),W=function(){function e(){this.operations=["c8y_SoftwareUpdate","c8y_SoftwareList","c8y_Software"]}return e.prototype.canActivate=function(e){return this.isAnyOperationSupported(e)},e.prototype.isAnyOperationSupported=function(e){var t=e.data.contextData||e.parent.data.contextData,n=t&&t.c8y_SupportedOperations||[];return this.operations.some((function(e){return n.indexOf(e)>=0}))},e=b([t.Injectable()],e)}(),G=function(){function i(e,n,i){this.repository=e,this.inventory=n,this.bsModal=i,this.changes=new t.EventEmitter}return i.prototype.installSoftware=function(){var e=this;this.displaySoftwareSelectModal({title:n.gettext("Install software"),labels:{ok:n.gettext("Install")},repositoryEntriesWithVersions$:o.of([]),repositoryEntriesWithVersionsFn$:function(t){return e.getAllSoftwaresWithVersions$(t.content.searchTerm)}}).subscribe((function(t){e.emitSoftwareInstall(t)}))},i.prototype.updateSoftware=function(e){var t=this;this.displaySoftwareSelectModal({title:n.gettext("Update software"),labels:{ok:n.gettext("Update")},showFilter:!1,repositoryEntriesWithVersions$:this.getSingleSoftwareWithVersions$(e)}).subscribe((function(n){t.emitSoftwareUpdate(e,n)}))},i.prototype.removeSoftware=function(e){this.emitSoftwareRemoval(e)},i.prototype.getAllSoftwaresWithVersions$=function(t){var n=this;return t.pipe(s.distinctUntilChanged(),s.switchMap((function(t){return n.repository.listRepositoryEntries(e.RepositoryType.SOFTWARE,{query:n.deviceTypeQuery,partialName:t,params:{pageSize:100}})})),s.map((function(e){return e.data})),s.map((function(e){return n.attachVersions(e)})),s.shareReplay(1))},i.prototype.getSingleSoftwareWithVersions$=function(t){var n=this;return o.from(this.repository.listRepositoryEntries(e.RepositoryType.SOFTWARE,{query:{name:t.name}})).pipe(s.map((function(e){return e.data})),s.map((function(e){return n.attachVersions(e)})),s.shareReplay(1))},i.prototype.attachVersions=function(e){var t=this;return e.forEach((function(e){e.versions=t.repository.listBaseVersions(e)})),e},i.prototype.displaySoftwareSelectModal=function(t){var i=m({repositoryType:e.RepositoryType.SOFTWARE,subTitle:n.gettext("Available softwares matching the device type"),mode:n.ModalSelectionMode.SINGLE,icon:"c8y-tools",disableSelected:!1,selected:this.softwareList},t),r=this.bsModal.show(D,{ignoreBackdropClick:!0,class:"modal-sm",initialState:i});return t.repositoryEntriesWithVersionsFn$&&(r.content.repositoryEntriesWithVersions$=t.repositoryEntriesWithVersionsFn$(r)),r.content.load.next(),r.content.resultEmitter},i.prototype.emitSoftwareInstall=function(e){var t=e.name,n=e.version,i=e.url;this.changes.emit([{name:t,version:n,url:i,action:"install"}])},i.prototype.emitSoftwareUpdate=function(e,t){this.emitSoftwareRemoval(e),this.emitSoftwareInstall(t)},i.prototype.emitSoftwareRemoval=function(e){var t=e.name,n=e.version,i=e.url;this.changes.emit([{name:t,version:n,url:i,action:"delete"}])},i.ctorParameters=function(){return[{type:$},{type:l.InventoryService},{type:d.BsModalService}]},b([t.Input()],i.prototype,"softwareList",void 0),b([t.Input()],i.prototype,"deviceSoftwareChanges",void 0),b([t.Input()],i.prototype,"deviceSoftwareChangesOperation",void 0),b([t.Input()],i.prototype,"deviceSoftwareChangesInProgress",void 0),b([t.Input()],i.prototype,"deviceTypeQuery",void 0),b([t.Output()],i.prototype,"changes",void 0),i=b([t.Component({selector:"c8y-installed-software",template:'<div class="card">\n  <div class="card-header separator">\n    <h4 class="card-title" translate>Installed software</h4>\n  </div>\n\n  <fieldset *ngIf="deviceSoftwareChangesOperation" class="card-block bg-gray-white">\n    <c8y-single-operation [operation]="deviceSoftwareChangesOperation"></c8y-single-operation>\n  </fieldset>\n\n  <fieldset>\n    \x3c!-- EMPTY STATE --\x3e\n    <div class="card-block" *ngIf="softwareList.length === 0">\n      <div class="c8y-empty-state text-center m-t-16">\n        <h1 class="c8y-icon c8y-icon-tools c8y-icon-duocolor"></h1>\n        <p>\n          <strong translate>No software installed.</strong> <br />\n          <small translate>Click below to install software into this device.</small>\n        </p>\n      </div>\n    </div>\n\n    \x3c!-- NOT EMPTY STATE --\x3e\n    <ng-container *ngIf="softwareList.length > 0">\n      <c8y-device-software-list\n        [softwareList]="softwareList"\n        [deviceSoftwareChanges]="deviceSoftwareChanges"\n        (update)="updateSoftware($event)"\n        (remove)="removeSoftware($event)"\n        class="d-block p-l-16 p-r-16"\n      >\n      </c8y-device-software-list>\n    </ng-container>\n  </fieldset>\n\n  \x3c!-- INSTALL SOFTWARE--\x3e\n  <div class="card-footer">\n    <button\n      class="btn btn-add-block m-0"\n      title="{{ \'Install software\' | translate }}"\n      (click)="installSoftware()"\n      [disabled]="deviceSoftwareChangesInProgress"\n    >\n      <i c8yIcon="plus-circle"></i>\n      {{ \'Install software\' | translate }}\n    </button>\n  </div>\n</div>\n'})],i)}(),j=function(){function e(){this.update=new t.EventEmitter,this.remove=new t.EventEmitter}return e.prototype.ngAfterContentInit=function(){this.showUpdate=this.update.observers.length>0,this.showRemove=this.remove.observers.length>0},e.prototype.isSoftwareGoingToBeChanged=function(e){return c.filter(this.deviceSoftwareChanges,e).length>0},b([t.Input()],e.prototype,"softwareList",void 0),b([t.Input()],e.prototype,"deviceSoftwareChanges",void 0),b([t.Output()],e.prototype,"update",void 0),b([t.Output()],e.prototype,"remove",void 0),e=b([t.Component({selector:"c8y-device-software-list",template:'<c8y-list-group>\n  <c8y-li\n    [ngClass]="{ disabled: isSoftwareGoingToBeChanged(software) }"\n    *ngFor="let software of softwareList"\n  >\n    \x3c!-- SOFTWARE ICON --\x3e\n    <c8y-li-icon>\n      <i c8yIcon="c8y-tools"></i>\n    </c8y-li-icon>\n\n    <c8y-li-body class="content-flex-20">\n      \x3c!-- SOFTWARE NAME --\x3e\n      <div title="{{ software.name }}" class="col-6">\n        <p class="text-truncate">{{ software.name }}</p>\n      </div>\n\n      \x3c!-- SOFTWARE VERSION --\x3e\n      <div [ngClass]="{ \'col-3\': showUpdate || showRemove, \'col-5\': !showUpdate && showRemove }">\n        <p class="text-truncate">\n          <span class="text-label-small m-r-4" translate>\n            Version\n          </span>\n          <span title="{{ software.version }}">\n            {{ software.version }}\n          </span>\n        </p>\n      </div>\n\n      <div *ngIf="showUpdate || showRemove" class="col-3 p-r-16">\n        \x3c!-- UPDATE SOFTWARE --\x3e\n        <button\n          *ngIf="showUpdate && !isSoftwareGoingToBeChanged(software)"\n          class="btn btn-default btn-xs showOnHover"\n          (click)="update.emit(software)"\n          title="{{ \'Update`software,verb`\' | translate }}"\n          translate\n        >\n          Update\n        </button>\n\n        \x3c!-- REMOVE SOFTWARE --\x3e\n        <button\n          *ngIf="showRemove && !isSoftwareGoingToBeChanged(software)"\n          title="{{ \'Remove`software`\' | translate }}"\n          class="showOnHover btn btn-dot pull-right"\n          (click)="remove.emit(software)"\n        >\n          <i c8yIcon="minus-circle" class="text-danger"></i>\n        </button>\n      </div>\n    </c8y-li-body>\n  </c8y-li>\n</c8y-list-group>\n'})],e)}(),q=function(){function e(){this.clear=new t.EventEmitter,this.apply=new t.EventEmitter,this.changes$=new o.BehaviorSubject([]),this.installations$=this.changes$.pipe(s.map((function(e){return c.filter(e,(function(t){var n=t.name,i=t.action,r=c.filter(e,{name:n});return"install"===i&&1===r.length}))}))),this.updates$=this.changes$.pipe(s.map((function(e){return c.filter(e,(function(t){var n=t.name,i=t.action,r=c.filter(e,{name:n});return"install"===i&&2===r.length}))}))),this.removals$=this.changes$.pipe(s.map((function(e){return c.filter(e,(function(t){var n=t.name,i=t.action,r=c.filter(e,{name:n});return"delete"===i&&1===r.length}))})))}return e.prototype.ngOnChanges=function(e){e.changes&&this.changes$.next(e.changes.currentValue)},b([t.Input()],e.prototype,"changes",void 0),b([t.Input()],e.prototype,"changesInProgress",void 0),b([t.Output()],e.prototype,"clear",void 0),b([t.Output()],e.prototype,"apply",void 0),e=b([t.Component({selector:"c8y-device-software-changes",template:'<div class="card">\n  <div class="card-header separator">\n    <h4 class="card-title" translate>Software changes</h4>\n  </div>\n\n  <div class="card-block" *ngIf="(changes$ | async).length === 0; else changesList">\n    <div class="c8y-empty-state text-center">\n      <h1 class="c8y-icon c8y-icon-device-control c8y-icon-duocolor"></h1>\n      <p>\n        <strong translate>No software changes.</strong> <br />\n        <small translate>Selected actions will be displayed here.</small>\n      </p>\n    </div>\n  </div>\n\n  <ng-template #changesList>\n    <fieldset *ngIf="(installations$ | async).length > 0">\n      <div class="p-l-16 p-r-16">\n        <div class="form-block legend" translate>Installations`software`</div>\n      </div>\n      <c8y-device-software-list [softwareList]="installations$ | async"></c8y-device-software-list>\n    </fieldset>\n\n    <fieldset *ngIf="(updates$ | async).length > 0">\n      <div class="p-l-16 p-r-16">\n        <div class="form-block legend" translate>Updates`software,noun`</div>\n      </div>\n      <c8y-device-software-list [softwareList]="updates$ | async"></c8y-device-software-list>\n    </fieldset>\n\n    <fieldset *ngIf="(removals$ | async).length > 0">\n      <div class="p-l-16 p-r-16">\n        <div class="form-block legend" translate>Removals`software`</div>\n      </div>\n      <c8y-device-software-list [softwareList]="removals$ | async"></c8y-device-software-list>\n    </fieldset>\n  </ng-template>\n\n  <div class="card-footer p-b-8" *ngIf="(changes$ | async).length > 0">\n    <div class="content-flex-27">\n      <button\n        class="btn btn-default col-6 m-b-8"\n        (click)="clear.emit()"\n        title="{{ \'Clear changes\' | translate }}"\n        [disabled]="changesInProgress"\n        translate\n      >\n        Clear changes\n      </button>\n      <button\n        class="btn btn-primary col-6 btn-block m-b-8"\n        [ngClass]="{ \'btn-pending\': changesInProgress }"\n        [disabled]="changesInProgress"\n        (click)="apply.emit()"\n        title="{{ \'Apply changes\' | translate }}"\n        translate\n      >\n        Apply changes\n      </button>\n    </div>\n  </div>\n</div>\n'})],e)}(),z=function(){function e(){this.configurationsUpdated=new t.EventEmitter}return e.prototype.updateConfigurations=function(e){this.configurationsUpdated.emit(e)},e.prototype.hasAnySupportedOperation=function(e,t){var n=e.c8y_SupportedOperations;return!!n&&(Array.isArray(t)||(t=[t]),n.some((function(e){return t.includes(e)})))},e=b([t.Injectable()],e)}(),Y=function(){function i(e,t,n,i){var r=this;this.route=e,this.deviceConfigurationService=t,this.realtime=n,this.repositoryService=i,this.supportedConfigurations=[],this.configSnapshot={},this.reloading=!1,this.deviceConfigurationService.configurationsUpdated.subscribe((function(e){r.updateSnapshots(e)}))}return i.prototype.ngOnInit=function(){this.device=this.route.snapshot.parent.data.contextData,this.device.c8y_SupportedConfigurations&&(this.supportedConfigurations=this.device.c8y_SupportedConfigurations.map((function(e){return{name:e}}))),this.deviceConfigurationService.hasAnySupportedOperation(this.device,[e.DeviceConfigurationOperation.DOWNLOAD_CONFIG,e.DeviceConfigurationOperation.UPLOAD_CONFIG])&&this.supportedConfigurations.push({name:n.gettext("Legacy configuration snapshot"),isLegacy:!0}),this.repositorySnapshotsEmptyState={icon:"gears",title:n.gettext("No configurations available."),text:n.gettext("Add configuration to configuration repository")}},i.prototype.onConfigTypeSelected=function(e){return w(this,void 0,void 0,(function(){return S(this,(function(t){return this.configurationType=e.name,this.isLegacy=e.isLegacy,this.updateSnapshots(),[2]}))}))},i.prototype.onRepositoryConfigSelected=function(e){return w(this,void 0,void 0,(function(){var t,n;return S(this,(function(i){switch(i.label){case 0:if(this.repositorySnapshot={id:e.id,time:e.creationTime,name:e.name,binaryUrl:e.url,deviceType:e.deviceType,configurationType:e.configurationType},!e.url)return[3,6];i.label=1;case 1:return i.trys.push([1,5,,6]),[4,this.repositoryService.getBinaryFile(e.url,{allowExternal:!1})];case 2:return(t=i.sent())?(n=this.repositorySnapshot,[4,t.text()]):[3,4];case 3:n.binary=i.sent(),i.label=4;case 4:return[3,6];case 5:return i.sent(),[3,6];case 6:return[2]}}))}))},i.prototype.updateSnapshots=function(e){return w(this,void 0,void 0,(function(){var t,n,i;return S(this,(function(r){switch(r.label){case 0:return this.reloading=!0,this.repositorySnapshot=void 0,t=this,[4,this.getSnapshotsFromRepository(this.device,this.configurationType)];case 1:return t.repositorySnapshots=r.sent(),e?[3,6]:(n=this,this.isLegacy?[4,this.repositoryService.getLegacyConfigSnapshot(this.device)]:[3,3]);case 2:return i=r.sent(),[3,5];case 3:return[4,this.repositoryService.getConfigSnapshot(this.device,this.configurationType)];case 4:i=r.sent(),r.label=5;case 5:n.configSnapshot=i,r.label=6;case 6:return this.reloading=!1,[2]}}))}))},i.prototype.getSnapshotsFromRepository=function(t,n){return w(this,void 0,void 0,(function(){var i;return S(this,(function(r){switch(r.label){case 0:return i=this.repositoryService.getConfigurationTypeQuery(t,n),[4,this.repositoryService.listRepositoryEntries(e.RepositoryType.CONFIGURATION,{query:i,params:{pageSize:100}})];case 1:return[2,r.sent().data]}}))}))},i.ctorParameters=function(){return[{type:p.ActivatedRoute},{type:z},{type:l.Realtime},{type:$}]},i=b([t.Component({selector:"c8y-device-configuration",template:'<c8y-action-bar-item [placement]="\'right\'">\n  <button class="btn btn-link" title="{{ \'Reload\' | translate }}" (click)="updateSnapshots()">\n    <i c8yIcon="refresh" [ngClass]="{ \'fa-spin\': reloading }"></i>\n    {{ \'Reload\' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<div class="card card--grid card--grid--fullpage grid__col--4-8 grid__row--6-6">\n  \x3c!-- DEVICE SUPPORTED CONFIGURATIONS --\x3e\n  <div class="card--grid__inner-scroll">\n    <div class="card-header separator">\n      <h4 class="card-title" translate>Configurations</h4>\n    </div>\n    <div class="card-block">\n      <h5 class="legend form-block"><span translate>Device-supported configurations</span></h5>\n    </div>\n    <div class="p-r-16">\n      <c8y-device-configuration-list\n        [items]="supportedConfigurations"\n        [itemIcon]="\'gears\'"\n        (configSelected)="onConfigTypeSelected($event)"\n      ></c8y-device-configuration-list>\n    </div>\n  </div>\n\n  \x3c!-- CONFIGURATION PREVIEW --\x3e\n  <div class="card--grid__inner-scroll bg-gray-lighter">\n    <div class="card-header separator bg-gray-lighter hidden-xs hidden-sm">\n      <h4>&nbsp;</h4>\n    </div>\n    <div class="card-block">\n      <h5 class="legend form-block"><span translate>Preview</span></h5>\n\n      \x3c!-- EMPTY STATE --\x3e\n      <div class="c8y-empty-state text-left" *ngIf="!configurationType">\n        <h1 [c8yIcon]="\'file-text\'"></h1>\n        <p>\n          <strong translate>No configuration selected.</strong><br />\n          <small translate>Select a configuration to preview</small>\n        </p>\n      </div>\n\n      \x3c!-- PREVIEW AVAILABLE STATE --\x3e\n      <c8y-device-configuration-preview\n        *ngIf="configurationType"\n        [device]="device"\n        [configurationType]="configurationType"\n        [configSnapshot]="configSnapshot"\n        [canSaveSnapshot]="true"\n        [operationToTrigger]="\'c8y_UploadConfigFile\'"\n        [actionButtonText]="\'Get snapshot from device\' | translate"\n        [actionButtonIcon]="\'download\'"\n        [isLegacy]="isLegacy"\n      ></c8y-device-configuration-preview>\n    </div>\n  </div>\n\n  \x3c!-- AVAILABLE SUPPORTED CONFIGURATIONS --\x3e\n  <div class="card--grid__inner-scroll">\n    <div class="card-block">\n      <h5 class="legend form-block" translate>Available supported configurations</h5>\n    </div>\n\n    \x3c!-- EMPTY STATE --\x3e\n    <div class="c8y-empty-state text-left" *ngIf="!configurationType">\n      <h1 [c8yIcon]="\'gears\'"></h1>\n      <p>\n        <strong translate>No selection</strong><br />\n        <small translate>Select a configuration from the device-supported configuration list</small>\n      </p>\n    </div>\n    <div class="p-r-16" *ngIf="configurationType">\n      <c8y-device-configuration-list\n        [items]="repositorySnapshots"\n        [itemIcon]="\'file-text\'"\n        [emptyState]="repositorySnapshotsEmptyState"\n        [isFilterEnabled]="true"\n        (configSelected)="onRepositoryConfigSelected($event)"\n      ></c8y-device-configuration-list>\n    </div>\n  </div>\n\n  \x3c!-- CONFIGURATION PREVIEW --\x3e\n  <div class="card--grid__inner-scroll bg-gray-lighter">\n    <div class="card-block">\n      <h5 class="legend form-block" translate>Preview</h5>\n\n      \x3c!-- EMPTY STATE --\x3e\n\n      <div class="c8y-empty-state text-left" *ngIf="!repositorySnapshot">\n        <h1 [c8yIcon]="\'file-text\'"></h1>\n        <p>\n          <strong translate>No configuration selected.</strong><br />\n          <small *ngIf="!configurationType; else noSnapshot" translate\n            >Select a configuration to preview</small\n          >\n          <ng-template #noSnapshot>\n            <small translate>Select the configuration you want to preview</small>\n          </ng-template>\n        </p>\n      </div>\n\n      \x3c!-- CONFIGURATION SELECTED STATE --\x3e\n      <c8y-device-configuration-preview\n        *ngIf="repositorySnapshot"\n        [device]="device"\n        [configurationType]="configurationType"\n        [configSnapshot]="repositorySnapshot"\n        [operationToTrigger]="\'c8y_DownloadConfigFile\'"\n        [actionButtonText]="\'Send configuration to device\' | translate"\n        [actionButtonIcon]="\'upload\'"\n        [isLegacy]="isLegacy"\n      ></c8y-device-configuration-preview>\n    </div>\n  </div>\n</div>\n'})],i)}(),Q=function(){function e(){}return b([t.Input()],e.prototype,"isDisabled",void 0),b([t.Input()],e.prototype,"text",void 0),e=b([t.Component({selector:"c8y-source-code-preview",template:'<textarea [disabled]="isDisabled" class="form-control no-resize" rows="8">{{ text }}</textarea>\n'})],e)}(),H=function(){function i(e,t,n){var i=this;this.modal=e,this.alertService=t,this.repositoryService=n,this.result=new Promise((function(e,t){i._save=e,i._cancel=t}))}return i.prototype.save=function(){return w(this,void 0,void 0,(function(){var t,i;return S(this,(function(r){switch(r.label){case 0:return r.trys.push([0,2,,3]),t={selected:{configurationType:this.configSnapshot.configurationType},version:this.configSnapshot.name,deviceType:this.configSnapshot.deviceType,description:this.configSnapshot.description,binary:{file:new File([this.configSnapshot.binary],this.configSnapshot.name)}},[4,this.repositoryService.save(t,e.RepositoryType.CONFIGURATION)];case 1:return r.sent(),this.alertService.success(n.gettext("Configuration saved.")),this._save(),[3,3];case 2:return i=r.sent(),this.alertService.addServerFailure(i),[3,3];case 3:return[2]}}))}))},i.prototype.close=function(){this._cancel(),this.modal.hide()},i.ctorParameters=function(){return[{type:d.BsModalRef},{type:n.AlertService},{type:$}]},i=b([t.Component({selector:"c8y-save-config-to-configuration-repository",template:'<div class="modal-header bg-primary text-center text-white">\n  <div style="font-size: 62px;">\n    <span c8yIcon="gears"></span>\n  </div>\n  <h4 class="text-uppercase" translate>\n    Save configuration\n  </h4>\n</div>\n<div class="modal-body">\n  <form #saveConfigurationSnapshot="ngForm" class="p-t-24">\n    <c8y-form-group>\n      <label translate for="name">Name</label>\n      <input\n        id="name"\n        type="text"\n        class="form-control"\n        autocomplete="off"\n        name="name"\n        [(ngModel)]="configSnapshot.name"\n        required\n      />\n    </c8y-form-group>\n    <c8y-form-group>\n      <label translate for="deviceType">Device type</label>\n      <input\n        id="deviceType"\n        class="form-control"\n        rows="6"\n        name="deviceType"\n        [(ngModel)]="configSnapshot.deviceType"\n      />\n    </c8y-form-group>\n    <c8y-form-group>\n      <label translate for="description">Description</label>\n      <input\n        type="text"\n        id="description"\n        class="form-control"\n        maxlength="254"\n        autocomplete="off"\n        name="description"\n        [(ngModel)]="configSnapshot.description"\n      />\n    </c8y-form-group>\n    <c8y-form-group>\n      <label translate for="configurationType">Configuration type</label>\n      <input\n        id="configurationType"\n        class="form-control"\n        rows="6"\n        name="configurationType"\n        [(ngModel)]="configSnapshot.configurationType"\n      />\n    </c8y-form-group>\n  </form>\n</div>\n<div class="modal-footer">\n  <button title="{{ \'Cancel\' | translate }}" class="btn btn-default" (click)="close()" translate>\n    Cancel\n  </button>\n\n  <button\n    title="{{ \'Add certificate\' | translate }}"\n    class="btn btn-primary"\n    (click)="save()"\n    [disabled]="saveConfigurationSnapshot.form.invalid"\n    translate\n  >\n    Save\n  </button>\n</div>\n'})],i)}(),K=function(){function i(t,n,i,r,a,o,s,c){this.deviceConfigurationService=t,this.realtime=n,this.bsModal=i,this.user=r,this.appState=a,this.repositoryService=o,this.operationService=s,this.alertService=c,this.isLegacy=!1,this.canCallAction=!0,this.deviceConfigurationOperation=e.DeviceConfigurationOperation}return Object.defineProperty(i.prototype,"configurationType",{get:function(){return this._configurationType},set:function(e){this._configurationType=e,this.setOperation(e)},enumerable:!0,configurable:!0}),i.prototype.ngOnInit=function(){return w(this,void 0,void 0,(function(){var e,t=this;return S(this,(function(n){return this.setOperation(this._configurationType),e="/operations/"+this.device.id,this.operationsSubscription=this.realtime.observable(e).subscribe((function(e){var n=e.data;t.updatePreview(n)})),this.isLegacy&&(this.canCallAction=this.deviceConfigurationService.hasAnySupportedOperation(this.device,this.operationToTrigger)),[2]}))}))},i.prototype.setOperation=function(e){return w(this,void 0,void 0,(function(){var t,n,i=this;return S(this,(function(r){switch(r.label){case 0:return[4,this.repositoryService.getConfigFileOperationList(this.device.id,this.operationToTrigger)];case 1:return t=r.sent(),n=this.isLegacy?t.find((function(e){return e[i.operationToTrigger]&&!e[i.operationToTrigger].type})):t.find((function(t){return t[i.operationToTrigger].type===e})),this.operation=n&&n.status!==l.OperationStatus.SUCCESSFUL?n:void 0,[2]}}))}))},i.prototype.createDeviceOperation=function(){return w(this,void 0,void 0,(function(){var t,n,i;return S(this,(function(r){switch(r.label){case 0:this.operationToTrigger===e.DeviceConfigurationOperation.DOWNLOAD_CONFIG&&(t=this.repositoryService.getDownloadConfigurationFileOperation(this.device,this._configurationType,this.configSnapshot,this.isLegacy)),this.operationToTrigger===e.DeviceConfigurationOperation.UPLOAD_CONFIG&&(t=this.repositoryService.getUploadConfigurationFileOperation(this.device,this._configurationType,this.isLegacy)),r.label=1;case 1:return r.trys.push([1,3,,4]),n=this,[4,this.operationService.create(t)];case 2:return n.operation=r.sent().data,[3,4];case 3:return i=r.sent(),this.alertService.addServerFailure(i),[3,4];case 4:return[2]}}))}))},i.prototype.showOperation=function(){return this.operationToTrigger===e.DeviceConfigurationOperation.DOWNLOAD_CONFIG?!!this.operation:this.operation&&[l.OperationStatus.PENDING,l.OperationStatus.EXECUTING,l.OperationStatus.FAILED].includes(this.operation.status)},i.prototype.showBinary=function(){return this.operationToTrigger===e.DeviceConfigurationOperation.DOWNLOAD_CONFIG||!this.showOperation()},i.prototype.isCreateOperationDisabled=function(){return this.operation&&[l.OperationStatus.PENDING,l.OperationStatus.EXECUTING].includes(this.operation.status)},i.prototype.updatePreview=function(e){e&&e[this.operationToTrigger]&&(this.isLegacy||e[this.operationToTrigger].type&&e[this.operationToTrigger].type===this.configurationType)&&(this.operation=e,this.updateSnapshotsOnConfigUpload(e))},i.prototype.download=function(){var e=new Blob([this.configSnapshot.binary],{type:this.configSnapshot.binaryType}),t=this.configSnapshot.name;switch(this.configSnapshot.binaryType){case"text/csv":case"application/csv":t=t.concat(".csv");break;case"text/yaml":case"application/x-yaml":t=t.concat(".yaml");break;case"application/json":t=t.concat(".json")}h.saveAs(e,t)},i.prototype.saveToRepository=function(){return w(this,void 0,void 0,(function(){var e,t;return S(this,(function(n){switch(n.label){case 0:e={configSnapshot:c.cloneDeep(this.configSnapshot)},t=this.bsModal.show(H,{class:"modal-sm",initialState:e,ignoreBackdropClick:!0}).content,n.label=1;case 1:return n.trys.push([1,3,,4]),[4,t.result];case 2:return n.sent(),this.deviceConfigurationService.updateConfigurations(!0),t.close(),[3,4];case 3:return n.sent(),[3,4];case 4:return[2]}}))}))},i.prototype.hasPermission=function(){return this.user.hasAnyRole(this.appState.currentUser.value,["ROLE_INVENTORY_ADMIN","ROLE_INVENTORY_CREATE"])},i.prototype.ngOnDestroy=function(){this.operationsSubscription.unsubscribe()},i.prototype.updateSnapshotsOnConfigUpload=function(t){return w(this,void 0,void 0,(function(){return S(this,(function(n){return t[e.DeviceConfigurationOperation.UPLOAD_CONFIG]&&t.status===l.OperationStatus.SUCCESSFUL&&this.deviceConfigurationService.updateConfigurations(),[2]}))}))},i.ctorParameters=function(){return[{type:z},{type:l.Realtime},{type:d.BsModalService},{type:l.UserService},{type:n.AppStateService},{type:$},{type:l.OperationService},{type:n.AlertService}]},b([t.Input()],i.prototype,"device",void 0),b([t.Input()],i.prototype,"configurationType",null),b([t.Input()],i.prototype,"configSnapshot",void 0),b([t.Input()],i.prototype,"canSaveSnapshot",void 0),b([t.Input()],i.prototype,"actionButtonText",void 0),b([t.Input()],i.prototype,"actionButtonIcon",void 0),b([t.Input()],i.prototype,"isLegacy",void 0),b([t.Input()],i.prototype,"operationToTrigger",void 0),i=b([t.Component({selector:"c8y-device-configuration-preview",template:'<div class="content-flex-55 p-b-16">\n  <div class="col-7 p-t-4">\n    <p>\n      <span class="text-label-small text-uppercase m-r-4" translate>Configuration</span>\n      <span *ngIf="configSnapshot?.name; else emptyText">\n        <strong>{{ configSnapshot.name }}</strong>\n      </span>\n      <ng-template #emptyText> --- </ng-template>\n    </p>\n    <p>\n      <span class="text-label-small text-uppercase m-r-4" translate>Last updated</span>\n      <small *ngIf="configSnapshot?.time; else emptyDate">\n        {{ configSnapshot.time | c8yDate }}\n      </small>\n      <ng-template #emptyDate> --- </ng-template>\n    </p>\n  </div>\n  <div class="col-5">\n    <button\n      class="btn btn-default btn-sm pull-right"\n      type="button"\n      title="{{ actionButtonText | translate }}"\n      (click)="createDeviceOperation()"\n      [disabled]="isCreateOperationDisabled()"\n      *ngIf="canCallAction"\n    >\n      <i [c8yIcon]="actionButtonIcon"></i> {{ actionButtonText | translate }}\n    </button>\n  </div>\n</div>\n<div class="c8y-empty-state text-left" *ngIf="!configSnapshot?.binary && showBinary()">\n  <h1 [c8yIcon]="\'file-image-o\'"></h1>\n  <p>\n    <strong translate>No preview available.</strong><br />\n    <small translate>Could not fetch the file.</small>\n  </p>\n</div>\n<div *ngIf="configSnapshot?.binary && showBinary()">\n  <c8y-source-code-preview\n    [text]="configSnapshot.binary"\n    [isDisabled]="true"\n  ></c8y-source-code-preview>\n  <div *ngIf="canSaveSnapshot" class="top-p-md">\n    <button\n      type="button"\n      class="btn btn-primary btn-sm pull-right left-m-sm"\n      (click)="download()"\n      translate\n    >\n      Download\n    </button>\n    <button\n      *ngIf="hasPermission()"\n      type="button"\n      class="btn btn-default btn-sm pull-right"\n      (click)="saveToRepository()"\n      translate\n    >\n      Save to repository\n    </button>\n  </div>\n</div>\n<div *ngIf="showOperation()">\n  <c8y-single-operation [operation]="operation"></c8y-single-operation>\n</div>\n'})],i)}(),X=function(){function e(){}return e.prototype.transform=function(e,t){var n=this;return 0===t.trim().length?e:e.filter((function(e){return n.filterContainString(e.name,t)||n.filterContainString(e.deviceType,t)}))},e.prototype.filterContainString=function(e,t){var n=t.toLowerCase().trim();return e&&e.toLowerCase().indexOf(n)>-1},e=b([t.Pipe({name:"configurationFilterPipe"})],e)}(),Z=function(){function n(e){this.deviceConfigurationService=e}return n.prototype.canActivate=function(t,n){var i=t.data.contextData||t.parent.data.contextData;return!!i&&(i.c8y_SupportedConfigurations&&i.c8y_SupportedConfigurations.length>0||this.deviceConfigurationService.hasAnySupportedOperation(i,[e.DeviceConfigurationOperation.DOWNLOAD_CONFIG,e.DeviceConfigurationOperation.UPLOAD_CONFIG]))},n.ctorParameters=function(){return[{type:z}]},n=b([t.Injectable()],n)}(),J=function(){function e(){this.configSelected=new t.EventEmitter,this.filterTerm=""}return e.prototype.showConfigurationTypePreview=function(e){this.selectedConfig=e,this.configSelected.emit(e)},e.prototype.updatePipe=function(e){this.filterTerm=e},b([t.Input()],e.prototype,"items",void 0),b([t.Input()],e.prototype,"itemIcon",void 0),b([t.Input()],e.prototype,"emptyState",void 0),b([t.Input()],e.prototype,"isFilterEnabled",void 0),b([t.Output()],e.prototype,"configSelected",void 0),e=b([t.Component({selector:"c8y-device-configuration-list",template:'<div class="p-l-16 m-b-8" style="margin-top: -16px;" *ngIf="isFilterEnabled">\n  <c8y-filter [icon]="\'search\'" (onSearch)="updatePipe($event)"></c8y-filter>\n</div>\n\n\x3c!-- EMPTY STATE --\x3e\n<div class="c8y-empty-state text-left" *ngIf="items?.length === 0">\n  <h1 [c8yIcon]="emptyState.icon"></h1>\n  <p>\n    <strong>{{ emptyState.title | translate }}</strong\n    ><br />\n    <small>{{ emptyState.text | translate }}</small>\n  </p>\n</div>\n\n\x3c!-- CONFIGURATIONS AVAILABLE --\x3e\n<div class="c8y-nav-stacked">\n  <div\n    class="c8y-stacked-item flex-row"\n    [class.active]="config === selectedConfig"\n    *ngFor="let config of items | configurationFilterPipe: filterTerm"\n    (click)="showConfigurationTypePreview(config)"\n  >\n    <div class="list-item-icon">\n      <i [c8yIcon]="itemIcon"></i>\n    </div>\n    <div class="list-item-body text-truncate">\n      <div class="d-flex">\n        <span class="text-truncate" title="{{ config.name }}">{{ config.name }}</span>\n        <span class="text-label-small flex-item-right flex-item-middle">{{ config.deviceType }}</span>\n      </div>\n    </div>\n  </div>\n</div>\n\n\x3c!-- for Carlos: config.configurationType to differentiate whether a config matches configuration type. --\x3e\n'})],e)}(),ee=[{path:"firmware",component:R},{path:"firmware/:id",component:_},{context:n.ViewContext.Device,path:"firmware",component:L,label:n.gettext("Firmware"),icon:"c8y-firmware",priority:500,canActivate:[N]},{path:"software",component:M},{path:"software/:id",component:P},{context:n.ViewContext.Device,path:"software",component:U,label:n.gettext("Software"),icon:"c8y-tools",priority:499,canActivate:[W]},{path:"configuration",component:B},{context:n.ViewContext.Device,path:"device-configuration",component:Y,label:n.gettext("Configuration"),icon:"gears",priority:600,canActivate:[Z]}],te=function(){function e(){}return e=b([t.NgModule({imports:[n.CoreModule,n.FormsModule,i.BsDropdownModule.forRoot(),r.TooltipModule,a.PopoverModule],exports:[],declarations:[R,_,O,E,M,P,A,L,U,G,D,j,q,B,k,Y,J,Q,K,X,H],entryComponents:[R,_,O,E,M,P,A,L,U,j,D,q,B,k,Y,H],providers:[$,z,N,W,Z,{provide:n.HOOK_NAVIGATOR_NODES,useClass:V,multi:!0},{provide:n.HOOK_ONCE_ROUTE,useValue:ee,multi:!0}]})],e)}();e.REPOSITORY_BINARY_TYPES=C,e.RepositoryModule=te,e.RepositorySelectModalComponent=D,e.RepositoryService=$,e.ɵ0=ee,e.ɵa=R,e.ɵb=_,e.ɵc=O,e.ɵd=E,e.ɵe=M,e.ɵf=P,e.ɵg=A,e.ɵh=L,e.ɵi=U,e.ɵj=G,e.ɵk=j,e.ɵl=q,e.ɵm=B,e.ɵn=k,e.ɵo=Y,e.ɵp=z,e.ɵq=J,e.ɵr=Q,e.ɵs=K,e.ɵt=X,e.ɵu=H,e.ɵv=N,e.ɵw=W,e.ɵx=Z,e.ɵy=V,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=c8y-ngx-components-repository.umd.min.js.map