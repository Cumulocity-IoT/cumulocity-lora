import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { TooltipModule } from 'ngx-bootstrap/tooltip';
import { CommonModule } from '../common/common.module';
import { PasswordCheckListComponent } from './password-check-list.component';
import { PasswordConfirm } from './password-confirm.directive';
import { PasswordStrengthCheckerService } from './password-strength-checker.service';
import { PasswordStrengthComponent } from './password-strength.component';
import { NewPasswordComponent } from './new-password.component';
import { PasswordConfirmModalComponent } from './password-confirm-modal.component';
import { ModalModule } from '../modal/modal.module';
import { FormsModule } from '../forms/forms.module';
import { TotpChallengeComponent } from './totp-challenge.component';
import { SmsChallengeComponent } from './sms-challenge.component';
import { TotpSetupComponent } from './totp-setup.component';
import { PasswordService } from './password.service';
import { ProvidePhoneNumberComponent } from './provide-phone-number.component';
/**
 * The angular module definition for new password.
 * @exports PasswordStrengthComponent
 * @exports PasswordCheckListComponent
 * @exports PasswordConfirm
 * @exports NewPasswordComponent
 * @exports PasswordConfirmModalComponent
 */
var AuthenticationModule = /** @class */ (function () {
    function AuthenticationModule() {
    }
    AuthenticationModule = tslib_1.__decorate([
        NgModule({
            declarations: [
                TotpChallengeComponent,
                PasswordConfirm,
                PasswordStrengthComponent,
                PasswordCheckListComponent,
                NewPasswordComponent,
                PasswordConfirmModalComponent,
                SmsChallengeComponent,
                TotpSetupComponent,
                ProvidePhoneNumberComponent
            ],
            imports: [
                FormsModule,
                TooltipModule,
                CommonModule,
                ModalModule
            ],
            exports: [
                TotpChallengeComponent,
                PasswordStrengthComponent,
                PasswordCheckListComponent,
                PasswordConfirm,
                NewPasswordComponent,
                PasswordConfirmModalComponent,
                SmsChallengeComponent,
                TotpSetupComponent,
                ProvidePhoneNumberComponent
            ],
            entryComponents: [
                PasswordConfirmModalComponent
            ],
            providers: [
                PasswordStrengthCheckerService,
                PasswordService
            ]
        })
    ], AuthenticationModule);
    return AuthenticationModule;
}());
export { AuthenticationModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aGVudGljYXRpb24ubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbImNvcmUvYXV0aGVudGljYXRpb24vYXV0aGVudGljYXRpb24ubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDdkQsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDN0UsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQy9ELE9BQU8sRUFBRSw4QkFBOEIsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQ3JGLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQzFFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ2hFLE9BQU8sRUFBRSw2QkFBNkIsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBQ25GLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUNwRCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDcEQsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDcEUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDbEUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDNUQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3JELE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBRS9FOzs7Ozs7O0dBT0c7QUFzQ0g7SUFBQTtJQUFtQyxDQUFDO0lBQXZCLG9CQUFvQjtRQXJDaEMsUUFBUSxDQUFDO1lBQ1IsWUFBWSxFQUFFO2dCQUNaLHNCQUFzQjtnQkFDdEIsZUFBZTtnQkFDZix5QkFBeUI7Z0JBQ3pCLDBCQUEwQjtnQkFDMUIsb0JBQW9CO2dCQUNwQiw2QkFBNkI7Z0JBQzdCLHFCQUFxQjtnQkFDckIsa0JBQWtCO2dCQUNsQiwyQkFBMkI7YUFDNUI7WUFDRCxPQUFPLEVBQUU7Z0JBQ1AsV0FBVztnQkFDWCxhQUFhO2dCQUNiLFlBQVk7Z0JBQ1osV0FBVzthQUNaO1lBQ0QsT0FBTyxFQUFFO2dCQUNQLHNCQUFzQjtnQkFDdEIseUJBQXlCO2dCQUN6QiwwQkFBMEI7Z0JBQzFCLGVBQWU7Z0JBQ2Ysb0JBQW9CO2dCQUNwQiw2QkFBNkI7Z0JBQzdCLHFCQUFxQjtnQkFDckIsa0JBQWtCO2dCQUNsQiwyQkFBMkI7YUFDNUI7WUFDRCxlQUFlLEVBQUU7Z0JBQ2YsNkJBQTZCO2FBQzlCO1lBQ0QsU0FBUyxFQUFFO2dCQUNULDhCQUE4QjtnQkFDOUIsZUFBZTthQUNoQjtTQUNGLENBQUM7T0FDVyxvQkFBb0IsQ0FBRztJQUFELDJCQUFDO0NBQUEsQUFBcEMsSUFBb0M7U0FBdkIsb0JBQW9CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgVG9vbHRpcE1vZHVsZSB9IGZyb20gJ25neC1ib290c3RyYXAvdG9vbHRpcCc7XHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJy4uL2NvbW1vbi9jb21tb24ubW9kdWxlJztcclxuaW1wb3J0IHsgUGFzc3dvcmRDaGVja0xpc3RDb21wb25lbnQgfSBmcm9tICcuL3Bhc3N3b3JkLWNoZWNrLWxpc3QuY29tcG9uZW50JztcclxuaW1wb3J0IHsgUGFzc3dvcmRDb25maXJtIH0gZnJvbSAnLi9wYXNzd29yZC1jb25maXJtLmRpcmVjdGl2ZSc7XHJcbmltcG9ydCB7IFBhc3N3b3JkU3RyZW5ndGhDaGVja2VyU2VydmljZSB9IGZyb20gJy4vcGFzc3dvcmQtc3RyZW5ndGgtY2hlY2tlci5zZXJ2aWNlJztcclxuaW1wb3J0IHsgUGFzc3dvcmRTdHJlbmd0aENvbXBvbmVudCB9IGZyb20gJy4vcGFzc3dvcmQtc3RyZW5ndGguY29tcG9uZW50JztcclxuaW1wb3J0IHsgTmV3UGFzc3dvcmRDb21wb25lbnQgfSBmcm9tICcuL25ldy1wYXNzd29yZC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBQYXNzd29yZENvbmZpcm1Nb2RhbENvbXBvbmVudCB9IGZyb20gJy4vcGFzc3dvcmQtY29uZmlybS1tb2RhbC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBNb2RhbE1vZHVsZSB9IGZyb20gJy4uL21vZGFsL21vZGFsLm1vZHVsZSc7XHJcbmltcG9ydCB7IEZvcm1zTW9kdWxlIH0gZnJvbSAnLi4vZm9ybXMvZm9ybXMubW9kdWxlJztcclxuaW1wb3J0IHsgVG90cENoYWxsZW5nZUNvbXBvbmVudCB9IGZyb20gJy4vdG90cC1jaGFsbGVuZ2UuY29tcG9uZW50JztcclxuaW1wb3J0IHsgU21zQ2hhbGxlbmdlQ29tcG9uZW50IH0gZnJvbSAnLi9zbXMtY2hhbGxlbmdlLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFRvdHBTZXR1cENvbXBvbmVudCB9IGZyb20gJy4vdG90cC1zZXR1cC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBQYXNzd29yZFNlcnZpY2UgfSBmcm9tICcuL3Bhc3N3b3JkLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBQcm92aWRlUGhvbmVOdW1iZXJDb21wb25lbnQgfSBmcm9tICcuL3Byb3ZpZGUtcGhvbmUtbnVtYmVyLmNvbXBvbmVudCc7XHJcblxyXG4vKipcclxuICogVGhlIGFuZ3VsYXIgbW9kdWxlIGRlZmluaXRpb24gZm9yIG5ldyBwYXNzd29yZC5cclxuICogQGV4cG9ydHMgUGFzc3dvcmRTdHJlbmd0aENvbXBvbmVudFxyXG4gKiBAZXhwb3J0cyBQYXNzd29yZENoZWNrTGlzdENvbXBvbmVudFxyXG4gKiBAZXhwb3J0cyBQYXNzd29yZENvbmZpcm1cclxuICogQGV4cG9ydHMgTmV3UGFzc3dvcmRDb21wb25lbnRcclxuICogQGV4cG9ydHMgUGFzc3dvcmRDb25maXJtTW9kYWxDb21wb25lbnRcclxuICovXHJcbkBOZ01vZHVsZSh7XHJcbiAgZGVjbGFyYXRpb25zOiBbXHJcbiAgICBUb3RwQ2hhbGxlbmdlQ29tcG9uZW50LFxyXG4gICAgUGFzc3dvcmRDb25maXJtLFxyXG4gICAgUGFzc3dvcmRTdHJlbmd0aENvbXBvbmVudCxcclxuICAgIFBhc3N3b3JkQ2hlY2tMaXN0Q29tcG9uZW50LFxyXG4gICAgTmV3UGFzc3dvcmRDb21wb25lbnQsXHJcbiAgICBQYXNzd29yZENvbmZpcm1Nb2RhbENvbXBvbmVudCxcclxuICAgIFNtc0NoYWxsZW5nZUNvbXBvbmVudCxcclxuICAgIFRvdHBTZXR1cENvbXBvbmVudCxcclxuICAgIFByb3ZpZGVQaG9uZU51bWJlckNvbXBvbmVudFxyXG4gIF0sXHJcbiAgaW1wb3J0czogW1xyXG4gICAgRm9ybXNNb2R1bGUsXHJcbiAgICBUb29sdGlwTW9kdWxlLFxyXG4gICAgQ29tbW9uTW9kdWxlLFxyXG4gICAgTW9kYWxNb2R1bGVcclxuICBdLFxyXG4gIGV4cG9ydHM6IFtcclxuICAgIFRvdHBDaGFsbGVuZ2VDb21wb25lbnQsXHJcbiAgICBQYXNzd29yZFN0cmVuZ3RoQ29tcG9uZW50LFxyXG4gICAgUGFzc3dvcmRDaGVja0xpc3RDb21wb25lbnQsXHJcbiAgICBQYXNzd29yZENvbmZpcm0sXHJcbiAgICBOZXdQYXNzd29yZENvbXBvbmVudCxcclxuICAgIFBhc3N3b3JkQ29uZmlybU1vZGFsQ29tcG9uZW50LFxyXG4gICAgU21zQ2hhbGxlbmdlQ29tcG9uZW50LFxyXG4gICAgVG90cFNldHVwQ29tcG9uZW50LFxyXG4gICAgUHJvdmlkZVBob25lTnVtYmVyQ29tcG9uZW50XHJcbiAgXSxcclxuICBlbnRyeUNvbXBvbmVudHM6IFtcclxuICAgIFBhc3N3b3JkQ29uZmlybU1vZGFsQ29tcG9uZW50XHJcbiAgXSxcclxuICBwcm92aWRlcnM6IFtcclxuICAgIFBhc3N3b3JkU3RyZW5ndGhDaGVja2VyU2VydmljZSxcclxuICAgIFBhc3N3b3JkU2VydmljZVxyXG4gIF1cclxufSlcclxuZXhwb3J0IGNsYXNzIEF1dGhlbnRpY2F0aW9uTW9kdWxlIHt9XHJcbiJdfQ==