import * as tslib_1 from "tslib";
import { Component, ContentChild, ElementRef, ContentChildren, HostBinding, Input, Output, EventEmitter, QueryList } from '@angular/core';
import { Subject } from 'rxjs';
import { takeUntil, filter, tap, delay } from 'rxjs/operators';
import { ListItemActionComponent } from './list-item-action.component';
import { ListItemCollapseComponent } from './list-item-collapse.component';
import { ListItemFooterComponent } from './list-item-footer.component';
var ListItemComponent = /** @class */ (function () {
    function ListItemComponent(element) {
        this.element = element;
        this.active = false;
        this.collapsed = true;
        this.collapsedChange = new EventEmitter();
        this.showFooter = false;
        this.showActions = false;
        this.showCollapse = false;
        this.dropdownUp = false;
        this.pulse$ = new Subject();
        this.destroy$ = new Subject();
        this.ACTION_ITEM_HEIGHT = 40;
    }
    ListItemComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.pulse$.pipe(filter(function (apply) { return !!apply; }), tap(function () { return _this.element.nativeElement.classList.remove('c8y-list--pulse'); }), delay(100), tap(function () { return _this.element.nativeElement.classList.add('c8y-list--pulse'); }), takeUntil(this.destroy$)).subscribe();
    };
    ListItemComponent.prototype.ngAfterContentChecked = function () {
        this.actions = this.itemActions.toArray();
        this.showFooter = this.itemFooter != null;
        this.showActions = this.itemActions.length > 0;
        this.showCollapse = this.itemCollapse != null;
    };
    ListItemComponent.prototype.ngOnDestroy = function () {
        this.destroy$.next();
        this.destroy$.complete();
    };
    /**
     * A helper function which helps to determine if the dropdown
     * should toggle up.
     */
    ListItemComponent.prototype.showDropdownUp = function () {
        var rect = this.element.nativeElement.getBoundingClientRect();
        this.dropdownUp =
            rect.bottom + this.itemActions.length * this.ACTION_ITEM_HEIGHT > window.innerHeight;
    };
    /**
     * Toggles the collapse state and emits this state as
     * collapsedChange output as boolean.
     */
    ListItemComponent.prototype.toggleCollapsed = function () {
        this.collapsed = !this.collapsed;
        this.collapsedChange.emit(this.collapsed);
    };
    /**
     * Highlights the list-item. This method should be used to show the
     * user that something within this item was changed.
     */
    ListItemComponent.prototype.pulse = function () {
        this.pulse$.next(true);
    };
    ListItemComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    tslib_1.__decorate([
        Input(),
        HostBinding('class.active')
    ], ListItemComponent.prototype, "active", void 0);
    tslib_1.__decorate([
        Input()
    ], ListItemComponent.prototype, "collapsed", void 0);
    tslib_1.__decorate([
        Output()
    ], ListItemComponent.prototype, "collapsedChange", void 0);
    tslib_1.__decorate([
        ContentChild(ListItemFooterComponent, { static: false })
    ], ListItemComponent.prototype, "itemFooter", void 0);
    tslib_1.__decorate([
        ContentChildren(ListItemActionComponent)
    ], ListItemComponent.prototype, "itemActions", void 0);
    tslib_1.__decorate([
        ContentChild(ListItemCollapseComponent, { static: false })
    ], ListItemComponent.prototype, "itemCollapse", void 0);
    ListItemComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-list-item, c8y-li',
            template: "<div [ngClass]=\"{ 'expanded': !collapsed }\">\n  <div class=\"c8y-list__item__block\">\n    <ng-content select=\"c8y-list-item-radio, c8y-li-radio\"></ng-content>\n    <ng-content select=\"c8y-list-item-checkbox, c8y-li-checkbox\"></ng-content>\n\n    <ng-content select=\"c8y-list-item-icon, c8y-li-icon\"></ng-content>\n\n    <div class=\"c8y-list__item__body text-truncate-wrap\">\n      <ng-content select=\"c8y-list-item-body, c8y-li-body\"></ng-content>\n      <ng-content></ng-content>\n      <div class=\"c8y-list__item__footer\" *ngIf=\"showFooter\">\n        <ng-content select=\"c8y-list-item-footer, c8y-li-footer\"></ng-content>\n      </div>\n    </div>\n\n    <div class=\"c8y-list__item__actions\" *ngIf=\"showCollapse || showActions\">\n      <button\n        class=\"collapse-btn\"\n        title=\"{{ 'Expand' | translate }}\"\n        type=\"button\"\n        (click)=\"toggleCollapsed()\"\n        [attr.aria-expanded]=\"!collapsed\"\n        *ngIf=\"showCollapse\"\n      >\n        <i [c8yIcon]=\"'chevron-down'\"></i>\n      </button>\n      <div\n        class=\"dropdown\"\n        dropdown\n        [dropup]=\"dropdownUp\"\n        *ngIf=\"showActions\"\n        (onShown)=\"showDropdownUp()\"\n      >\n        <button\n          class=\"dropdown-toggle c8y-dropdown\"\n          dropdownToggle\n          title=\"{{ 'Actions' | translate }}\"\n          type=\"button\"\n          aria-haspopup=\"true\"\n        >\n          <i [c8yIcon]=\"'ellipsis-v'\"></i>\n        </button>\n        <ul class=\"dropdown-menu dropdown-menu-right\" *dropdownMenu>\n          <ng-content select=\"c8y-list-item-action, c8y-li-action\"></ng-content>\n          <ng-container *ngFor=\"let action of actions\">\n            <ng-container *ngTemplateOutlet=\"action.template\"></ng-container>\n          </ng-container>\n        </ul>\n      </div>\n\n      <ng-content select=\"c8y-list-item-action, c8y-li-action\" *ngIf=\"showActions\"></ng-content>\n    </div>\n  </div>\n\n  <div *ngIf=\"showCollapse\" [collapse]=\"collapsed\" [isAnimated]=\"true\">\n    <div class=\"c8y-list__item__collapse--container\">\n      <ng-content select=\"c8y-list-item-collapse, c8y-li-collapse\"></ng-content>\n    </div>\n  </div>\n</div>\n",
            host: {
                class: 'c8y-list__item'
            }
        })
    ], ListItemComponent);
    return ListItemComponent;
}());
export { ListItemComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC1pdGVtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJjb3JlL2xpc3QtZ3JvdXAvbGlzdC1pdGVtLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUNMLFNBQVMsRUFDVCxZQUFZLEVBQ1osVUFBVSxFQUNWLGVBQWUsRUFDZixXQUFXLEVBQ1gsS0FBSyxFQUNMLE1BQU0sRUFDTixZQUFZLEVBQ1osU0FBUyxFQUNWLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFDL0IsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsR0FBRyxFQUFFLEtBQUssRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQy9ELE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQ3ZFLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQzNFLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBU3ZFO0lBeUJFLDJCQUFtQixPQUFtQjtRQUFuQixZQUFPLEdBQVAsT0FBTyxDQUFZO1FBdEJ0QyxXQUFNLEdBQVksS0FBSyxDQUFDO1FBRXhCLGNBQVMsR0FBWSxJQUFJLENBQUM7UUFFMUIsb0JBQWUsR0FBRyxJQUFJLFlBQVksRUFBVyxDQUFDO1FBUTlDLGVBQVUsR0FBWSxLQUFLLENBQUM7UUFDNUIsZ0JBQVcsR0FBWSxLQUFLLENBQUM7UUFDN0IsaUJBQVksR0FBWSxLQUFLLENBQUM7UUFFOUIsZUFBVSxHQUFZLEtBQUssQ0FBQztRQUVwQixXQUFNLEdBQXFCLElBQUksT0FBTyxFQUFXLENBQUM7UUFDbEQsYUFBUSxHQUFpQixJQUFJLE9BQU8sRUFBRSxDQUFDO1FBQzlCLHVCQUFrQixHQUFHLEVBQUUsQ0FBQztJQUVBLENBQUM7SUFFMUMsb0NBQVEsR0FBUjtRQUFBLGlCQU1DO1FBTEMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFVBQUEsS0FBSyxJQUFJLE9BQUEsQ0FBQyxDQUFDLEtBQUssRUFBUCxDQUFPLENBQUMsRUFDekMsR0FBRyxDQUFDLGNBQU0sT0FBQSxLQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLGlCQUFpQixDQUFDLEVBQTlELENBQThELENBQUMsRUFDekUsS0FBSyxDQUFDLEdBQUcsQ0FBQyxFQUNWLEdBQUcsQ0FBQyxjQUFNLE9BQUEsS0FBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxpQkFBaUIsQ0FBQyxFQUEzRCxDQUEyRCxDQUFDLEVBQ3RFLFNBQVMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUN4QyxDQUFDO0lBRUQsaURBQXFCLEdBQXJCO1FBQ0UsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQzFDLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLFVBQVUsSUFBSSxJQUFJLENBQUM7UUFDMUMsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7UUFDL0MsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsWUFBWSxJQUFJLElBQUksQ0FBQztJQUNoRCxDQUFDO0lBRUQsdUNBQVcsR0FBWDtRQUNFLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDckIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUMzQixDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsMENBQWMsR0FBZDtRQUNFLElBQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLHFCQUFxQixFQUFFLENBQUM7UUFDaEUsSUFBSSxDQUFDLFVBQVU7WUFDYixJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxNQUFNLENBQUMsV0FBVyxDQUFDO0lBQ3pGLENBQUM7SUFFRDs7O09BR0c7SUFDSCwyQ0FBZSxHQUFmO1FBQ0UsSUFBSSxDQUFDLFNBQVMsR0FBRyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUM7UUFDakMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQzVDLENBQUM7SUFFRDs7O09BR0c7SUFDSCxpQ0FBSyxHQUFMO1FBQ0UsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDekIsQ0FBQzs7Z0JBL0MyQixVQUFVOztJQXRCdEM7UUFGQyxLQUFLLEVBQUU7UUFDUCxXQUFXLENBQUMsY0FBYyxDQUFDO3FEQUNKO0lBRXhCO1FBREMsS0FBSyxFQUFFO3dEQUNrQjtJQUUxQjtRQURDLE1BQU0sRUFBRTs4REFDcUM7SUFFOUM7UUFEQyxZQUFZLENBQUMsdUJBQXVCLEVBQUUsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLENBQUM7eURBQ3JCO0lBRXBDO1FBREMsZUFBZSxDQUFDLHVCQUF1QixDQUFDOzBEQUNPO0lBRWhEO1FBREMsWUFBWSxDQUFDLHlCQUF5QixFQUFFLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxDQUFDOzJEQUNuQjtJQWI3QixpQkFBaUI7UUFQN0IsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLHVCQUF1QjtZQUNqQyw2c0VBQXlDO1lBQ3pDLElBQUksRUFBRTtnQkFDSixLQUFLLEVBQUUsZ0JBQWdCO2FBQ3hCO1NBQ0YsQ0FBQztPQUNXLGlCQUFpQixDQXlFN0I7SUFBRCx3QkFBQztDQUFBLEFBekVELElBeUVDO1NBekVZLGlCQUFpQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENvbXBvbmVudCxcbiAgQ29udGVudENoaWxkLFxuICBFbGVtZW50UmVmLFxuICBDb250ZW50Q2hpbGRyZW4sXG4gIEhvc3RCaW5kaW5nLFxuICBJbnB1dCxcbiAgT3V0cHV0LFxuICBFdmVudEVtaXR0ZXIsXG4gIFF1ZXJ5TGlzdFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFN1YmplY3QgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IHRha2VVbnRpbCwgZmlsdGVyLCB0YXAsIGRlbGF5IH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHsgTGlzdEl0ZW1BY3Rpb25Db21wb25lbnQgfSBmcm9tICcuL2xpc3QtaXRlbS1hY3Rpb24uY29tcG9uZW50JztcbmltcG9ydCB7IExpc3RJdGVtQ29sbGFwc2VDb21wb25lbnQgfSBmcm9tICcuL2xpc3QtaXRlbS1jb2xsYXBzZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgTGlzdEl0ZW1Gb290ZXJDb21wb25lbnQgfSBmcm9tICcuL2xpc3QtaXRlbS1mb290ZXIuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LWxpc3QtaXRlbSwgYzh5LWxpJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2xpc3QtaXRlbS5jb21wb25lbnQuaHRtbCcsXG4gIGhvc3Q6IHtcbiAgICBjbGFzczogJ2M4eS1saXN0X19pdGVtJ1xuICB9XG59KVxuZXhwb3J0IGNsYXNzIExpc3RJdGVtQ29tcG9uZW50IHtcbiAgQElucHV0KClcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5hY3RpdmUnKVxuICBhY3RpdmU6IGJvb2xlYW4gPSBmYWxzZTtcbiAgQElucHV0KClcbiAgY29sbGFwc2VkOiBib29sZWFuID0gdHJ1ZTtcbiAgQE91dHB1dCgpXG4gIGNvbGxhcHNlZENoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXI8Ym9vbGVhbj4oKTtcbiAgQENvbnRlbnRDaGlsZChMaXN0SXRlbUZvb3RlckNvbXBvbmVudCwgeyBzdGF0aWM6IGZhbHNlIH0pXG4gIGl0ZW1Gb290ZXI6IExpc3RJdGVtRm9vdGVyQ29tcG9uZW50O1xuICBAQ29udGVudENoaWxkcmVuKExpc3RJdGVtQWN0aW9uQ29tcG9uZW50KVxuICBpdGVtQWN0aW9uczogUXVlcnlMaXN0PExpc3RJdGVtQWN0aW9uQ29tcG9uZW50PjtcbiAgQENvbnRlbnRDaGlsZChMaXN0SXRlbUNvbGxhcHNlQ29tcG9uZW50LCB7IHN0YXRpYzogZmFsc2UgfSlcbiAgaXRlbUNvbGxhcHNlOiBMaXN0SXRlbUNvbGxhcHNlQ29tcG9uZW50O1xuXG4gIHNob3dGb290ZXI6IGJvb2xlYW4gPSBmYWxzZTtcbiAgc2hvd0FjdGlvbnM6IGJvb2xlYW4gPSBmYWxzZTtcbiAgc2hvd0NvbGxhcHNlOiBib29sZWFuID0gZmFsc2U7XG4gIGFjdGlvbnM6IExpc3RJdGVtQWN0aW9uQ29tcG9uZW50W107XG4gIGRyb3Bkb3duVXA6IGJvb2xlYW4gPSBmYWxzZTtcblxuICBwcml2YXRlIHB1bHNlJDogU3ViamVjdDxib29sZWFuPiA9IG5ldyBTdWJqZWN0PGJvb2xlYW4+KCk7XG4gIHByaXZhdGUgZGVzdHJveSQ6IFN1YmplY3Q8YW55PiA9IG5ldyBTdWJqZWN0KCk7XG4gIHByaXZhdGUgcmVhZG9ubHkgQUNUSU9OX0lURU1fSEVJR0hUID0gNDA7XG5cbiAgY29uc3RydWN0b3IocHVibGljIGVsZW1lbnQ6IEVsZW1lbnRSZWYpIHt9XG5cbiAgbmdPbkluaXQoKTogdm9pZCAge1xuICAgIHRoaXMucHVsc2UkLnBpcGUoZmlsdGVyKGFwcGx5ID0+ICEhYXBwbHkpLFxuICAgIHRhcCgoKSA9PiB0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKCdjOHktbGlzdC0tcHVsc2UnKSksXG4gICAgZGVsYXkoMTAwKSxcbiAgICB0YXAoKCkgPT4gdGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnYzh5LWxpc3QtLXB1bHNlJykpLFxuICAgIHRha2VVbnRpbCh0aGlzLmRlc3Ryb3kkKSkuc3Vic2NyaWJlKCk7XG4gIH1cblxuICBuZ0FmdGVyQ29udGVudENoZWNrZWQoKTogdm9pZCB7XG4gICAgdGhpcy5hY3Rpb25zID0gdGhpcy5pdGVtQWN0aW9ucy50b0FycmF5KCk7XG4gICAgdGhpcy5zaG93Rm9vdGVyID0gdGhpcy5pdGVtRm9vdGVyICE9IG51bGw7XG4gICAgdGhpcy5zaG93QWN0aW9ucyA9IHRoaXMuaXRlbUFjdGlvbnMubGVuZ3RoID4gMDtcbiAgICB0aGlzLnNob3dDb2xsYXBzZSA9IHRoaXMuaXRlbUNvbGxhcHNlICE9IG51bGw7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLmRlc3Ryb3kkLm5leHQoKTtcbiAgICB0aGlzLmRlc3Ryb3kkLmNvbXBsZXRlKCk7XG4gIH1cblxuICAvKipcbiAgICogQSBoZWxwZXIgZnVuY3Rpb24gd2hpY2ggaGVscHMgdG8gZGV0ZXJtaW5lIGlmIHRoZSBkcm9wZG93blxuICAgKiBzaG91bGQgdG9nZ2xlIHVwLlxuICAgKi9cbiAgc2hvd0Ryb3Bkb3duVXAoKSB7XG4gICAgY29uc3QgcmVjdCA9IHRoaXMuZWxlbWVudC5uYXRpdmVFbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgIHRoaXMuZHJvcGRvd25VcCA9XG4gICAgICByZWN0LmJvdHRvbSArIHRoaXMuaXRlbUFjdGlvbnMubGVuZ3RoICogdGhpcy5BQ1RJT05fSVRFTV9IRUlHSFQgPiB3aW5kb3cuaW5uZXJIZWlnaHQ7XG4gIH1cblxuICAvKipcbiAgICogVG9nZ2xlcyB0aGUgY29sbGFwc2Ugc3RhdGUgYW5kIGVtaXRzIHRoaXMgc3RhdGUgYXNcbiAgICogY29sbGFwc2VkQ2hhbmdlIG91dHB1dCBhcyBib29sZWFuLlxuICAgKi9cbiAgdG9nZ2xlQ29sbGFwc2VkKCkge1xuICAgIHRoaXMuY29sbGFwc2VkID0gIXRoaXMuY29sbGFwc2VkO1xuICAgIHRoaXMuY29sbGFwc2VkQ2hhbmdlLmVtaXQodGhpcy5jb2xsYXBzZWQpO1xuICB9XG5cbiAgLyoqXG4gICAqIEhpZ2hsaWdodHMgdGhlIGxpc3QtaXRlbS4gVGhpcyBtZXRob2Qgc2hvdWxkIGJlIHVzZWQgdG8gc2hvdyB0aGVcbiAgICogdXNlciB0aGF0IHNvbWV0aGluZyB3aXRoaW4gdGhpcyBpdGVtIHdhcyBjaGFuZ2VkLlxuICAgKi9cbiAgcHVsc2UoKSB7XG4gICAgdGhpcy5wdWxzZSQubmV4dCh0cnVlKTtcbiAgfVxufVxuIl19