import { gettext } from '../i18n/gettext';
import { formatDate } from '@angular/common';
// TODO remove  when c8y-icon will works
export var deviceAvailabilityIconMap = {
    sendData: {
        AVAILABLE: {
            icon: 'long-arrow-right',
            class: 'statusOk'
        },
        UNAVAILABLE: {
            icon: 'long-arrow-right',
            class: 'statusNok'
        },
        UNKNOWN: {
            icon: 'long-arrow-right',
            class: 'statusUnknown'
        },
        NOT_MONITORED: {
            icon: 'long-arrow-right',
            class: 'statusUnknown'
        }
    },
    push: {
        CONNECTED: {
            icon: 'long-arrow-left',
            class: 'statusOk'
        },
        DISCONNECTED: {
            icon: 'long-arrow-left',
            class: 'statusUnknown'
        },
        UNKNOWN: {
            icon: 'long-arrow-left',
            class: 'statusUnknown'
        },
        MAINTENANCE: {
            icon: 'wrench',
            class: 'statusAlert'
        }
    },
    device: {
        MAINTENANCE: {
            icon: 'wrench',
            class: 'statusAlert'
        }
    }
};
var ɵ0 = function (lastMessage, translateService) {
    var date = formatDate(new Date(lastMessage), 'medium', translateService.currentLang);
    return translateService.instant(gettext('Device last request:\n{{date}}'), { date: date });
};
export var tooltips = {
    sendStatusConnected: ɵ0,
    sendStatusDisconnected: gettext('Connection not monitored'),
    pushStatusConnected: gettext('Connection to device established'),
    pushStatusDisconnected: gettext('Connection to device not established (not supported by device or no connectivity)'),
    maintenance: gettext('Device is under maintenance')
};
export var PushStatusLabels;
(function (PushStatusLabels) {
    PushStatusLabels[PushStatusLabels["CONNECTED"] = gettext('Push connection: active')] = "CONNECTED";
    PushStatusLabels[PushStatusLabels["DISCONNECTED"] = gettext('Push connection: inactive')] = "DISCONNECTED";
    PushStatusLabels[PushStatusLabels["UNKNOWN"] = gettext('Push connection: inactive')] = "UNKNOWN";
})(PushStatusLabels || (PushStatusLabels = {}));
export var SendStatusLabels;
(function (SendStatusLabels) {
    SendStatusLabels[SendStatusLabels["AVAILABLE"] = gettext('Send connection: online')] = "AVAILABLE";
    SendStatusLabels[SendStatusLabels["NOT_MONITORED"] = gettext('Send connection: not monitored')] = "NOT_MONITORED";
    SendStatusLabels[SendStatusLabels["UNAVAILABLE"] = gettext('Send connection: offline')] = "UNAVAILABLE";
    SendStatusLabels[SendStatusLabels["UNKNOWN"] = gettext('Send connection status unknown')] = "UNKNOWN";
    SendStatusLabels[SendStatusLabels["MAINTENANCE"] = gettext('Device is under maintenance')] = "MAINTENANCE";
})(SendStatusLabels || (SendStatusLabels = {}));
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGV2aWNlLWF2YWlsYWJpbGl0eS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJjb3JlL2RldmljZS1zdGF0dXMvZGV2aWNlLWF2YWlsYWJpbGl0eS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDMUMsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQzdDLHdDQUF3QztBQUV4QyxNQUFNLENBQUMsSUFBTSx5QkFBeUIsR0FBRztJQUN2QyxRQUFRLEVBQUU7UUFDUixTQUFTLEVBQUU7WUFDVCxJQUFJLEVBQUUsa0JBQWtCO1lBQ3hCLEtBQUssRUFBRSxVQUFVO1NBQ2xCO1FBQ0QsV0FBVyxFQUFFO1lBQ1gsSUFBSSxFQUFFLGtCQUFrQjtZQUN4QixLQUFLLEVBQUUsV0FBVztTQUNuQjtRQUNELE9BQU8sRUFBRTtZQUNQLElBQUksRUFBRSxrQkFBa0I7WUFDeEIsS0FBSyxFQUFFLGVBQWU7U0FDdkI7UUFDRCxhQUFhLEVBQUU7WUFDYixJQUFJLEVBQUUsa0JBQWtCO1lBQ3hCLEtBQUssRUFBRSxlQUFlO1NBQ3ZCO0tBQ0Y7SUFDRCxJQUFJLEVBQUU7UUFDSixTQUFTLEVBQUU7WUFDVCxJQUFJLEVBQUUsaUJBQWlCO1lBQ3ZCLEtBQUssRUFBRSxVQUFVO1NBQ2xCO1FBQ0QsWUFBWSxFQUFFO1lBQ1osSUFBSSxFQUFFLGlCQUFpQjtZQUN2QixLQUFLLEVBQUUsZUFBZTtTQUN2QjtRQUNELE9BQU8sRUFBRTtZQUNQLElBQUksRUFBRSxpQkFBaUI7WUFDdkIsS0FBSyxFQUFFLGVBQWU7U0FDdkI7UUFDRCxXQUFXLEVBQUU7WUFDWCxJQUFJLEVBQUUsUUFBUTtZQUNkLEtBQUssRUFBRSxhQUFhO1NBQ3JCO0tBQ0Y7SUFDRCxNQUFNLEVBQUU7UUFDTixXQUFXLEVBQUU7WUFDWCxJQUFJLEVBQUUsUUFBUTtZQUNkLEtBQUssRUFBRSxhQUFhO1NBQ3JCO0tBQ0Y7Q0FDRixDQUFDO1NBRzRCLFVBQUMsV0FBVyxFQUFFLGdCQUFnQjtJQUNqRCxJQUFNLElBQUksR0FBRyxVQUFVLENBQUMsSUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDLEVBQUUsUUFBUSxFQUFFLGdCQUFnQixDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ3ZGLE9BQU8sZ0JBQWdCLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxnQ0FBZ0MsQ0FBQyxFQUFFLEVBQUUsSUFBSSxNQUFBLEVBQUUsQ0FBQyxDQUFDO0FBQ3ZGLENBQUM7QUFKVixNQUFNLENBQUMsSUFBTSxRQUFRLEdBQUc7SUFDZixtQkFBbUIsSUFHbEI7SUFDRCxzQkFBc0IsRUFBRSxPQUFPLENBQUMsMEJBQTBCLENBQUM7SUFDM0QsbUJBQW1CLEVBQUUsT0FBTyxDQUFDLGtDQUFrQyxDQUFDO0lBQ2hFLHNCQUFzQixFQUFFLE9BQU8sQ0FDN0IsbUZBQW1GLENBQ3BGO0lBQ0QsV0FBVyxFQUFFLE9BQU8sQ0FBQyw2QkFBNkIsQ0FBQztDQUNwRCxDQUFDO0FBRVQsTUFBTSxDQUFOLElBQVksZ0JBSVg7QUFKRCxXQUFZLGdCQUFnQjtJQUMxQixpREFBWSxPQUFPLENBQUMseUJBQXlCLENBQUMsZUFBQSxDQUFBO0lBQzlDLG9EQUFlLE9BQU8sQ0FBQywyQkFBMkIsQ0FBQyxrQkFBQSxDQUFBO0lBQ25ELCtDQUFVLE9BQU8sQ0FBQywyQkFBMkIsQ0FBQyxhQUFBLENBQUE7QUFDaEQsQ0FBQyxFQUpXLGdCQUFnQixLQUFoQixnQkFBZ0IsUUFJM0I7QUFFRCxNQUFNLENBQU4sSUFBWSxnQkFNWDtBQU5ELFdBQVksZ0JBQWdCO0lBQzFCLGlEQUFZLE9BQU8sQ0FBQyx5QkFBeUIsQ0FBQyxlQUFBLENBQUE7SUFDOUMscURBQWdCLE9BQU8sQ0FBQyxnQ0FBZ0MsQ0FBQyxtQkFBQSxDQUFBO0lBQ3pELG1EQUFjLE9BQU8sQ0FBQywwQkFBMEIsQ0FBQyxpQkFBQSxDQUFBO0lBQ2pELCtDQUFVLE9BQU8sQ0FBQyxnQ0FBZ0MsQ0FBQyxhQUFBLENBQUE7SUFDbkQsbURBQWMsT0FBTyxDQUFDLDZCQUE2QixDQUFDLGlCQUFBLENBQUE7QUFDdEQsQ0FBQyxFQU5XLGdCQUFnQixLQUFoQixnQkFBZ0IsUUFNM0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXR0ZXh0IH0gZnJvbSAnLi4vaTE4bi9nZXR0ZXh0JztcbmltcG9ydCB7IGZvcm1hdERhdGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuLy8gVE9ETyByZW1vdmUgIHdoZW4gYzh5LWljb24gd2lsbCB3b3Jrc1xuXG5leHBvcnQgY29uc3QgZGV2aWNlQXZhaWxhYmlsaXR5SWNvbk1hcCA9IHtcbiAgc2VuZERhdGE6IHtcbiAgICBBVkFJTEFCTEU6IHtcbiAgICAgIGljb246ICdsb25nLWFycm93LXJpZ2h0JyxcbiAgICAgIGNsYXNzOiAnc3RhdHVzT2snXG4gICAgfSxcbiAgICBVTkFWQUlMQUJMRToge1xuICAgICAgaWNvbjogJ2xvbmctYXJyb3ctcmlnaHQnLFxuICAgICAgY2xhc3M6ICdzdGF0dXNOb2snXG4gICAgfSxcbiAgICBVTktOT1dOOiB7XG4gICAgICBpY29uOiAnbG9uZy1hcnJvdy1yaWdodCcsXG4gICAgICBjbGFzczogJ3N0YXR1c1Vua25vd24nXG4gICAgfSxcbiAgICBOT1RfTU9OSVRPUkVEOiB7XG4gICAgICBpY29uOiAnbG9uZy1hcnJvdy1yaWdodCcsXG4gICAgICBjbGFzczogJ3N0YXR1c1Vua25vd24nXG4gICAgfVxuICB9LFxuICBwdXNoOiB7XG4gICAgQ09OTkVDVEVEOiB7XG4gICAgICBpY29uOiAnbG9uZy1hcnJvdy1sZWZ0JyxcbiAgICAgIGNsYXNzOiAnc3RhdHVzT2snXG4gICAgfSxcbiAgICBESVNDT05ORUNURUQ6IHtcbiAgICAgIGljb246ICdsb25nLWFycm93LWxlZnQnLFxuICAgICAgY2xhc3M6ICdzdGF0dXNVbmtub3duJ1xuICAgIH0sXG4gICAgVU5LTk9XTjoge1xuICAgICAgaWNvbjogJ2xvbmctYXJyb3ctbGVmdCcsXG4gICAgICBjbGFzczogJ3N0YXR1c1Vua25vd24nXG4gICAgfSxcbiAgICBNQUlOVEVOQU5DRToge1xuICAgICAgaWNvbjogJ3dyZW5jaCcsXG4gICAgICBjbGFzczogJ3N0YXR1c0FsZXJ0J1xuICAgIH1cbiAgfSxcbiAgZGV2aWNlOiB7XG4gICAgTUFJTlRFTkFOQ0U6IHtcbiAgICAgIGljb246ICd3cmVuY2gnLFxuICAgICAgY2xhc3M6ICdzdGF0dXNBbGVydCdcbiAgICB9XG4gIH1cbn07XG5cbmV4cG9ydCBjb25zdCB0b29sdGlwcyA9IHtcbiAgICAgICAgIHNlbmRTdGF0dXNDb25uZWN0ZWQ6IChsYXN0TWVzc2FnZSwgdHJhbnNsYXRlU2VydmljZSkgPT4ge1xuICAgICAgICAgICBjb25zdCBkYXRlID0gZm9ybWF0RGF0ZShuZXcgRGF0ZShsYXN0TWVzc2FnZSksICdtZWRpdW0nLCB0cmFuc2xhdGVTZXJ2aWNlLmN1cnJlbnRMYW5nKTtcbiAgICAgICAgICAgcmV0dXJuIHRyYW5zbGF0ZVNlcnZpY2UuaW5zdGFudChnZXR0ZXh0KCdEZXZpY2UgbGFzdCByZXF1ZXN0Olxcbnt7ZGF0ZX19JyksIHsgZGF0ZSB9KTtcbiAgICAgICAgIH0sXG4gICAgICAgICBzZW5kU3RhdHVzRGlzY29ubmVjdGVkOiBnZXR0ZXh0KCdDb25uZWN0aW9uIG5vdCBtb25pdG9yZWQnKSxcbiAgICAgICAgIHB1c2hTdGF0dXNDb25uZWN0ZWQ6IGdldHRleHQoJ0Nvbm5lY3Rpb24gdG8gZGV2aWNlIGVzdGFibGlzaGVkJyksXG4gICAgICAgICBwdXNoU3RhdHVzRGlzY29ubmVjdGVkOiBnZXR0ZXh0KFxuICAgICAgICAgICAnQ29ubmVjdGlvbiB0byBkZXZpY2Ugbm90IGVzdGFibGlzaGVkIChub3Qgc3VwcG9ydGVkIGJ5IGRldmljZSBvciBubyBjb25uZWN0aXZpdHkpJ1xuICAgICAgICAgKSxcbiAgICAgICAgIG1haW50ZW5hbmNlOiBnZXR0ZXh0KCdEZXZpY2UgaXMgdW5kZXIgbWFpbnRlbmFuY2UnKVxuICAgICAgIH07XG5cbmV4cG9ydCBlbnVtIFB1c2hTdGF0dXNMYWJlbHMge1xuICBDT05ORUNURUQgPSBnZXR0ZXh0KCdQdXNoIGNvbm5lY3Rpb246IGFjdGl2ZScpLFxuICBESVNDT05ORUNURUQgPSBnZXR0ZXh0KCdQdXNoIGNvbm5lY3Rpb246IGluYWN0aXZlJyksXG4gIFVOS05PV04gPSBnZXR0ZXh0KCdQdXNoIGNvbm5lY3Rpb246IGluYWN0aXZlJylcbn1cblxuZXhwb3J0IGVudW0gU2VuZFN0YXR1c0xhYmVscyB7XG4gIEFWQUlMQUJMRSA9IGdldHRleHQoJ1NlbmQgY29ubmVjdGlvbjogb25saW5lJyksXG4gIE5PVF9NT05JVE9SRUQgPSBnZXR0ZXh0KCdTZW5kIGNvbm5lY3Rpb246IG5vdCBtb25pdG9yZWQnKSxcbiAgVU5BVkFJTEFCTEUgPSBnZXR0ZXh0KCdTZW5kIGNvbm5lY3Rpb246IG9mZmxpbmUnKSxcbiAgVU5LTk9XTiA9IGdldHRleHQoJ1NlbmQgY29ubmVjdGlvbiBzdGF0dXMgdW5rbm93bicpLFxuICBNQUlOVEVOQU5DRSA9IGdldHRleHQoJ0RldmljZSBpcyB1bmRlciBtYWludGVuYW5jZScpXG59XG4iXX0=