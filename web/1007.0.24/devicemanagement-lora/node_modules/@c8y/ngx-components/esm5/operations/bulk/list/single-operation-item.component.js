import * as tslib_1 from "tslib";
import { Component, Input, ViewChild } from '@angular/core';
import { AlertService, gettext } from '@c8y/ngx-components';
import { BulkOperationsService, C8Y_BULK_TYPE_FRAGMENTS } from '../bulk-operations.service';
import { omit } from 'lodash-es';
import { SINGLE_OP_STATUS_NAMES, SINGLE_OP_STATUS_PROPERTIES } from './single-operation-item.model';
var SingleOperationItemComponent = /** @class */ (function () {
    function SingleOperationItemComponent(bulkOperationsService, alertService) {
        this.bulkOperationsService = bulkOperationsService;
        this.alertService = alertService;
        this.device = {};
        this.showIfTextTruncated = false;
        this.singleOperationStatusNames = SINGLE_OP_STATUS_NAMES;
        this.singleOperationsStatusProperties = SINGLE_OP_STATUS_PROPERTIES;
        this.readOnly = false;
    }
    SingleOperationItemComponent.prototype.ngOnInit = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var _a;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        this.iconClass = this.getIconClass();
                        _a = this;
                        return [4 /*yield*/, this.getDeviceMO(this.operation.deviceId)];
                    case 1:
                        _a.device = _b.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    SingleOperationItemComponent.prototype.ngAfterViewInit = function () {
        this.isTextTruncated();
    };
    SingleOperationItemComponent.prototype.retrySingleOperation = function (singleOperation) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var operationToCreate, er_1;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        operationToCreate = omit(singleOperation, [
                            'id',
                            'self',
                            'status',
                            'failureReason',
                            'creationTime',
                            'delivery'
                        ]);
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 3, , 4]);
                        return [4 /*yield*/, this.bulkOperationsService.createSingleOperation(operationToCreate)];
                    case 2:
                        _a.sent();
                        this.alertService.success(gettext('Operation created.'));
                        return [3 /*break*/, 4];
                    case 3:
                        er_1 = _a.sent();
                        this.alertService.addServerFailure(er_1);
                        return [3 /*break*/, 4];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    SingleOperationItemComponent.prototype.getIconClass = function () {
        var _this = this;
        return this.singleOperationsStatusProperties.find(function (operationProperties) { return operationProperties.label.toUpperCase() === _this.operation.status; }).iconClass;
    };
    SingleOperationItemComponent.prototype.getDeviceMO = function (deviceId) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var inventoryMO;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.bulkOperationsService.getManagedObject(deviceId)];
                    case 1:
                        inventoryMO = _a.sent();
                        if (inventoryMO) {
                            return [2 /*return*/, inventoryMO.data];
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    SingleOperationItemComponent.prototype.isTextTruncated = function () {
        if (this.operation.failureReason) {
            var el = this.failureReasonRef.nativeElement;
            this.showIfTextTruncated = el.offsetWidth < el.scrollWidth ? true : false;
        }
    };
    SingleOperationItemComponent.ctorParameters = function () { return [
        { type: BulkOperationsService },
        { type: AlertService }
    ]; };
    tslib_1.__decorate([
        Input()
    ], SingleOperationItemComponent.prototype, "operation", void 0);
    tslib_1.__decorate([
        Input()
    ], SingleOperationItemComponent.prototype, "readOnly", void 0);
    tslib_1.__decorate([
        ViewChild('failureReason', { static: true })
    ], SingleOperationItemComponent.prototype, "failureReasonRef", void 0);
    SingleOperationItemComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-single-operation-item',
            template: "<c8y-li class=\"c8y-list__item--double-actions\">\n  <c8y-li-icon>\n    <i [class]=\"iconClass\"></i>\n  </c8y-li-icon>\n  <div [ngClass]=\"{'content-flex-80': !readOnly, 'content-flex-50': readOnly}\">\n    <div class=\"col-4\">\n      <span class=\"m-r-4\">\n        <device-status [mo]=\"\"></device-status>\n      </span>\n      <a [routerLink]=\"['/device', operation.deviceId, 'device-info']\" routerLinkActive=\"active\">\n        {{ operation.deviceName }}\n      </a>\n    </div>\n    <div class=\"col-3\">\n      <small class=\"icon-flex text-muted\">\n        <i c8yIcon=\"calendar\" class=\"m-r-4\"></i>\n        {{ operation.creationTime | c8yDate }}\n      </small>\n    </div>\n    <div class=\"col-5\">\n      <div class=\"flex-row\">\n        <span class=\"text-truncate\" #failureReason>\n          {{ operation.failureReason | translate }}\n        </span>\n        <a\n          *ngIf=\"showIfTextTruncated\"\n          class=\"m-l-8\"\n          popover=\"{{ operation.failureReason | translate }}\"\n          placement=\"left\"\n          outsideClick=\"true\"\n        >\n          <i [c8yIcon]=\"'info-circle text-primary'\"></i>\n        </a>\n        <div\n          class=\"showOnHover p-l-8 p-r-8 v-fit-20 flex-item-right\"\n          *ngIf=\"!readOnly && operation.status == singleOperationStatusNames.FAILED.toUpperCase()\"\n        >\n          <a\n            class=\"btn btn-default btn-xs\"\n            (click)=\"retrySingleOperation(operation)\"\n            title=\"{{ 'Retry operation' | translate }}\"\n          >\n            <i [c8yIcon]=\"'repeat m-r-4'\"></i><span translate>Retry operation</span>\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</c8y-li>\n"
        })
    ], SingleOperationItemComponent);
    return SingleOperationItemComponent;
}());
export { SingleOperationItemComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2luZ2xlLW9wZXJhdGlvbi1pdGVtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvb3BlcmF0aW9ucy8iLCJzb3VyY2VzIjpbImJ1bGsvbGlzdC9zaW5nbGUtb3BlcmF0aW9uLWl0ZW0uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFjLEtBQUssRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFeEUsT0FBTyxFQUFFLFlBQVksRUFBRSxPQUFPLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUM1RCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUM1RixPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQ2pDLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSwyQkFBMkIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBTXBHO0lBWUUsc0NBQ1UscUJBQTRDLEVBQzVDLFlBQTBCO1FBRDFCLDBCQUFxQixHQUFyQixxQkFBcUIsQ0FBdUI7UUFDNUMsaUJBQVksR0FBWixZQUFZLENBQWM7UUFicEMsV0FBTSxHQUFHLEVBQUUsQ0FBQztRQUNaLHdCQUFtQixHQUFHLEtBQUssQ0FBQztRQUM1QiwrQkFBMEIsR0FBRyxzQkFBc0IsQ0FBQztRQUNwRCxxQ0FBZ0MsR0FBRywyQkFBMkIsQ0FBQztRQUsvRCxhQUFRLEdBQVksS0FBSyxDQUFDO0lBTXZCLENBQUM7SUFFRSwrQ0FBUSxHQUFkOzs7Ozs7d0JBQ0UsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7d0JBQ3JDLEtBQUEsSUFBSSxDQUFBO3dCQUFVLHFCQUFNLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsRUFBQTs7d0JBQTdELEdBQUssTUFBTSxHQUFHLFNBQStDLENBQUM7Ozs7O0tBQy9EO0lBRUQsc0RBQWUsR0FBZjtRQUNFLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUN6QixDQUFDO0lBRUssMkRBQW9CLEdBQTFCLFVBQTJCLGVBQWU7Ozs7Ozt3QkFDbEMsaUJBQWlCLEdBQUcsSUFBSSxDQUFDLGVBQWUsRUFBRTs0QkFDOUMsSUFBSTs0QkFDSixNQUFNOzRCQUNOLFFBQVE7NEJBQ1IsZUFBZTs0QkFDZixjQUFjOzRCQUNkLFVBQVU7eUJBQ1gsQ0FBQyxDQUFDOzs7O3dCQUdELHFCQUFNLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxxQkFBcUIsQ0FBQyxpQkFBaUIsQ0FBQyxFQUFBOzt3QkFBekUsU0FBeUUsQ0FBQzt3QkFDMUUsSUFBSSxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLG9CQUFvQixDQUFDLENBQUMsQ0FBQzs7Ozt3QkFFekQsSUFBSSxDQUFDLFlBQVksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFFLENBQUMsQ0FBQzs7Ozs7O0tBRTFDO0lBRUQsbURBQVksR0FBWjtRQUFBLGlCQUlDO1FBSEMsT0FBTyxJQUFJLENBQUMsZ0NBQWdDLENBQUMsSUFBSSxDQUMvQyxVQUFBLG1CQUFtQixJQUFJLE9BQUEsbUJBQW1CLENBQUMsS0FBSyxDQUFDLFdBQVcsRUFBRSxLQUFLLEtBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxFQUFqRSxDQUFpRSxDQUN6RixDQUFDLFNBQVMsQ0FBQztJQUNkLENBQUM7SUFFYSxrREFBVyxHQUF6QixVQUEwQixRQUFROzs7Ozs0QkFDWixxQkFBTSxJQUFJLENBQUMscUJBQXFCLENBQUMsZ0JBQWdCLENBQUMsUUFBUSxDQUFDLEVBQUE7O3dCQUF6RSxXQUFXLEdBQUcsU0FBMkQ7d0JBQy9FLElBQUksV0FBVyxFQUFFOzRCQUNmLHNCQUFPLFdBQVcsQ0FBQyxJQUFJLEVBQUM7eUJBQ3pCOzs7OztLQUNGO0lBRU8sc0RBQWUsR0FBdkI7UUFDRSxJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsYUFBYSxFQUFFO1lBQ2hDLElBQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxhQUFhLENBQUM7WUFDL0MsSUFBSSxDQUFDLG1CQUFtQixHQUFHLEVBQUUsQ0FBQyxXQUFXLEdBQUcsRUFBRSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7U0FDM0U7SUFDSCxDQUFDOztnQkFqRGdDLHFCQUFxQjtnQkFDOUIsWUFBWTs7SUFQcEM7UUFEQyxLQUFLLEVBQUU7bUVBQ2M7SUFFdEI7UUFEQyxLQUFLLEVBQUU7a0VBQ2tCO0lBQ29CO1FBQTdDLFNBQVMsQ0FBQyxlQUFlLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLENBQUM7MEVBQThCO0lBVmhFLDRCQUE0QjtRQUp4QyxTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsMkJBQTJCO1lBQ3JDLHVzREFBcUQ7U0FDdEQsQ0FBQztPQUNXLDRCQUE0QixDQStEeEM7SUFBRCxtQ0FBQztDQUFBLEFBL0RELElBK0RDO1NBL0RZLDRCQUE0QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRWxlbWVudFJlZiwgSW5wdXQsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSU9wZXJhdGlvbiB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IEFsZXJ0U2VydmljZSwgZ2V0dGV4dCB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgQnVsa09wZXJhdGlvbnNTZXJ2aWNlLCBDOFlfQlVMS19UWVBFX0ZSQUdNRU5UUyB9IGZyb20gJy4uL2J1bGstb3BlcmF0aW9ucy5zZXJ2aWNlJztcbmltcG9ydCB7IG9taXQgfSBmcm9tICdsb2Rhc2gtZXMnO1xuaW1wb3J0IHsgU0lOR0xFX09QX1NUQVRVU19OQU1FUywgU0lOR0xFX09QX1NUQVRVU19QUk9QRVJUSUVTIH0gZnJvbSAnLi9zaW5nbGUtb3BlcmF0aW9uLWl0ZW0ubW9kZWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktc2luZ2xlLW9wZXJhdGlvbi1pdGVtJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3NpbmdsZS1vcGVyYXRpb24taXRlbS5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgU2luZ2xlT3BlcmF0aW9uSXRlbUNvbXBvbmVudCB7XG4gIGRldmljZSA9IHt9O1xuICBzaG93SWZUZXh0VHJ1bmNhdGVkID0gZmFsc2U7XG4gIHNpbmdsZU9wZXJhdGlvblN0YXR1c05hbWVzID0gU0lOR0xFX09QX1NUQVRVU19OQU1FUztcbiAgc2luZ2xlT3BlcmF0aW9uc1N0YXR1c1Byb3BlcnRpZXMgPSBTSU5HTEVfT1BfU1RBVFVTX1BST1BFUlRJRVM7XG4gIGljb25DbGFzczogc3RyaW5nO1xuICBASW5wdXQoKVxuICBvcGVyYXRpb246IElPcGVyYXRpb247XG4gIEBJbnB1dCgpXG4gIHJlYWRPbmx5OiBib29sZWFuID0gZmFsc2U7XG4gIEBWaWV3Q2hpbGQoJ2ZhaWx1cmVSZWFzb24nLCB7IHN0YXRpYzogdHJ1ZSB9KSBmYWlsdXJlUmVhc29uUmVmOiBFbGVtZW50UmVmO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgYnVsa09wZXJhdGlvbnNTZXJ2aWNlOiBCdWxrT3BlcmF0aW9uc1NlcnZpY2UsXG4gICAgcHJpdmF0ZSBhbGVydFNlcnZpY2U6IEFsZXJ0U2VydmljZVxuICApIHt9XG5cbiAgYXN5bmMgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5pY29uQ2xhc3MgPSB0aGlzLmdldEljb25DbGFzcygpO1xuICAgIHRoaXMuZGV2aWNlID0gYXdhaXQgdGhpcy5nZXREZXZpY2VNTyh0aGlzLm9wZXJhdGlvbi5kZXZpY2VJZCk7XG4gIH1cblxuICBuZ0FmdGVyVmlld0luaXQoKSB7XG4gICAgdGhpcy5pc1RleHRUcnVuY2F0ZWQoKTtcbiAgfVxuXG4gIGFzeW5jIHJldHJ5U2luZ2xlT3BlcmF0aW9uKHNpbmdsZU9wZXJhdGlvbikge1xuICAgIGNvbnN0IG9wZXJhdGlvblRvQ3JlYXRlID0gb21pdChzaW5nbGVPcGVyYXRpb24sIFtcbiAgICAgICdpZCcsXG4gICAgICAnc2VsZicsXG4gICAgICAnc3RhdHVzJyxcbiAgICAgICdmYWlsdXJlUmVhc29uJyxcbiAgICAgICdjcmVhdGlvblRpbWUnLFxuICAgICAgJ2RlbGl2ZXJ5J1xuICAgIF0pO1xuXG4gICAgdHJ5IHtcbiAgICAgIGF3YWl0IHRoaXMuYnVsa09wZXJhdGlvbnNTZXJ2aWNlLmNyZWF0ZVNpbmdsZU9wZXJhdGlvbihvcGVyYXRpb25Ub0NyZWF0ZSk7XG4gICAgICB0aGlzLmFsZXJ0U2VydmljZS5zdWNjZXNzKGdldHRleHQoJ09wZXJhdGlvbiBjcmVhdGVkLicpKTtcbiAgICB9IGNhdGNoIChlcikge1xuICAgICAgdGhpcy5hbGVydFNlcnZpY2UuYWRkU2VydmVyRmFpbHVyZShlcik7XG4gICAgfVxuICB9XG5cbiAgZ2V0SWNvbkNsYXNzKCkge1xuICAgIHJldHVybiB0aGlzLnNpbmdsZU9wZXJhdGlvbnNTdGF0dXNQcm9wZXJ0aWVzLmZpbmQoXG4gICAgICBvcGVyYXRpb25Qcm9wZXJ0aWVzID0+IG9wZXJhdGlvblByb3BlcnRpZXMubGFiZWwudG9VcHBlckNhc2UoKSA9PT0gdGhpcy5vcGVyYXRpb24uc3RhdHVzXG4gICAgKS5pY29uQ2xhc3M7XG4gIH1cblxuICBwcml2YXRlIGFzeW5jIGdldERldmljZU1PKGRldmljZUlkKSB7XG4gICAgY29uc3QgaW52ZW50b3J5TU8gPSBhd2FpdCB0aGlzLmJ1bGtPcGVyYXRpb25zU2VydmljZS5nZXRNYW5hZ2VkT2JqZWN0KGRldmljZUlkKTtcbiAgICBpZiAoaW52ZW50b3J5TU8pIHtcbiAgICAgIHJldHVybiBpbnZlbnRvcnlNTy5kYXRhO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgaXNUZXh0VHJ1bmNhdGVkKCkge1xuICAgIGlmICh0aGlzLm9wZXJhdGlvbi5mYWlsdXJlUmVhc29uKSB7XG4gICAgICBjb25zdCBlbCA9IHRoaXMuZmFpbHVyZVJlYXNvblJlZi5uYXRpdmVFbGVtZW50O1xuICAgICAgdGhpcy5zaG93SWZUZXh0VHJ1bmNhdGVkID0gZWwub2Zmc2V0V2lkdGggPCBlbC5zY3JvbGxXaWR0aCA/IHRydWUgOiBmYWxzZTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==