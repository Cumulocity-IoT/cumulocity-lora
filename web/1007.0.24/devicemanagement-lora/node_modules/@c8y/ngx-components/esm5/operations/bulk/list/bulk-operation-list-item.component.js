import * as tslib_1 from "tslib";
import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { OperationBulkGeneralStatus } from '@c8y/client';
import { AlertService, gettext, ListItemComponent, ModalService, Status } from '@c8y/ngx-components';
import { assign, cloneDeep } from 'lodash-es';
import { BsModalRef, BsModalService, ModalOptions } from 'ngx-bootstrap/modal';
import { BulkOperationsService } from '../bulk-operations.service';
import { BulkOperationsRescheduleModalComponent } from '../modal/bulk-operations-reschedule-modal.component';
import { BULK_OPERATION_STATUS_OPTIONS } from './bulk-operation-list-item.model';
var BulkOperationListItemComponent = /** @class */ (function () {
    function BulkOperationListItemComponent(bulkOperationsService, modal, alert, bsModalService) {
        this.bulkOperationsService = bulkOperationsService;
        this.modal = modal;
        this.alert = alert;
        this.bsModalService = bsModalService;
        this.detailsCollapsed = true;
        this.readOnly = false;
        this.showFailedOperation = new EventEmitter();
        this.reload = new EventEmitter();
        this.refreshLoading = false;
        this.bulkOperationGeneralStatus = OperationBulkGeneralStatus;
        this.bulkOperationStatusOptions = BULK_OPERATION_STATUS_OPTIONS;
        this.finishDatePopoverText = gettext('Approximate date, estimated based on the bulk operation settings.');
        this.progressBarClass = 'progress';
        this.progressBarStatus = 0;
    }
    BulkOperationListItemComponent.prototype.ngOnInit = function () {
        this.iconClass = this.getIconClass();
        this.finishDate = this.calculateFinishDateMs();
        this.setProgressBar();
    };
    BulkOperationListItemComponent.prototype.ngOnChanges = function (changes) {
        if (changes.bulkOperation && !changes.bulkOperation.firstChange) {
            this.iconClass = this.getIconClass();
            this.setProgressBar();
        }
    };
    BulkOperationListItemComponent.prototype.getIconClass = function () {
        var _this = this;
        return this.bulkOperationStatusOptions.find(function (statusOption) {
            return statusOption.generalStatus.includes(_this.bulkOperation.generalStatus);
        }).iconClass;
    };
    BulkOperationListItemComponent.prototype.calculateFinishDateMs = function () {
        var startDateMs = new Date(this.bulkOperation.startDate).getTime();
        var creationRampMs = this.bulkOperation.creationRamp * 1000;
        return startDateMs + creationRampMs * this.bulkOperation.progress.all;
    };
    BulkOperationListItemComponent.prototype.progressBarProgressFn = function () {
        return (((this.bulkOperation.progress.successful + this.bulkOperation.progress.failed) /
            this.bulkOperation.progress.all) *
            100);
    };
    BulkOperationListItemComponent.prototype.setProgressBar = function () {
        var staticContentOfClass = 'progress-bar progress-striped active progress-bar';
        var progressBarState = {
            EXECUTING: {
                progressBarClass: 'progress progress-striped active',
                progressBarColor: staticContentOfClass + "-primary",
                progressBarStatus: this.progressBarProgressFn()
            },
            EXECUTING_WITH_ERROR: {
                progressBarClass: 'progress progress-striped active',
                progressBarColor: staticContentOfClass + "-danger",
                progressBarStatus: this.progressBarProgressFn()
            },
            FAILED: {
                progressBarClass: 'progress',
                progressBarColor: staticContentOfClass + "-danger",
                progressBarStatus: 100
            },
            SUCCESSFUL: {
                progressBarClass: 'progress',
                progressBarColor: staticContentOfClass + "-success",
                progressBarStatus: 100
            }
        };
        assign(this, progressBarState[this.bulkOperation.generalStatus]);
    };
    BulkOperationListItemComponent.prototype.editSchedule = function () {
        var rescheduledOperation = cloneDeep(this.bulkOperation);
        var initialState = {
            bulkOperation: rescheduledOperation
        };
        var modalOptions = { initialState: initialState, class: 'modal-sm', backdrop: 'static' };
        this.bsModalRef = this.bsModalService.show(BulkOperationsRescheduleModalComponent, modalOptions);
    };
    BulkOperationListItemComponent.prototype.cancelBulkOperation = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var er_1;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 3, , 4]);
                        return [4 /*yield*/, this.modal.confirm(gettext('Cancel bulk operation'), gettext('You are about to cancel the bulk operation. Do you want to proceed?'), Status.DANGER)];
                    case 1:
                        _a.sent();
                        return [4 /*yield*/, this.bulkOperationsService.deleteBulkOperation(this.bulkOperation.id)];
                    case 2:
                        _a.sent();
                        this.reload.emit();
                        this.alert.success(gettext('Operation canceled.'));
                        return [3 /*break*/, 4];
                    case 3:
                        er_1 = _a.sent();
                        this.alert.addServerFailure(er_1);
                        return [3 /*break*/, 4];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    BulkOperationListItemComponent.prototype.retryFailedOperation = function () {
        var _this = this;
        var clonedBulk = cloneDeep(this.bulkOperation);
        // change the id to failedparentId similar to the logic in deviceBulkControl.service.js
        delete clonedBulk.groupId;
        clonedBulk.failedParentId = this.bulkOperation.id;
        // show reschdedule modal:
        var initialState = {
            bulkOperation: clonedBulk,
            isRetryOperation: true
        };
        var modalOptions = { initialState: initialState, class: 'modal-sm', backdrop: 'static' };
        this.bsModalRef = this.bsModalService.show(BulkOperationsRescheduleModalComponent, modalOptions);
        this.bsModalRef.content.closeSubject.subscribe(function () {
            _this.reload.emit();
        });
    };
    BulkOperationListItemComponent.prototype.setToSuccessful = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var er_2;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 3, , 4]);
                        return [4 /*yield*/, this.modal.confirm(gettext('Set manually bulk operation to successful'), gettext('You are about to change the bulk operation status to successful. Do you want to proceed?'), Status.DANGER)];
                    case 1:
                        _a.sent();
                        return [4 /*yield*/, this.bulkOperationsService.updateBulkOperation({
                                id: this.bulkOperation.id,
                                generalStatus: OperationBulkGeneralStatus.SUCCESSFUL
                            })];
                    case 2:
                        _a.sent();
                        this.reload.emit();
                        this.alert.success(gettext('Operation status changed to successful.'));
                        return [3 /*break*/, 4];
                    case 3:
                        er_2 = _a.sent();
                        this.alert.addServerFailure(er_2);
                        return [3 /*break*/, 4];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    BulkOperationListItemComponent.prototype.openFailedOperation = function (failedParentId) {
        this.showFailedOperation.emit(failedParentId);
    };
    BulkOperationListItemComponent.prototype.isStatusScheduled = function () {
        return this.bulkOperation.generalStatus === this.bulkOperationGeneralStatus.SCHEDULED;
    };
    BulkOperationListItemComponent.prototype.isStatusExecutingOrExecutingWithError = function () {
        return (this.bulkOperation.generalStatus === this.bulkOperationGeneralStatus.EXECUTING ||
            this.bulkOperation.generalStatus === this.bulkOperationGeneralStatus.EXECUTING_WITH_ERROR);
    };
    BulkOperationListItemComponent.prototype.isStatusCanceled = function () {
        return this.bulkOperation.generalStatus === this.bulkOperationGeneralStatus.CANCELED;
    };
    BulkOperationListItemComponent.prototype.isStatusFailed = function () {
        return this.bulkOperation.generalStatus === this.bulkOperationGeneralStatus.FAILED;
    };
    BulkOperationListItemComponent.ctorParameters = function () { return [
        { type: BulkOperationsService },
        { type: ModalService },
        { type: AlertService },
        { type: BsModalService }
    ]; };
    tslib_1.__decorate([
        Input()
    ], BulkOperationListItemComponent.prototype, "bulkOperation", void 0);
    tslib_1.__decorate([
        Input()
    ], BulkOperationListItemComponent.prototype, "detailsCollapsed", void 0);
    tslib_1.__decorate([
        Input()
    ], BulkOperationListItemComponent.prototype, "readOnly", void 0);
    tslib_1.__decorate([
        Output()
    ], BulkOperationListItemComponent.prototype, "showFailedOperation", void 0);
    tslib_1.__decorate([
        Output()
    ], BulkOperationListItemComponent.prototype, "reload", void 0);
    tslib_1.__decorate([
        ViewChild('listItem', { static: true })
    ], BulkOperationListItemComponent.prototype, "listItem", void 0);
    BulkOperationListItemComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-bulk-operation-list-item',
            template: "<c8y-li\n  class=\"c8y-list__item--double-actions\"\n  [ngClass]=\"{ 'c8y-list__item--no-expand': !detailsCollapsed }\"\n  [collapsed]=\"detailsCollapsed\"\n  #listItem\n  id=\"{{ bulkOperation.id }}\"\n>\n  <c8y-li-icon>\n    <i [class]=\"iconClass\"></i>\n  </c8y-li-icon>\n  <div [ngClass]=\"{ 'content-flex-80': !readOnly, 'content-flex-50': readOnly }\">\n    <div class=\"col-5\">\n      <span\n        class=\"text-truncate\"\n        title=\"{{ bulkOperation.id }} - {{\n          bulkOperation.operationPrototype.description | translate\n        }}\"\n      >\n        <strong class=\"text-muted m-r-4\">{{ bulkOperation.id }}</strong>\n        {{ bulkOperation.operationPrototype.description | translate }}\n      </span>\n    </div>\n    <div class=\"flex-grow\">\n      <div class=\"m-t-8 visible-xs\"></div>\n      <hr *ngIf=\"isStatusCanceled(); else statusNotCanceled\" class=\"m-t-16 m-b-0\" />\n      <ng-template #statusNotCanceled>\n        <div [class]=\"progressBarClass\" title=\"{{ progressBarStatus | number: '1.0-0' }}%\">\n          <div\n            [class]=\"progressBarColor\"\n            role=\"progressbar\"\n            aria-valuenow=\"0\"\n            aria-valuemin=\"0\"\n            aria-valuemax=\"100\"\n            [style.width.%]=\"progressBarStatus\"\n          >\n            <span *ngIf=\"progressBarStatus !== 0\">{{ progressBarStatus | number: '1.0-0' }}%</span>\n          </div>\n        </div>\n      </ng-template>\n    </div>\n    <div class=\"col-4\">\n      <small *ngIf=\"bulkOperation.progress.successful > 0\" class=\"m-r-8 icon-flex\">\n        <i class=\"fa fw fa-check-circle text-success m-r-4\"></i>\n        <span\n          ngNonBindable\n          translate\n          [translateParams]=\"{ bulkOperationsCountSuccessful: bulkOperation.progress.successful }\"\n        >\n          {{ bulkOperationsCountSuccessful }} successful\n        </span>\n      </small>\n      <small *ngIf=\"bulkOperation.progress.failed > 0\" class=\"m-r-8 icon-flex\">\n        <i class=\"fa fw fa-warning text-danger m-r-4\"></i>\n        <span\n          ngNonBindable\n          translate\n          [translateParams]=\"{ bulkOperationsCountFailed: bulkOperation.progress.failed }\"\n        >\n          {{ bulkOperationsCountFailed }} failed\n        </span>\n      </small>\n      <small *ngIf=\"bulkOperation.progress.pending > 0\" class=\"m-r-8 icon-flex\">\n        <i class=\"fa fw fa-clock-o text-primary m-r-4\"></i>\n        <span\n          ngNonBindable\n          translate\n          [translateParams]=\"{ bulkOperationsCountPending: bulkOperation.progress.pending }\"\n        >\n          {{ bulkOperationsCountPending }} pending\n        </span>\n      </small>\n    </div>\n  </div>\n  <div class=\"c8y-list__item__footer\">\n    <div class=\"m-r-16\">\n      <span class=\"text-label-small m-r-4\" translate>Start</span>\n      <small class=\"icon-flex\">\n        <i c8yIcon=\"calendar\" class=\"m-r-4\"></i>\n        <span>\n          {{ bulkOperation.startDate | c8yDate }}\n        </span>\n      </small>\n    </div>\n    <div class=\"m-r-16\" *ngIf=\"bulkOperationGeneralStatus.CANCELED !== bulkOperation.generalStatus\">\n      <span class=\"text-label-small m-r-4\" translate>Finish</span>\n\n      <small class=\"icon-flex\">\n        <i c8yIcon=\"calendar\" class=\"m-r-4\"></i>\n        <span>{{ finishDate | c8yDate }}</span>\n      </small>\n      <a\n        container=\"body\"\n        *ngIf=\"isStatusScheduled() || isStatusExecutingOrExecutingWithError()\"\n        class=\"btn-clean m-l-4\"\n        popover=\"{{ finishDatePopoverText | translate }}\"\n        placement=\"right\"\n        outsideClick=\"true\"\n      >\n        <i c8yIcon=\"question-circle-o text-primary\"></i>\n      </a>\n    </div>\n  </div>\n  <ng-container *ngIf=\"!readOnly\">\n    <c8y-li-action\n      *ngIf=\"isStatusScheduled()\"\n      label=\"{{ 'Edit schedule' | translate }}\"\n      (click)=\"editSchedule()\"\n      icon=\"pencil\"\n    >\n    </c8y-li-action>\n    <c8y-li-action\n      *ngIf=\"isStatusScheduled() || isStatusExecutingOrExecutingWithError()\"\n      label=\"{{ 'Cancel bulk operation' | translate }}\"\n      (click)=\"cancelBulkOperation()\"\n      icon=\"remove\"\n    >\n    </c8y-li-action>\n    <c8y-li-action\n      *ngIf=\"isStatusFailed()\"\n      label=\"{{ 'Retry failed operations' | translate }}\"\n      (click)=\"retryFailedOperation()\"\n      icon=\"repeat\"\n    >\n    </c8y-li-action>\n    <c8y-li-action\n      *ngIf=\"isStatusFailed()\"\n      label=\"{{ 'Set operation to successful' | translate }}\"\n      (click)=\"setToSuccessful()\"\n      icon=\"check\"\n    >\n    </c8y-li-action>\n  </ng-container>\n  <c8y-li-collapse class=\"m-b-16\">\n    <c8y-bulk-operation-details-tabs\n      *ngIf=\"!listItem.collapsed\"\n      [bulkOperation]=\"bulkOperation\"\n      [readOnly]=\"readOnly\"\n      (onRetryFailedOperations)=\"retryFailedOperation()\"\n      (showFailedOperation)=\"openFailedOperation($event)\"\n    >\n    </c8y-bulk-operation-details-tabs>\n  </c8y-li-collapse>\n</c8y-li>\n"
        })
    ], BulkOperationListItemComponent);
    return BulkOperationListItemComponent;
}());
export { BulkOperationListItemComponent };
//# sourceMappingURL=data:application/json;base64,