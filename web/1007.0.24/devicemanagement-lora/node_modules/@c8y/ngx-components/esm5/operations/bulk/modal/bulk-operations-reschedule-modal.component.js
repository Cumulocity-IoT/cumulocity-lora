import * as tslib_1 from "tslib";
import { Component } from '@angular/core';
import { AlertService, gettext } from '@c8y/ngx-components';
import { BsModalRef } from 'ngx-bootstrap';
import { Subject } from 'rxjs';
import { BulkOperationsService } from '../bulk-operations.service';
var BulkOperationsRescheduleModalComponent = /** @class */ (function () {
    function BulkOperationsRescheduleModalComponent(bsModalRef, bulkOperationsService, alert) {
        this.bsModalRef = bsModalRef;
        this.bulkOperationsService = bulkOperationsService;
        this.alert = alert;
        this.closeSubject = new Subject();
    }
    BulkOperationsRescheduleModalComponent.prototype.ngOnInit = function () {
        this.modalTitle = this.getTitle();
    };
    BulkOperationsRescheduleModalComponent.prototype.onDateAndDelaySelect = function ($event) {
        this.dateAndDelay = $event;
    };
    BulkOperationsRescheduleModalComponent.prototype.getTitle = function () {
        return this.isRetryOperation ? gettext('Retry operation') : gettext('Edit schedule');
    };
    BulkOperationsRescheduleModalComponent.prototype.onCancel = function () {
        this.bsModalRef.hide();
    };
    BulkOperationsRescheduleModalComponent.prototype.onSave = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var newBulkOperation, er_1, er_2;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.bulkOperation.startDate = this.dateAndDelay.scheduledDate.toISOString();
                        this.bulkOperation.creationRamp = this.dateAndDelay.delayInSeconds;
                        if (!this.isRetryOperation) return [3 /*break*/, 5];
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 3, , 4]);
                        return [4 /*yield*/, this.bulkOperationsService.createBulkOperation(this.bulkOperation)];
                    case 2:
                        newBulkOperation = _a.sent();
                        this.alert.success(gettext('Successfully rescheduled for a retry.'));
                        return [3 /*break*/, 4];
                    case 3:
                        er_1 = _a.sent();
                        this.alert.addServerFailure(er_1);
                        return [3 /*break*/, 4];
                    case 4: return [3 /*break*/, 8];
                    case 5:
                        _a.trys.push([5, 7, , 8]);
                        return [4 /*yield*/, this.bulkOperationsService.updateBulkOperation(this.bulkOperation)];
                    case 6:
                        newBulkOperation = _a.sent();
                        this.alert.success(gettext('Successfully rescheduled.'));
                        return [3 /*break*/, 8];
                    case 7:
                        er_2 = _a.sent();
                        this.alert.addServerFailure(er_2);
                        return [3 /*break*/, 8];
                    case 8:
                        // send back to component from which modal was called
                        this.closeSubject.next(newBulkOperation.data);
                        this.bsModalRef.hide();
                        return [2 /*return*/];
                }
            });
        });
    };
    BulkOperationsRescheduleModalComponent.ctorParameters = function () { return [
        { type: BsModalRef },
        { type: BulkOperationsService },
        { type: AlertService }
    ]; };
    BulkOperationsRescheduleModalComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-bulk-operations-reschedule-modal',
            template: "<div class=\"viewport-modal\">\n  <div class=\"modal-header dialog-header\">\n    <h1 class=\"c8y-icon c8y-icon-energy\"></h1>\n    <h4>{{ modalTitle | translate }}</h4>\n  </div>\n  <div class=\"modal-inner-scroll\">\n    <div class=\"modal-body\">\n      <div class=\"text-center\">\n        <c8y-operation-summary\n          [description]=\"bulkOperation.operationPrototype.description\"\n        ></c8y-operation-summary>\n      </div>\n      <div class=\"p-t-16 center-block\" style=\"max-width: 300px;\">\n        <c8y-operation-scheduler\n          [(ngModel)]=\"dateAndDelay\"\n          #scheduler=\"ngModel\"\n        ></c8y-operation-scheduler>\n      </div>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n    <button\n      (click)=\"onCancel()\"\n      type=\"button\"\n      class=\"btn btn-default\"\n      title=\"{{ 'Cancel' | translate }}\"\n    >\n      <span translate>Cancel</span>\n    </button>\n    <button\n      id=\"save-btn\"\n      (click)=\"onSave()\"\n      type=\"button\"\n      class=\"btn btn-primary\"\n      title=\"{{ 'Save' | translate }}\"\n      [disabled]=\"scheduler?.control?.errors\"\n    >\n      <span translate>Save</span>\n    </button>\n  </div>\n</div>\n"
        })
    ], BulkOperationsRescheduleModalComponent);
    return BulkOperationsRescheduleModalComponent;
}());
export { BulkOperationsRescheduleModalComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVsay1vcGVyYXRpb25zLXJlc2NoZWR1bGUtbW9kYWwuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy9vcGVyYXRpb25zLyIsInNvdXJjZXMiOlsiYnVsay9tb2RhbC9idWxrLW9wZXJhdGlvbnMtcmVzY2hlZHVsZS1tb2RhbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFFbEQsT0FBTyxFQUFFLFlBQVksRUFBRSxPQUFPLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUM1RCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFFL0IsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFLbkU7SUFPRSxnREFDUyxVQUFzQixFQUNyQixxQkFBNEMsRUFDNUMsS0FBbUI7UUFGcEIsZUFBVSxHQUFWLFVBQVUsQ0FBWTtRQUNyQiwwQkFBcUIsR0FBckIscUJBQXFCLENBQXVCO1FBQzVDLFVBQUssR0FBTCxLQUFLLENBQWM7UUFUN0IsaUJBQVksR0FBNEIsSUFBSSxPQUFPLEVBQUUsQ0FBQztJQVVuRCxDQUFDO0lBRUoseURBQVEsR0FBUjtRQUNFLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQ3BDLENBQUM7SUFFRCxxRUFBb0IsR0FBcEIsVUFBcUIsTUFBTTtRQUN6QixJQUFJLENBQUMsWUFBWSxHQUFHLE1BQU0sQ0FBQztJQUM3QixDQUFDO0lBRUQseURBQVEsR0FBUjtRQUNFLE9BQU8sSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLGVBQWUsQ0FBQyxDQUFDO0lBQ3ZGLENBQUM7SUFFRCx5REFBUSxHQUFSO1FBQ0UsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUN6QixDQUFDO0lBRUssdURBQU0sR0FBWjs7Ozs7O3dCQUVFLElBQUksQ0FBQyxhQUFhLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsYUFBYSxDQUFDLFdBQVcsRUFBRSxDQUFDO3dCQUM3RSxJQUFJLENBQUMsYUFBYSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLGNBQWMsQ0FBQzs2QkFFL0QsSUFBSSxDQUFDLGdCQUFnQixFQUFyQix3QkFBcUI7Ozs7d0JBRUYscUJBQU0sSUFBSSxDQUFDLHFCQUFxQixDQUFDLG1CQUFtQixDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsRUFBQTs7d0JBQTNGLGdCQUFnQixHQUFHLFNBQXdFLENBQUM7d0JBQzVGLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyx1Q0FBdUMsQ0FBQyxDQUFDLENBQUM7Ozs7d0JBRXJFLElBQUksQ0FBQyxLQUFLLENBQUMsZ0JBQWdCLENBQUMsSUFBRSxDQUFDLENBQUM7Ozs7O3dCQUliLHFCQUFNLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLEVBQUE7O3dCQUEzRixnQkFBZ0IsR0FBRyxTQUF3RSxDQUFDO3dCQUM1RixJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsMkJBQTJCLENBQUMsQ0FBQyxDQUFDOzs7O3dCQUV6RCxJQUFJLENBQUMsS0FBSyxDQUFDLGdCQUFnQixDQUFDLElBQUUsQ0FBQyxDQUFDOzs7d0JBSXBDLHFEQUFxRDt3QkFDckQsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLENBQUM7d0JBQzlDLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxFQUFFLENBQUM7Ozs7O0tBQ3hCOztnQkE3Q29CLFVBQVU7Z0JBQ0UscUJBQXFCO2dCQUNyQyxZQUFZOztJQVZsQixzQ0FBc0M7UUFKbEQsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLHNDQUFzQztZQUNoRCx5c0NBQThEO1NBQy9ELENBQUM7T0FDVyxzQ0FBc0MsQ0FzRGxEO0lBQUQsNkNBQUM7Q0FBQSxBQXRERCxJQXNEQztTQXREWSxzQ0FBc0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSU9wZXJhdGlvbkJ1bGsgfSBmcm9tICdAYzh5L2NsaWVudCc7XG5pbXBvcnQgeyBBbGVydFNlcnZpY2UsIGdldHRleHQgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IEJzTW9kYWxSZWYgfSBmcm9tICduZ3gtYm9vdHN0cmFwJztcbmltcG9ydCB7IFN1YmplY3QgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IE9wZXJhdGlvblNjaGVkdWxlIH0gZnJvbSAnLi4vLi4vc2NoZWR1bGVyL29wZXJhdGlvbi1zY2hlZHVsZS5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgQnVsa09wZXJhdGlvbnNTZXJ2aWNlIH0gZnJvbSAnLi4vYnVsay1vcGVyYXRpb25zLnNlcnZpY2UnO1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LWJ1bGstb3BlcmF0aW9ucy1yZXNjaGVkdWxlLW1vZGFsJyxcbiAgdGVtcGxhdGVVcmw6ICdidWxrLW9wZXJhdGlvbnMtcmVzY2hlZHVsZS1tb2RhbC5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgQnVsa09wZXJhdGlvbnNSZXNjaGVkdWxlTW9kYWxDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBjbG9zZVN1YmplY3Q6IFN1YmplY3Q8SU9wZXJhdGlvbkJ1bGs+ID0gbmV3IFN1YmplY3QoKTtcbiAgZGF0ZUFuZERlbGF5OiBPcGVyYXRpb25TY2hlZHVsZTtcbiAgYnVsa09wZXJhdGlvbjogUGFydGlhbDxJT3BlcmF0aW9uQnVsaz47XG4gIGlzUmV0cnlPcGVyYXRpb246IGJvb2xlYW47XG4gIG1vZGFsVGl0bGU6IHN0cmluZztcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwdWJsaWMgYnNNb2RhbFJlZjogQnNNb2RhbFJlZixcbiAgICBwcml2YXRlIGJ1bGtPcGVyYXRpb25zU2VydmljZTogQnVsa09wZXJhdGlvbnNTZXJ2aWNlLFxuICAgIHByaXZhdGUgYWxlcnQ6IEFsZXJ0U2VydmljZVxuICApIHt9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5tb2RhbFRpdGxlID0gdGhpcy5nZXRUaXRsZSgpO1xuICB9XG5cbiAgb25EYXRlQW5kRGVsYXlTZWxlY3QoJGV2ZW50KSB7XG4gICAgdGhpcy5kYXRlQW5kRGVsYXkgPSAkZXZlbnQ7XG4gIH1cblxuICBnZXRUaXRsZSgpIHtcbiAgICByZXR1cm4gdGhpcy5pc1JldHJ5T3BlcmF0aW9uID8gZ2V0dGV4dCgnUmV0cnkgb3BlcmF0aW9uJykgOiBnZXR0ZXh0KCdFZGl0IHNjaGVkdWxlJyk7XG4gIH1cblxuICBvbkNhbmNlbCgpIHtcbiAgICB0aGlzLmJzTW9kYWxSZWYuaGlkZSgpO1xuICB9XG5cbiAgYXN5bmMgb25TYXZlKCkge1xuICAgIGxldCBuZXdCdWxrT3BlcmF0aW9uO1xuICAgIHRoaXMuYnVsa09wZXJhdGlvbi5zdGFydERhdGUgPSB0aGlzLmRhdGVBbmREZWxheS5zY2hlZHVsZWREYXRlLnRvSVNPU3RyaW5nKCk7XG4gICAgdGhpcy5idWxrT3BlcmF0aW9uLmNyZWF0aW9uUmFtcCA9IHRoaXMuZGF0ZUFuZERlbGF5LmRlbGF5SW5TZWNvbmRzO1xuXG4gICAgaWYgKHRoaXMuaXNSZXRyeU9wZXJhdGlvbikge1xuICAgICAgdHJ5IHtcbiAgICAgICAgbmV3QnVsa09wZXJhdGlvbiA9IGF3YWl0IHRoaXMuYnVsa09wZXJhdGlvbnNTZXJ2aWNlLmNyZWF0ZUJ1bGtPcGVyYXRpb24odGhpcy5idWxrT3BlcmF0aW9uKTtcbiAgICAgICAgdGhpcy5hbGVydC5zdWNjZXNzKGdldHRleHQoJ1N1Y2Nlc3NmdWxseSByZXNjaGVkdWxlZCBmb3IgYSByZXRyeS4nKSk7XG4gICAgICB9IGNhdGNoIChlcikge1xuICAgICAgICB0aGlzLmFsZXJ0LmFkZFNlcnZlckZhaWx1cmUoZXIpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICB0cnkge1xuICAgICAgICBuZXdCdWxrT3BlcmF0aW9uID0gYXdhaXQgdGhpcy5idWxrT3BlcmF0aW9uc1NlcnZpY2UudXBkYXRlQnVsa09wZXJhdGlvbih0aGlzLmJ1bGtPcGVyYXRpb24pO1xuICAgICAgICB0aGlzLmFsZXJ0LnN1Y2Nlc3MoZ2V0dGV4dCgnU3VjY2Vzc2Z1bGx5IHJlc2NoZWR1bGVkLicpKTtcbiAgICAgIH0gY2F0Y2ggKGVyKSB7XG4gICAgICAgIHRoaXMuYWxlcnQuYWRkU2VydmVyRmFpbHVyZShlcik7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gc2VuZCBiYWNrIHRvIGNvbXBvbmVudCBmcm9tIHdoaWNoIG1vZGFsIHdhcyBjYWxsZWRcbiAgICB0aGlzLmNsb3NlU3ViamVjdC5uZXh0KG5ld0J1bGtPcGVyYXRpb24uZGF0YSk7XG4gICAgdGhpcy5ic01vZGFsUmVmLmhpZGUoKTtcbiAgfVxufVxuIl19