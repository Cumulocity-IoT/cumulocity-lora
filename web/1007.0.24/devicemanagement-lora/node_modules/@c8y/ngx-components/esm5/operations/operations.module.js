import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { ReactiveFormsModule } from '@angular/forms';
import { RouterModule } from '@angular/router';
import { CoreModule, FormsModule, HOOK_TABS } from '@c8y/ngx-components';
import { DeviceGridModule } from '@c8y/ngx-components/device-grid';
import { DeviceProfileModule } from '@c8y/ngx-components/device-profile';
import { RepositoryModule } from '@c8y/ngx-components/repository';
import { CollapseModule } from 'ngx-bootstrap/collapse';
import { BsDatepickerModule } from 'ngx-bootstrap/datepicker';
import { BsDropdownModule } from 'ngx-bootstrap/dropdown';
import { PopoverModule } from 'ngx-bootstrap/popover';
import { TimepickerModule } from 'ngx-bootstrap/timepicker';
import { TooltipModule } from 'ngx-bootstrap/tooltip';
import { BulkOperationsService, C8Y_BULK_TYPES, HOOK_LIST_BULK_TYPE } from './bulk/bulk-operations.service';
import { BulkOperationFromSingleComponent } from './bulk/create-from-single/bulk-operation-from-single.component';
import { BulkOperationStepper } from './bulk/creation/bulk-operation-stepper.component';
import { BulkOperationsStepperContainerComponent } from './bulk/creation/bulk-operations-stepper-container.component';
import { ConfirmDeviceProfileSelectionStepComponent } from './bulk/creation/device-profile-update-stepper/confirm-device-profile-selection-step.component';
import { SelectDeviceProfileStepComponent } from './bulk/creation/device-profile-update-stepper/select-device-profile-step.component';
import { SelectFirmwareComponent } from './bulk/creation/firmware-update-stepper/select-firmware.component';
import { VersionOrPatchComponent } from './bulk/creation/firmware-update-stepper/version-or-patch.component';
import { ConfirmSoftwareSelectionStepComponent } from './bulk/creation/software-update-stepper/confirm-software-selection-step.component';
import { SelectSoftwareStepComponent } from './bulk/creation/software-update-stepper/select-software-step.component';
import { StepperBulkTypeConfiguration } from './bulk/creation/stepper-bulk-type-configuration.component';
import { StepperBulkTypeDeviceProfile } from './bulk/creation/stepper-bulk-type-device-profile.component';
import { StepperFirmware } from './bulk/creation/stepper-bulk-type-firmware.component';
import { StepperBulkTypeSoftware } from './bulk/creation/stepper-bulk-type-software.component';
import { CustomStep } from './bulk/custom-step.directive';
import { BulkOperationDetailsTabsComponent } from './bulk/list/bulk-operation-details-tabs.component';
import { BulkOperationDetailsComponent } from './bulk/list/bulk-operation-details.component';
import { BulkOperationDetailsService } from './bulk/list/bulk-operation-details.service';
import { BulkOperationListItemComponent } from './bulk/list/bulk-operation-list-item.component';
import { BulkOperationWrapperComponent } from './bulk/list/bulk-operation-wrapper.component';
import { BulkOperationsListComponent } from './bulk/list/bulk-operations-list.component';
import { SingleOperationItemComponent } from './bulk/list/single-operation-item.component';
import { SingleOperationsListComponent } from './bulk/list/single-operations-list.component';
import { BulkOperationTypeListComponent } from './bulk/list/type-list/bulk-operation-type-list.component';
import { BulkOperationsModalComponent } from './bulk/modal/bulk-operations-modal.component';
import { BulkOperationsRescheduleModalComponent } from './bulk/modal/bulk-operations-reschedule-modal.component';
import { OperationDetailsComponent } from './details/operation-details.component';
import { DeviceSelectorComponent } from './device-selector/device-selector.component';
import { TabsFactory } from './factories/tabs.factory';
import { OperationSchedulerComponent } from './scheduler/operation-scheduler.component';
import { StatusFilterComponent } from './status-filter/status-filter.component';
import { OperationSummaryComponent } from './summary/operation-summary.component';
export var routes = [
    {
        path: 'devicecontrol',
        redirectTo: 'devicecontrol/single',
        pathMatch: 'full'
    },
    {
        path: 'devicecontrol/bulk',
        component: BulkOperationsListComponent
    },
    {
        path: 'devicecontrol/bulk/creation/:type',
        component: BulkOperationsStepperContainerComponent
    },
    {
        path: 'devicecontrol/single/create-bulk/:operationId',
        component: BulkOperationFromSingleComponent
    }
];
var ɵ0 = C8Y_BULK_TYPES;
var OperationsModule = /** @class */ (function () {
    function OperationsModule() {
    }
    OperationsModule = tslib_1.__decorate([
        NgModule({
            declarations: [
                SingleOperationItemComponent,
                SingleOperationsListComponent,
                BulkOperationDetailsComponent,
                BulkOperationDetailsTabsComponent,
                BulkOperationListItemComponent,
                BulkOperationsListComponent,
                BulkOperationTypeListComponent,
                BulkOperationsModalComponent,
                BulkOperationStepper,
                BulkOperationsStepperContainerComponent,
                BulkOperationFromSingleComponent,
                BulkOperationWrapperComponent,
                CustomStep,
                DeviceSelectorComponent,
                StatusFilterComponent,
                StepperBulkTypeSoftware,
                StepperFirmware,
                StepperBulkTypeConfiguration,
                StepperBulkTypeDeviceProfile,
                OperationDetailsComponent,
                OperationSchedulerComponent,
                OperationSummaryComponent,
                VersionOrPatchComponent,
                SelectFirmwareComponent,
                BulkOperationsRescheduleModalComponent,
                ConfirmSoftwareSelectionStepComponent,
                SelectSoftwareStepComponent,
                SelectDeviceProfileStepComponent,
                ConfirmDeviceProfileSelectionStepComponent
            ],
            imports: [
                CoreModule,
                FormsModule,
                ReactiveFormsModule,
                RouterModule.forRoot(routes, { useHash: true }),
                TooltipModule.forRoot(),
                PopoverModule.forRoot(),
                CollapseModule.forRoot(),
                BsDropdownModule.forRoot(),
                BsDatepickerModule.forRoot(),
                TimepickerModule.forRoot(),
                RepositoryModule,
                DeviceProfileModule,
                DeviceGridModule
            ],
            exports: [
                BulkOperationsListComponent,
                BulkOperationsModalComponent,
                BulkOperationStepper,
                CustomStep,
                OperationSchedulerComponent
            ],
            providers: [
                BulkOperationsService,
                BulkOperationDetailsService,
                { provide: HOOK_TABS, useClass: TabsFactory, multi: true },
                { provide: HOOK_LIST_BULK_TYPE, useValue: ɵ0 }
            ],
            entryComponents: [
                SingleOperationItemComponent,
                BulkOperationDetailsComponent,
                BulkOperationListItemComponent,
                BulkOperationsListComponent,
                BulkOperationsModalComponent,
                BulkOperationsStepperContainerComponent,
                BulkOperationsRescheduleModalComponent,
                BulkOperationWrapperComponent
            ]
        })
    ], OperationsModule);
    return OperationsModule;
}());
export { OperationsModule };
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,