import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { gettext, NavigatorNode } from '@c8y/ngx-components';
import { ApplicationService } from '@c8y/client';
var SmsGatewayNavigationFactory = /** @class */ (function () {
    function SmsGatewayNavigationFactory(applicationService) {
        this.applicationService = applicationService;
    }
    SmsGatewayNavigationFactory_1 = SmsGatewayNavigationFactory;
    SmsGatewayNavigationFactory.prototype.get = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var showSMSProvider;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!!this.nodeItem) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.applicationService.isAvailable(SmsGatewayNavigationFactory_1.applicationName)];
                    case 1:
                        showSMSProvider = (_a.sent()).data;
                        if (showSMSProvider) {
                            this.nodeItem = new NavigatorNode({
                                label: gettext('SMS provider'),
                                path: 'smsgateway',
                                icon: 'envelope-o',
                                parent: gettext('Settings'),
                                priority: 1000
                            });
                        }
                        _a.label = 2;
                    case 2: return [2 /*return*/, this.nodeItem];
                }
            });
        });
    };
    var SmsGatewayNavigationFactory_1;
    SmsGatewayNavigationFactory.applicationName = 'sms-gateway';
    SmsGatewayNavigationFactory.ctorParameters = function () { return [
        { type: ApplicationService }
    ]; };
    SmsGatewayNavigationFactory = SmsGatewayNavigationFactory_1 = tslib_1.__decorate([
        Injectable()
    ], SmsGatewayNavigationFactory);
    return SmsGatewayNavigationFactory;
}());
export { SmsGatewayNavigationFactory };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic21zLWdhdGV3YXktbmF2aWdhdGlvbi5mYWN0b3J5LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy9zbXMtZ2F0ZXdheS8iLCJzb3VyY2VzIjpbInNtcy1nYXRld2F5LW5hdmlnYXRpb24uZmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsT0FBTyxFQUFFLGFBQWEsRUFBd0IsTUFBTSxxQkFBcUIsQ0FBQztBQUNuRixPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFHakQ7SUFJRSxxQ0FBb0Isa0JBQXNDO1FBQXRDLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBb0I7SUFBRyxDQUFDO29DQUpuRCwyQkFBMkI7SUFLaEMseUNBQUcsR0FBVDs7Ozs7OzZCQUNNLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBZCx3QkFBYzt3QkFDa0IscUJBQU0sSUFBSSxDQUFDLGtCQUFrQixDQUFDLFdBQVcsQ0FDekUsNkJBQTJCLENBQUMsZUFBZSxDQUM1QyxFQUFBOzt3QkFGSyxlQUFlLEdBQVksQ0FBQyxTQUVqQyxDQUFDLENBQUMsSUFBSTt3QkFFUCxJQUFJLGVBQWUsRUFBRTs0QkFDbkIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLGFBQWEsQ0FBQztnQ0FDaEMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxjQUFjLENBQUM7Z0NBQzlCLElBQUksRUFBRSxZQUFZO2dDQUNsQixJQUFJLEVBQUUsWUFBWTtnQ0FDbEIsTUFBTSxFQUFFLE9BQU8sQ0FBQyxVQUFVLENBQUM7Z0NBQzNCLFFBQVEsRUFBRSxJQUFJOzZCQUNmLENBQUMsQ0FBQzt5QkFDSjs7NEJBRUgsc0JBQU8sSUFBSSxDQUFDLFFBQVEsRUFBQzs7OztLQUN0Qjs7SUFyQnVCLDJDQUFlLEdBQUcsYUFBYSxDQUFDOztnQkFHaEIsa0JBQWtCOztJQUovQywyQkFBMkI7UUFEdkMsVUFBVSxFQUFFO09BQ0EsMkJBQTJCLENBdUJ2QztJQUFELGtDQUFDO0NBQUEsQUF2QkQsSUF1QkM7U0F2QlksMkJBQTJCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgZ2V0dGV4dCwgTmF2aWdhdG9yTm9kZSwgTmF2aWdhdG9yTm9kZUZhY3RvcnkgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IEFwcGxpY2F0aW9uU2VydmljZSB9IGZyb20gJ0BjOHkvY2xpZW50JztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFNtc0dhdGV3YXlOYXZpZ2F0aW9uRmFjdG9yeSBpbXBsZW1lbnRzIE5hdmlnYXRvck5vZGVGYWN0b3J5IHtcbiAgcHJpdmF0ZSBzdGF0aWMgcmVhZG9ubHkgYXBwbGljYXRpb25OYW1lID0gJ3Ntcy1nYXRld2F5JztcbiAgcHJpdmF0ZSBub2RlSXRlbTogTmF2aWdhdG9yTm9kZTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGFwcGxpY2F0aW9uU2VydmljZTogQXBwbGljYXRpb25TZXJ2aWNlKSB7fVxuICBhc3luYyBnZXQoKSB7XG4gICAgaWYgKCF0aGlzLm5vZGVJdGVtKSB7XG4gICAgICBjb25zdCBzaG93U01TUHJvdmlkZXI6IGJvb2xlYW4gPSAoYXdhaXQgdGhpcy5hcHBsaWNhdGlvblNlcnZpY2UuaXNBdmFpbGFibGUoXG4gICAgICAgIFNtc0dhdGV3YXlOYXZpZ2F0aW9uRmFjdG9yeS5hcHBsaWNhdGlvbk5hbWVcbiAgICAgICkpLmRhdGE7XG5cbiAgICAgIGlmIChzaG93U01TUHJvdmlkZXIpIHtcbiAgICAgICAgdGhpcy5ub2RlSXRlbSA9IG5ldyBOYXZpZ2F0b3JOb2RlKHtcbiAgICAgICAgICBsYWJlbDogZ2V0dGV4dCgnU01TIHByb3ZpZGVyJyksXG4gICAgICAgICAgcGF0aDogJ3Ntc2dhdGV3YXknLFxuICAgICAgICAgIGljb246ICdlbnZlbG9wZS1vJyxcbiAgICAgICAgICBwYXJlbnQ6IGdldHRleHQoJ1NldHRpbmdzJyksXG4gICAgICAgICAgcHJpb3JpdHk6IDEwMDBcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0aGlzLm5vZGVJdGVtO1xuICB9XG59XG4iXX0=