import * as tslib_1 from "tslib";
import { Component, Input } from '@angular/core';
import { DeviceConfigurationOperation } from '../repository.model';
import { IManagedObject, IOperation, OperationService, OperationStatus, Realtime, UserService } from '@c8y/client';
import { DeviceConfigurationService } from './device-configuration.service';
import { saveAs } from 'file-saver/FileSaver';
import { BsModalService } from 'ngx-bootstrap/modal';
import { SaveToRepositoryComponent } from './save-to-repository.component';
import { cloneDeep } from 'lodash-es';
import { AlertService, AppStateService } from '@c8y/ngx-components';
import { RepositoryService } from '../repository.service';
var ConfigurationPreviewComponent = /** @class */ (function () {
    function ConfigurationPreviewComponent(deviceConfigurationService, realtime, bsModal, user, appState, repositoryService, operationService, alertService) {
        this.deviceConfigurationService = deviceConfigurationService;
        this.realtime = realtime;
        this.bsModal = bsModal;
        this.user = user;
        this.appState = appState;
        this.repositoryService = repositoryService;
        this.operationService = operationService;
        this.alertService = alertService;
        this.isLegacy = false;
        this.canCallAction = true;
        this.deviceConfigurationOperation = DeviceConfigurationOperation;
    }
    Object.defineProperty(ConfigurationPreviewComponent.prototype, "configurationType", {
        get: function () {
            return this._configurationType;
        },
        set: function (type) {
            this._configurationType = type;
            this.setOperation(type);
        },
        enumerable: true,
        configurable: true
    });
    ConfigurationPreviewComponent.prototype.ngOnInit = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var operationsChannel;
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                this.setOperation(this._configurationType);
                operationsChannel = "/operations/" + this.device.id;
                this.operationsSubscription = this.realtime
                    .observable(operationsChannel)
                    .subscribe(function (_a) {
                    var data = _a.data;
                    _this.updatePreview(data);
                });
                if (this.isLegacy) {
                    this.canCallAction = this.deviceConfigurationService.hasAnySupportedOperation(this.device, this.operationToTrigger);
                }
                return [2 /*return*/];
            });
        });
    };
    ConfigurationPreviewComponent.prototype.setOperation = function (configType) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var operationList, operation;
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.repositoryService.getConfigFileOperationList(this.device.id, this.operationToTrigger)];
                    case 1:
                        operationList = _a.sent();
                        operation = this.isLegacy
                            ? operationList.find(function (op) { return op[_this.operationToTrigger] && !op[_this.operationToTrigger].type; })
                            : operationList.find(function (op) { return op[_this.operationToTrigger].type === configType; });
                        this.operation =
                            operation && operation.status !== OperationStatus.SUCCESSFUL ? operation : undefined;
                        return [2 /*return*/];
                }
            });
        });
    };
    ConfigurationPreviewComponent.prototype.createDeviceOperation = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var operationCfg, _a, ex_1;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (this.operationToTrigger === DeviceConfigurationOperation.DOWNLOAD_CONFIG) {
                            operationCfg = this.repositoryService.getDownloadConfigurationFileOperation(this.device, this._configurationType, this.configSnapshot, this.isLegacy);
                        }
                        if (this.operationToTrigger === DeviceConfigurationOperation.UPLOAD_CONFIG) {
                            operationCfg = this.repositoryService.getUploadConfigurationFileOperation(this.device, this._configurationType, this.isLegacy);
                        }
                        _b.label = 1;
                    case 1:
                        _b.trys.push([1, 3, , 4]);
                        _a = this;
                        return [4 /*yield*/, this.operationService.create(operationCfg)];
                    case 2:
                        _a.operation = (_b.sent()).data;
                        return [3 /*break*/, 4];
                    case 3:
                        ex_1 = _b.sent();
                        this.alertService.addServerFailure(ex_1);
                        return [3 /*break*/, 4];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    ConfigurationPreviewComponent.prototype.showOperation = function () {
        if (this.operationToTrigger === DeviceConfigurationOperation.DOWNLOAD_CONFIG) {
            return !!this.operation;
        }
        return (this.operation &&
            [OperationStatus.PENDING, OperationStatus.EXECUTING, OperationStatus.FAILED].includes(this.operation.status));
    };
    ConfigurationPreviewComponent.prototype.showBinary = function () {
        if (this.operationToTrigger === DeviceConfigurationOperation.DOWNLOAD_CONFIG) {
            return true;
        }
        return !this.showOperation();
    };
    ConfigurationPreviewComponent.prototype.isCreateOperationDisabled = function () {
        return (this.operation &&
            [OperationStatus.PENDING, OperationStatus.EXECUTING].includes(this.operation.status));
    };
    ConfigurationPreviewComponent.prototype.updatePreview = function (operation) {
        if (operation &&
            operation[this.operationToTrigger] &&
            (this.isLegacy ||
                (operation[this.operationToTrigger].type &&
                    operation[this.operationToTrigger].type === this.configurationType))) {
            this.operation = operation;
            this.updateSnapshotsOnConfigUpload(operation);
        }
    };
    ConfigurationPreviewComponent.prototype.download = function () {
        var blob = new Blob([this.configSnapshot.binary], { type: this.configSnapshot.binaryType });
        var fileName = this.configSnapshot.name;
        switch (this.configSnapshot.binaryType) {
            case 'text/csv':
            case 'application/csv':
                fileName = fileName.concat('.csv');
                break;
            case 'text/yaml':
            case 'application/x-yaml':
                fileName = fileName.concat('.yaml');
                break;
            case 'application/json':
                fileName = fileName.concat('.json');
                break;
        }
        saveAs(blob, fileName);
    };
    ConfigurationPreviewComponent.prototype.saveToRepository = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var initialState, modal, ex_2;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        initialState = {
                            configSnapshot: cloneDeep(this.configSnapshot)
                        };
                        modal = this.bsModal.show(SaveToRepositoryComponent, {
                            class: 'modal-sm',
                            initialState: initialState,
                            ignoreBackdropClick: true
                        }).content;
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 3, , 4]);
                        return [4 /*yield*/, modal.result];
                    case 2:
                        _a.sent();
                        this.deviceConfigurationService.updateConfigurations(true);
                        modal.close();
                        return [3 /*break*/, 4];
                    case 3:
                        ex_2 = _a.sent();
                        return [3 /*break*/, 4];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    ConfigurationPreviewComponent.prototype.hasPermission = function () {
        return this.user.hasAnyRole(this.appState.currentUser.value, [
            'ROLE_INVENTORY_ADMIN',
            'ROLE_INVENTORY_CREATE'
        ]);
    };
    ConfigurationPreviewComponent.prototype.ngOnDestroy = function () {
        this.operationsSubscription.unsubscribe();
    };
    ConfigurationPreviewComponent.prototype.updateSnapshotsOnConfigUpload = function (operation) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                if (operation[DeviceConfigurationOperation.UPLOAD_CONFIG] &&
                    operation.status === OperationStatus.SUCCESSFUL) {
                    this.deviceConfigurationService.updateConfigurations();
                }
                return [2 /*return*/];
            });
        });
    };
    ConfigurationPreviewComponent.ctorParameters = function () { return [
        { type: DeviceConfigurationService },
        { type: Realtime },
        { type: BsModalService },
        { type: UserService },
        { type: AppStateService },
        { type: RepositoryService },
        { type: OperationService },
        { type: AlertService }
    ]; };
    tslib_1.__decorate([
        Input()
    ], ConfigurationPreviewComponent.prototype, "device", void 0);
    tslib_1.__decorate([
        Input()
    ], ConfigurationPreviewComponent.prototype, "configurationType", null);
    tslib_1.__decorate([
        Input()
    ], ConfigurationPreviewComponent.prototype, "configSnapshot", void 0);
    tslib_1.__decorate([
        Input()
    ], ConfigurationPreviewComponent.prototype, "canSaveSnapshot", void 0);
    tslib_1.__decorate([
        Input()
    ], ConfigurationPreviewComponent.prototype, "actionButtonText", void 0);
    tslib_1.__decorate([
        Input()
    ], ConfigurationPreviewComponent.prototype, "actionButtonIcon", void 0);
    tslib_1.__decorate([
        Input()
    ], ConfigurationPreviewComponent.prototype, "isLegacy", void 0);
    tslib_1.__decorate([
        Input()
    ], ConfigurationPreviewComponent.prototype, "operationToTrigger", void 0);
    ConfigurationPreviewComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-device-configuration-preview',
            template: "<div class=\"content-flex-55 p-b-16\">\n  <div class=\"col-7 p-t-4\">\n    <p>\n      <span class=\"text-label-small text-uppercase m-r-4\" translate>Configuration</span>\n      <span *ngIf=\"configSnapshot?.name; else emptyText\">\n        <strong>{{ configSnapshot.name }}</strong>\n      </span>\n      <ng-template #emptyText> --- </ng-template>\n    </p>\n    <p>\n      <span class=\"text-label-small text-uppercase m-r-4\" translate>Last updated</span>\n      <small *ngIf=\"configSnapshot?.time; else emptyDate\">\n        {{ configSnapshot.time | c8yDate }}\n      </small>\n      <ng-template #emptyDate> --- </ng-template>\n    </p>\n  </div>\n  <div class=\"col-5\">\n    <button\n      class=\"btn btn-default btn-sm pull-right\"\n      type=\"button\"\n      title=\"{{ actionButtonText | translate }}\"\n      (click)=\"createDeviceOperation()\"\n      [disabled]=\"isCreateOperationDisabled()\"\n      *ngIf=\"canCallAction\"\n    >\n      <i [c8yIcon]=\"actionButtonIcon\"></i> {{ actionButtonText | translate }}\n    </button>\n  </div>\n</div>\n<div class=\"c8y-empty-state text-left\" *ngIf=\"!configSnapshot?.binary && showBinary()\">\n  <h1 [c8yIcon]=\"'file-image-o'\"></h1>\n  <p>\n    <strong translate>No preview available.</strong><br />\n    <small translate>Could not fetch the file.</small>\n  </p>\n</div>\n<div *ngIf=\"configSnapshot?.binary && showBinary()\">\n  <c8y-source-code-preview\n    [text]=\"configSnapshot.binary\"\n    [isDisabled]=\"true\"\n  ></c8y-source-code-preview>\n  <div *ngIf=\"canSaveSnapshot\" class=\"top-p-md\">\n    <button\n      type=\"button\"\n      class=\"btn btn-primary btn-sm pull-right left-m-sm\"\n      (click)=\"download()\"\n      translate\n    >\n      Download\n    </button>\n    <button\n      *ngIf=\"hasPermission()\"\n      type=\"button\"\n      class=\"btn btn-default btn-sm pull-right\"\n      (click)=\"saveToRepository()\"\n      translate\n    >\n      Save to repository\n    </button>\n  </div>\n</div>\n<div *ngIf=\"showOperation()\">\n  <c8y-single-operation [operation]=\"operation\"></c8y-single-operation>\n</div>\n"
        })
    ], ConfigurationPreviewComponent);
    return ConfigurationPreviewComponent;
}());
export { ConfigurationPreviewComponent };
//# sourceMappingURL=data:application/json;base64,