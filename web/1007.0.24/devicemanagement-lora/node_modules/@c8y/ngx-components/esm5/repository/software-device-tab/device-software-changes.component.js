import * as tslib_1 from "tslib";
import { Component, Output, Input, EventEmitter } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import { map } from 'rxjs/operators';
import { filter } from 'lodash-es';
var DeviceSoftwareChangesComponent = /** @class */ (function () {
    function DeviceSoftwareChangesComponent() {
        this.clear = new EventEmitter();
        this.apply = new EventEmitter();
        this.changes$ = new BehaviorSubject([]);
        this.installations$ = this.changes$.pipe(map(function (changes) {
            return filter(changes, function (change) {
                var name = change.name, action = change.action;
                var relatedChanges = filter(changes, { name: name });
                return action === 'install' && relatedChanges.length === 1;
            });
        }));
        this.updates$ = this.changes$.pipe(map(function (changes) {
            return filter(changes, function (change) {
                var name = change.name, action = change.action;
                var relatedChanges = filter(changes, { name: name });
                return action === 'install' && relatedChanges.length === 2;
            });
        }));
        this.removals$ = this.changes$.pipe(map(function (changes) {
            return filter(changes, function (change) {
                var name = change.name, action = change.action;
                var relatedChanges = filter(changes, { name: name });
                return action === 'delete' && relatedChanges.length === 1;
            });
        }));
    }
    DeviceSoftwareChangesComponent.prototype.ngOnChanges = function (changes) {
        if (changes.changes) {
            this.changes$.next(changes.changes.currentValue);
        }
    };
    tslib_1.__decorate([
        Input()
    ], DeviceSoftwareChangesComponent.prototype, "changes", void 0);
    tslib_1.__decorate([
        Input()
    ], DeviceSoftwareChangesComponent.prototype, "changesInProgress", void 0);
    tslib_1.__decorate([
        Output()
    ], DeviceSoftwareChangesComponent.prototype, "clear", void 0);
    tslib_1.__decorate([
        Output()
    ], DeviceSoftwareChangesComponent.prototype, "apply", void 0);
    DeviceSoftwareChangesComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-device-software-changes',
            template: "<div class=\"card\">\n  <div class=\"card-header separator\">\n    <h4 class=\"card-title\" translate>Software changes</h4>\n  </div>\n\n  <div class=\"card-block\" *ngIf=\"(changes$ | async).length === 0; else changesList\">\n    <div class=\"c8y-empty-state text-center\">\n      <h1 class=\"c8y-icon c8y-icon-device-control c8y-icon-duocolor\"></h1>\n      <p>\n        <strong translate>No software changes.</strong> <br />\n        <small translate>Selected actions will be displayed here.</small>\n      </p>\n    </div>\n  </div>\n\n  <ng-template #changesList>\n    <fieldset *ngIf=\"(installations$ | async).length > 0\">\n      <div class=\"p-l-16 p-r-16\">\n        <div class=\"form-block legend\" translate>Installations`software`</div>\n      </div>\n      <c8y-device-software-list [softwareList]=\"installations$ | async\"></c8y-device-software-list>\n    </fieldset>\n\n    <fieldset *ngIf=\"(updates$ | async).length > 0\">\n      <div class=\"p-l-16 p-r-16\">\n        <div class=\"form-block legend\" translate>Updates`software,noun`</div>\n      </div>\n      <c8y-device-software-list [softwareList]=\"updates$ | async\"></c8y-device-software-list>\n    </fieldset>\n\n    <fieldset *ngIf=\"(removals$ | async).length > 0\">\n      <div class=\"p-l-16 p-r-16\">\n        <div class=\"form-block legend\" translate>Removals`software`</div>\n      </div>\n      <c8y-device-software-list [softwareList]=\"removals$ | async\"></c8y-device-software-list>\n    </fieldset>\n  </ng-template>\n\n  <div class=\"card-footer p-b-8\" *ngIf=\"(changes$ | async).length > 0\">\n    <div class=\"content-flex-27\">\n      <button\n        class=\"btn btn-default col-6 m-b-8\"\n        (click)=\"clear.emit()\"\n        title=\"{{ 'Clear changes' | translate }}\"\n        [disabled]=\"changesInProgress\"\n        translate\n      >\n        Clear changes\n      </button>\n      <button\n        class=\"btn btn-primary col-6 btn-block m-b-8\"\n        [ngClass]=\"{ 'btn-pending': changesInProgress }\"\n        [disabled]=\"changesInProgress\"\n        (click)=\"apply.emit()\"\n        title=\"{{ 'Apply changes' | translate }}\"\n        translate\n      >\n        Apply changes\n      </button>\n    </div>\n  </div>\n</div>\n"
        })
    ], DeviceSoftwareChangesComponent);
    return DeviceSoftwareChangesComponent;
}());
export { DeviceSoftwareChangesComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGV2aWNlLXNvZnR3YXJlLWNoYW5nZXMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy9yZXBvc2l0b3J5LyIsInNvdXJjZXMiOlsic29mdHdhcmUtZGV2aWNlLXRhYi9kZXZpY2Utc29mdHdhcmUtY2hhbmdlcy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxZQUFZLEVBQTRCLE1BQU0sZUFBZSxDQUFDO0FBQ2pHLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFDdkMsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3JDLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFRbkM7SUFKQTtRQU9ZLFVBQUssR0FBdUIsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUMvQyxVQUFLLEdBQXVCLElBQUksWUFBWSxFQUFFLENBQUM7UUFFekQsYUFBUSxHQUFHLElBQUksZUFBZSxDQUF5QixFQUFFLENBQUMsQ0FBQztRQUMzRCxtQkFBYyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUNqQyxHQUFHLENBQUMsVUFBQSxPQUFPO1lBQ1QsT0FBTyxNQUFNLENBQUMsT0FBTyxFQUFFLFVBQUEsTUFBTTtnQkFDbkIsSUFBQSxrQkFBSSxFQUFFLHNCQUFNLENBQVk7Z0JBQ2hDLElBQU0sY0FBYyxHQUFHLE1BQU0sQ0FBQyxPQUFPLEVBQUUsRUFBRSxJQUFJLE1BQUEsRUFBRSxDQUFDLENBQUM7Z0JBQ2pELE9BQU8sTUFBTSxLQUFLLFNBQVMsSUFBSSxjQUFjLENBQUMsTUFBTSxLQUFLLENBQUMsQ0FBQztZQUM3RCxDQUFDLENBQUMsQ0FBQztRQUNMLENBQUMsQ0FBQyxDQUNILENBQUM7UUFDRixhQUFRLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQzNCLEdBQUcsQ0FBQyxVQUFBLE9BQU87WUFDVCxPQUFPLE1BQU0sQ0FBQyxPQUFPLEVBQUUsVUFBQSxNQUFNO2dCQUNuQixJQUFBLGtCQUFJLEVBQUUsc0JBQU0sQ0FBWTtnQkFDaEMsSUFBTSxjQUFjLEdBQUcsTUFBTSxDQUFDLE9BQU8sRUFBRSxFQUFFLElBQUksTUFBQSxFQUFFLENBQUMsQ0FBQztnQkFDakQsT0FBTyxNQUFNLEtBQUssU0FBUyxJQUFJLGNBQWMsQ0FBQyxNQUFNLEtBQUssQ0FBQyxDQUFDO1lBQzdELENBQUMsQ0FBQyxDQUFDO1FBQ0wsQ0FBQyxDQUFDLENBQ0gsQ0FBQztRQUNGLGNBQVMsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FDNUIsR0FBRyxDQUFDLFVBQUEsT0FBTztZQUNULE9BQU8sTUFBTSxDQUFDLE9BQU8sRUFBRSxVQUFBLE1BQU07Z0JBQ25CLElBQUEsa0JBQUksRUFBRSxzQkFBTSxDQUFZO2dCQUNoQyxJQUFNLGNBQWMsR0FBRyxNQUFNLENBQUMsT0FBTyxFQUFFLEVBQUUsSUFBSSxNQUFBLEVBQUUsQ0FBQyxDQUFDO2dCQUNqRCxPQUFPLE1BQU0sS0FBSyxRQUFRLElBQUksY0FBYyxDQUFDLE1BQU0sS0FBSyxDQUFDLENBQUM7WUFDNUQsQ0FBQyxDQUFDLENBQUM7UUFDTCxDQUFDLENBQUMsQ0FDSCxDQUFDO0lBT0osQ0FBQztJQUxDLG9EQUFXLEdBQVgsVUFBWSxPQUFzQjtRQUNoQyxJQUFJLE9BQU8sQ0FBQyxPQUFPLEVBQUU7WUFDbkIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsQ0FBQztTQUNsRDtJQUNILENBQUM7SUF0Q1E7UUFBUixLQUFLLEVBQUU7bUVBQWlDO0lBQ2hDO1FBQVIsS0FBSyxFQUFFOzZFQUE0QjtJQUMxQjtRQUFULE1BQU0sRUFBRTtpRUFBZ0Q7SUFDL0M7UUFBVCxNQUFNLEVBQUU7aUVBQWdEO0lBSjlDLDhCQUE4QjtRQUoxQyxTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsNkJBQTZCO1lBQ3ZDLCtzRUFBcUQ7U0FDdEQsQ0FBQztPQUNXLDhCQUE4QixDQXdDMUM7SUFBRCxxQ0FBQztDQUFBLEFBeENELElBd0NDO1NBeENZLDhCQUE4QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT3V0cHV0LCBJbnB1dCwgRXZlbnRFbWl0dGVyLCBPbkNoYW5nZXMsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJlaGF2aW9yU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgbWFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHsgZmlsdGVyIH0gZnJvbSAnbG9kYXNoLWVzJztcbmltcG9ydCB7IE9wZXJhdGlvblN0YXR1cyB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IERldmljZVNvZnR3YXJlQ2hhbmdlIH0gZnJvbSAnLi4vcmVwb3NpdG9yeS5tb2RlbCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1kZXZpY2Utc29mdHdhcmUtY2hhbmdlcycsXG4gIHRlbXBsYXRlVXJsOiAnZGV2aWNlLXNvZnR3YXJlLWNoYW5nZXMuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIERldmljZVNvZnR3YXJlQ2hhbmdlc0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uQ2hhbmdlcyB7XG4gIEBJbnB1dCgpIGNoYW5nZXM6IERldmljZVNvZnR3YXJlQ2hhbmdlW107XG4gIEBJbnB1dCgpIGNoYW5nZXNJblByb2dyZXNzOiBib29sZWFuO1xuICBAT3V0cHV0KCkgY2xlYXI6IEV2ZW50RW1pdHRlcjx2b2lkPiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQE91dHB1dCgpIGFwcGx5OiBFdmVudEVtaXR0ZXI8dm9pZD4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgY2hhbmdlcyQgPSBuZXcgQmVoYXZpb3JTdWJqZWN0PERldmljZVNvZnR3YXJlQ2hhbmdlW10+KFtdKTtcbiAgaW5zdGFsbGF0aW9ucyQgPSB0aGlzLmNoYW5nZXMkLnBpcGUoXG4gICAgbWFwKGNoYW5nZXMgPT4ge1xuICAgICAgcmV0dXJuIGZpbHRlcihjaGFuZ2VzLCBjaGFuZ2UgPT4ge1xuICAgICAgICBjb25zdCB7IG5hbWUsIGFjdGlvbiB9ID0gY2hhbmdlO1xuICAgICAgICBjb25zdCByZWxhdGVkQ2hhbmdlcyA9IGZpbHRlcihjaGFuZ2VzLCB7IG5hbWUgfSk7XG4gICAgICAgIHJldHVybiBhY3Rpb24gPT09ICdpbnN0YWxsJyAmJiByZWxhdGVkQ2hhbmdlcy5sZW5ndGggPT09IDE7XG4gICAgICB9KTtcbiAgICB9KVxuICApO1xuICB1cGRhdGVzJCA9IHRoaXMuY2hhbmdlcyQucGlwZShcbiAgICBtYXAoY2hhbmdlcyA9PiB7XG4gICAgICByZXR1cm4gZmlsdGVyKGNoYW5nZXMsIGNoYW5nZSA9PiB7XG4gICAgICAgIGNvbnN0IHsgbmFtZSwgYWN0aW9uIH0gPSBjaGFuZ2U7XG4gICAgICAgIGNvbnN0IHJlbGF0ZWRDaGFuZ2VzID0gZmlsdGVyKGNoYW5nZXMsIHsgbmFtZSB9KTtcbiAgICAgICAgcmV0dXJuIGFjdGlvbiA9PT0gJ2luc3RhbGwnICYmIHJlbGF0ZWRDaGFuZ2VzLmxlbmd0aCA9PT0gMjtcbiAgICAgIH0pO1xuICAgIH0pXG4gICk7XG4gIHJlbW92YWxzJCA9IHRoaXMuY2hhbmdlcyQucGlwZShcbiAgICBtYXAoY2hhbmdlcyA9PiB7XG4gICAgICByZXR1cm4gZmlsdGVyKGNoYW5nZXMsIGNoYW5nZSA9PiB7XG4gICAgICAgIGNvbnN0IHsgbmFtZSwgYWN0aW9uIH0gPSBjaGFuZ2U7XG4gICAgICAgIGNvbnN0IHJlbGF0ZWRDaGFuZ2VzID0gZmlsdGVyKGNoYW5nZXMsIHsgbmFtZSB9KTtcbiAgICAgICAgcmV0dXJuIGFjdGlvbiA9PT0gJ2RlbGV0ZScgJiYgcmVsYXRlZENoYW5nZXMubGVuZ3RoID09PSAxO1xuICAgICAgfSk7XG4gICAgfSlcbiAgKTtcblxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XG4gICAgaWYgKGNoYW5nZXMuY2hhbmdlcykge1xuICAgICAgdGhpcy5jaGFuZ2VzJC5uZXh0KGNoYW5nZXMuY2hhbmdlcy5jdXJyZW50VmFsdWUpO1xuICAgIH1cbiAgfVxufVxuIl19