import * as tslib_1 from "tslib";
import { BsModalService, ModalOptions } from 'ngx-bootstrap';
import { AlertService, gettext, memoize, ModalService, Status } from '@c8y/ngx-components';
import { Subject, merge, BehaviorSubject, combineLatest } from 'rxjs';
import { ActivatedRoute } from '@angular/router';
import { RepositoryService } from './../repository.service';
import { Component } from '@angular/core';
import { map, switchMap, takeUntil, withLatestFrom, tap, take, distinctUntilKeyChanged, shareReplay } from 'rxjs/operators';
import { InventoryService, IResultList } from '@c8y/client';
import { TranslateService } from '@ngx-translate/core';
import { AddFirmwareModalComponent } from './add-firmware-modal.component';
import { AddFirmwarePatchModalComponent } from './add-firmware-patch-modal.component';
import { property } from 'lodash-es';
var FirmwareDetailsComponent = /** @class */ (function () {
    function FirmwareDetailsComponent(activatedRoute, inventoryService, repositoryService, alertService, translateService, modalService, bsModalService) {
        var _this = this;
        this.activatedRoute = activatedRoute;
        this.inventoryService = inventoryService;
        this.repositoryService = repositoryService;
        this.alertService = alertService;
        this.translateService = translateService;
        this.modalService = modalService;
        this.bsModalService = bsModalService;
        this.reload$ = new Subject();
        this.reloading$ = new BehaviorSubject(false);
        this.updateFirmware$ = new Subject();
        this.firmwareUpdated$ = new Subject();
        this.baseVersionsUpdated$ = new Subject();
        this.patchVersionsUpdated$ = new Subject();
        this.firmware$ = merge(this.activatedRoute.params.pipe(map(function (params) { return params.id; }), switchMap(function (id) { return _this.inventoryService.detail$(id); })), this.reload$.pipe(tap(function () { return _this.reloading$.next(true); }), switchMap(function () { return _this.activatedRoute.params; }), map(function (params) { return params.id; }), switchMap(function (id) { return _this.inventoryService.detail$(id); }), tap(function () { return _this.reloading$.next(false); })), this.firmwareUpdated$).pipe(shareReplay(1));
        this.baseVersions$ = merge(this.firmware$.pipe(distinctUntilKeyChanged('id')), this.baseVersionsUpdated$, this.patchVersionsUpdated$, this.reload$).pipe(switchMap(function () { return _this.firmware$; }), switchMap(function (firmware) { return _this.repositoryService.listBaseVersions(firmware); }), shareReplay(1));
        this.isLegacy$ = this.firmware$.pipe(map(function (firmware) { return _this.repositoryService.isLegacyEntry(firmware); }), shareReplay(1));
        this.canAddPatchVersions$ = combineLatest(this.isLegacy$, this.baseVersions$.pipe(map(function (_a) {
            var data = _a.data;
            return data.length > 0;
        }))).pipe(map(function (_a) {
            var _b = tslib_1.__read(_a, 2), isLegacy = _b[0], hasBaseVersions = _b[1];
            return !isLegacy && hasBaseVersions;
        }));
        this.expanded = {};
        this.destroy$ = new Subject();
    }
    FirmwareDetailsComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.updateFirmware$
            .pipe(withLatestFrom(this.firmware$), switchMap(function (_a) {
            var _b = tslib_1.__read(_a, 2), firmwarePartial = _b[0], firmware = _b[1];
            return _this.inventoryService.update(tslib_1.__assign({ id: firmware.id }, firmwarePartial));
        }), map(function (_a) {
            var data = _a.data;
            return data;
        }), tap(function (firmware) { return _this.firmwareUpdated$.next(firmware); }), tap(function () { return _this.alertService.success(gettext('Saved.')); }), takeUntil(this.destroy$))
            .subscribe();
    };
    FirmwareDetailsComponent.prototype.getPatchVersionsCount$ = function (baseVersion) {
        var _this = this;
        return merge(this.firmware$.pipe(distinctUntilKeyChanged('id')), this.baseVersionsUpdated$, this.patchVersionsUpdated$, this.reload$).pipe(switchMap(function () { return _this.firmware$; }), switchMap(function (firmware) { return _this.repositoryService.getPatchVersionsCount$(firmware, baseVersion); }), shareReplay(1));
    };
    FirmwareDetailsComponent.prototype.getBinaryName$ = function (binaryUrl) {
        return this.repositoryService.getBinaryName$(binaryUrl);
    };
    FirmwareDetailsComponent.prototype.getPatchVersions$ = function (baseVersion) {
        var _this = this;
        return merge(this.firmware$.pipe(distinctUntilKeyChanged('id')), this.patchVersionsUpdated$, this.reload$).pipe(switchMap(function () { return _this.firmware$; }), switchMap(function (firmware) { return _this.repositoryService.listPatchVersions(firmware, baseVersion); }), shareReplay(1));
    };
    FirmwareDetailsComponent.prototype.addBaseVersion = function () {
        var _this = this;
        this.firmware$
            .pipe(take(1), switchMap(function (firmware) {
            var initialState = {
                model: {
                    selected: firmware,
                    description: firmware.description
                }
            };
            var config = {
                class: 'modal-sm',
                ignoreBackdropClick: true,
                initialState: initialState
            };
            var modalRef = _this.bsModalService.show(AddFirmwareModalComponent, config);
            return modalRef.content.saved;
        }))
            .subscribe(function () { return _this.baseVersionsUpdated$.next(); });
    };
    FirmwareDetailsComponent.prototype.addPatchVersion = function () {
        var _this = this;
        this.firmware$
            .pipe(take(1), switchMap(function (firmware) {
            var initialState = {
                model: {
                    selected: firmware
                }
            };
            var config = {
                class: 'modal-sm',
                ignoreBackdropClick: true,
                initialState: initialState
            };
            var modalRef = _this.bsModalService.show(AddFirmwarePatchModalComponent, config);
            return modalRef.content.saved;
        }))
            .subscribe(function () { return _this.patchVersionsUpdated$.next(); });
    };
    FirmwareDetailsComponent.prototype.deleteBaseVersion = function (baseVersion) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var title, body, labels, ex_1;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 3, , 4]);
                        title = gettext('Delete firmware');
                        body = "\n        " + this.translateService.instant(gettext('You are about to delete firmware {{ version }} with all its patches.'), { version: baseVersion.c8y_Firmware.version }) + "\n        " + this.translateService.instant(gettext('This operation is irreversible.')) + "\n        " + this.translateService.instant(gettext('Do you want to proceed?')) + "\n      ";
                        labels = {
                            ok: gettext('Delete')
                        };
                        return [4 /*yield*/, this.modalService.confirm(title, body, Status.DANGER, labels)];
                    case 1:
                        _a.sent();
                        return [4 /*yield*/, this.repositoryService.delete(baseVersion)];
                    case 2:
                        _a.sent();
                        this.alertService.success(gettext('Firmware deleted.'));
                        this.baseVersionsUpdated$.next();
                        return [3 /*break*/, 4];
                    case 3:
                        ex_1 = _a.sent();
                        // only if not cancel from modal
                        if (ex_1) {
                            this.alertService.addServerFailure(ex_1);
                        }
                        return [3 /*break*/, 4];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    FirmwareDetailsComponent.prototype.deletePatchVersion = function (patchVersion) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var title, body, labels, ex_2;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 3, , 4]);
                        title = gettext('Delete firmware patch');
                        body = "\n        " + this.translateService.instant(gettext('You are about to delete firmware patch {{ version }}.'), { version: patchVersion.c8y_Firmware.version }) + "\n        " + this.translateService.instant(gettext('This operation is irreversible.')) + "\n        " + this.translateService.instant(gettext('Do you want to proceed?')) + "\n      ";
                        labels = {
                            ok: gettext('Delete')
                        };
                        return [4 /*yield*/, this.modalService.confirm(title, body, Status.DANGER, labels)];
                    case 1:
                        _a.sent();
                        return [4 /*yield*/, this.repositoryService.delete(patchVersion)];
                    case 2:
                        _a.sent();
                        this.alertService.success(gettext('Firmware patch deleted.'));
                        this.patchVersionsUpdated$.next();
                        return [3 /*break*/, 4];
                    case 3:
                        ex_2 = _a.sent();
                        // only if not cancel from modal
                        if (ex_2) {
                            this.alertService.addServerFailure(ex_2);
                        }
                        return [3 /*break*/, 4];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    FirmwareDetailsComponent.prototype.ngOnDestroy = function () {
        this.destroy$.next(true);
        this.destroy$.unsubscribe();
    };
    FirmwareDetailsComponent.ctorParameters = function () { return [
        { type: ActivatedRoute },
        { type: InventoryService },
        { type: RepositoryService },
        { type: AlertService },
        { type: TranslateService },
        { type: ModalService },
        { type: BsModalService }
    ]; };
    tslib_1.__decorate([
        memoize(property('id'))
    ], FirmwareDetailsComponent.prototype, "getPatchVersionsCount$", null);
    tslib_1.__decorate([
        memoize()
    ], FirmwareDetailsComponent.prototype, "getBinaryName$", null);
    tslib_1.__decorate([
        memoize(property('id'))
    ], FirmwareDetailsComponent.prototype, "getPatchVersions$", null);
    FirmwareDetailsComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-firmware-details',
            template: "<c8y-title>\n  {{ (firmware$ | async)?.name }}\n</c8y-title>\n\n<c8y-breadcrumb>\n  <c8y-breadcrumb-item\n    path=\"#/firmware\"\n    label=\"{{ 'Firmware repository' | translate }}\"\n    icon=\"c8y-firmware\"\n  >\n  </c8y-breadcrumb-item>\n</c8y-breadcrumb>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button\n    *ngIf=\"!(isLegacy$ | async)\"\n    class=\"btn btn-link\"\n    title=\"{{ 'Add firmware' | translate }}\"\n    (click)=\"addBaseVersion()\"\n  >\n    <i c8yIcon=\"plus-circle\"></i>\n    {{ 'Add firmware' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button\n    *ngIf=\"canAddPatchVersions$ | async\"\n    class=\"btn btn-link\"\n    title=\"{{ 'Add firmware patch' | translate }}\"\n    (click)=\"addPatchVersion()\"\n  >\n    <i c8yIcon=\"plus-circle\"></i>\n    {{ 'Add firmware patch' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button class=\"btn btn-link\" title=\"{{ 'Reload' | translate }}\" (click)=\"reload$.next()\">\n    <i c8yIcon=\"refresh\" [ngClass]=\"{ 'fa-spin': reloading$ | async }\"></i>\n    {{ 'Reload' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<div class=\"card m-b-4\">\n  <div class=\"card-header separator\">\n    <h4 class=\"card-title\" translate>\n      Name, description and device type filter\n    </h4>\n  </div>\n  <div class=\"card-block\">\n    <div class=\"row\">\n      <div class=\"col-md-4\">\n        <c8y-form-group>\n          <label class=\"control-label\">\n            {{ 'Name' | translate }}\n          </label>\n          <div class=\"input-group input-group-editable\">\n            <input\n              #nameInput\n              type=\"text\"\n              class=\"form-control\"\n              [ngModel]=\"(firmware$ | async)?.name\"\n              #nameModel=\"ngModel\"\n              placeholder=\"{{ 'e.g. My firmware' | translate }}\"\n              required\n            />\n            <span></span>\n            <div class=\"input-group-btn\">\n              <button\n                class=\"btn btn-primary\"\n                title=\"{{ 'Save' | translate }}\"\n                (click)=\"updateFirmware$.next({ name: nameInput.value }); nameModel.reset()\"\n                [disabled]=\"nameInput.value.length == 0\"\n              >\n                {{ 'Save' | translate }}\n              </button>\n            </div>\n          </div>\n        </c8y-form-group>\n      </div>\n      <div class=\"col-md-4\">\n        <c8y-form-group>\n          <label class=\"control-label\">\n            {{ 'Description' | translate }}\n          </label>\n          <div class=\"input-group input-group-editable\">\n            <input\n              #descriptionInput\n              type=\"text\"\n              class=\"form-control\"\n              [ngModel]=\"(firmware$ | async)?.description\"\n              #descriptionModel=\"ngModel\"\n              placeholder=\"{{ 'e.g. Firmware for hardware revision b' | translate }}\"\n            />\n            <span></span>\n            <div class=\"input-group-btn\">\n              <button\n                class=\"btn btn-primary\"\n                title=\"{{ 'Save' | translate }}\"\n                (click)=\"\n                  updateFirmware$.next({ description: descriptionInput.value });\n                  descriptionModel.reset()\n                \"\n              >\n                {{ 'Save' | translate }}\n              </button>\n            </div>\n          </div>\n        </c8y-form-group>\n      </div>\n      <div class=\"col-md-4\">\n        <c8y-form-group>\n          <label class=\"control-label\">\n            {{ 'Device type filter' | translate }}\n\n            <a\n              class=\"pointer\"\n              popover=\"{{\n                'If the filter is set, the firmware will show up for installation only for devices of that type. If no filter is set, it will be available for all devices.'\n                  | translate\n              }}\"\n              [outsideClick]=\"true\"\n              container=\"body\"\n            >\n              <i c8yIcon=\"question-circle-o\"></i>\n            </a>\n          </label>\n          <div class=\"input-group input-group-editable\">\n            <input\n              #deviceTypeInput\n              type=\"text\"\n              class=\"form-control\"\n              [ngModel]=\"(firmware$ | async)?.c8y_Filter?.type\"\n              #deviceTypeModel=\"ngModel\"\n              placeholder=\"{{ 'e.g.' | translate }} c8y_Linux\"\n            />\n            <span></span>\n            <div class=\"input-group-btn\">\n              <button\n                class=\"btn btn-primary\"\n                title=\"{{ 'Save' | translate }}\"\n                (click)=\"\n                  updateFirmware$.next({ c8y_Filter: { type: deviceTypeInput.value } });\n                  deviceTypeModel.reset()\n                \"\n              >\n                {{ 'Save' | translate }}\n              </button>\n            </div>\n          </div>\n        </c8y-form-group>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"card\">\n  <div class=\"card-header separator\">\n    <h4 class=\"card-title\" translate>\n      Versions and patches\n    </h4>\n  </div>\n\n  <div class=\"card-block p-t-0\">\n    <div *ngIf=\"(baseVersions$ | async)?.data.length === 0\">\n      <div class=\"c8y-empty-state text-center\">\n        <h1 c8yIcon=\"c8y-firmware\" class=\"c8y-icon-duocolor\"></h1>\n        <h3 translate>No versions to display.</h3>\n        <p translate>Add a new version by clicking below.</p>\n        <p>\n          <button\n            class=\"btn btn-primary\"\n            title=\"{{ 'Add firmware' | translate }}\"\n            (click)=\"addBaseVersion()\"\n            translate\n          >\n            Add firmware\n          </button>\n        </p>\n      </div>\n    </div>\n\n    <c8y-list-group class=\"m-b-16\" *ngIf=\"(baseVersions$ | async)?.data.length > 0\">\n      <c8y-li\n        *c8yFor=\"let baseVersion of baseVersions$ | async; let i = index; loadMore: 'auto'\"\n        [ngClass]=\"{\n          'c8y-list__item--empty-actions': !(getPatchVersions$(baseVersion) | async)?.data.length\n        }\"\n        [collapsed]=\"!expanded[baseVersion.id]\"\n        (collapsedChange)=\"expanded[baseVersion.id] = !$event\"\n      >\n        <c8y-li-icon>\n          <i c8yIcon=\"c8y-firmware\"></i>\n        </c8y-li-icon>\n\n        <c8y-li-body class=\"content-flex-50\">\n          <div class=\"col-4\">\n            <p>{{ baseVersion.c8y_Firmware.version }}</p>\n          </div>\n          <div class=\"col-5 \">\n            <p class=\"text-truncate\">\n              <span class=\"text-label-small m-r-8\" translate>\n                File\n              </span>\n              <span title=\" {{ getBinaryName$(baseVersion.c8y_Firmware.url) | async }}\">\n                <a href=\"{{baseVersion.c8y_Firmware.url}}\" target=\"_blank\" rel=\"noopener noreferrer\">{{ getBinaryName$(baseVersion.c8y_Firmware.url) | async }}</a>\n              </span>\n            </p>\n          </div>\n          <div class=\"col-2 flex-row\">\n            <span *ngIf=\"isLegacy$ | async\" class=\"label label-warning flex-item-right-sm\">\n              {{ 'Legacy' | translate }}\n            </span>\n\n            <span *ngIf=\"!(isLegacy$ | async)\">\n              <span *ngIf=\"(getPatchVersionsCount$(baseVersion) | async) === null\">\n                <span class=\"label label-info\">\n                  <i c8yIcon=\"circle-o-notch\" class=\"fa-spin\"></i>\n                </span>\n              </span>\n              <span *ngIf=\"(getPatchVersionsCount$(baseVersion) | async) !== null\">\n                <span [ngPlural]=\"getPatchVersionsCount$(baseVersion) | async\">\n                  <ng-template ngPluralCase=\"=0\">\n                    <span class=\"label label-default flex-item-right-sm\">\n                      <span translate>No patches</span></span\n                    >\n                  </ng-template>\n                  <ng-template ngPluralCase=\"=1\">\n                    <span class=\"label label-info\">\n                      <span translate>1 patch</span>\n                    </span>\n                  </ng-template>\n                  <ng-template ngPluralCase=\"other\">\n                    <span class=\"label label-info\">\n                      <span\n                        ngNonBindable\n                        translate\n                        [translateParams]=\"{ count: getPatchVersionsCount$(baseVersion) | async }\"\n                        >{{ count }} patches</span\n                      ></span\n                    >\n                  </ng-template>\n                </span>\n              </span>\n            </span>\n            <div class=\"v-fit-20\" *ngIf=\"!(isLegacy$ | async)\">\n              <button\n                class=\"btn btn-danger btn-xs visible-xs flex-item-right m-r-8 m-t-8\"\n                (click)=\"deleteBaseVersion(baseVersion)\"\n                title=\"{{ 'Delete' | translate }}\"\n              >\n                <i c8yIcon=\"minus-circle\"></i> {{ 'Delete' | translate }}\n              </button>\n            </div>\n          </div>\n          <div *ngIf=\"!(isLegacy$ | async)\" class=\"flex-item-right v-fit-20 p-r-8 hidden-xs\">\n            <button\n              class=\"btn btn-dot text-danger showOnHover\"\n              (click)=\"deleteBaseVersion(baseVersion)\"\n              title=\"{{ 'Delete' | translate }}\"\n            >\n              <i c8yIcon=\"minus-circle\"></i>\n            </button>\n          </div>\n        </c8y-li-body>\n        <c8y-li-collapse\n          *ngIf=\"(getPatchVersions$(baseVersion) | async)?.data.length\"\n          [item]=\"baseVersion\"\n        >\n          <c8y-list-group>\n            <c8y-li\n              *c8yFor=\"\n                let patchVersion of getPatchVersions$(baseVersion) | async;\n                let i = index;\n                loadMore: 'auto'\n              \"\n            >\n              <c8y-li-icon>\n                <i c8yIcon=\"c8y-firmware\"></i>\n              </c8y-li-icon>\n              <c8y-li-body class=\"content-flex-50\">\n                <div class=\"col-5\">\n                  {{ patchVersion.c8y_Firmware.version }}\n                </div>\n                <div class=\"col-5 text-truncate\">\n                  <span class=\"text-label-small m-r-8\" translate>\n                    File\n                  </span>\n                  <span title=\"{{ getBinaryName$(patchVersion.c8y_Firmware.url) | async }}\">\n                    {{ getBinaryName$(patchVersion.c8y_Firmware.url) | async }}\n                  </span>\n\n                  <button\n                    class=\"btn btn-danger btn-xs visible-xs flex-item-right m-r-8\"\n                    (click)=\"deletePatchVersion(patchVersion)\"\n                    title=\"{{ 'Delete' | translate }}\"\n                  >\n                    <i c8yIcon=\"minus-circle\"></i> {{ 'Delete' | translate }}\n                  </button>\n                </div>\n                <div class=\"flex-item-right p-r-8 hidden-xs\">\n                  <button\n                    class=\"btn btn-dot text-danger showOnHover\"\n                    (click)=\"deletePatchVersion(patchVersion)\"\n                    title=\"{{ 'Delete' | translate }}\"\n                  >\n                    <i c8yIcon=\"minus-circle\"></i>\n                  </button>\n                </div>\n              </c8y-li-body>\n            </c8y-li>\n          </c8y-list-group>\n        </c8y-li-collapse>\n      </c8y-li>\n    </c8y-list-group>\n  </div>\n</div>\n"
        })
    ], FirmwareDetailsComponent);
    return FirmwareDetailsComponent;
}());
export { FirmwareDetailsComponent };
//# sourceMappingURL=data:application/json;base64,