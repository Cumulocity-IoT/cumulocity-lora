import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { RouterModule } from '@angular/router';
import { CommonModule, CoreModule, HOOK_NAVIGATOR_NODES, HOOK_ONCE_ROUTE, gettext, ViewContext } from '@c8y/ngx-components';
import { BsDropdownModule } from 'ngx-bootstrap/dropdown';
import { PopoverModule } from 'ngx-bootstrap/popover';
import { TooltipModule } from 'ngx-bootstrap/tooltip';
import { ButtonsModule } from 'ngx-bootstrap/buttons';
import { ReactiveFormsModule } from '@angular/forms';
import { DeviceProfileComponent } from './device-profile.component';
import { DeviceProfileListComponent } from './device-profile-list.component';
import { DeviceProfileNavigationFactory } from './device-profile-navigation.factory';
import { DeviceProfileService } from './device-profile.service';
import { AddDeviceProfileComponent } from './add-device-profile.component';
import { DeviceProfileGuard } from './device-profile.guard';
import { RepositoryModule } from '@c8y/ngx-components/repository';
import { SelectConfigurationModalComponent } from './select-configuration-modal.component';
import { DeviceTabProfileComponent } from './device-tab-profile/device-tab-profile.component';
import { DeviceTabProfileDetailComponent } from './device-tab-profile/device-tab-profile-detail.component';
import { DeviceProfileItemListComponent } from './device-tab-profile/device-profile-item-list.component';
var deviceProfilesRoutes = [
    {
        path: 'device-profiles/:id',
        component: DeviceProfileComponent
    },
    {
        path: 'device-profiles',
        component: DeviceProfileListComponent
    }
];
var deviceTabProfileRoutes = [
    {
        context: ViewContext.Device,
        path: 'device-profile',
        component: DeviceTabProfileComponent,
        label: gettext('Device profile'),
        icon: 'c8y-device-profile',
        canActivate: [DeviceProfileGuard]
    }
];
var ɵ0 = deviceTabProfileRoutes;
var DeviceProfileModule = /** @class */ (function () {
    function DeviceProfileModule() {
    }
    DeviceProfileModule = tslib_1.__decorate([
        NgModule({
            declarations: [
                DeviceProfileComponent,
                DeviceProfileListComponent,
                AddDeviceProfileComponent,
                SelectConfigurationModalComponent,
                DeviceTabProfileComponent,
                DeviceTabProfileDetailComponent,
                DeviceProfileItemListComponent
            ],
            exports: [],
            imports: [
                CoreModule,
                CommonModule,
                RepositoryModule,
                RouterModule.forChild(deviceProfilesRoutes),
                BsDropdownModule.forRoot(),
                TooltipModule,
                ReactiveFormsModule,
                ButtonsModule,
                PopoverModule
            ],
            entryComponents: [
                AddDeviceProfileComponent,
                SelectConfigurationModalComponent,
                DeviceTabProfileComponent
            ],
            providers: [
                {
                    provide: HOOK_NAVIGATOR_NODES,
                    useClass: DeviceProfileNavigationFactory,
                    multi: true
                },
                {
                    provide: HOOK_ONCE_ROUTE,
                    useValue: ɵ0,
                    multi: true
                },
                DeviceProfileService,
                DeviceProfileGuard
            ]
        })
    ], DeviceProfileModule);
    return DeviceProfileModule;
}());
export { DeviceProfileModule };
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGV2aWNlLXByb2ZpbGUubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy9kZXZpY2UtcHJvZmlsZS8iLCJzb3VyY2VzIjpbImRldmljZS1wcm9maWxlLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQVMsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDdEQsT0FBTyxFQUNMLFlBQVksRUFDWixVQUFVLEVBQ1Ysb0JBQW9CLEVBQ3BCLGVBQWUsRUFDZixPQUFPLEVBQ1AsV0FBVyxFQUNaLE1BQU0scUJBQXFCLENBQUM7QUFDN0IsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDMUQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3RELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDdEQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDckQsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDcEUsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDN0UsT0FBTyxFQUFFLDhCQUE4QixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDckYsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDaEUsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDM0UsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDNUQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDbEUsT0FBTyxFQUFFLGlDQUFpQyxFQUFFLE1BQU0sd0NBQXdDLENBQUM7QUFDM0YsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sbURBQW1ELENBQUM7QUFDOUYsT0FBTyxFQUFFLCtCQUErQixFQUFFLE1BQU0sMERBQTBELENBQUM7QUFDM0csT0FBTyxFQUFFLDhCQUE4QixFQUFFLE1BQU0seURBQXlELENBQUM7QUFFekcsSUFBTSxvQkFBb0IsR0FBWTtJQUNwQztRQUNFLElBQUksRUFBRSxxQkFBcUI7UUFDM0IsU0FBUyxFQUFFLHNCQUFzQjtLQUNsQztJQUNEO1FBQ0UsSUFBSSxFQUFFLGlCQUFpQjtRQUN2QixTQUFTLEVBQUUsMEJBQTBCO0tBQ3RDO0NBQ0YsQ0FBQztBQUVGLElBQU0sc0JBQXNCLEdBQVU7SUFDcEM7UUFDRSxPQUFPLEVBQUUsV0FBVyxDQUFDLE1BQU07UUFDM0IsSUFBSSxFQUFFLGdCQUFnQjtRQUN0QixTQUFTLEVBQUUseUJBQXlCO1FBQ3BDLEtBQUssRUFBRSxPQUFPLENBQUMsZ0JBQWdCLENBQUM7UUFDaEMsSUFBSSxFQUFFLG9CQUFvQjtRQUMxQixXQUFXLEVBQUUsQ0FBQyxrQkFBa0IsQ0FBQztLQUNsQztDQUNGLENBQUM7U0FxQ2Msc0JBQXNCO0FBT3RDO0lBQUE7SUFBa0MsQ0FBQztJQUF0QixtQkFBbUI7UUExQy9CLFFBQVEsQ0FBQztZQUNSLFlBQVksRUFBRTtnQkFDWixzQkFBc0I7Z0JBQ3RCLDBCQUEwQjtnQkFDMUIseUJBQXlCO2dCQUN6QixpQ0FBaUM7Z0JBQ2pDLHlCQUF5QjtnQkFDekIsK0JBQStCO2dCQUMvQiw4QkFBOEI7YUFDL0I7WUFDRCxPQUFPLEVBQUUsRUFBRTtZQUNYLE9BQU8sRUFBRTtnQkFDUCxVQUFVO2dCQUNWLFlBQVk7Z0JBQ1osZ0JBQWdCO2dCQUNoQixZQUFZLENBQUMsUUFBUSxDQUFDLG9CQUFvQixDQUFDO2dCQUMzQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUU7Z0JBQzFCLGFBQWE7Z0JBQ2IsbUJBQW1CO2dCQUNuQixhQUFhO2dCQUNiLGFBQWE7YUFDZDtZQUNELGVBQWUsRUFBRTtnQkFDZix5QkFBeUI7Z0JBQ3pCLGlDQUFpQztnQkFDakMseUJBQXlCO2FBQzFCO1lBQ0QsU0FBUyxFQUFFO2dCQUNUO29CQUNFLE9BQU8sRUFBRSxvQkFBb0I7b0JBQzdCLFFBQVEsRUFBRSw4QkFBOEI7b0JBQ3hDLEtBQUssRUFBRSxJQUFJO2lCQUNaO2dCQUNEO29CQUNFLE9BQU8sRUFBRSxlQUFlO29CQUN4QixRQUFRLElBQXdCO29CQUNoQyxLQUFLLEVBQUUsSUFBSTtpQkFDWjtnQkFDRCxvQkFBb0I7Z0JBQ3BCLGtCQUFrQjthQUNuQjtTQUNGLENBQUM7T0FDVyxtQkFBbUIsQ0FBRztJQUFELDBCQUFDO0NBQUEsQUFBbkMsSUFBbUM7U0FBdEIsbUJBQW1CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFJvdXRlLCBSb3V0ZXJNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHtcbiAgQ29tbW9uTW9kdWxlLFxuICBDb3JlTW9kdWxlLFxuICBIT09LX05BVklHQVRPUl9OT0RFUyxcbiAgSE9PS19PTkNFX1JPVVRFLFxuICBnZXR0ZXh0LFxuICBWaWV3Q29udGV4dFxufSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IEJzRHJvcGRvd25Nb2R1bGUgfSBmcm9tICduZ3gtYm9vdHN0cmFwL2Ryb3Bkb3duJztcbmltcG9ydCB7IFBvcG92ZXJNb2R1bGUgfSBmcm9tICduZ3gtYm9vdHN0cmFwL3BvcG92ZXInO1xuaW1wb3J0IHsgVG9vbHRpcE1vZHVsZSB9IGZyb20gJ25neC1ib290c3RyYXAvdG9vbHRpcCc7XG5pbXBvcnQgeyBCdXR0b25zTW9kdWxlIH0gZnJvbSAnbmd4LWJvb3RzdHJhcC9idXR0b25zJztcbmltcG9ydCB7IFJlYWN0aXZlRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBEZXZpY2VQcm9maWxlQ29tcG9uZW50IH0gZnJvbSAnLi9kZXZpY2UtcHJvZmlsZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgRGV2aWNlUHJvZmlsZUxpc3RDb21wb25lbnQgfSBmcm9tICcuL2RldmljZS1wcm9maWxlLWxpc3QuY29tcG9uZW50JztcbmltcG9ydCB7IERldmljZVByb2ZpbGVOYXZpZ2F0aW9uRmFjdG9yeSB9IGZyb20gJy4vZGV2aWNlLXByb2ZpbGUtbmF2aWdhdGlvbi5mYWN0b3J5JztcbmltcG9ydCB7IERldmljZVByb2ZpbGVTZXJ2aWNlIH0gZnJvbSAnLi9kZXZpY2UtcHJvZmlsZS5zZXJ2aWNlJztcbmltcG9ydCB7IEFkZERldmljZVByb2ZpbGVDb21wb25lbnQgfSBmcm9tICcuL2FkZC1kZXZpY2UtcHJvZmlsZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgRGV2aWNlUHJvZmlsZUd1YXJkIH0gZnJvbSAnLi9kZXZpY2UtcHJvZmlsZS5ndWFyZCc7XG5pbXBvcnQgeyBSZXBvc2l0b3J5TW9kdWxlIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cy9yZXBvc2l0b3J5JztcbmltcG9ydCB7IFNlbGVjdENvbmZpZ3VyYXRpb25Nb2RhbENvbXBvbmVudCB9IGZyb20gJy4vc2VsZWN0LWNvbmZpZ3VyYXRpb24tbW9kYWwuY29tcG9uZW50JztcbmltcG9ydCB7IERldmljZVRhYlByb2ZpbGVDb21wb25lbnQgfSBmcm9tICcuL2RldmljZS10YWItcHJvZmlsZS9kZXZpY2UtdGFiLXByb2ZpbGUuY29tcG9uZW50JztcbmltcG9ydCB7IERldmljZVRhYlByb2ZpbGVEZXRhaWxDb21wb25lbnQgfSBmcm9tICcuL2RldmljZS10YWItcHJvZmlsZS9kZXZpY2UtdGFiLXByb2ZpbGUtZGV0YWlsLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBEZXZpY2VQcm9maWxlSXRlbUxpc3RDb21wb25lbnQgfSBmcm9tICcuL2RldmljZS10YWItcHJvZmlsZS9kZXZpY2UtcHJvZmlsZS1pdGVtLWxpc3QuY29tcG9uZW50JztcblxuY29uc3QgZGV2aWNlUHJvZmlsZXNSb3V0ZXM6IFJvdXRlW10gPSBbXG4gIHtcbiAgICBwYXRoOiAnZGV2aWNlLXByb2ZpbGVzLzppZCcsXG4gICAgY29tcG9uZW50OiBEZXZpY2VQcm9maWxlQ29tcG9uZW50XG4gIH0sXG4gIHtcbiAgICBwYXRoOiAnZGV2aWNlLXByb2ZpbGVzJyxcbiAgICBjb21wb25lbnQ6IERldmljZVByb2ZpbGVMaXN0Q29tcG9uZW50XG4gIH1cbl07XG5cbmNvbnN0IGRldmljZVRhYlByb2ZpbGVSb3V0ZXM6IGFueVtdID0gW1xuICB7XG4gICAgY29udGV4dDogVmlld0NvbnRleHQuRGV2aWNlLFxuICAgIHBhdGg6ICdkZXZpY2UtcHJvZmlsZScsXG4gICAgY29tcG9uZW50OiBEZXZpY2VUYWJQcm9maWxlQ29tcG9uZW50LFxuICAgIGxhYmVsOiBnZXR0ZXh0KCdEZXZpY2UgcHJvZmlsZScpLFxuICAgIGljb246ICdjOHktZGV2aWNlLXByb2ZpbGUnLFxuICAgIGNhbkFjdGl2YXRlOiBbRGV2aWNlUHJvZmlsZUd1YXJkXVxuICB9XG5dO1xuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBEZXZpY2VQcm9maWxlQ29tcG9uZW50LFxuICAgIERldmljZVByb2ZpbGVMaXN0Q29tcG9uZW50LFxuICAgIEFkZERldmljZVByb2ZpbGVDb21wb25lbnQsXG4gICAgU2VsZWN0Q29uZmlndXJhdGlvbk1vZGFsQ29tcG9uZW50LFxuICAgIERldmljZVRhYlByb2ZpbGVDb21wb25lbnQsXG4gICAgRGV2aWNlVGFiUHJvZmlsZURldGFpbENvbXBvbmVudCxcbiAgICBEZXZpY2VQcm9maWxlSXRlbUxpc3RDb21wb25lbnRcbiAgXSxcbiAgZXhwb3J0czogW10sXG4gIGltcG9ydHM6IFtcbiAgICBDb3JlTW9kdWxlLFxuICAgIENvbW1vbk1vZHVsZSxcbiAgICBSZXBvc2l0b3J5TW9kdWxlLFxuICAgIFJvdXRlck1vZHVsZS5mb3JDaGlsZChkZXZpY2VQcm9maWxlc1JvdXRlcyksXG4gICAgQnNEcm9wZG93bk1vZHVsZS5mb3JSb290KCksXG4gICAgVG9vbHRpcE1vZHVsZSxcbiAgICBSZWFjdGl2ZUZvcm1zTW9kdWxlLFxuICAgIEJ1dHRvbnNNb2R1bGUsXG4gICAgUG9wb3Zlck1vZHVsZVxuICBdLFxuICBlbnRyeUNvbXBvbmVudHM6IFtcbiAgICBBZGREZXZpY2VQcm9maWxlQ29tcG9uZW50LFxuICAgIFNlbGVjdENvbmZpZ3VyYXRpb25Nb2RhbENvbXBvbmVudCxcbiAgICBEZXZpY2VUYWJQcm9maWxlQ29tcG9uZW50XG4gIF0sXG4gIHByb3ZpZGVyczogW1xuICAgIHtcbiAgICAgIHByb3ZpZGU6IEhPT0tfTkFWSUdBVE9SX05PREVTLFxuICAgICAgdXNlQ2xhc3M6IERldmljZVByb2ZpbGVOYXZpZ2F0aW9uRmFjdG9yeSxcbiAgICAgIG11bHRpOiB0cnVlXG4gICAgfSxcbiAgICB7XG4gICAgICBwcm92aWRlOiBIT09LX09OQ0VfUk9VVEUsXG4gICAgICB1c2VWYWx1ZTogZGV2aWNlVGFiUHJvZmlsZVJvdXRlcyxcbiAgICAgIG11bHRpOiB0cnVlXG4gICAgfSxcbiAgICBEZXZpY2VQcm9maWxlU2VydmljZSxcbiAgICBEZXZpY2VQcm9maWxlR3VhcmRcbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBEZXZpY2VQcm9maWxlTW9kdWxlIHt9XG4iXX0=