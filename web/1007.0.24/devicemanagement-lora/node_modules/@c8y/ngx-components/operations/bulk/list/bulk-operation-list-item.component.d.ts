import { EventEmitter, OnChanges, OnInit, SimpleChanges } from '@angular/core';
import { IOperationBulk, OperationBulkGeneralStatus } from '@c8y/client';
import { AlertService, ListItemComponent, ModalService } from '@c8y/ngx-components';
import { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';
import { BulkOperationsService } from '../bulk-operations.service';
export declare class BulkOperationListItemComponent implements OnInit, OnChanges {
    private bulkOperationsService;
    private modal;
    private alert;
    private bsModalService;
    bulkOperation: Partial<IOperationBulk>;
    detailsCollapsed: boolean;
    readOnly: boolean;
    showFailedOperation: EventEmitter<any>;
    reload: EventEmitter<any>;
    listItem: ListItemComponent;
    iconClass: string;
    finishDate: number;
    refreshLoading: boolean;
    bulkOperationGeneralStatus: typeof OperationBulkGeneralStatus;
    bulkOperationStatusOptions: import("../../status-filter/status-option.model").IStatusOption[];
    bsModalRef: BsModalRef;
    finishDatePopoverText: string;
    progressBarClass: string;
    progressBarColor: string;
    progressBarStatus: number;
    constructor(bulkOperationsService: BulkOperationsService, modal: ModalService, alert: AlertService, bsModalService: BsModalService);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    getIconClass(): string;
    calculateFinishDateMs(): number;
    progressBarProgressFn(): number;
    setProgressBar(): void;
    editSchedule(): void;
    cancelBulkOperation(): Promise<void>;
    retryFailedOperation(): void;
    setToSuccessful(): Promise<void>;
    openFailedOperation(failedParentId: any): void;
    isStatusScheduled(): boolean;
    isStatusExecutingOrExecutingWithError(): boolean;
    isStatusCanceled(): boolean;
    isStatusFailed(): boolean;
}
