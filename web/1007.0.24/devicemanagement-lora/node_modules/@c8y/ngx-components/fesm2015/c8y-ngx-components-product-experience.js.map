{"version":3,"file":"c8y-ngx-components-product-experience.js","sources":["ng://@c8y/ngx-components/product-experience/gainsight.service.ts","ng://@c8y/ngx-components/product-experience/product-experience.module.ts","ng://@c8y/ngx-components/product-experience/c8y-ngx-components-product-experience.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { combineLatest, fromEvent, BehaviorSubject } from 'rxjs';\nimport { filter, delay, map, take } from 'rxjs/operators';\nimport { AppStateService, OptionsService } from '@c8y/ngx-components';\n\n/**\n * A service to manage the Gainsight integration. It allows to load the\n * tag and\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GainsightService {\n  /**\n   * A subject that emits the tag function as soon as a new tag is set.\n   */\n  tagFunction$ = new BehaviorSubject(null);\n\n  private readonly GAINSIGHT_URL = 'web-sdk.aptrinsic.com/api/aptrinsic.js?a=';\n  private readonly GAINSIGHT_GLOBAL_SCOPE = 'aptrinsic';\n  private readonly SCRIPT_EXECUTION_WAIT_TIME = 500;\n  private readonly OPTIONS_KEY_CATEGORY = 'gainsight';\n  private readonly OPTIONS_KEY_NAME = 'api.key';\n\n  constructor(private appState: AppStateService, private options: OptionsService) {}\n\n  /**\n   * Returns the tag global function which can be used to identify user\n   * or add special events.\n   */\n  get tagFunction() {\n    return (window as any)[this.GAINSIGHT_GLOBAL_SCOPE];\n  }\n\n  /**\n   * Load the script tag and calls the identify function to start the tracking.\n   * @param accountId The account where the user is registered. Could be the name of the tenant.\n   * @param identify If set to false, only the tag is loaded.\n   */\n  async loadTag(accountId, identify = true) {\n    const scriptTag = document.createElement('script');\n    const key =\n      this.options.gainsightKey ||\n      (await this.options.getSystemOption(this.OPTIONS_KEY_CATEGORY, this.OPTIONS_KEY_NAME));\n\n    if (key) {\n      this.loadScriptTag(scriptTag, key);\n      combineLatest(\n        this.appState.currentUser,\n        fromEvent(scriptTag, 'load'),\n        this.appState.state$.pipe(\n          filter(({ versions }) => versions.backend),\n          map(({ versions }) => versions),\n          take(1)\n        )\n      )\n        .pipe(\n          delay(this.SCRIPT_EXECUTION_WAIT_TIME),\n          filter(([user, scriptEvent]) => !!(scriptEvent && user))\n        )\n        .subscribe(([user, scriptEvent, versions]) => {\n          const instanceId = this.getInstanceIdFromUrl();\n          if (identify) {\n            this.identify(user.id, accountId, instanceId, versions.ui.ngx, versions.backend);\n          }\n          this.tagFunction$.next(this.tagFunction);\n        });\n    }\n  }\n\n  /**\n   * Identifies the user/account at Gainsight.\n   * @param userId The user id which is given to Gainsight.\n   * @param accountId The account id which is given to Gainsight (e.g. the tenant name)\n   * @param versionUI The UI version used.\n   * @param versionBE The BE version used.\n   */\n  identify(userId, accountId, instanceId, versionUI?, versionBE?) {\n    const windowRef = window as any;\n    windowRef[this.GAINSIGHT_GLOBAL_SCOPE](\n      'identify',\n      {\n        id: `${userId}_${accountId}_${instanceId}`,\n        versionUI,\n        versionBE,\n        instanceId\n      },\n      {\n        id: `${accountId}_${instanceId}`,\n        instanceId\n      }\n    );\n  }\n\n  private loadScriptTag(scriptTag: HTMLScriptElement, key: string) {\n    try {\n      const windowRef = window as any;\n      const firstTag = document.getElementsByTagName('script')[0];\n      const protocol = location.protocol;\n      const gainsightGlobalScope = this.GAINSIGHT_GLOBAL_SCOPE;\n      scriptTag.src = `${protocol}//${this.GAINSIGHT_URL}${key}`;\n      (windowRef[this.GAINSIGHT_GLOBAL_SCOPE] =\n        windowRef[this.GAINSIGHT_GLOBAL_SCOPE] ||\n        // tslint:disable-next-line:only-arrow-functions\n        function() {\n          (windowRef[gainsightGlobalScope].q = windowRef[gainsightGlobalScope].q || []).push(\n            arguments\n          );\n        }),\n        (windowRef[gainsightGlobalScope].p = key);\n      scriptTag.async = true;\n      firstTag.parentNode.insertBefore(scriptTag, firstTag);\n    } catch (ex) {\n      console.warn('Failed to load Gainsight PX', ex);\n    }\n  }\n\n  private getInstanceIdFromUrl() {\n    const hostName = location.hostname;\n    return hostName.substring(hostName.indexOf('.') + 1);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CoreModule, AppStateService } from '@c8y/ngx-components';\nimport { filter } from 'rxjs/operators';\nimport { ICurrentTenant } from '@c8y/client';\nimport { GainsightService } from './gainsight.service';\n\n/**\n * This module enables an tenant to activate the product experience\n * software [Gainsight](https://www.gainsight.com/product-experience/) to help\n * and track user actions. Gainsight is only activated, if the tenant custom\n * property `gainsightEnabled` is set to true.\n */\n@NgModule({\n  declarations: [],\n  imports: [CoreModule],\n  exports: [],\n  providers: [GainsightService]\n})\nexport class ProductExperienceModule {\n  constructor(appState: AppStateService, gainsightService: GainsightService) {\n    appState.currentTenant\n      .pipe(filter<ICurrentTenant>(Boolean))\n      .subscribe(({ customProperties, name }) => {\n        if (customProperties && customProperties.gainsightEnabled) {\n          gainsightService.loadTag(name);\n        }\n      });\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}