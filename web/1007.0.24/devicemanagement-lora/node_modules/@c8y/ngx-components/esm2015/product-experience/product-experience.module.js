import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { CoreModule, AppStateService } from '@c8y/ngx-components';
import { filter } from 'rxjs/operators';
import { GainsightService } from './gainsight.service';
/**
 * This module enables an tenant to activate the product experience
 * software [Gainsight](https://www.gainsight.com/product-experience/) to help
 * and track user actions. Gainsight is only activated, if the tenant custom
 * property `gainsightEnabled` is set to true.
 */
let ProductExperienceModule = class ProductExperienceModule {
    constructor(appState, gainsightService) {
        appState.currentTenant
            .pipe(filter(Boolean))
            .subscribe(({ customProperties, name }) => {
            if (customProperties && customProperties.gainsightEnabled) {
                gainsightService.loadTag(name);
            }
        });
    }
};
ProductExperienceModule.ctorParameters = () => [
    { type: AppStateService },
    { type: GainsightService }
];
ProductExperienceModule = tslib_1.__decorate([
    NgModule({
        declarations: [],
        imports: [CoreModule],
        exports: [],
        providers: [GainsightService]
    })
], ProductExperienceModule);
export { ProductExperienceModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZHVjdC1leHBlcmllbmNlLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvcHJvZHVjdC1leHBlcmllbmNlLyIsInNvdXJjZXMiOlsicHJvZHVjdC1leHBlcmllbmNlLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsVUFBVSxFQUFFLGVBQWUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ2xFLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUV4QyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUV2RDs7Ozs7R0FLRztBQU9ILElBQWEsdUJBQXVCLEdBQXBDLE1BQWEsdUJBQXVCO0lBQ2xDLFlBQVksUUFBeUIsRUFBRSxnQkFBa0M7UUFDdkUsUUFBUSxDQUFDLGFBQWE7YUFDbkIsSUFBSSxDQUFDLE1BQU0sQ0FBaUIsT0FBTyxDQUFDLENBQUM7YUFDckMsU0FBUyxDQUFDLENBQUMsRUFBRSxnQkFBZ0IsRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFFO1lBQ3hDLElBQUksZ0JBQWdCLElBQUksZ0JBQWdCLENBQUMsZ0JBQWdCLEVBQUU7Z0JBQ3pELGdCQUFnQixDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQzthQUNoQztRQUNILENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztDQUNGLENBQUE7O1lBVHVCLGVBQWU7WUFBb0IsZ0JBQWdCOztBQUQ5RCx1QkFBdUI7SUFObkMsUUFBUSxDQUFDO1FBQ1IsWUFBWSxFQUFFLEVBQUU7UUFDaEIsT0FBTyxFQUFFLENBQUMsVUFBVSxDQUFDO1FBQ3JCLE9BQU8sRUFBRSxFQUFFO1FBQ1gsU0FBUyxFQUFFLENBQUMsZ0JBQWdCLENBQUM7S0FDOUIsQ0FBQztHQUNXLHVCQUF1QixDQVVuQztTQVZZLHVCQUF1QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb3JlTW9kdWxlLCBBcHBTdGF0ZVNlcnZpY2UgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IGZpbHRlciB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcbmltcG9ydCB7IElDdXJyZW50VGVuYW50IH0gZnJvbSAnQGM4eS9jbGllbnQnO1xuaW1wb3J0IHsgR2FpbnNpZ2h0U2VydmljZSB9IGZyb20gJy4vZ2FpbnNpZ2h0LnNlcnZpY2UnO1xuXG4vKipcbiAqIFRoaXMgbW9kdWxlIGVuYWJsZXMgYW4gdGVuYW50IHRvIGFjdGl2YXRlIHRoZSBwcm9kdWN0IGV4cGVyaWVuY2VcbiAqIHNvZnR3YXJlIFtHYWluc2lnaHRdKGh0dHBzOi8vd3d3LmdhaW5zaWdodC5jb20vcHJvZHVjdC1leHBlcmllbmNlLykgdG8gaGVscFxuICogYW5kIHRyYWNrIHVzZXIgYWN0aW9ucy4gR2FpbnNpZ2h0IGlzIG9ubHkgYWN0aXZhdGVkLCBpZiB0aGUgdGVuYW50IGN1c3RvbVxuICogcHJvcGVydHkgYGdhaW5zaWdodEVuYWJsZWRgIGlzIHNldCB0byB0cnVlLlxuICovXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtdLFxuICBpbXBvcnRzOiBbQ29yZU1vZHVsZV0sXG4gIGV4cG9ydHM6IFtdLFxuICBwcm92aWRlcnM6IFtHYWluc2lnaHRTZXJ2aWNlXVxufSlcbmV4cG9ydCBjbGFzcyBQcm9kdWN0RXhwZXJpZW5jZU1vZHVsZSB7XG4gIGNvbnN0cnVjdG9yKGFwcFN0YXRlOiBBcHBTdGF0ZVNlcnZpY2UsIGdhaW5zaWdodFNlcnZpY2U6IEdhaW5zaWdodFNlcnZpY2UpIHtcbiAgICBhcHBTdGF0ZS5jdXJyZW50VGVuYW50XG4gICAgICAucGlwZShmaWx0ZXI8SUN1cnJlbnRUZW5hbnQ+KEJvb2xlYW4pKVxuICAgICAgLnN1YnNjcmliZSgoeyBjdXN0b21Qcm9wZXJ0aWVzLCBuYW1lIH0pID0+IHtcbiAgICAgICAgaWYgKGN1c3RvbVByb3BlcnRpZXMgJiYgY3VzdG9tUHJvcGVydGllcy5nYWluc2lnaHRFbmFibGVkKSB7XG4gICAgICAgICAgZ2FpbnNpZ2h0U2VydmljZS5sb2FkVGFnKG5hbWUpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgfVxufVxuIl19