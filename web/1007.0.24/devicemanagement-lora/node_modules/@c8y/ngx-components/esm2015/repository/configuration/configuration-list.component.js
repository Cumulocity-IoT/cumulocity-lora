import * as tslib_1 from "tslib";
import { Component, ViewChild } from '@angular/core';
import { IManagedObject, InventoryBinaryService, InventoryService, IResultList } from '@c8y/client';
import { AlertService, FilterInputComponent, gettext, memoize, ModalService, Status } from '@c8y/ngx-components';
import { TranslateService } from '@ngx-translate/core';
import { BsModalService } from 'ngx-bootstrap/modal';
import { of, pipe } from 'rxjs';
import { map } from 'rxjs/operators';
import { RepositoryType } from '../repository.model';
import { RepositoryService } from '../repository.service';
import { ConfigurationDetailComponent } from './configuration-detail.component';
import { property } from 'lodash-es';
import { saveAs } from 'file-saver';
let ConfigurationListComponent = class ConfigurationListComponent {
    constructor(alert, repositoryService, bsModalService, modalService, translateService, inventoryBinaryService, inventoryService) {
        this.alert = alert;
        this.repositoryService = repositoryService;
        this.bsModalService = bsModalService;
        this.modalService = modalService;
        this.translateService = translateService;
        this.inventoryBinaryService = inventoryBinaryService;
        this.inventoryService = inventoryService;
        this.filterTerm = '';
        this.reloading = false;
        this.DELETED_SUCCESS_MSG = gettext('Configuration deleted.');
    }
    ngOnInit() {
        this.loadConfigurations();
    }
    loadConfigurations() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            this.reloading = true;
            this.configurations$ = of(yield this.repositoryService.listRepositoryEntries(RepositoryType.CONFIGURATION));
            this.reloading = false;
            this.reset();
        });
    }
    add() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            try {
                yield this.bsModalService.show(ConfigurationDetailComponent, {
                    class: 'modal-sm',
                    ignoreBackdropClick: true
                }).content.result;
                yield this.loadConfigurations();
            }
            catch (ex) {
                // intended empty
            }
        });
    }
    edit(configuration) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const fileBinary = yield this.repositoryService.getBinaryFile(configuration.url, {
                allowExternal: false
            });
            try {
                const modal = this.bsModalService.show(ConfigurationDetailComponent, {
                    class: 'modal-sm',
                    ignoreBackdropClick: true,
                    initialState: {
                        selected: { id: configuration.id, configurationType: configuration.configurationType },
                        version: configuration.name,
                        deviceType: configuration.deviceType,
                        description: configuration.description,
                        binary: { file: fileBinary, url: configuration.url }
                    }
                }).content;
                modal.mo = configuration;
                yield modal.result;
                yield this.loadConfigurations();
            }
            catch (ex) {
                // intended empty
            }
        });
    }
    isBinaryFile(configuration) {
        const id = this.inventoryBinaryService.getIdFromUrl(configuration.url);
        return id ? true : false;
    }
    getBinaryName(configuration) {
        return this.repositoryService.getBinaryName$(configuration.url);
    }
    download(configuration) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const fileBinary = yield this.repositoryService.getBinaryFile(configuration.url, {
                allowExternal: false
            });
            saveAs(fileBinary);
        });
    }
    delete(configuration) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            try {
                const title = gettext('Delete configuration snapshot');
                const confirmationText = gettext('You are about to delete the configuration snapshot {{ name }}.');
                const hint = gettext('This operation is irreversible.');
                const proceed = gettext('Do you want to proceed?');
                const body = [
                    this.translateService.instant(confirmationText, {
                        name: configuration.name
                    }),
                    this.translateService.instant(hint),
                    this.translateService.instant(proceed)
                ].join(' ');
                const labels = {
                    ok: gettext('Delete')
                };
                yield this.modalService.confirm(title, body, Status.DANGER, labels);
                yield this.repositoryService.delete(configuration);
                this.alert.success(this.DELETED_SUCCESS_MSG);
                yield this.loadConfigurations();
            }
            catch (ex) {
                if (ex) {
                    this.alert.addServerFailure(ex);
                }
            }
        });
    }
    setPipe(filterTerm) {
        this.filterTerm = filterTerm;
        this.filterPipe = pipe(map((data) => filterTerm.trim().length === 0
            ? data
            : data.filter((mo) => this.filterContainString(mo.name, filterTerm) ||
                this.filterContainString(mo.configurationType, filterTerm) ||
                this.filterContainString(mo.deviceType, filterTerm))));
    }
    reset() {
        this.filter.filterTerm = '';
        this.setPipe('');
    }
    filterContainString(name, filterTerm) {
        const term = filterTerm.toLowerCase().trim();
        return name && name.toLowerCase().indexOf(term) > -1;
    }
};
ConfigurationListComponent.ctorParameters = () => [
    { type: AlertService },
    { type: RepositoryService },
    { type: BsModalService },
    { type: ModalService },
    { type: TranslateService },
    { type: InventoryBinaryService },
    { type: InventoryService }
];
tslib_1.__decorate([
    ViewChild(FilterInputComponent, { static: false })
], ConfigurationListComponent.prototype, "filter", void 0);
tslib_1.__decorate([
    memoize(property('id'))
], ConfigurationListComponent.prototype, "getBinaryName", null);
ConfigurationListComponent = tslib_1.__decorate([
    Component({
        selector: 'c8y-configuration-list',
        template: "<c8y-title>\n  <span translate>Configuration snapshots repository</span>&nbsp;\n  <small *ngIf=\"(configurations$ | async)?.paging.totalPages === 1 && !filterTerm\"\n    >{{ (configurations$ | async).data.length }} <span translate>snapshots</span></small\n  >\n  <small\n    *ngIf=\"(configurations$ | async)?.paging.totalPages > 1 && !filterTerm\"\n    [tooltip]=\"'More data available. Scroll to the bottom of the list to load it.' | translate\"\n    container=\"body\"\n    >{{ (configurations$ | async).paging.pageSize }}+ <span translate>snapshots</span></small\n  >\n  <small *ngIf=\"filterTerm\"\n    ><span translate>Search results for</span>&nbsp;\"{{ this.filterTerm }}\"</small\n  >\n</c8y-title>\n\n<c8y-action-bar-item itemClass=\"navbar-form\">\n  <c8y-filter [icon]=\"'search'\" (onSearch)=\"setPipe($event)\"></c8y-filter>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button class=\"btn btn-link\" (click)=\"add()\">\n    <i c8yIcon=\"plus-circle\"></i> {{ 'Add configuration snapshot' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button class=\"btn btn-link\" title=\"{{ 'Reload' | translate }}\" (click)=\"loadConfigurations()\">\n    <i c8yIcon=\"refresh\" [ngClass]=\"{ 'fa-spin': reloading }\"></i>\n    {{ 'Reload' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<div\n  class=\"c8y-empty-state text-center\"\n  *ngIf=\"!filterTerm && (configurations$ | async)?.data.length === 0\"\n>\n  <h1 c8yIcon=\"gears\"></h1>\n  <h3 translate>There are no configuration snapshots defined</h3>\n  <p translate>Add a configuration snapshot first.</p>\n  <div>\n    <button (click)=\"add()\" class=\"btn btn-primary\" translate>\n      Add configuration snapshot\n    </button>\n  </div>\n  <p c8y-guide-docs>\n    <small translate\n      >Find out more in the\n      <a c8y-guide-href=\"users-guide/device-management/#configuration-repository\"\n        >User guide`KEEP_ORIGINAL`</a\n      >.</small\n    >\n  </p>\n</div>\n\n<ng-template #notFound>\n  <c8y-li class=\"p-8 text-center\">\n    <p>\n      <span translate>No more entries found for filter:</span>&nbsp;<strong>{{\n        filterTerm\n      }}</strong>\n    </p>\n    <button class=\"btn btn-primary btn-xs m-t-8\" translate (click)=\"setPipe(''); reset()\">\n      Reset filter\n    </button>\n  </c8y-li>\n</ng-template>\n<div class=\"p-b-32\">\n  <c8y-list-group>\n    <c8y-li\n      *c8yFor=\"\n        let configuration of configurations$;\n        pipe: filterPipe;\n        notFound: this.filterTerm ? notFound : undefined\n      \"\n    >\n      <c8y-li-icon icon=\"gears\"></c8y-li-icon>\n      <div class=\"row flex-row\">\n        <div class=\"col-xs-2\">\n          <div class=\"text-truncate\" title=\"{{ configuration.name || '-' }}\">\n            <c8y-highlight\n              [text]=\"configuration.name || '-'\"\n              elementClass=\"text-info\">\n            </c8y-highlight>\n          </div>\n        </div>\n        <div class=\"col-xs-3\">\n          <span class=\"text-muted text-truncate\" [title]=\"configuration.description\">\n            {{ configuration.description }}\n          </span>\n        </div>\n        <div class=\"col-xs-3\">\n          <span class=\"text-truncate\">\n            <small translate class=\"text-label-small m-r-4\">File</small>\n            <span\n              *ngIf=\"isBinaryFile(configuration); else noFile\"\n              title=\"{{ getBinaryName(configuration) | async }}\"\n            >\n              {{ getBinaryName(configuration) | async }}\n            </span>\n            <ng-template #noFile>\n              <span title=\"{{ configuration.url }}\">{{ configuration.url }}</span>\n            </ng-template>\n          </span>\n        </div>\n        <div class=\"col-xs-2\">\n          <div class=\"text-truncate\" title=\"{{'Device type' | translate}}: {{ configuration.deviceType || '-' }}\">\n            <small translate class=\"text-muted text-uppercase\">Device type</small>&nbsp;\n            <c8y-highlight\n              [text]=\"configuration.deviceType || '-'\"\n              elementClass=\"text-info\"\n              [pattern]=\"filterTerm\">\n            </c8y-highlight>\n          </div>\n        </div>\n        <div class=\"col-xs-2\">\n          <div class=\"text-right text-truncate\" title=\"{{ configuration.configurationType }}\">\n            <span class=\"label label-primary\" *ngIf=\"configuration.configurationType\">\n              <c8y-highlight\n                [text]=\"configuration.configurationType\"\n                elementClass=\"text-info\"\n                [pattern]=\"filterTerm\">\n              </c8y-highlight>\n            </span>\n          </div>\n        </div>\n      </div>\n      <c8y-li-action\n        (click)=\"edit(configuration)\"\n        icon=\"pencil\"\n        label=\"{{ 'Edit' | translate }}\"\n      ></c8y-li-action>\n      <c8y-li-action\n        (click)=\"delete(configuration)\"\n        icon=\"trash-o\"\n        label=\"{{ 'Delete' | translate }}\"\n      >\n      </c8y-li-action>\n      <c8y-li-action\n        *ngIf=\"isBinaryFile(configuration)\"\n        (click)=\"download(configuration)\"\n        icon=\"download\"\n        label=\"{{ 'Download' | translate }}\"\n      >\n      </c8y-li-action>\n    </c8y-li>\n  </c8y-list-group>\n</div>\n"
    })
], ConfigurationListComponent);
export { ConfigurationListComponent };
//# sourceMappingURL=data:application/json;base64,