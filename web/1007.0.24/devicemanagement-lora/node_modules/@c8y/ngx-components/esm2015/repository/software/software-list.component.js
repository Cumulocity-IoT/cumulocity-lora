import * as tslib_1 from "tslib";
import { Router, ActivatedRoute } from '@angular/router';
import { Component } from '@angular/core';
import { BsModalService, ModalOptions } from 'ngx-bootstrap/modal';
import { TranslateService } from '@ngx-translate/core';
import { distinctUntilChanged, tap, debounceTime, switchMap, shareReplay, } from 'rxjs/operators';
import { BehaviorSubject, combineLatest } from 'rxjs';
import { ModalService, gettext, Status, AlertService, memoize } from '@c8y/ngx-components';
import { RepositoryService } from '../repository.service';
import { RepositoryType } from '../repository.model';
import { AddSoftwareModalComponent } from './add-software-modal.component';
import { property, get } from 'lodash-es';
let SoftwareListComponent = class SoftwareListComponent {
    constructor(repositoryService, modalService, bsModalService, translateService, alertService, router, activatedRoute) {
        this.repositoryService = repositoryService;
        this.modalService = modalService;
        this.bsModalService = bsModalService;
        this.translateService = translateService;
        this.alertService = alertService;
        this.router = router;
        this.activatedRoute = activatedRoute;
        this.textFilter$ = new BehaviorSubject('');
        this.reload$ = new BehaviorSubject(null);
        this.reloading = false;
        this.softwares$ = combineLatest(this.textFilter$.pipe(debounceTime(400), distinctUntilChanged()), this.reload$).pipe(tap(() => {
            this.reloading = true;
        }), switchMap(([text]) => this.getSoftwares(text)), tap(() => {
            this.reloading = false;
        }), shareReplay(1));
        this.isLegacy = this.repositoryService.isLegacyEntry.bind(this.repositoryService);
        this.DEVICE_TYPE_NOT_AVAILABLE = gettext('No device type available');
    }
    getSoftwares(partialName) {
        return this.repositoryService.listRepositoryEntries(RepositoryType.SOFTWARE, { partialName });
    }
    addSoftware() {
        const config = { class: 'modal-sm', ignoreBackdropClick: true };
        const modalRef = this.bsModalService.show(AddSoftwareModalComponent, config);
        modalRef.content.saved.subscribe(savedSoftware => this.editSoftware(savedSoftware));
    }
    editSoftware(software) {
        this.router.navigate([software.id], { relativeTo: this.activatedRoute });
    }
    deleteSoftware(software) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            try {
                const title = gettext('Delete software');
                const body = `
        ${this.translateService.instant(gettext('You are about to delete software "{{ name }}" with all its versions.'), { name: software.name })}
        ${this.translateService.instant(gettext('This operation is irreversible.'))}
        ${this.translateService.instant(gettext('Do you want to proceed?'))}
      `;
                const labels = {
                    ok: gettext('Delete')
                };
                yield this.modalService.confirm(title, body, Status.DANGER, labels);
                yield this.repositoryService.delete(software);
                this.alertService.success(gettext('Software deleted.'));
                this.reload$.next();
            }
            catch (ex) {
                // only if not cancel from modal
                if (ex) {
                    this.alertService.addServerFailure(ex);
                }
            }
        });
    }
    getBaseVersionsCount$(software) {
        return this.softwares$.pipe(switchMap(() => this.repositoryService.getBaseVersionsCount$(software)), shareReplay(1));
    }
    getDeviceTypeTitle(software) {
        return get(software, 'c8y_Filter.type', this.translateService.instant(this.DEVICE_TYPE_NOT_AVAILABLE));
    }
};
SoftwareListComponent.ctorParameters = () => [
    { type: RepositoryService },
    { type: ModalService },
    { type: BsModalService },
    { type: TranslateService },
    { type: AlertService },
    { type: Router },
    { type: ActivatedRoute }
];
tslib_1.__decorate([
    memoize(property('id'))
], SoftwareListComponent.prototype, "getBaseVersionsCount$", null);
SoftwareListComponent = tslib_1.__decorate([
    Component({
        selector: 'c8y-software-list',
        template: "<c8y-title>\n  {{ 'Software repository' | translate }}\n</c8y-title>\n\n<c8y-action-bar-item [placement]=\"'left'\" itemClass=\"navbar-form\">\n  <div class=\"input-group input-group-search\">\n    <input\n      type=\"search\"\n      class=\"form-control\"\n      title=\"{{ 'Filter software\u2026' | translate }}\"\n      placeholder=\"{{ 'Filter software\u2026' | translate }}\"\n      [ngModel]=\"textFilter$ | async\"\n      (ngModelChange)=\"textFilter$.next($event)\"\n    />\n    <span class=\"input-group-addon\">\n      <i c8yIcon=\"filter\" *ngIf=\"(textFilter$ | async).length === 0\"></i>\n      <i\n        c8yIcon=\"times\"\n        class=\"text-muted\"\n        *ngIf=\"(textFilter$ | async).length > 0\"\n        (click)=\"textFilter$.next('')\"\n      ></i>\n    </span>\n  </div>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button class=\"btn btn-link\" title=\"{{ 'Add software' | translate }}\" (click)=\"addSoftware()\">\n    <i c8yIcon=\"plus-circle\"></i>\n    {{ 'Add software' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button class=\"btn btn-link\" title=\"{{ 'Reload' | translate }}\" (click)=\"reload$.next()\">\n    <i c8yIcon=\"refresh\" [ngClass]=\"{ 'fa-spin': reloading }\"></i>\n    {{ 'Reload' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<div class=\"c8y-empty-state text-center\" *ngIf=\"(softwares$ | async)?.data.length === 0\">\n  <h1 c8yIcon=\"c8y-tools\" class=\"c8y-icon-duocolor\"></h1>\n  <h3 translate>No software to display.</h3>\n  <p translate>Add a new software by clicking below.</p>\n  <p>\n    <button\n      class=\"btn btn-primary\"\n      title=\"{{ 'Add software' | translate }}\"\n      (click)=\"addSoftware()\"\n      translate\n    >\n      Add software\n    </button>\n  </p>\n</div>\n\n<c8y-list-group class=\"elevation-1\">\n  <c8y-li *c8yFor=\"let software of softwares$ | async; let i = index; loadMore: 'auto'\">\n    <c8y-li-icon>\n      <i c8yIcon=\"c8y-tools\"></i>\n    </c8y-li-icon>\n\n    <c8y-li-body class=\"content-flex-50\">\n      <div class=\"col-5 pointer\" (click)=\"editSoftware(software)\">\n        <div class=\"text-truncate\" title=\"{{ software.name }}\">\n          {{ software.name }}\n        </div>\n      </div>\n      <div class=\"col-5\">\n        <div class=\"text-truncate\" title=\"{{ 'Device type' | translate }}: {{ getDeviceTypeTitle(software) }}\">\n          <span class=\"text-label-small m-r-8\" translate>\n            Device type\n          </span>\n          <span *ngIf=\"software.c8y_Filter?.type; else emptyText\">\n            {{ software.c8y_Filter?.type }}\n          </span>\n          <ng-template #emptyText> --- </ng-template>\n        </div>\n      </div>\n      <div class=\"col-2\">\n        <span *ngIf=\"isLegacy(software)\" class=\"label label-warning flex-item-right-sm\">\n          <span translate>Legacy</span>\n        </span>\n\n        <span *ngIf=\"!isLegacy(software)\">\n          <span *ngIf=\"(getBaseVersionsCount$(software) | async) === null\">\n            <span class=\"label label-info\">\n              <i c8yIcon=\"circle-o-notch\" class=\"fa-spin\"></i>\n            </span>\n          </span>\n          <span *ngIf=\"(getBaseVersionsCount$(software) | async) !== null\">\n            <span [ngPlural]=\"getBaseVersionsCount$(software) | async\">\n              <ng-template ngPluralCase=\"=0\">\n                <span class=\"label label-default flex-item-right-sm\">\n                  <span translate>No versions</span>\n                </span>\n              </ng-template>\n              <ng-template ngPluralCase=\"=1\">\n                <span class=\"label label-info\"><span translate>1 version</span></span>\n              </ng-template>\n              <ng-template ngPluralCase=\"other\">\n                <span class=\"label label-info\">\n                  <span ngNonBindable translate [translateParams]=\"{ count: getBaseVersionsCount$(software) | async }\">\n                    {{ count }} versions\n                  </span>\n                </span>\n              </ng-template>\n            </span>\n          </span>\n        </span>\n      </div>\n    </c8y-li-body>\n\n    <c8y-li-action (click)=\"editSoftware(software)\" icon=\"pencil\">\n      {{ 'Edit' | translate }}\n    </c8y-li-action>\n\n    <c8y-li-action (click)=\"deleteSoftware(software)\" icon=\"trash\">\n      {{ 'Delete' | translate }}\n    </c8y-li-action>\n  </c8y-li>\n</c8y-list-group>\n"
    })
], SoftwareListComponent);
export { SoftwareListComponent };
//# sourceMappingURL=data:application/json;base64,