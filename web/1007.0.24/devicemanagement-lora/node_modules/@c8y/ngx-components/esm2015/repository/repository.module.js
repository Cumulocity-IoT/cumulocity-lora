import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { CoreModule, FormsModule, HOOK_NAVIGATOR_NODES, HOOK_ONCE_ROUTE, ViewContext, gettext } from '@c8y/ngx-components';
import { BsDropdownModule } from 'ngx-bootstrap/dropdown';
import { TooltipModule } from 'ngx-bootstrap/tooltip';
import { PopoverModule } from 'ngx-bootstrap/popover';
import { RepositoryService } from './repository.service';
import { FirmwareListComponent } from './firmware/firmware-list.component';
import { FirmwareDetailsComponent } from './firmware/firmware-details.component';
import { AddFirmwareModalComponent } from './firmware/add-firmware-modal.component';
import { AddFirmwarePatchModalComponent } from './firmware/add-firmware-patch-modal.component';
import { SoftwareListComponent } from './software/software-list.component';
import { SoftwareDetailsComponent } from './software/software-details.component';
import { AddSoftwareModalComponent } from './software/add-software-modal.component';
import { ConfigurationListComponent } from './configuration/configuration-list.component';
import { ConfigurationDetailComponent } from './configuration/configuration-detail.component';
import { RepositoryNavigationFactory } from './repository-navigation-factory';
import { FirmwareDeviceTabComponent } from './firmware-device-tab/firmware-device-tab.component';
import { FirmwareDeviceTabGuard } from './firmware-device-tab/firmware-device-tab.guard';
import { SoftwareDeviceTabComponent } from './software-device-tab/software-device-tab.component';
import { SoftwareDeviceTabGuard } from './software-device-tab/software-device-tab.guard';
import { InstalledSoftwareComponent } from './software-device-tab/installed-software.component';
import { RepositorySelectModalComponent } from './select-modal/repository-select-modal.component';
import { DeviceSoftwareListComponent } from './software-device-tab/device-software-list.component';
import { DeviceSoftwareChangesComponent } from './software-device-tab/device-software-changes.component';
import { DeviceConfigurationComponent } from './configuration-device-tab/device-configuration.component';
import { SourceCodePreviewComponent } from './configuration-device-tab/source-code-preview.component';
import { ConfigurationPreviewComponent } from './configuration-device-tab/configuration-preview.component';
import { ConfigurationFilterPipe } from './configuration-device-tab/configuration-filter.pipe';
import { SaveToRepositoryComponent } from './configuration-device-tab/save-to-repository.component';
import { DeviceConfigurationService } from './configuration-device-tab/device-configuration.service';
import { DeviceConfigurationGuard } from './configuration-device-tab/device-configuration.guard';
import { DeviceConfigurationListComponent } from './configuration-device-tab/device-configuration-list.component';
const ɵ0 = [
    {
        path: 'firmware',
        component: FirmwareListComponent
    },
    {
        path: 'firmware/:id',
        component: FirmwareDetailsComponent
    },
    {
        context: ViewContext.Device,
        path: 'firmware',
        component: FirmwareDeviceTabComponent,
        label: gettext('Firmware'),
        icon: 'c8y-firmware',
        priority: 500,
        canActivate: [FirmwareDeviceTabGuard]
    },
    {
        path: 'software',
        component: SoftwareListComponent
    },
    {
        path: 'software/:id',
        component: SoftwareDetailsComponent
    },
    {
        context: ViewContext.Device,
        path: 'software',
        component: SoftwareDeviceTabComponent,
        label: gettext('Software'),
        icon: 'c8y-tools',
        priority: 499,
        canActivate: [SoftwareDeviceTabGuard]
    },
    {
        path: 'configuration',
        component: ConfigurationListComponent
    },
    {
        context: ViewContext.Device,
        path: 'device-configuration',
        component: DeviceConfigurationComponent,
        label: gettext('Configuration'),
        icon: 'gears',
        priority: 600,
        canActivate: [DeviceConfigurationGuard]
    }
];
let RepositoryModule = class RepositoryModule {
};
RepositoryModule = tslib_1.__decorate([
    NgModule({
        imports: [CoreModule, FormsModule, BsDropdownModule.forRoot(), TooltipModule, PopoverModule],
        exports: [],
        declarations: [
            FirmwareListComponent,
            FirmwareDetailsComponent,
            AddFirmwareModalComponent,
            AddFirmwarePatchModalComponent,
            SoftwareListComponent,
            SoftwareDetailsComponent,
            AddSoftwareModalComponent,
            FirmwareDeviceTabComponent,
            SoftwareDeviceTabComponent,
            InstalledSoftwareComponent,
            RepositorySelectModalComponent,
            DeviceSoftwareListComponent,
            DeviceSoftwareChangesComponent,
            ConfigurationListComponent,
            ConfigurationDetailComponent,
            DeviceConfigurationComponent,
            DeviceConfigurationListComponent,
            SourceCodePreviewComponent,
            ConfigurationPreviewComponent,
            ConfigurationFilterPipe,
            SaveToRepositoryComponent
        ],
        entryComponents: [
            FirmwareListComponent,
            FirmwareDetailsComponent,
            AddFirmwareModalComponent,
            AddFirmwarePatchModalComponent,
            SoftwareListComponent,
            SoftwareDetailsComponent,
            AddSoftwareModalComponent,
            FirmwareDeviceTabComponent,
            SoftwareDeviceTabComponent,
            DeviceSoftwareListComponent,
            RepositorySelectModalComponent,
            DeviceSoftwareChangesComponent,
            ConfigurationListComponent,
            ConfigurationDetailComponent,
            DeviceConfigurationComponent,
            SaveToRepositoryComponent
        ],
        providers: [
            RepositoryService,
            DeviceConfigurationService,
            FirmwareDeviceTabGuard,
            SoftwareDeviceTabGuard,
            DeviceConfigurationGuard,
            {
                provide: HOOK_NAVIGATOR_NODES,
                useClass: RepositoryNavigationFactory,
                multi: true
            },
            {
                provide: HOOK_ONCE_ROUTE,
                useValue: ɵ0,
                multi: true
            }
        ]
    })
], RepositoryModule);
export { RepositoryModule };
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,