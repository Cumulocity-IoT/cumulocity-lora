import * as tslib_1 from "tslib";
import { Component, OnInit, ViewContainerRef, ViewChild, ComponentFactoryResolver, ChangeDetectorRef } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { BulkOperationsService } from '../bulk-operations.service';
let BulkOperationsStepperContainerComponent = class BulkOperationsStepperContainerComponent {
    constructor(activatedRoute, bulkOpsService, resolver, changeDetector) {
        this.activatedRoute = activatedRoute;
        this.bulkOpsService = bulkOpsService;
        this.resolver = resolver;
        this.changeDetector = changeDetector;
    }
    ngOnInit() {
        this.activatedRoute.params.subscribe(params => {
            if (params && params.type) {
                this.bulkOperationType = params.type;
                this.component = this.bulkOpsService
                    .getBulkTypes()
                    .find(element => element.path.includes(this.bulkOperationType)).component;
                this.changeDetector.detectChanges();
                this.createComponent(this.component);
            }
        });
    }
    createComponent(component) {
        if (component) {
            const factory = this.resolver.resolveComponentFactory(component);
            this.container.createComponent(factory);
        }
    }
};
BulkOperationsStepperContainerComponent.ctorParameters = () => [
    { type: ActivatedRoute },
    { type: BulkOperationsService },
    { type: ComponentFactoryResolver },
    { type: ChangeDetectorRef }
];
tslib_1.__decorate([
    ViewChild('container', { static: false, read: ViewContainerRef })
], BulkOperationsStepperContainerComponent.prototype, "container", void 0);
BulkOperationsStepperContainerComponent = tslib_1.__decorate([
    Component({
        selector: 'bulk-operations-stepper-container',
        template: "<c8y-title>{{ 'New bulk operation' | translate }}</c8y-title>\n<div class=\"card card--grid--fullpage\">\n  <ng-container [ngSwitch]=\"bulkOperationType\">\n    <!-- Cases: software, firmware and configuration are default c8y-types -->\n    <div *ngSwitchCase=\"'software'\" class=\"d-contents\">\n      <c8y-stepper-bulk-type-software></c8y-stepper-bulk-type-software>\n    </div>\n    <div *ngSwitchCase=\"'firmware'\" class=\"d-contents\">\n      <c8y-stepper-firmware></c8y-stepper-firmware>\n    </div>\n    <div *ngSwitchCase=\"'configuration'\" class=\"d-contents\">\n      <c8y-stepper-bulk-type-configuration></c8y-stepper-bulk-type-configuration>\n    </div>\n    <div *ngSwitchCase=\"'device-profile'\" class=\"d-contents\">\n      <c8y-stepper-bulk-type-device-profile></c8y-stepper-bulk-type-device-profile>\n    </div>\n    <!-- This case is for 3rd-party-dev defined types -->\n    <div *ngSwitchDefault class=\"d-contents\">\n      <template #container></template>\n    </div>\n  </ng-container>\n</div>\n"
    })
], BulkOperationsStepperContainerComponent);
export { BulkOperationsStepperContainerComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVsay1vcGVyYXRpb25zLXN0ZXBwZXItY29udGFpbmVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvb3BlcmF0aW9ucy8iLCJzb3VyY2VzIjpbImJ1bGsvY3JlYXRpb24vYnVsay1vcGVyYXRpb25zLXN0ZXBwZXItY29udGFpbmVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUNMLFNBQVMsRUFDVCxNQUFNLEVBQ04sZ0JBQWdCLEVBQ2hCLFNBQVMsRUFDVCx3QkFBd0IsRUFDeEIsaUJBQWlCLEVBQ2xCLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQU1uRSxJQUFhLHVDQUF1QyxHQUFwRCxNQUFhLHVDQUF1QztJQUtsRCxZQUNVLGNBQThCLEVBQzlCLGNBQXFDLEVBQ3JDLFFBQWtDLEVBQ2xDLGNBQWlDO1FBSGpDLG1CQUFjLEdBQWQsY0FBYyxDQUFnQjtRQUM5QixtQkFBYyxHQUFkLGNBQWMsQ0FBdUI7UUFDckMsYUFBUSxHQUFSLFFBQVEsQ0FBMEI7UUFDbEMsbUJBQWMsR0FBZCxjQUFjLENBQW1CO0lBQ3hDLENBQUM7SUFFSixRQUFRO1FBQ04sSUFBSSxDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxFQUFFO1lBQzVDLElBQUksTUFBTSxJQUFJLE1BQU0sQ0FBQyxJQUFJLEVBQUU7Z0JBQ3pCLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDO2dCQUVyQyxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxjQUFjO3FCQUNqQyxZQUFZLEVBQUU7cUJBQ2QsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUM7Z0JBRTVFLElBQUksQ0FBQyxjQUFjLENBQUMsYUFBYSxFQUFFLENBQUM7Z0JBQ3BDLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO2FBQ3RDO1FBQ0gsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRU8sZUFBZSxDQUFDLFNBQVM7UUFDL0IsSUFBSSxTQUFTLEVBQUU7WUFDYixNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLHVCQUF1QixDQUFDLFNBQVMsQ0FBQyxDQUFDO1lBQ2pFLElBQUksQ0FBQyxTQUFTLENBQUMsZUFBZSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQ3pDO0lBQ0gsQ0FBQztDQUNGLENBQUE7O1lBM0IyQixjQUFjO1lBQ2QscUJBQXFCO1lBQzNCLHdCQUF3QjtZQUNsQixpQkFBaUI7O0FBUndCO0lBQWxFLFNBQVMsQ0FBQyxXQUFXLEVBQUUsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxnQkFBZ0IsRUFBRSxDQUFDOzBFQUFXO0FBRGxFLHVDQUF1QztJQUpuRCxTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsbUNBQW1DO1FBQzdDLHlnQ0FBK0Q7S0FDaEUsQ0FBQztHQUNXLHVDQUF1QyxDQWlDbkQ7U0FqQ1ksdUNBQXVDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ29tcG9uZW50LFxuICBPbkluaXQsXG4gIFZpZXdDb250YWluZXJSZWYsXG4gIFZpZXdDaGlsZCxcbiAgQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyLFxuICBDaGFuZ2VEZXRlY3RvclJlZlxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFjdGl2YXRlZFJvdXRlIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IEJ1bGtPcGVyYXRpb25zU2VydmljZSB9IGZyb20gJy4uL2J1bGstb3BlcmF0aW9ucy5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYnVsay1vcGVyYXRpb25zLXN0ZXBwZXItY29udGFpbmVyJyxcbiAgdGVtcGxhdGVVcmw6ICdidWxrLW9wZXJhdGlvbnMtc3RlcHBlci1jb250YWluZXIuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIEJ1bGtPcGVyYXRpb25zU3RlcHBlckNvbnRhaW5lckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBWaWV3Q2hpbGQoJ2NvbnRhaW5lcicsIHsgc3RhdGljOiBmYWxzZSwgcmVhZDogVmlld0NvbnRhaW5lclJlZiB9KSBjb250YWluZXI7XG4gIGJ1bGtPcGVyYXRpb25UeXBlOiBzdHJpbmc7XG5cbiAgcHJpdmF0ZSBjb21wb25lbnQ6IGFueTtcbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBhY3RpdmF0ZWRSb3V0ZTogQWN0aXZhdGVkUm91dGUsXG4gICAgcHJpdmF0ZSBidWxrT3BzU2VydmljZTogQnVsa09wZXJhdGlvbnNTZXJ2aWNlLFxuICAgIHByaXZhdGUgcmVzb2x2ZXI6IENvbXBvbmVudEZhY3RvcnlSZXNvbHZlcixcbiAgICBwcml2YXRlIGNoYW5nZURldGVjdG9yOiBDaGFuZ2VEZXRlY3RvclJlZlxuICApIHt9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5hY3RpdmF0ZWRSb3V0ZS5wYXJhbXMuc3Vic2NyaWJlKHBhcmFtcyA9PiB7XG4gICAgICBpZiAocGFyYW1zICYmIHBhcmFtcy50eXBlKSB7XG4gICAgICAgIHRoaXMuYnVsa09wZXJhdGlvblR5cGUgPSBwYXJhbXMudHlwZTtcblxuICAgICAgICB0aGlzLmNvbXBvbmVudCA9IHRoaXMuYnVsa09wc1NlcnZpY2VcbiAgICAgICAgICAuZ2V0QnVsa1R5cGVzKClcbiAgICAgICAgICAuZmluZChlbGVtZW50ID0+IGVsZW1lbnQucGF0aC5pbmNsdWRlcyh0aGlzLmJ1bGtPcGVyYXRpb25UeXBlKSkuY29tcG9uZW50O1xuXG4gICAgICAgIHRoaXMuY2hhbmdlRGV0ZWN0b3IuZGV0ZWN0Q2hhbmdlcygpO1xuICAgICAgICB0aGlzLmNyZWF0ZUNvbXBvbmVudCh0aGlzLmNvbXBvbmVudCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBwcml2YXRlIGNyZWF0ZUNvbXBvbmVudChjb21wb25lbnQpIHtcbiAgICBpZiAoY29tcG9uZW50KSB7XG4gICAgICBjb25zdCBmYWN0b3J5ID0gdGhpcy5yZXNvbHZlci5yZXNvbHZlQ29tcG9uZW50RmFjdG9yeShjb21wb25lbnQpO1xuICAgICAgdGhpcy5jb250YWluZXIuY3JlYXRlQ29tcG9uZW50KGZhY3RvcnkpO1xuICAgIH1cbiAgfVxufVxuIl19