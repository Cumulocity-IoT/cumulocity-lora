import * as tslib_1 from "tslib";
import { Component, Input, ViewChild } from '@angular/core';
import { AlertService, gettext } from '@c8y/ngx-components';
import { BulkOperationsService, C8Y_BULK_TYPE_FRAGMENTS } from '../bulk-operations.service';
import { omit } from 'lodash-es';
import { SINGLE_OP_STATUS_NAMES, SINGLE_OP_STATUS_PROPERTIES } from './single-operation-item.model';
let SingleOperationItemComponent = class SingleOperationItemComponent {
    constructor(bulkOperationsService, alertService) {
        this.bulkOperationsService = bulkOperationsService;
        this.alertService = alertService;
        this.device = {};
        this.showIfTextTruncated = false;
        this.singleOperationStatusNames = SINGLE_OP_STATUS_NAMES;
        this.singleOperationsStatusProperties = SINGLE_OP_STATUS_PROPERTIES;
        this.readOnly = false;
    }
    ngOnInit() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            this.iconClass = this.getIconClass();
            this.device = yield this.getDeviceMO(this.operation.deviceId);
        });
    }
    ngAfterViewInit() {
        this.isTextTruncated();
    }
    retrySingleOperation(singleOperation) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const operationToCreate = omit(singleOperation, [
                'id',
                'self',
                'status',
                'failureReason',
                'creationTime',
                'delivery'
            ]);
            try {
                yield this.bulkOperationsService.createSingleOperation(operationToCreate);
                this.alertService.success(gettext('Operation created.'));
            }
            catch (er) {
                this.alertService.addServerFailure(er);
            }
        });
    }
    getIconClass() {
        return this.singleOperationsStatusProperties.find(operationProperties => operationProperties.label.toUpperCase() === this.operation.status).iconClass;
    }
    getDeviceMO(deviceId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const inventoryMO = yield this.bulkOperationsService.getManagedObject(deviceId);
            if (inventoryMO) {
                return inventoryMO.data;
            }
        });
    }
    isTextTruncated() {
        if (this.operation.failureReason) {
            const el = this.failureReasonRef.nativeElement;
            this.showIfTextTruncated = el.offsetWidth < el.scrollWidth ? true : false;
        }
    }
};
SingleOperationItemComponent.ctorParameters = () => [
    { type: BulkOperationsService },
    { type: AlertService }
];
tslib_1.__decorate([
    Input()
], SingleOperationItemComponent.prototype, "operation", void 0);
tslib_1.__decorate([
    Input()
], SingleOperationItemComponent.prototype, "readOnly", void 0);
tslib_1.__decorate([
    ViewChild('failureReason', { static: true })
], SingleOperationItemComponent.prototype, "failureReasonRef", void 0);
SingleOperationItemComponent = tslib_1.__decorate([
    Component({
        selector: 'c8y-single-operation-item',
        template: "<c8y-li class=\"c8y-list__item--double-actions\">\n  <c8y-li-icon>\n    <i [class]=\"iconClass\"></i>\n  </c8y-li-icon>\n  <div [ngClass]=\"{'content-flex-80': !readOnly, 'content-flex-50': readOnly}\">\n    <div class=\"col-4\">\n      <span class=\"m-r-4\">\n        <device-status [mo]=\"\"></device-status>\n      </span>\n      <a [routerLink]=\"['/device', operation.deviceId, 'device-info']\" routerLinkActive=\"active\">\n        {{ operation.deviceName }}\n      </a>\n    </div>\n    <div class=\"col-3\">\n      <small class=\"icon-flex text-muted\">\n        <i c8yIcon=\"calendar\" class=\"m-r-4\"></i>\n        {{ operation.creationTime | c8yDate }}\n      </small>\n    </div>\n    <div class=\"col-5\">\n      <div class=\"flex-row\">\n        <span class=\"text-truncate\" #failureReason>\n          {{ operation.failureReason | translate }}\n        </span>\n        <a\n          *ngIf=\"showIfTextTruncated\"\n          class=\"m-l-8\"\n          popover=\"{{ operation.failureReason | translate }}\"\n          placement=\"left\"\n          outsideClick=\"true\"\n        >\n          <i [c8yIcon]=\"'info-circle text-primary'\"></i>\n        </a>\n        <div\n          class=\"showOnHover p-l-8 p-r-8 v-fit-20 flex-item-right\"\n          *ngIf=\"!readOnly && operation.status == singleOperationStatusNames.FAILED.toUpperCase()\"\n        >\n          <a\n            class=\"btn btn-default btn-xs\"\n            (click)=\"retrySingleOperation(operation)\"\n            title=\"{{ 'Retry operation' | translate }}\"\n          >\n            <i [c8yIcon]=\"'repeat m-r-4'\"></i><span translate>Retry operation</span>\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</c8y-li>\n"
    })
], SingleOperationItemComponent);
export { SingleOperationItemComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2luZ2xlLW9wZXJhdGlvbi1pdGVtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvb3BlcmF0aW9ucy8iLCJzb3VyY2VzIjpbImJ1bGsvbGlzdC9zaW5nbGUtb3BlcmF0aW9uLWl0ZW0uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFjLEtBQUssRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFeEUsT0FBTyxFQUFFLFlBQVksRUFBRSxPQUFPLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUM1RCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUM1RixPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQ2pDLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSwyQkFBMkIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBTXBHLElBQWEsNEJBQTRCLEdBQXpDLE1BQWEsNEJBQTRCO0lBWXZDLFlBQ1UscUJBQTRDLEVBQzVDLFlBQTBCO1FBRDFCLDBCQUFxQixHQUFyQixxQkFBcUIsQ0FBdUI7UUFDNUMsaUJBQVksR0FBWixZQUFZLENBQWM7UUFicEMsV0FBTSxHQUFHLEVBQUUsQ0FBQztRQUNaLHdCQUFtQixHQUFHLEtBQUssQ0FBQztRQUM1QiwrQkFBMEIsR0FBRyxzQkFBc0IsQ0FBQztRQUNwRCxxQ0FBZ0MsR0FBRywyQkFBMkIsQ0FBQztRQUsvRCxhQUFRLEdBQVksS0FBSyxDQUFDO0lBTXZCLENBQUM7SUFFRSxRQUFROztZQUNaLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO1lBQ3JDLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDaEUsQ0FBQztLQUFBO0lBRUQsZUFBZTtRQUNiLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUN6QixDQUFDO0lBRUssb0JBQW9CLENBQUMsZUFBZTs7WUFDeEMsTUFBTSxpQkFBaUIsR0FBRyxJQUFJLENBQUMsZUFBZSxFQUFFO2dCQUM5QyxJQUFJO2dCQUNKLE1BQU07Z0JBQ04sUUFBUTtnQkFDUixlQUFlO2dCQUNmLGNBQWM7Z0JBQ2QsVUFBVTthQUNYLENBQUMsQ0FBQztZQUVILElBQUk7Z0JBQ0YsTUFBTSxJQUFJLENBQUMscUJBQXFCLENBQUMscUJBQXFCLENBQUMsaUJBQWlCLENBQUMsQ0FBQztnQkFDMUUsSUFBSSxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLG9CQUFvQixDQUFDLENBQUMsQ0FBQzthQUMxRDtZQUFDLE9BQU8sRUFBRSxFQUFFO2dCQUNYLElBQUksQ0FBQyxZQUFZLENBQUMsZ0JBQWdCLENBQUMsRUFBRSxDQUFDLENBQUM7YUFDeEM7UUFDSCxDQUFDO0tBQUE7SUFFRCxZQUFZO1FBQ1YsT0FBTyxJQUFJLENBQUMsZ0NBQWdDLENBQUMsSUFBSSxDQUMvQyxtQkFBbUIsQ0FBQyxFQUFFLENBQUMsbUJBQW1CLENBQUMsS0FBSyxDQUFDLFdBQVcsRUFBRSxLQUFLLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUN6RixDQUFDLFNBQVMsQ0FBQztJQUNkLENBQUM7SUFFYSxXQUFXLENBQUMsUUFBUTs7WUFDaEMsTUFBTSxXQUFXLEdBQUcsTUFBTSxJQUFJLENBQUMscUJBQXFCLENBQUMsZ0JBQWdCLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDaEYsSUFBSSxXQUFXLEVBQUU7Z0JBQ2YsT0FBTyxXQUFXLENBQUMsSUFBSSxDQUFDO2FBQ3pCO1FBQ0gsQ0FBQztLQUFBO0lBRU8sZUFBZTtRQUNyQixJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsYUFBYSxFQUFFO1lBQ2hDLE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxhQUFhLENBQUM7WUFDL0MsSUFBSSxDQUFDLG1CQUFtQixHQUFHLEVBQUUsQ0FBQyxXQUFXLEdBQUcsRUFBRSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7U0FDM0U7SUFDSCxDQUFDO0NBQ0YsQ0FBQTs7WUFsRGtDLHFCQUFxQjtZQUM5QixZQUFZOztBQVBwQztJQURDLEtBQUssRUFBRTsrREFDYztBQUV0QjtJQURDLEtBQUssRUFBRTs4REFDa0I7QUFDb0I7SUFBN0MsU0FBUyxDQUFDLGVBQWUsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsQ0FBQztzRUFBOEI7QUFWaEUsNEJBQTRCO0lBSnhDLFNBQVMsQ0FBQztRQUNULFFBQVEsRUFBRSwyQkFBMkI7UUFDckMsdXNEQUFxRDtLQUN0RCxDQUFDO0dBQ1csNEJBQTRCLENBK0R4QztTQS9EWSw0QkFBNEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYsIElucHV0LCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElPcGVyYXRpb24gfSBmcm9tICdAYzh5L2NsaWVudCc7XG5pbXBvcnQgeyBBbGVydFNlcnZpY2UsIGdldHRleHQgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IEJ1bGtPcGVyYXRpb25zU2VydmljZSwgQzhZX0JVTEtfVFlQRV9GUkFHTUVOVFMgfSBmcm9tICcuLi9idWxrLW9wZXJhdGlvbnMuc2VydmljZSc7XG5pbXBvcnQgeyBvbWl0IH0gZnJvbSAnbG9kYXNoLWVzJztcbmltcG9ydCB7IFNJTkdMRV9PUF9TVEFUVVNfTkFNRVMsIFNJTkdMRV9PUF9TVEFUVVNfUFJPUEVSVElFUyB9IGZyb20gJy4vc2luZ2xlLW9wZXJhdGlvbi1pdGVtLm1vZGVsJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LXNpbmdsZS1vcGVyYXRpb24taXRlbScsXG4gIHRlbXBsYXRlVXJsOiAnLi9zaW5nbGUtb3BlcmF0aW9uLWl0ZW0uY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFNpbmdsZU9wZXJhdGlvbkl0ZW1Db21wb25lbnQge1xuICBkZXZpY2UgPSB7fTtcbiAgc2hvd0lmVGV4dFRydW5jYXRlZCA9IGZhbHNlO1xuICBzaW5nbGVPcGVyYXRpb25TdGF0dXNOYW1lcyA9IFNJTkdMRV9PUF9TVEFUVVNfTkFNRVM7XG4gIHNpbmdsZU9wZXJhdGlvbnNTdGF0dXNQcm9wZXJ0aWVzID0gU0lOR0xFX09QX1NUQVRVU19QUk9QRVJUSUVTO1xuICBpY29uQ2xhc3M6IHN0cmluZztcbiAgQElucHV0KClcbiAgb3BlcmF0aW9uOiBJT3BlcmF0aW9uO1xuICBASW5wdXQoKVxuICByZWFkT25seTogYm9vbGVhbiA9IGZhbHNlO1xuICBAVmlld0NoaWxkKCdmYWlsdXJlUmVhc29uJywgeyBzdGF0aWM6IHRydWUgfSkgZmFpbHVyZVJlYXNvblJlZjogRWxlbWVudFJlZjtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIGJ1bGtPcGVyYXRpb25zU2VydmljZTogQnVsa09wZXJhdGlvbnNTZXJ2aWNlLFxuICAgIHByaXZhdGUgYWxlcnRTZXJ2aWNlOiBBbGVydFNlcnZpY2VcbiAgKSB7fVxuXG4gIGFzeW5jIG5nT25Jbml0KCkge1xuICAgIHRoaXMuaWNvbkNsYXNzID0gdGhpcy5nZXRJY29uQ2xhc3MoKTtcbiAgICB0aGlzLmRldmljZSA9IGF3YWl0IHRoaXMuZ2V0RGV2aWNlTU8odGhpcy5vcGVyYXRpb24uZGV2aWNlSWQpO1xuICB9XG5cbiAgbmdBZnRlclZpZXdJbml0KCkge1xuICAgIHRoaXMuaXNUZXh0VHJ1bmNhdGVkKCk7XG4gIH1cblxuICBhc3luYyByZXRyeVNpbmdsZU9wZXJhdGlvbihzaW5nbGVPcGVyYXRpb24pIHtcbiAgICBjb25zdCBvcGVyYXRpb25Ub0NyZWF0ZSA9IG9taXQoc2luZ2xlT3BlcmF0aW9uLCBbXG4gICAgICAnaWQnLFxuICAgICAgJ3NlbGYnLFxuICAgICAgJ3N0YXR1cycsXG4gICAgICAnZmFpbHVyZVJlYXNvbicsXG4gICAgICAnY3JlYXRpb25UaW1lJyxcbiAgICAgICdkZWxpdmVyeSdcbiAgICBdKTtcblxuICAgIHRyeSB7XG4gICAgICBhd2FpdCB0aGlzLmJ1bGtPcGVyYXRpb25zU2VydmljZS5jcmVhdGVTaW5nbGVPcGVyYXRpb24ob3BlcmF0aW9uVG9DcmVhdGUpO1xuICAgICAgdGhpcy5hbGVydFNlcnZpY2Uuc3VjY2VzcyhnZXR0ZXh0KCdPcGVyYXRpb24gY3JlYXRlZC4nKSk7XG4gICAgfSBjYXRjaCAoZXIpIHtcbiAgICAgIHRoaXMuYWxlcnRTZXJ2aWNlLmFkZFNlcnZlckZhaWx1cmUoZXIpO1xuICAgIH1cbiAgfVxuXG4gIGdldEljb25DbGFzcygpIHtcbiAgICByZXR1cm4gdGhpcy5zaW5nbGVPcGVyYXRpb25zU3RhdHVzUHJvcGVydGllcy5maW5kKFxuICAgICAgb3BlcmF0aW9uUHJvcGVydGllcyA9PiBvcGVyYXRpb25Qcm9wZXJ0aWVzLmxhYmVsLnRvVXBwZXJDYXNlKCkgPT09IHRoaXMub3BlcmF0aW9uLnN0YXR1c1xuICAgICkuaWNvbkNsYXNzO1xuICB9XG5cbiAgcHJpdmF0ZSBhc3luYyBnZXREZXZpY2VNTyhkZXZpY2VJZCkge1xuICAgIGNvbnN0IGludmVudG9yeU1PID0gYXdhaXQgdGhpcy5idWxrT3BlcmF0aW9uc1NlcnZpY2UuZ2V0TWFuYWdlZE9iamVjdChkZXZpY2VJZCk7XG4gICAgaWYgKGludmVudG9yeU1PKSB7XG4gICAgICByZXR1cm4gaW52ZW50b3J5TU8uZGF0YTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGlzVGV4dFRydW5jYXRlZCgpIHtcbiAgICBpZiAodGhpcy5vcGVyYXRpb24uZmFpbHVyZVJlYXNvbikge1xuICAgICAgY29uc3QgZWwgPSB0aGlzLmZhaWx1cmVSZWFzb25SZWYubmF0aXZlRWxlbWVudDtcbiAgICAgIHRoaXMuc2hvd0lmVGV4dFRydW5jYXRlZCA9IGVsLm9mZnNldFdpZHRoIDwgZWwuc2Nyb2xsV2lkdGggPyB0cnVlIDogZmFsc2U7XG4gICAgfVxuICB9XG59XG4iXX0=