/*
 * ThingPark Enterprise - Dx-Core API
 * API providing configuration and provisioning features for ThingPark Enterprise.
 *
 * OpenAPI spec version: 1.8.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package lora.ns.actility.rest.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Resource representing a generic ThingPark alarm.
 */
public class Alarm {
  private String ref = null;

  /**
   * State of the alarm. Possible values are, by ascending order of criticity, &#39;CLEARED&#39;, &#39;UNCLEARED&#39;, &#39;WARNING&#39;, &#39;MINOR&#39;, &#39;MAJOR&#39; and &#39;CRITICAL&#39;.
   */
  public enum AlarmStateEnum {
    CLEARED("CLEARED"),
    
    UNCLEARED("UNCLEARED"),
    
    WARNING("WARNING"),
    
    MINOR("MINOR"),
    
    MAJOR("MAJOR"),
    
    CRITICAL("CRITICAL");

    private String value;

    AlarmStateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    @JsonValue
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AlarmStateEnum fromValue(String text) {
      for (AlarmStateEnum b : AlarmStateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  private AlarmStateEnum alarmState = null;

  private Integer occurrence = null;

  private Boolean acked = null;

  private String creationTime = null;

  private String lastUpdateTime = null;

  private String lastAckTime = null;

  private String additionalInfo1 = null;

  private String additionalInfo2 = null;

  private String additionalInfo3 = null;

  private String additionalInfo4 = null;

  private String additionalInfo5 = null;

  private String ackAuthor = null;

  public Alarm ref(String ref) {
    this.ref = ref;
    return this;
  }

   /**
   * Ref of the alarm.
   * @return ref
  **/
  public String getRef() {
    return ref;
  }

  public void setRef(String ref) {
    this.ref = ref;
  }

  public Alarm alarmState(AlarmStateEnum alarmState) {
    this.alarmState = alarmState;
    return this;
  }

   /**
   * State of the alarm. Possible values are, by ascending order of criticity, &#39;CLEARED&#39;, &#39;UNCLEARED&#39;, &#39;WARNING&#39;, &#39;MINOR&#39;, &#39;MAJOR&#39; and &#39;CRITICAL&#39;.
   * @return alarmState
  **/
  public AlarmStateEnum getAlarmState() {
    return alarmState;
  }

  public void setAlarmState(AlarmStateEnum alarmState) {
    this.alarmState = alarmState;
  }

  public Alarm occurrence(Integer occurrence) {
    this.occurrence = occurrence;
    return this;
  }

   /**
   * Number of occurrences of the alarm.
   * @return occurrence
  **/
  public Integer getOccurrence() {
    return occurrence;
  }

  public void setOccurrence(Integer occurrence) {
    this.occurrence = occurrence;
  }

  public Alarm acked(Boolean acked) {
    this.acked = acked;
    return this;
  }

   /**
   * Indicates if the alarm has been acknowledged.
   * @return acked
  **/
  public Boolean isAcked() {
    return acked;
  }

  public void setAcked(Boolean acked) {
    this.acked = acked;
  }

  public Alarm creationTime(String creationTime) {
    this.creationTime = creationTime;
    return this;
  }

   /**
   * ISO 8601 time of the alarm creation.
   * @return creationTime
  **/
  public String getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(String creationTime) {
    this.creationTime = creationTime;
  }

  public Alarm lastUpdateTime(String lastUpdateTime) {
    this.lastUpdateTime = lastUpdateTime;
    return this;
  }

   /**
   * ISO 8601 time of the last alarm update.
   * @return lastUpdateTime
  **/
  public String getLastUpdateTime() {
    return lastUpdateTime;
  }

  public void setLastUpdateTime(String lastUpdateTime) {
    this.lastUpdateTime = lastUpdateTime;
  }

  public Alarm lastAckTime(String lastAckTime) {
    this.lastAckTime = lastAckTime;
    return this;
  }

   /**
   * ISO 8601 time of the last alarm acknowledgement.
   * @return lastAckTime
  **/
  public String getLastAckTime() {
    return lastAckTime;
  }

  public void setLastAckTime(String lastAckTime) {
    this.lastAckTime = lastAckTime;
  }

  public Alarm additionalInfo1(String additionalInfo1) {
    this.additionalInfo1 = additionalInfo1;
    return this;
  }

   /**
   * First additional information related to the alarm creation.
   * @return additionalInfo1
  **/
  public String getAdditionalInfo1() {
    return additionalInfo1;
  }

  public void setAdditionalInfo1(String additionalInfo1) {
    this.additionalInfo1 = additionalInfo1;
  }

  public Alarm additionalInfo2(String additionalInfo2) {
    this.additionalInfo2 = additionalInfo2;
    return this;
  }

   /**
   * Second additional information related to the alarm creation.
   * @return additionalInfo2
  **/
  public String getAdditionalInfo2() {
    return additionalInfo2;
  }

  public void setAdditionalInfo2(String additionalInfo2) {
    this.additionalInfo2 = additionalInfo2;
  }

  public Alarm additionalInfo3(String additionalInfo3) {
    this.additionalInfo3 = additionalInfo3;
    return this;
  }

   /**
   * Third additional information related to the alarm creation.
   * @return additionalInfo3
  **/
  public String getAdditionalInfo3() {
    return additionalInfo3;
  }

  public void setAdditionalInfo3(String additionalInfo3) {
    this.additionalInfo3 = additionalInfo3;
  }

  public Alarm additionalInfo4(String additionalInfo4) {
    this.additionalInfo4 = additionalInfo4;
    return this;
  }

   /**
   * Fourth additional information related to the alarm creation.
   * @return additionalInfo4
  **/
  public String getAdditionalInfo4() {
    return additionalInfo4;
  }

  public void setAdditionalInfo4(String additionalInfo4) {
    this.additionalInfo4 = additionalInfo4;
  }

  public Alarm additionalInfo5(String additionalInfo5) {
    this.additionalInfo5 = additionalInfo5;
    return this;
  }

   /**
   * Fifth additional information related to the alarm creation.
   * @return additionalInfo5
  **/
  public String getAdditionalInfo5() {
    return additionalInfo5;
  }

  public void setAdditionalInfo5(String additionalInfo5) {
    this.additionalInfo5 = additionalInfo5;
  }

  public Alarm ackAuthor(String ackAuthor) {
    this.ackAuthor = ackAuthor;
    return this;
  }

   /**
   * Author of the alarm acknowledgement.
   * @return ackAuthor
  **/
  public String getAckAuthor() {
    return ackAuthor;
  }

  public void setAckAuthor(String ackAuthor) {
    this.ackAuthor = ackAuthor;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Alarm alarm = (Alarm) o;
    return Objects.equals(this.ref, alarm.ref) &&
        Objects.equals(this.alarmState, alarm.alarmState) &&
        Objects.equals(this.occurrence, alarm.occurrence) &&
        Objects.equals(this.acked, alarm.acked) &&
        Objects.equals(this.creationTime, alarm.creationTime) &&
        Objects.equals(this.lastUpdateTime, alarm.lastUpdateTime) &&
        Objects.equals(this.lastAckTime, alarm.lastAckTime) &&
        Objects.equals(this.additionalInfo1, alarm.additionalInfo1) &&
        Objects.equals(this.additionalInfo2, alarm.additionalInfo2) &&
        Objects.equals(this.additionalInfo3, alarm.additionalInfo3) &&
        Objects.equals(this.additionalInfo4, alarm.additionalInfo4) &&
        Objects.equals(this.additionalInfo5, alarm.additionalInfo5) &&
        Objects.equals(this.ackAuthor, alarm.ackAuthor);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ref, alarmState, occurrence, acked, creationTime, lastUpdateTime, lastAckTime, additionalInfo1, additionalInfo2, additionalInfo3, additionalInfo4, additionalInfo5, ackAuthor);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Alarm {\n");
    
    sb.append("    ref: ").append(toIndentedString(ref)).append("\n");
    sb.append("    alarmState: ").append(toIndentedString(alarmState)).append("\n");
    sb.append("    occurrence: ").append(toIndentedString(occurrence)).append("\n");
    sb.append("    acked: ").append(toIndentedString(acked)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    lastUpdateTime: ").append(toIndentedString(lastUpdateTime)).append("\n");
    sb.append("    lastAckTime: ").append(toIndentedString(lastAckTime)).append("\n");
    sb.append("    additionalInfo1: ").append(toIndentedString(additionalInfo1)).append("\n");
    sb.append("    additionalInfo2: ").append(toIndentedString(additionalInfo2)).append("\n");
    sb.append("    additionalInfo3: ").append(toIndentedString(additionalInfo3)).append("\n");
    sb.append("    additionalInfo4: ").append(toIndentedString(additionalInfo4)).append("\n");
    sb.append("    additionalInfo5: ").append(toIndentedString(additionalInfo5)).append("\n");
    sb.append("    ackAuthor: ").append(toIndentedString(ackAuthor)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  protected String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

