/*
 * netmore-web-backend
 * Front end for web services.
 *
 * The version of the OpenAPI document: 1.2.83
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package lora.ns.netmore.rest.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import lora.ns.netmore.rest.model.DeviceMap;
import lora.ns.netmore.rest.model.EncryptionKeysConfig;
import lora.ns.netmore.rest.model.LoRaConfig;
import lora.ns.netmore.rest.model.LoraServiceProvider;
import lora.ns.netmore.rest.model.LoraServiceProviderCustomersInner;
import lora.ns.netmore.rest.model.MessageConfig;
import lora.ns.netmore.rest.model.SallyRConfig;
import lora.ns.netmore.rest.model.Subscription;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ConfigType
 */
@JsonPropertyOrder({
  ConfigType.JSON_PROPERTY_ORIGIN,
  ConfigType.JSON_PROPERTY_URL,
  ConfigType.JSON_PROPERTY_USERNAME,
  ConfigType.JSON_PROPERTY_PASSWORD,
  ConfigType.JSON_PROPERTY_SERVICE_PROVIDERS,
  ConfigType.JSON_PROPERTY_CUSTOMERS,
  ConfigType.JSON_PROPERTY_DEVICE_GROUP_ID,
  ConfigType.JSON_PROPERTY_CUSTOMER_ID,
  ConfigType.JSON_PROPERTY_DRY_RUN,
  ConfigType.JSON_PROPERTY_BUILDING_ID,
  ConfigType.JSON_PROPERTY_DEVICES,
  ConfigType.JSON_PROPERTY_LANG,
  ConfigType.JSON_PROPERTY_SEND_DEVICE_ONLINE_STATE,
  ConfigType.JSON_PROPERTY_ALARMS,
  ConfigType.JSON_PROPERTY_WARNINGS,
  ConfigType.JSON_PROPERTY_SUBSCRIBERS,
  ConfigType.JSON_PROPERTY_SERVICE_PROVIDER_ID,
  ConfigType.JSON_PROPERTY_SHARED,
  ConfigType.JSON_PROPERTY_LAST_UPDATE,
  ConfigType.JSON_PROPERTY_CREATED,
  ConfigType.JSON_PROPERTY_CAN_CREATE_NEW,
  ConfigType.JSON_PROPERTY_KEYS
})
public class ConfigType {
  public static final String JSON_PROPERTY_ORIGIN = "origin";
  private String origin;

  public static final String JSON_PROPERTY_URL = "url";
  private String url;

  public static final String JSON_PROPERTY_USERNAME = "username";
  private String username;

  public static final String JSON_PROPERTY_PASSWORD = "password";
  private String password;

  public static final String JSON_PROPERTY_SERVICE_PROVIDERS = "serviceProviders";
  private List<String> serviceProviders;

  public static final String JSON_PROPERTY_CUSTOMERS = "customers";
  private List<LoraServiceProviderCustomersInner> customers = new ArrayList<>();

  public static final String JSON_PROPERTY_DEVICE_GROUP_ID = "deviceGroupId";
  private String deviceGroupId;

  public static final String JSON_PROPERTY_CUSTOMER_ID = "customerId";
  private String customerId;

  public static final String JSON_PROPERTY_DRY_RUN = "dryRun";
  private Boolean dryRun;

  public static final String JSON_PROPERTY_BUILDING_ID = "buildingId";
  private String buildingId;

  public static final String JSON_PROPERTY_DEVICES = "devices";
  private List<DeviceMap> devices = new ArrayList<>();

  /**
   * Gets or Sets lang
   */
  public enum LangEnum {
    SWEDISH("Swedish"),
    
    ENGLISH("English");

    private String value;

    LangEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static LangEnum fromValue(String value) {
      for (LangEnum b : LangEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_LANG = "lang";
  private LangEnum lang;

  public static final String JSON_PROPERTY_SEND_DEVICE_ONLINE_STATE = "sendDeviceOnlineState";
  private Boolean sendDeviceOnlineState;

  public static final String JSON_PROPERTY_ALARMS = "alarms";
  private List<String> alarms;

  public static final String JSON_PROPERTY_WARNINGS = "warnings";
  private List<String> warnings;

  public static final String JSON_PROPERTY_SUBSCRIBERS = "subscribers";
  private List<Subscription> subscribers;

  public static final String JSON_PROPERTY_SERVICE_PROVIDER_ID = "serviceProviderId";
  private String serviceProviderId;

  public static final String JSON_PROPERTY_SHARED = "shared";
  private Boolean shared;

  public static final String JSON_PROPERTY_LAST_UPDATE = "lastUpdate";
  private String lastUpdate;

  public static final String JSON_PROPERTY_CREATED = "created";
  private String created;

  public static final String JSON_PROPERTY_CAN_CREATE_NEW = "canCreateNew";
  private Boolean canCreateNew;

  public static final String JSON_PROPERTY_KEYS = "keys";
  private Map<String, String> keys = new HashMap<>();

  public ConfigType() {
  }

  public ConfigType origin(String origin) {
    
    this.origin = origin;
    return this;
  }

   /**
   * Get origin
   * @return origin
  **/

  @JsonProperty(JSON_PROPERTY_ORIGIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getOrigin() {
    return origin;
  }


  @JsonProperty(JSON_PROPERTY_ORIGIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOrigin(String origin) {
    this.origin = origin;
  }


  public ConfigType url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/

  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUrl() {
    return url;
  }


  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUrl(String url) {
    this.url = url;
  }


  public ConfigType username(String username) {
    
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/

  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUsername() {
    return username;
  }


  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUsername(String username) {
    this.username = username;
  }


  public ConfigType password(String password) {
    
    this.password = password;
    return this;
  }

   /**
   * Get password
   * @return password
  **/

  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPassword() {
    return password;
  }


  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPassword(String password) {
    this.password = password;
  }


  public ConfigType serviceProviders(List<String> serviceProviders) {
    
    this.serviceProviders = serviceProviders;
    return this;
  }

  public ConfigType addServiceProvidersItem(String serviceProvidersItem) {
    if (this.serviceProviders == null) {
      this.serviceProviders = new ArrayList<>();
    }
    this.serviceProviders.add(serviceProvidersItem);
    return this;
  }

   /**
   * This is populated using the username and password from the lora backend system
   * @return serviceProviders
  **/

  @JsonProperty(JSON_PROPERTY_SERVICE_PROVIDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getServiceProviders() {
    return serviceProviders;
  }


  @JsonProperty(JSON_PROPERTY_SERVICE_PROVIDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServiceProviders(List<String> serviceProviders) {
    this.serviceProviders = serviceProviders;
  }


  public ConfigType customers(List<LoraServiceProviderCustomersInner> customers) {
    
    this.customers = customers;
    return this;
  }

  public ConfigType addCustomersItem(LoraServiceProviderCustomersInner customersItem) {
    if (this.customers == null) {
      this.customers = new ArrayList<>();
    }
    this.customers.add(customersItem);
    return this;
  }

   /**
   * This is the list of lora customer available for this service provider.
   * @return customers
  **/

  @JsonProperty(JSON_PROPERTY_CUSTOMERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<LoraServiceProviderCustomersInner> getCustomers() {
    return customers;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCustomers(List<LoraServiceProviderCustomersInner> customers) {
    this.customers = customers;
  }


  public ConfigType deviceGroupId(String deviceGroupId) {
    
    this.deviceGroupId = deviceGroupId;
    return this;
  }

   /**
   * Get deviceGroupId
   * @return deviceGroupId
  **/

  @JsonProperty(JSON_PROPERTY_DEVICE_GROUP_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDeviceGroupId() {
    return deviceGroupId;
  }


  @JsonProperty(JSON_PROPERTY_DEVICE_GROUP_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDeviceGroupId(String deviceGroupId) {
    this.deviceGroupId = deviceGroupId;
  }


  public ConfigType customerId(String customerId) {
    
    this.customerId = customerId;
    return this;
  }

   /**
   * Get customerId
   * @return customerId
  **/

  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCustomerId() {
    return customerId;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCustomerId(String customerId) {
    this.customerId = customerId;
  }


  public ConfigType dryRun(Boolean dryRun) {
    
    this.dryRun = dryRun;
    return this;
  }

   /**
   * Get dryRun
   * @return dryRun
  **/

  @JsonProperty(JSON_PROPERTY_DRY_RUN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getDryRun() {
    return dryRun;
  }


  @JsonProperty(JSON_PROPERTY_DRY_RUN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDryRun(Boolean dryRun) {
    this.dryRun = dryRun;
  }


  public ConfigType buildingId(String buildingId) {
    
    this.buildingId = buildingId;
    return this;
  }

   /**
   * Get buildingId
   * @return buildingId
  **/

  @JsonProperty(JSON_PROPERTY_BUILDING_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBuildingId() {
    return buildingId;
  }


  @JsonProperty(JSON_PROPERTY_BUILDING_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBuildingId(String buildingId) {
    this.buildingId = buildingId;
  }


  public ConfigType devices(List<DeviceMap> devices) {
    
    this.devices = devices;
    return this;
  }

  public ConfigType addDevicesItem(DeviceMap devicesItem) {
    if (this.devices == null) {
      this.devices = new ArrayList<>();
    }
    this.devices.add(devicesItem);
    return this;
  }

   /**
   * Get devices
   * @return devices
  **/

  @JsonProperty(JSON_PROPERTY_DEVICES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<DeviceMap> getDevices() {
    return devices;
  }


  @JsonProperty(JSON_PROPERTY_DEVICES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDevices(List<DeviceMap> devices) {
    this.devices = devices;
  }


  public ConfigType lang(LangEnum lang) {
    
    this.lang = lang;
    return this;
  }

   /**
   * Get lang
   * @return lang
  **/

  @JsonProperty(JSON_PROPERTY_LANG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LangEnum getLang() {
    return lang;
  }


  @JsonProperty(JSON_PROPERTY_LANG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLang(LangEnum lang) {
    this.lang = lang;
  }


  public ConfigType sendDeviceOnlineState(Boolean sendDeviceOnlineState) {
    
    this.sendDeviceOnlineState = sendDeviceOnlineState;
    return this;
  }

   /**
   * Get sendDeviceOnlineState
   * @return sendDeviceOnlineState
  **/

  @JsonProperty(JSON_PROPERTY_SEND_DEVICE_ONLINE_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSendDeviceOnlineState() {
    return sendDeviceOnlineState;
  }


  @JsonProperty(JSON_PROPERTY_SEND_DEVICE_ONLINE_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSendDeviceOnlineState(Boolean sendDeviceOnlineState) {
    this.sendDeviceOnlineState = sendDeviceOnlineState;
  }


  public ConfigType alarms(List<String> alarms) {
    
    this.alarms = alarms;
    return this;
  }

  public ConfigType addAlarmsItem(String alarmsItem) {
    if (this.alarms == null) {
      this.alarms = new ArrayList<>();
    }
    this.alarms.add(alarmsItem);
    return this;
  }

   /**
   * Get alarms
   * @return alarms
  **/

  @JsonProperty(JSON_PROPERTY_ALARMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getAlarms() {
    return alarms;
  }


  @JsonProperty(JSON_PROPERTY_ALARMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAlarms(List<String> alarms) {
    this.alarms = alarms;
  }


  public ConfigType warnings(List<String> warnings) {
    
    this.warnings = warnings;
    return this;
  }

  public ConfigType addWarningsItem(String warningsItem) {
    if (this.warnings == null) {
      this.warnings = new ArrayList<>();
    }
    this.warnings.add(warningsItem);
    return this;
  }

   /**
   * Get warnings
   * @return warnings
  **/

  @JsonProperty(JSON_PROPERTY_WARNINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getWarnings() {
    return warnings;
  }


  @JsonProperty(JSON_PROPERTY_WARNINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWarnings(List<String> warnings) {
    this.warnings = warnings;
  }


  public ConfigType subscribers(List<Subscription> subscribers) {
    
    this.subscribers = subscribers;
    return this;
  }

  public ConfigType addSubscribersItem(Subscription subscribersItem) {
    if (this.subscribers == null) {
      this.subscribers = new ArrayList<>();
    }
    this.subscribers.add(subscribersItem);
    return this;
  }

   /**
   * Get subscribers
   * @return subscribers
  **/

  @JsonProperty(JSON_PROPERTY_SUBSCRIBERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Subscription> getSubscribers() {
    return subscribers;
  }


  @JsonProperty(JSON_PROPERTY_SUBSCRIBERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubscribers(List<Subscription> subscribers) {
    this.subscribers = subscribers;
  }


  public ConfigType serviceProviderId(String serviceProviderId) {
    
    this.serviceProviderId = serviceProviderId;
    return this;
  }

   /**
   * Get serviceProviderId
   * @return serviceProviderId
  **/

  @JsonProperty(JSON_PROPERTY_SERVICE_PROVIDER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getServiceProviderId() {
    return serviceProviderId;
  }


  @JsonProperty(JSON_PROPERTY_SERVICE_PROVIDER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setServiceProviderId(String serviceProviderId) {
    this.serviceProviderId = serviceProviderId;
  }


  public ConfigType shared(Boolean shared) {
    
    this.shared = shared;
    return this;
  }

   /**
   * Get shared
   * @return shared
  **/

  @JsonProperty(JSON_PROPERTY_SHARED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getShared() {
    return shared;
  }


  @JsonProperty(JSON_PROPERTY_SHARED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setShared(Boolean shared) {
    this.shared = shared;
  }


  public ConfigType lastUpdate(String lastUpdate) {
    
    this.lastUpdate = lastUpdate;
    return this;
  }

   /**
   * Get lastUpdate
   * @return lastUpdate
  **/

  @JsonProperty(JSON_PROPERTY_LAST_UPDATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLastUpdate() {
    return lastUpdate;
  }


  @JsonProperty(JSON_PROPERTY_LAST_UPDATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLastUpdate(String lastUpdate) {
    this.lastUpdate = lastUpdate;
  }


  public ConfigType created(String created) {
    
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/

  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCreated() {
    return created;
  }


  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreated(String created) {
    this.created = created;
  }


  public ConfigType canCreateNew(Boolean canCreateNew) {
    
    this.canCreateNew = canCreateNew;
    return this;
  }

   /**
   * Get canCreateNew
   * @return canCreateNew
  **/

  @JsonProperty(JSON_PROPERTY_CAN_CREATE_NEW)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getCanCreateNew() {
    return canCreateNew;
  }


  @JsonProperty(JSON_PROPERTY_CAN_CREATE_NEW)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCanCreateNew(Boolean canCreateNew) {
    this.canCreateNew = canCreateNew;
  }


  public ConfigType keys(Map<String, String> keys) {
    
    this.keys = keys;
    return this;
  }

  public ConfigType putKeysItem(String key, String keysItem) {
    this.keys.put(key, keysItem);
    return this;
  }

   /**
   * Get keys
   * @return keys
  **/

  @JsonProperty(JSON_PROPERTY_KEYS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Map<String, String> getKeys() {
    return keys;
  }


  @JsonProperty(JSON_PROPERTY_KEYS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setKeys(Map<String, String> keys) {
    this.keys = keys;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConfigType configType = (ConfigType) o;
    return Objects.equals(this.origin, configType.origin) &&
        Objects.equals(this.url, configType.url) &&
        Objects.equals(this.username, configType.username) &&
        Objects.equals(this.password, configType.password) &&
        Objects.equals(this.serviceProviders, configType.serviceProviders) &&
        Objects.equals(this.customers, configType.customers) &&
        Objects.equals(this.deviceGroupId, configType.deviceGroupId) &&
        Objects.equals(this.customerId, configType.customerId) &&
        Objects.equals(this.dryRun, configType.dryRun) &&
        Objects.equals(this.buildingId, configType.buildingId) &&
        Objects.equals(this.devices, configType.devices) &&
        Objects.equals(this.lang, configType.lang) &&
        Objects.equals(this.sendDeviceOnlineState, configType.sendDeviceOnlineState) &&
        Objects.equals(this.alarms, configType.alarms) &&
        Objects.equals(this.warnings, configType.warnings) &&
        Objects.equals(this.subscribers, configType.subscribers) &&
        Objects.equals(this.serviceProviderId, configType.serviceProviderId) &&
        Objects.equals(this.shared, configType.shared) &&
        Objects.equals(this.lastUpdate, configType.lastUpdate) &&
        Objects.equals(this.created, configType.created) &&
        Objects.equals(this.canCreateNew, configType.canCreateNew) &&
        Objects.equals(this.keys, configType.keys);
  }

  @Override
  public int hashCode() {
    return Objects.hash(origin, url, username, password, serviceProviders, customers, deviceGroupId, customerId, dryRun, buildingId, devices, lang, sendDeviceOnlineState, alarms, warnings, subscribers, serviceProviderId, shared, lastUpdate, created, canCreateNew, keys);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConfigType {\n");
    sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    serviceProviders: ").append(toIndentedString(serviceProviders)).append("\n");
    sb.append("    customers: ").append(toIndentedString(customers)).append("\n");
    sb.append("    deviceGroupId: ").append(toIndentedString(deviceGroupId)).append("\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    dryRun: ").append(toIndentedString(dryRun)).append("\n");
    sb.append("    buildingId: ").append(toIndentedString(buildingId)).append("\n");
    sb.append("    devices: ").append(toIndentedString(devices)).append("\n");
    sb.append("    lang: ").append(toIndentedString(lang)).append("\n");
    sb.append("    sendDeviceOnlineState: ").append(toIndentedString(sendDeviceOnlineState)).append("\n");
    sb.append("    alarms: ").append(toIndentedString(alarms)).append("\n");
    sb.append("    warnings: ").append(toIndentedString(warnings)).append("\n");
    sb.append("    subscribers: ").append(toIndentedString(subscribers)).append("\n");
    sb.append("    serviceProviderId: ").append(toIndentedString(serviceProviderId)).append("\n");
    sb.append("    shared: ").append(toIndentedString(shared)).append("\n");
    sb.append("    lastUpdate: ").append(toIndentedString(lastUpdate)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    canCreateNew: ").append(toIndentedString(canCreateNew)).append("\n");
    sb.append("    keys: ").append(toIndentedString(keys)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

