/*
 * netmore-web-backend
 * Front end for web services.
 *
 * The version of the OpenAPI document: 1.2.83
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package lora.ns.netmore.rest.model;

import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * UpdateExportConfigRequest
 */
@JsonPropertyOrder({
  UpdateExportConfigRequest.JSON_PROPERTY_NAME,
  UpdateExportConfigRequest.JSON_PROPERTY_EXPORT_TYPE,
  UpdateExportConfigRequest.JSON_PROPERTY_CONFIG,
  UpdateExportConfigRequest.JSON_PROPERTY_FORMAT_CODE,
  UpdateExportConfigRequest.JSON_PROPERTY_FORMATTER,
  UpdateExportConfigRequest.JSON_PROPERTY_MESSAGE_FORMATS,
  UpdateExportConfigRequest.JSON_PROPERTY_ACTIVE_ON_CUSTOMER,
  UpdateExportConfigRequest.JSON_PROPERTY_ACTIVE_ON_SUB_CUSTOMER,
  UpdateExportConfigRequest.JSON_PROPERTY_AVAILABLE_TO_SUB_CUSTOMER,
  UpdateExportConfigRequest.JSON_PROPERTY_VISIBLE_TO_SUB_CUSTOMER
})
public class UpdateExportConfigRequest {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  /**
   * Gets or Sets exportType
   */
  public enum ExportTypeEnum {
    AZUREHTTPEVENT("AZUREHTTPEVENT"),
    
    HTTP_PUSH("HTTP_PUSH"),
    
    AWS_IOT_CORE("AWS_IOT_CORE"),
    
    MQTT("MQTT"),
    
    CASSANDRA("CASSANDRA"),
    
    GOOGLE_PUB_SUB("GOOGLE_PUB_SUB");

    private String value;

    ExportTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ExportTypeEnum fromValue(String value) {
      for (ExportTypeEnum b : ExportTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_EXPORT_TYPE = "exportType";
  private ExportTypeEnum exportType;

  public static final String JSON_PROPERTY_CONFIG = "config";
  private ExportConfigType config;

  public static final String JSON_PROPERTY_FORMAT_CODE = "formatCode";
  private String formatCode;

  public static final String JSON_PROPERTY_FORMATTER = "formatter";
  private Map<String, FormatterValue> formatter;

  public static final String JSON_PROPERTY_MESSAGE_FORMATS = "messageFormats";
  private UpdateExportMessageFormats messageFormats;

  public static final String JSON_PROPERTY_ACTIVE_ON_CUSTOMER = "activeOnCustomer";
  private Boolean activeOnCustomer;

  public static final String JSON_PROPERTY_ACTIVE_ON_SUB_CUSTOMER = "activeOnSubCustomer";
  private Boolean activeOnSubCustomer;

  public static final String JSON_PROPERTY_AVAILABLE_TO_SUB_CUSTOMER = "availableToSubCustomer";
  private Boolean availableToSubCustomer;

  public static final String JSON_PROPERTY_VISIBLE_TO_SUB_CUSTOMER = "visibleToSubCustomer";
  private Boolean visibleToSubCustomer;

  public UpdateExportConfigRequest() {
  }

  public UpdateExportConfigRequest name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public UpdateExportConfigRequest exportType(ExportTypeEnum exportType) {
    
    this.exportType = exportType;
    return this;
  }

   /**
   * Get exportType
   * @return exportType
  **/

  @JsonProperty(JSON_PROPERTY_EXPORT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ExportTypeEnum getExportType() {
    return exportType;
  }


  @JsonProperty(JSON_PROPERTY_EXPORT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExportType(ExportTypeEnum exportType) {
    this.exportType = exportType;
  }


  public UpdateExportConfigRequest config(ExportConfigType config) {
    this.config = config;
    
    return this;
  }

   /**
   * Get config
   * @return config
  **/

  @JsonProperty(JSON_PROPERTY_CONFIG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ExportConfigType getConfig() {
    return config;
  }
  
  @JsonProperty(JSON_PROPERTY_CONFIG)
  public void setConfig(ExportConfigType config) {
    this.config = config;
  }

  public UpdateExportConfigRequest formatCode(String formatCode) {
    
    this.formatCode = formatCode;
    return this;
  }

   /**
   * Get formatCode
   * @return formatCode
  **/

  @JsonProperty(JSON_PROPERTY_FORMAT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFormatCode() {
    return formatCode;
  }


  @JsonProperty(JSON_PROPERTY_FORMAT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFormatCode(String formatCode) {
    this.formatCode = formatCode;
  }


  public UpdateExportConfigRequest formatter(Map<String, FormatterValue> formatter) {
    this.formatter = formatter;
    
    return this;
  }

  public UpdateExportConfigRequest putFormatterItem(String key, FormatterValue formatterItem) {
    if (this.formatter == null) {
      this.formatter = new HashMap<>();
    }
    this.formatter.put(key, formatterItem);
    return this;
  }

   /**
   * Get formatter
   * @return formatter
  **/

  @JsonProperty(JSON_PROPERTY_FORMATTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, FormatterValue> getFormatter() {
    return formatter;
  }
  
  @JsonProperty(JSON_PROPERTY_FORMATTER)
  public void setFormatter(Map<String, FormatterValue> formatter) {
    this.formatter = formatter;
  }


  public UpdateExportConfigRequest messageFormats(UpdateExportMessageFormats messageFormats) {
    
    this.messageFormats = messageFormats;
    return this;
  }

   /**
   * Get messageFormats
   * @return messageFormats
  **/

  @JsonProperty(JSON_PROPERTY_MESSAGE_FORMATS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UpdateExportMessageFormats getMessageFormats() {
    return messageFormats;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE_FORMATS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessageFormats(UpdateExportMessageFormats messageFormats) {
    this.messageFormats = messageFormats;
  }


  public UpdateExportConfigRequest activeOnCustomer(Boolean activeOnCustomer) {
    
    this.activeOnCustomer = activeOnCustomer;
    return this;
  }

   /**
   * Get activeOnCustomer
   * @return activeOnCustomer
  **/

  @JsonProperty(JSON_PROPERTY_ACTIVE_ON_CUSTOMER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getActiveOnCustomer() {
    return activeOnCustomer;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVE_ON_CUSTOMER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActiveOnCustomer(Boolean activeOnCustomer) {
    this.activeOnCustomer = activeOnCustomer;
  }


  public UpdateExportConfigRequest activeOnSubCustomer(Boolean activeOnSubCustomer) {
    
    this.activeOnSubCustomer = activeOnSubCustomer;
    return this;
  }

   /**
   * Get activeOnSubCustomer
   * @return activeOnSubCustomer
  **/

  @JsonProperty(JSON_PROPERTY_ACTIVE_ON_SUB_CUSTOMER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getActiveOnSubCustomer() {
    return activeOnSubCustomer;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVE_ON_SUB_CUSTOMER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActiveOnSubCustomer(Boolean activeOnSubCustomer) {
    this.activeOnSubCustomer = activeOnSubCustomer;
  }


  public UpdateExportConfigRequest availableToSubCustomer(Boolean availableToSubCustomer) {
    
    this.availableToSubCustomer = availableToSubCustomer;
    return this;
  }

   /**
   * Get availableToSubCustomer
   * @return availableToSubCustomer
  **/

  @JsonProperty(JSON_PROPERTY_AVAILABLE_TO_SUB_CUSTOMER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAvailableToSubCustomer() {
    return availableToSubCustomer;
  }


  @JsonProperty(JSON_PROPERTY_AVAILABLE_TO_SUB_CUSTOMER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAvailableToSubCustomer(Boolean availableToSubCustomer) {
    this.availableToSubCustomer = availableToSubCustomer;
  }


  public UpdateExportConfigRequest visibleToSubCustomer(Boolean visibleToSubCustomer) {
    
    this.visibleToSubCustomer = visibleToSubCustomer;
    return this;
  }

   /**
   * Get visibleToSubCustomer
   * @return visibleToSubCustomer
  **/

  @JsonProperty(JSON_PROPERTY_VISIBLE_TO_SUB_CUSTOMER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getVisibleToSubCustomer() {
    return visibleToSubCustomer;
  }


  @JsonProperty(JSON_PROPERTY_VISIBLE_TO_SUB_CUSTOMER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVisibleToSubCustomer(Boolean visibleToSubCustomer) {
    this.visibleToSubCustomer = visibleToSubCustomer;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateExportConfigRequest updateExportConfigRequest = (UpdateExportConfigRequest) o;
    return Objects.equals(this.name, updateExportConfigRequest.name) &&
        Objects.equals(this.exportType, updateExportConfigRequest.exportType) &&
        Objects.equals(this.config, updateExportConfigRequest.config) &&
        Objects.equals(this.formatCode, updateExportConfigRequest.formatCode) &&
        Objects.equals(this.formatter, updateExportConfigRequest.formatter) &&
        Objects.equals(this.messageFormats, updateExportConfigRequest.messageFormats) &&
        Objects.equals(this.activeOnCustomer, updateExportConfigRequest.activeOnCustomer) &&
        Objects.equals(this.activeOnSubCustomer, updateExportConfigRequest.activeOnSubCustomer) &&
        Objects.equals(this.availableToSubCustomer, updateExportConfigRequest.availableToSubCustomer) &&
        Objects.equals(this.visibleToSubCustomer, updateExportConfigRequest.visibleToSubCustomer);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, exportType, config, formatCode, formatter, messageFormats, activeOnCustomer, activeOnSubCustomer, availableToSubCustomer, visibleToSubCustomer);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateExportConfigRequest {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    exportType: ").append(toIndentedString(exportType)).append("\n");
    sb.append("    config: ").append(toIndentedString(config)).append("\n");
    sb.append("    formatCode: ").append(toIndentedString(formatCode)).append("\n");
    sb.append("    formatter: ").append(toIndentedString(formatter)).append("\n");
    sb.append("    messageFormats: ").append(toIndentedString(messageFormats)).append("\n");
    sb.append("    activeOnCustomer: ").append(toIndentedString(activeOnCustomer)).append("\n");
    sb.append("    activeOnSubCustomer: ").append(toIndentedString(activeOnSubCustomer)).append("\n");
    sb.append("    availableToSubCustomer: ").append(toIndentedString(availableToSubCustomer)).append("\n");
    sb.append("    visibleToSubCustomer: ").append(toIndentedString(visibleToSubCustomer)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

