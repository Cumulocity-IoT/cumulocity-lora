/*
 * netmore-web-backend
 * Front end for web services.
 *
 * The version of the OpenAPI document: 1.2.83
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package lora.ns.netmore.rest.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.HashMap;
import java.util.Map;
import lora.ns.netmore.rest.model.ExportFormatData;
import lora.ns.netmore.rest.model.ExportMessageFormats;
import lora.ns.netmore.rest.model.FormatterValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ExportConfig
 */
@JsonPropertyOrder({
  ExportConfig.JSON_PROPERTY_EXPORT_TYPE,
  ExportConfig.JSON_PROPERTY_EXPORT_FORMAT,
  ExportConfig.JSON_PROPERTY_NAME,
  ExportConfig.JSON_PROPERTY_EXPORT_CONFIG_ID,
  ExportConfig.JSON_PROPERTY_CONFIG,
  ExportConfig.JSON_PROPERTY_CUSTOMER_ID,
  ExportConfig.JSON_PROPERTY_FORMATTER,
  ExportConfig.JSON_PROPERTY_MESSAGE_FORMATS,
  ExportConfig.JSON_PROPERTY_CREATED,
  ExportConfig.JSON_PROPERTY_LAST_UPDATED,
  ExportConfig.JSON_PROPERTY_ACTIVE_ON_CUSTOMER,
  ExportConfig.JSON_PROPERTY_ACTIVE_ON_SUB_CUSTOMER,
  ExportConfig.JSON_PROPERTY_VISIBLE_TO_SUB_CUSTOMER,
  ExportConfig.JSON_PROPERTY_AVAILABLE_TO_SUB_CUSTOMER,
  ExportConfig.JSON_PROPERTY_CREATED_BY,
  ExportConfig.JSON_PROPERTY_LAST_UPDATED_BY
})
public class ExportConfig {
  public static final String JSON_PROPERTY_EXPORT_TYPE = "exportType";
  private String exportType;

  public static final String JSON_PROPERTY_EXPORT_FORMAT = "exportFormat";
  private ExportFormatData exportFormat;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_EXPORT_CONFIG_ID = "exportConfigId";
  private String exportConfigId;

  public static final String JSON_PROPERTY_CONFIG = "config";
  private Object config = null;

  public static final String JSON_PROPERTY_CUSTOMER_ID = "customerId";
  private String customerId;

  public static final String JSON_PROPERTY_FORMATTER = "formatter";
  private Map<String, FormatterValue> formatter = new HashMap<>();

  public static final String JSON_PROPERTY_MESSAGE_FORMATS = "messageFormats";
  private ExportMessageFormats messageFormats;

  public static final String JSON_PROPERTY_CREATED = "created";
  private String created;

  public static final String JSON_PROPERTY_LAST_UPDATED = "lastUpdated";
  private String lastUpdated;

  public static final String JSON_PROPERTY_ACTIVE_ON_CUSTOMER = "activeOnCustomer";
  private Boolean activeOnCustomer;

  public static final String JSON_PROPERTY_ACTIVE_ON_SUB_CUSTOMER = "activeOnSubCustomer";
  private Boolean activeOnSubCustomer;

  public static final String JSON_PROPERTY_VISIBLE_TO_SUB_CUSTOMER = "visibleToSubCustomer";
  private Boolean visibleToSubCustomer;

  public static final String JSON_PROPERTY_AVAILABLE_TO_SUB_CUSTOMER = "availableToSubCustomer";
  private Boolean availableToSubCustomer;

  public static final String JSON_PROPERTY_CREATED_BY = "createdBy";
  private String createdBy;

  public static final String JSON_PROPERTY_LAST_UPDATED_BY = "lastUpdatedBy";
  private String lastUpdatedBy;

  public ExportConfig() {
  }

  public ExportConfig exportType(String exportType) {
    
    this.exportType = exportType;
    return this;
  }

   /**
   * Get exportType
   * @return exportType
  **/

  @JsonProperty(JSON_PROPERTY_EXPORT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getExportType() {
    return exportType;
  }


  @JsonProperty(JSON_PROPERTY_EXPORT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExportType(String exportType) {
    this.exportType = exportType;
  }


  public ExportConfig exportFormat(ExportFormatData exportFormat) {
    
    this.exportFormat = exportFormat;
    return this;
  }

   /**
   * Get exportFormat
   * @return exportFormat
  **/

  @JsonProperty(JSON_PROPERTY_EXPORT_FORMAT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ExportFormatData getExportFormat() {
    return exportFormat;
  }


  @JsonProperty(JSON_PROPERTY_EXPORT_FORMAT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExportFormat(ExportFormatData exportFormat) {
    this.exportFormat = exportFormat;
  }


  public ExportConfig name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public ExportConfig exportConfigId(String exportConfigId) {
    
    this.exportConfigId = exportConfigId;
    return this;
  }

   /**
   * Get exportConfigId
   * @return exportConfigId
  **/

  @JsonProperty(JSON_PROPERTY_EXPORT_CONFIG_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getExportConfigId() {
    return exportConfigId;
  }


  @JsonProperty(JSON_PROPERTY_EXPORT_CONFIG_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExportConfigId(String exportConfigId) {
    this.exportConfigId = exportConfigId;
  }


  public ExportConfig config(Object config) {
    
    this.config = config;
    return this;
  }

   /**
   * Get config
   * @return config
  **/

  @JsonProperty(JSON_PROPERTY_CONFIG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getConfig() {
    return config;
  }


  @JsonProperty(JSON_PROPERTY_CONFIG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConfig(Object config) {
    this.config = config;
  }


  public ExportConfig customerId(String customerId) {
    
    this.customerId = customerId;
    return this;
  }

   /**
   * Get customerId
   * @return customerId
  **/

  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCustomerId() {
    return customerId;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomerId(String customerId) {
    this.customerId = customerId;
  }


  public ExportConfig formatter(Map<String, FormatterValue> formatter) {
    
    this.formatter = formatter;
    return this;
  }

  public ExportConfig putFormatterItem(String key, FormatterValue formatterItem) {
    if (this.formatter == null) {
      this.formatter = new HashMap<>();
    }
    this.formatter.put(key, formatterItem);
    return this;
  }

   /**
   * Get formatter
   * @return formatter
  **/

  @JsonProperty(JSON_PROPERTY_FORMATTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, FormatterValue> getFormatter() {
    return formatter;
  }


  @JsonProperty(JSON_PROPERTY_FORMATTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFormatter(Map<String, FormatterValue> formatter) {
    this.formatter = formatter;
  }


  public ExportConfig messageFormats(ExportMessageFormats messageFormats) {
    
    this.messageFormats = messageFormats;
    return this;
  }

   /**
   * Get messageFormats
   * @return messageFormats
  **/

  @JsonProperty(JSON_PROPERTY_MESSAGE_FORMATS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ExportMessageFormats getMessageFormats() {
    return messageFormats;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE_FORMATS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMessageFormats(ExportMessageFormats messageFormats) {
    this.messageFormats = messageFormats;
  }


  public ExportConfig created(String created) {
    
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/

  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCreated() {
    return created;
  }


  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreated(String created) {
    this.created = created;
  }


  public ExportConfig lastUpdated(String lastUpdated) {
    
    this.lastUpdated = lastUpdated;
    return this;
  }

   /**
   * Get lastUpdated
   * @return lastUpdated
  **/

  @JsonProperty(JSON_PROPERTY_LAST_UPDATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLastUpdated() {
    return lastUpdated;
  }


  @JsonProperty(JSON_PROPERTY_LAST_UPDATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLastUpdated(String lastUpdated) {
    this.lastUpdated = lastUpdated;
  }


  public ExportConfig activeOnCustomer(Boolean activeOnCustomer) {
    
    this.activeOnCustomer = activeOnCustomer;
    return this;
  }

   /**
   * Get activeOnCustomer
   * @return activeOnCustomer
  **/

  @JsonProperty(JSON_PROPERTY_ACTIVE_ON_CUSTOMER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getActiveOnCustomer() {
    return activeOnCustomer;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVE_ON_CUSTOMER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setActiveOnCustomer(Boolean activeOnCustomer) {
    this.activeOnCustomer = activeOnCustomer;
  }


  public ExportConfig activeOnSubCustomer(Boolean activeOnSubCustomer) {
    
    this.activeOnSubCustomer = activeOnSubCustomer;
    return this;
  }

   /**
   * Get activeOnSubCustomer
   * @return activeOnSubCustomer
  **/

  @JsonProperty(JSON_PROPERTY_ACTIVE_ON_SUB_CUSTOMER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getActiveOnSubCustomer() {
    return activeOnSubCustomer;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVE_ON_SUB_CUSTOMER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setActiveOnSubCustomer(Boolean activeOnSubCustomer) {
    this.activeOnSubCustomer = activeOnSubCustomer;
  }


  public ExportConfig visibleToSubCustomer(Boolean visibleToSubCustomer) {
    
    this.visibleToSubCustomer = visibleToSubCustomer;
    return this;
  }

   /**
   * Get visibleToSubCustomer
   * @return visibleToSubCustomer
  **/

  @JsonProperty(JSON_PROPERTY_VISIBLE_TO_SUB_CUSTOMER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getVisibleToSubCustomer() {
    return visibleToSubCustomer;
  }


  @JsonProperty(JSON_PROPERTY_VISIBLE_TO_SUB_CUSTOMER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVisibleToSubCustomer(Boolean visibleToSubCustomer) {
    this.visibleToSubCustomer = visibleToSubCustomer;
  }


  public ExportConfig availableToSubCustomer(Boolean availableToSubCustomer) {
    
    this.availableToSubCustomer = availableToSubCustomer;
    return this;
  }

   /**
   * Get availableToSubCustomer
   * @return availableToSubCustomer
  **/

  @JsonProperty(JSON_PROPERTY_AVAILABLE_TO_SUB_CUSTOMER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getAvailableToSubCustomer() {
    return availableToSubCustomer;
  }


  @JsonProperty(JSON_PROPERTY_AVAILABLE_TO_SUB_CUSTOMER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAvailableToSubCustomer(Boolean availableToSubCustomer) {
    this.availableToSubCustomer = availableToSubCustomer;
  }


  public ExportConfig createdBy(String createdBy) {
    
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/

  @JsonProperty(JSON_PROPERTY_CREATED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCreatedBy() {
    return createdBy;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedBy(String createdBy) {
    this.createdBy = createdBy;
  }


  public ExportConfig lastUpdatedBy(String lastUpdatedBy) {
    
    this.lastUpdatedBy = lastUpdatedBy;
    return this;
  }

   /**
   * Get lastUpdatedBy
   * @return lastUpdatedBy
  **/

  @JsonProperty(JSON_PROPERTY_LAST_UPDATED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLastUpdatedBy() {
    return lastUpdatedBy;
  }


  @JsonProperty(JSON_PROPERTY_LAST_UPDATED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastUpdatedBy(String lastUpdatedBy) {
    this.lastUpdatedBy = lastUpdatedBy;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExportConfig exportConfig = (ExportConfig) o;
    return Objects.equals(this.exportType, exportConfig.exportType) &&
        Objects.equals(this.exportFormat, exportConfig.exportFormat) &&
        Objects.equals(this.name, exportConfig.name) &&
        Objects.equals(this.exportConfigId, exportConfig.exportConfigId) &&
        Objects.equals(this.config, exportConfig.config) &&
        Objects.equals(this.customerId, exportConfig.customerId) &&
        Objects.equals(this.formatter, exportConfig.formatter) &&
        Objects.equals(this.messageFormats, exportConfig.messageFormats) &&
        Objects.equals(this.created, exportConfig.created) &&
        Objects.equals(this.lastUpdated, exportConfig.lastUpdated) &&
        Objects.equals(this.activeOnCustomer, exportConfig.activeOnCustomer) &&
        Objects.equals(this.activeOnSubCustomer, exportConfig.activeOnSubCustomer) &&
        Objects.equals(this.visibleToSubCustomer, exportConfig.visibleToSubCustomer) &&
        Objects.equals(this.availableToSubCustomer, exportConfig.availableToSubCustomer) &&
        Objects.equals(this.createdBy, exportConfig.createdBy) &&
        Objects.equals(this.lastUpdatedBy, exportConfig.lastUpdatedBy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(exportType, exportFormat, name, exportConfigId, config, customerId, formatter, messageFormats, created, lastUpdated, activeOnCustomer, activeOnSubCustomer, visibleToSubCustomer, availableToSubCustomer, createdBy, lastUpdatedBy);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExportConfig {\n");
    sb.append("    exportType: ").append(toIndentedString(exportType)).append("\n");
    sb.append("    exportFormat: ").append(toIndentedString(exportFormat)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    exportConfigId: ").append(toIndentedString(exportConfigId)).append("\n");
    sb.append("    config: ").append(toIndentedString(config)).append("\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    formatter: ").append(toIndentedString(formatter)).append("\n");
    sb.append("    messageFormats: ").append(toIndentedString(messageFormats)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("    activeOnCustomer: ").append(toIndentedString(activeOnCustomer)).append("\n");
    sb.append("    activeOnSubCustomer: ").append(toIndentedString(activeOnSubCustomer)).append("\n");
    sb.append("    visibleToSubCustomer: ").append(toIndentedString(visibleToSubCustomer)).append("\n");
    sb.append("    availableToSubCustomer: ").append(toIndentedString(availableToSubCustomer)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    lastUpdatedBy: ").append(toIndentedString(lastUpdatedBy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

