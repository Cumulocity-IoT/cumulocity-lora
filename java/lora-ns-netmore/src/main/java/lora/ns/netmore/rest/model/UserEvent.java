/*
 * netmore-web-backend
 * Front end for web services.
 *
 * The version of the OpenAPI document: 1.2.83
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package lora.ns.netmore.rest.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import lora.ns.netmore.rest.model.UserEventType;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * UserEvent
 */
@JsonPropertyOrder({
  UserEvent.JSON_PROPERTY_CREATED,
  UserEvent.JSON_PROPERTY_TYPE,
  UserEvent.JSON_PROPERTY_CLIENT_ID,
  UserEvent.JSON_PROPERTY_USER_ID,
  UserEvent.JSON_PROPERTY_SESSION_ID,
  UserEvent.JSON_PROPERTY_ERROR,
  UserEvent.JSON_PROPERTY_ISSUER_ID,
  UserEvent.JSON_PROPERTY_ISSUER_USERNAME
})
public class UserEvent {
  public static final String JSON_PROPERTY_CREATED = "created";
  private String created;

  public static final String JSON_PROPERTY_TYPE = "type";
  private UserEventType type;

  public static final String JSON_PROPERTY_CLIENT_ID = "clientId";
  private String clientId;

  public static final String JSON_PROPERTY_USER_ID = "userId";
  private String userId;

  public static final String JSON_PROPERTY_SESSION_ID = "sessionId";
  private String sessionId;

  public static final String JSON_PROPERTY_ERROR = "error";
  private String error;

  public static final String JSON_PROPERTY_ISSUER_ID = "issuerId";
  private String issuerId;

  public static final String JSON_PROPERTY_ISSUER_USERNAME = "issuerUsername";
  private String issuerUsername;

  public UserEvent() {
  }

  public UserEvent created(String created) {
    
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/

  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCreated() {
    return created;
  }


  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreated(String created) {
    this.created = created;
  }


  public UserEvent type(UserEventType type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/

  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UserEventType getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(UserEventType type) {
    this.type = type;
  }


  public UserEvent clientId(String clientId) {
    
    this.clientId = clientId;
    return this;
  }

   /**
   * Get clientId
   * @return clientId
  **/

  @JsonProperty(JSON_PROPERTY_CLIENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getClientId() {
    return clientId;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setClientId(String clientId) {
    this.clientId = clientId;
  }


  public UserEvent userId(String userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/

  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUserId() {
    return userId;
  }


  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUserId(String userId) {
    this.userId = userId;
  }


  public UserEvent sessionId(String sessionId) {
    
    this.sessionId = sessionId;
    return this;
  }

   /**
   * Get sessionId
   * @return sessionId
  **/

  @JsonProperty(JSON_PROPERTY_SESSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSessionId() {
    return sessionId;
  }


  @JsonProperty(JSON_PROPERTY_SESSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSessionId(String sessionId) {
    this.sessionId = sessionId;
  }


  public UserEvent error(String error) {
    
    this.error = error;
    return this;
  }

   /**
   * Get error
   * @return error
  **/

  @JsonProperty(JSON_PROPERTY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getError() {
    return error;
  }


  @JsonProperty(JSON_PROPERTY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setError(String error) {
    this.error = error;
  }


  public UserEvent issuerId(String issuerId) {
    
    this.issuerId = issuerId;
    return this;
  }

   /**
   * Get issuerId
   * @return issuerId
  **/

  @JsonProperty(JSON_PROPERTY_ISSUER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIssuerId() {
    return issuerId;
  }


  @JsonProperty(JSON_PROPERTY_ISSUER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIssuerId(String issuerId) {
    this.issuerId = issuerId;
  }


  public UserEvent issuerUsername(String issuerUsername) {
    
    this.issuerUsername = issuerUsername;
    return this;
  }

   /**
   * Get issuerUsername
   * @return issuerUsername
  **/

  @JsonProperty(JSON_PROPERTY_ISSUER_USERNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIssuerUsername() {
    return issuerUsername;
  }


  @JsonProperty(JSON_PROPERTY_ISSUER_USERNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIssuerUsername(String issuerUsername) {
    this.issuerUsername = issuerUsername;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserEvent userEvent = (UserEvent) o;
    return Objects.equals(this.created, userEvent.created) &&
        Objects.equals(this.type, userEvent.type) &&
        Objects.equals(this.clientId, userEvent.clientId) &&
        Objects.equals(this.userId, userEvent.userId) &&
        Objects.equals(this.sessionId, userEvent.sessionId) &&
        Objects.equals(this.error, userEvent.error) &&
        Objects.equals(this.issuerId, userEvent.issuerId) &&
        Objects.equals(this.issuerUsername, userEvent.issuerUsername);
  }

  @Override
  public int hashCode() {
    return Objects.hash(created, type, clientId, userId, sessionId, error, issuerId, issuerUsername);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserEvent {\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    sessionId: ").append(toIndentedString(sessionId)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    issuerId: ").append(toIndentedString(issuerId)).append("\n");
    sb.append("    issuerUsername: ").append(toIndentedString(issuerUsername)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

