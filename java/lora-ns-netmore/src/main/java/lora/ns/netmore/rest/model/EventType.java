/*
 * netmore-web-backend
 * Front end for web services.
 *
 * The version of the OpenAPI document: 1.2.83
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package lora.ns.netmore.rest.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Gets or Sets EventType
 */
public enum EventType {
  
  DEVICE_ONLINE("device.online"),
  
  DEVICE_OFFLINE("device.offline"),
  
  DEVICE_REMOVED("device.removed"),
  
  DEVICE_UPDATED("device.updated"),
  
  DATA_POINT_CREATED("data.point.created"),
  
  DATA_POINT_CHANGED("data.point.changed"),
  
  DEVICE_GROUP_CREATED("device.group.created"),
  
  DEVICE_GROUP_REMOVED("device.group.removed"),
  
  CUSTOMER_CREATED("customer.created"),
  
  CUSTOMER_UPDATED("customer.updated"),
  
  CUSTOMER_REMOVED("customer.removed"),
  
  EVENT_ALARM("event.alarm"),
  
  EVENT_WARNING("event.warning"),
  
  EVENT_CLEARED("event.cleared"),
  
  EVENT_MANUALLY_CLEARED("event.manually.cleared"),
  
  EVENT_TRIGGER_REMOVED("event.trigger.removed"),
  
  DEVICE_PORT_CHANGED("device.port.changed"),
  
  DEVICE_PORT_ACTION_FAILED("device.port.action.failed"),
  
  PROPERTY_CREATED("property.created"),
  
  PROPERTY_CHANGED("property.changed"),
  
  PROPERTY_REMOVED("property.removed"),
  
  INVENTORY_CREATED("inventory.created"),
  
  INVENTORY_CHANGED("inventory.changed"),
  
  INVENTORY_REMOVED("inventory.removed");

  private String value;

  EventType(String value) {
    this.value = value;
  }

  @JsonValue
  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  @JsonCreator
  public static EventType fromValue(String value) {
    for (EventType b : EventType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }
}

