/*
 * netmore-web-backend
 * Front end for web services.
 *
 * The version of the OpenAPI document: 1.2.83
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package lora.ns.netmore.rest.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ProductReport
 */
@JsonPropertyOrder({
  ProductReport.JSON_PROPERTY_NAME,
  ProductReport.JSON_PROPERTY_ID,
  ProductReport.JSON_PROPERTY_EXTERNAL_REFERENCE,
  ProductReport.JSON_PROPERTY_QUANTITY,
  ProductReport.JSON_PROPERTY_COMMUNICATED,
  ProductReport.JSON_PROPERTY_NOT_COMMUNICATED
})
public class ProductReport {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_EXTERNAL_REFERENCE = "externalReference";
  private String externalReference;

  public static final String JSON_PROPERTY_QUANTITY = "quantity";
  private Double quantity;

  public static final String JSON_PROPERTY_COMMUNICATED = "communicated";
  private Double communicated;

  public static final String JSON_PROPERTY_NOT_COMMUNICATED = "notCommunicated";
  private Double notCommunicated;

  public ProductReport() {
  }

  public ProductReport name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public ProductReport id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public ProductReport externalReference(String externalReference) {
    
    this.externalReference = externalReference;
    return this;
  }

   /**
   * Get externalReference
   * @return externalReference
  **/

  @JsonProperty(JSON_PROPERTY_EXTERNAL_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getExternalReference() {
    return externalReference;
  }


  @JsonProperty(JSON_PROPERTY_EXTERNAL_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExternalReference(String externalReference) {
    this.externalReference = externalReference;
  }


  public ProductReport quantity(Double quantity) {
    
    this.quantity = quantity;
    return this;
  }

   /**
   * Get quantity
   * @return quantity
  **/

  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getQuantity() {
    return quantity;
  }


  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setQuantity(Double quantity) {
    this.quantity = quantity;
  }


  public ProductReport communicated(Double communicated) {
    
    this.communicated = communicated;
    return this;
  }

   /**
   * Get communicated
   * @return communicated
  **/

  @JsonProperty(JSON_PROPERTY_COMMUNICATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getCommunicated() {
    return communicated;
  }


  @JsonProperty(JSON_PROPERTY_COMMUNICATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCommunicated(Double communicated) {
    this.communicated = communicated;
  }


  public ProductReport notCommunicated(Double notCommunicated) {
    
    this.notCommunicated = notCommunicated;
    return this;
  }

   /**
   * Get notCommunicated
   * @return notCommunicated
  **/

  @JsonProperty(JSON_PROPERTY_NOT_COMMUNICATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getNotCommunicated() {
    return notCommunicated;
  }


  @JsonProperty(JSON_PROPERTY_NOT_COMMUNICATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNotCommunicated(Double notCommunicated) {
    this.notCommunicated = notCommunicated;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductReport productReport = (ProductReport) o;
    return Objects.equals(this.name, productReport.name) &&
        Objects.equals(this.id, productReport.id) &&
        Objects.equals(this.externalReference, productReport.externalReference) &&
        Objects.equals(this.quantity, productReport.quantity) &&
        Objects.equals(this.communicated, productReport.communicated) &&
        Objects.equals(this.notCommunicated, productReport.notCommunicated);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, id, externalReference, quantity, communicated, notCommunicated);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductReport {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    externalReference: ").append(toIndentedString(externalReference)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    communicated: ").append(toIndentedString(communicated)).append("\n");
    sb.append("    notCommunicated: ").append(toIndentedString(notCommunicated)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

