/*
 * netmore-web-backend
 * Front end for web services.
 *
 * The version of the OpenAPI document: 1.2.83
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package lora.ns.netmore.rest.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import lora.ns.netmore.rest.model.StateChangeType;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreateLoraServiceProviderDeviceGroupRequest
 */
@JsonPropertyOrder({
  CreateLoraServiceProviderDeviceGroupRequest.JSON_PROPERTY_USERNAME,
  CreateLoraServiceProviderDeviceGroupRequest.JSON_PROPERTY_PASSWORD,
  CreateLoraServiceProviderDeviceGroupRequest.JSON_PROPERTY_STATE_CHANGE_ONLY
})
public class CreateLoraServiceProviderDeviceGroupRequest {
  public static final String JSON_PROPERTY_USERNAME = "username";
  private String username;

  public static final String JSON_PROPERTY_PASSWORD = "password";
  private String password;

  public static final String JSON_PROPERTY_STATE_CHANGE_ONLY = "stateChangeOnly";
  private StateChangeType stateChangeOnly;

  public CreateLoraServiceProviderDeviceGroupRequest() {
  }

  public CreateLoraServiceProviderDeviceGroupRequest username(String username) {
    
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/

  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUsername() {
    return username;
  }


  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUsername(String username) {
    this.username = username;
  }


  public CreateLoraServiceProviderDeviceGroupRequest password(String password) {
    
    this.password = password;
    return this;
  }

   /**
   * Get password
   * @return password
  **/

  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPassword() {
    return password;
  }


  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPassword(String password) {
    this.password = password;
  }


  public CreateLoraServiceProviderDeviceGroupRequest stateChangeOnly(StateChangeType stateChangeOnly) {
    
    this.stateChangeOnly = stateChangeOnly;
    return this;
  }

   /**
   * Get stateChangeOnly
   * @return stateChangeOnly
  **/

  @JsonProperty(JSON_PROPERTY_STATE_CHANGE_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StateChangeType getStateChangeOnly() {
    return stateChangeOnly;
  }


  @JsonProperty(JSON_PROPERTY_STATE_CHANGE_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStateChangeOnly(StateChangeType stateChangeOnly) {
    this.stateChangeOnly = stateChangeOnly;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateLoraServiceProviderDeviceGroupRequest createLoraServiceProviderDeviceGroupRequest = (CreateLoraServiceProviderDeviceGroupRequest) o;
    return Objects.equals(this.username, createLoraServiceProviderDeviceGroupRequest.username) &&
        Objects.equals(this.password, createLoraServiceProviderDeviceGroupRequest.password) &&
        Objects.equals(this.stateChangeOnly, createLoraServiceProviderDeviceGroupRequest.stateChangeOnly);
  }

  @Override
  public int hashCode() {
    return Objects.hash(username, password, stateChangeOnly);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateLoraServiceProviderDeviceGroupRequest {\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    stateChangeOnly: ").append(toIndentedString(stateChangeOnly)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

