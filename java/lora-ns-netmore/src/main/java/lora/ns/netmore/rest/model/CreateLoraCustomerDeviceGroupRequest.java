/*
 * netmore-web-backend
 * Front end for web services.
 *
 * The version of the OpenAPI document: 1.2.83
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package lora.ns.netmore.rest.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import lora.ns.netmore.rest.model.StateChangeType;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreateLoraCustomerDeviceGroupRequest
 */
@JsonPropertyOrder({
  CreateLoraCustomerDeviceGroupRequest.JSON_PROPERTY_LORA_CUSTOMER_ID,
  CreateLoraCustomerDeviceGroupRequest.JSON_PROPERTY_NEW_LORA_CUSTOMER_NAME,
  CreateLoraCustomerDeviceGroupRequest.JSON_PROPERTY_TARGET_CUSTOMER_ID,
  CreateLoraCustomerDeviceGroupRequest.JSON_PROPERTY_STATE_CHANGE_ONLY
})
public class CreateLoraCustomerDeviceGroupRequest {
  public static final String JSON_PROPERTY_LORA_CUSTOMER_ID = "loraCustomerId";
  private String loraCustomerId;

  public static final String JSON_PROPERTY_NEW_LORA_CUSTOMER_NAME = "newLoraCustomerName";
  private String newLoraCustomerName;

  public static final String JSON_PROPERTY_TARGET_CUSTOMER_ID = "targetCustomerId";
  private String targetCustomerId;

  public static final String JSON_PROPERTY_STATE_CHANGE_ONLY = "stateChangeOnly";
  private StateChangeType stateChangeOnly;

  public CreateLoraCustomerDeviceGroupRequest() {
  }

  public CreateLoraCustomerDeviceGroupRequest loraCustomerId(String loraCustomerId) {
    
    this.loraCustomerId = loraCustomerId;
    return this;
  }

   /**
   * This is the excising lora customer code, if not specified the newLoraCustomerName must be set and a new customer will be created.
   * @return loraCustomerId
  **/

  @JsonProperty(JSON_PROPERTY_LORA_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLoraCustomerId() {
    return loraCustomerId;
  }


  @JsonProperty(JSON_PROPERTY_LORA_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoraCustomerId(String loraCustomerId) {
    this.loraCustomerId = loraCustomerId;
  }


  public CreateLoraCustomerDeviceGroupRequest newLoraCustomerName(String newLoraCustomerName) {
    
    this.newLoraCustomerName = newLoraCustomerName;
    return this;
  }

   /**
   * If a new customer shall be create this name is used and the loraCustomerId should not be set.
   * @return newLoraCustomerName
  **/

  @JsonProperty(JSON_PROPERTY_NEW_LORA_CUSTOMER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNewLoraCustomerName() {
    return newLoraCustomerName;
  }


  @JsonProperty(JSON_PROPERTY_NEW_LORA_CUSTOMER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNewLoraCustomerName(String newLoraCustomerName) {
    this.newLoraCustomerName = newLoraCustomerName;
  }


  public CreateLoraCustomerDeviceGroupRequest targetCustomerId(String targetCustomerId) {
    
    this.targetCustomerId = targetCustomerId;
    return this;
  }

   /**
   * This will be the owner of the new device group, 1. if set this will be the new owner. 2. if blank and newLoraCustomerName is blank the caller will own the new device group. 3. if blank and newLoraCustomerName is set a new sub customer will be created and the caller will own the new device group.
   * @return targetCustomerId
  **/

  @JsonProperty(JSON_PROPERTY_TARGET_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTargetCustomerId() {
    return targetCustomerId;
  }


  @JsonProperty(JSON_PROPERTY_TARGET_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTargetCustomerId(String targetCustomerId) {
    this.targetCustomerId = targetCustomerId;
  }


  public CreateLoraCustomerDeviceGroupRequest stateChangeOnly(StateChangeType stateChangeOnly) {
    
    this.stateChangeOnly = stateChangeOnly;
    return this;
  }

   /**
   * Get stateChangeOnly
   * @return stateChangeOnly
  **/

  @JsonProperty(JSON_PROPERTY_STATE_CHANGE_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StateChangeType getStateChangeOnly() {
    return stateChangeOnly;
  }


  @JsonProperty(JSON_PROPERTY_STATE_CHANGE_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStateChangeOnly(StateChangeType stateChangeOnly) {
    this.stateChangeOnly = stateChangeOnly;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateLoraCustomerDeviceGroupRequest createLoraCustomerDeviceGroupRequest = (CreateLoraCustomerDeviceGroupRequest) o;
    return Objects.equals(this.loraCustomerId, createLoraCustomerDeviceGroupRequest.loraCustomerId) &&
        Objects.equals(this.newLoraCustomerName, createLoraCustomerDeviceGroupRequest.newLoraCustomerName) &&
        Objects.equals(this.targetCustomerId, createLoraCustomerDeviceGroupRequest.targetCustomerId) &&
        Objects.equals(this.stateChangeOnly, createLoraCustomerDeviceGroupRequest.stateChangeOnly);
  }

  @Override
  public int hashCode() {
    return Objects.hash(loraCustomerId, newLoraCustomerName, targetCustomerId, stateChangeOnly);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateLoraCustomerDeviceGroupRequest {\n");
    sb.append("    loraCustomerId: ").append(toIndentedString(loraCustomerId)).append("\n");
    sb.append("    newLoraCustomerName: ").append(toIndentedString(newLoraCustomerName)).append("\n");
    sb.append("    targetCustomerId: ").append(toIndentedString(targetCustomerId)).append("\n");
    sb.append("    stateChangeOnly: ").append(toIndentedString(stateChangeOnly)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

