/*
 * netmore-web-backend
 * Front end for web services.
 *
 * The version of the OpenAPI document: 1.2.83
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package lora.ns.netmore.rest.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import lora.ns.netmore.rest.model.StateChangeType;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ExportFormatData
 */
@JsonPropertyOrder({
  ExportFormatData.JSON_PROPERTY_CODE,
  ExportFormatData.JSON_PROPERTY_NAME,
  ExportFormatData.JSON_PROPERTY_F_CNT_UP,
  ExportFormatData.JSON_PROPERTY_PAYLOAD_PARSED,
  ExportFormatData.JSON_PROPERTY_SENSOR_TYPE,
  ExportFormatData.JSON_PROPERTY_TAGS,
  ExportFormatData.JSON_PROPERTY_COORDINATES,
  ExportFormatData.JSON_PROPERTY_GATEWAYS,
  ExportFormatData.JSON_PROPERTY_COMM_PARAMS,
  ExportFormatData.JSON_PROPERTY_LIST_WRAP,
  ExportFormatData.JSON_PROPERTY_BATTERY_LEVEL,
  ExportFormatData.JSON_PROPERTY_FREQUENCY,
  ExportFormatData.JSON_PROPERTY_TIME_ON_AIR,
  ExportFormatData.JSON_PROPERTY_ACK,
  ExportFormatData.JSON_PROPERTY_MESSAGE_TYPE,
  ExportFormatData.JSON_PROPERTY_DEV_ADDR,
  ExportFormatData.JSON_PROPERTY_CONNECT_IDS,
  ExportFormatData.JSON_PROPERTY_SENDML_WRAP,
  ExportFormatData.JSON_PROPERTY_DECODING_FORWARDING_MODE,
  ExportFormatData.JSON_PROPERTY_DECODING_STORAGE_MODE
})
public class ExportFormatData {
  public static final String JSON_PROPERTY_CODE = "code";
  private String code;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_F_CNT_UP = "fCntUp";
  private Boolean fCntUp;

  public static final String JSON_PROPERTY_PAYLOAD_PARSED = "payloadParsed";
  private Double payloadParsed;

  public static final String JSON_PROPERTY_SENSOR_TYPE = "sensorType";
  private Boolean sensorType;

  public static final String JSON_PROPERTY_TAGS = "tags";
  private Boolean tags;

  public static final String JSON_PROPERTY_COORDINATES = "coordinates";
  private Boolean coordinates;

  public static final String JSON_PROPERTY_GATEWAYS = "gateways";
  private Boolean gateways;

  public static final String JSON_PROPERTY_COMM_PARAMS = "commParams";
  private Boolean commParams;

  public static final String JSON_PROPERTY_LIST_WRAP = "listWrap";
  private Boolean listWrap;

  public static final String JSON_PROPERTY_BATTERY_LEVEL = "batteryLevel";
  private Boolean batteryLevel;

  public static final String JSON_PROPERTY_FREQUENCY = "frequency";
  private Boolean frequency;

  public static final String JSON_PROPERTY_TIME_ON_AIR = "timeOnAir";
  private Boolean timeOnAir;

  public static final String JSON_PROPERTY_ACK = "ack";
  private Boolean ack;

  public static final String JSON_PROPERTY_MESSAGE_TYPE = "messageType";
  private Boolean messageType;

  public static final String JSON_PROPERTY_DEV_ADDR = "devAddr";
  private Boolean devAddr;

  public static final String JSON_PROPERTY_CONNECT_IDS = "connectIds";
  private Boolean connectIds;

  public static final String JSON_PROPERTY_SENDML_WRAP = "sendmlWrap";
  private Boolean sendmlWrap;

  public static final String JSON_PROPERTY_DECODING_FORWARDING_MODE = "decodingForwardingMode";
  private StateChangeType decodingForwardingMode;

  public static final String JSON_PROPERTY_DECODING_STORAGE_MODE = "decodingStorageMode";
  private StateChangeType decodingStorageMode;

  public ExportFormatData() {
  }

  public ExportFormatData code(String code) {
    
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/

  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCode() {
    return code;
  }


  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCode(String code) {
    this.code = code;
  }


  public ExportFormatData name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public ExportFormatData fCntUp(Boolean fCntUp) {
    
    this.fCntUp = fCntUp;
    return this;
  }

   /**
   * Get fCntUp
   * @return fCntUp
  **/

  @JsonProperty(JSON_PROPERTY_F_CNT_UP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getfCntUp() {
    return fCntUp;
  }


  @JsonProperty(JSON_PROPERTY_F_CNT_UP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setfCntUp(Boolean fCntUp) {
    this.fCntUp = fCntUp;
  }


  public ExportFormatData payloadParsed(Double payloadParsed) {
    
    this.payloadParsed = payloadParsed;
    return this;
  }

   /**
   * Get payloadParsed
   * @return payloadParsed
  **/

  @JsonProperty(JSON_PROPERTY_PAYLOAD_PARSED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getPayloadParsed() {
    return payloadParsed;
  }


  @JsonProperty(JSON_PROPERTY_PAYLOAD_PARSED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPayloadParsed(Double payloadParsed) {
    this.payloadParsed = payloadParsed;
  }


  public ExportFormatData sensorType(Boolean sensorType) {
    
    this.sensorType = sensorType;
    return this;
  }

   /**
   * Get sensorType
   * @return sensorType
  **/

  @JsonProperty(JSON_PROPERTY_SENSOR_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getSensorType() {
    return sensorType;
  }


  @JsonProperty(JSON_PROPERTY_SENSOR_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSensorType(Boolean sensorType) {
    this.sensorType = sensorType;
  }


  public ExportFormatData tags(Boolean tags) {
    
    this.tags = tags;
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/

  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getTags() {
    return tags;
  }


  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTags(Boolean tags) {
    this.tags = tags;
  }


  public ExportFormatData coordinates(Boolean coordinates) {
    
    this.coordinates = coordinates;
    return this;
  }

   /**
   * Get coordinates
   * @return coordinates
  **/

  @JsonProperty(JSON_PROPERTY_COORDINATES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getCoordinates() {
    return coordinates;
  }


  @JsonProperty(JSON_PROPERTY_COORDINATES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCoordinates(Boolean coordinates) {
    this.coordinates = coordinates;
  }


  public ExportFormatData gateways(Boolean gateways) {
    
    this.gateways = gateways;
    return this;
  }

   /**
   * Get gateways
   * @return gateways
  **/

  @JsonProperty(JSON_PROPERTY_GATEWAYS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getGateways() {
    return gateways;
  }


  @JsonProperty(JSON_PROPERTY_GATEWAYS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setGateways(Boolean gateways) {
    this.gateways = gateways;
  }


  public ExportFormatData commParams(Boolean commParams) {
    
    this.commParams = commParams;
    return this;
  }

   /**
   * Get commParams
   * @return commParams
  **/

  @JsonProperty(JSON_PROPERTY_COMM_PARAMS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getCommParams() {
    return commParams;
  }


  @JsonProperty(JSON_PROPERTY_COMM_PARAMS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCommParams(Boolean commParams) {
    this.commParams = commParams;
  }


  public ExportFormatData listWrap(Boolean listWrap) {
    
    this.listWrap = listWrap;
    return this;
  }

   /**
   * Get listWrap
   * @return listWrap
  **/

  @JsonProperty(JSON_PROPERTY_LIST_WRAP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getListWrap() {
    return listWrap;
  }


  @JsonProperty(JSON_PROPERTY_LIST_WRAP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setListWrap(Boolean listWrap) {
    this.listWrap = listWrap;
  }


  public ExportFormatData batteryLevel(Boolean batteryLevel) {
    
    this.batteryLevel = batteryLevel;
    return this;
  }

   /**
   * Get batteryLevel
   * @return batteryLevel
  **/

  @JsonProperty(JSON_PROPERTY_BATTERY_LEVEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getBatteryLevel() {
    return batteryLevel;
  }


  @JsonProperty(JSON_PROPERTY_BATTERY_LEVEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBatteryLevel(Boolean batteryLevel) {
    this.batteryLevel = batteryLevel;
  }


  public ExportFormatData frequency(Boolean frequency) {
    
    this.frequency = frequency;
    return this;
  }

   /**
   * Get frequency
   * @return frequency
  **/

  @JsonProperty(JSON_PROPERTY_FREQUENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getFrequency() {
    return frequency;
  }


  @JsonProperty(JSON_PROPERTY_FREQUENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFrequency(Boolean frequency) {
    this.frequency = frequency;
  }


  public ExportFormatData timeOnAir(Boolean timeOnAir) {
    
    this.timeOnAir = timeOnAir;
    return this;
  }

   /**
   * Get timeOnAir
   * @return timeOnAir
  **/

  @JsonProperty(JSON_PROPERTY_TIME_ON_AIR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getTimeOnAir() {
    return timeOnAir;
  }


  @JsonProperty(JSON_PROPERTY_TIME_ON_AIR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTimeOnAir(Boolean timeOnAir) {
    this.timeOnAir = timeOnAir;
  }


  public ExportFormatData ack(Boolean ack) {
    
    this.ack = ack;
    return this;
  }

   /**
   * Get ack
   * @return ack
  **/

  @JsonProperty(JSON_PROPERTY_ACK)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getAck() {
    return ack;
  }


  @JsonProperty(JSON_PROPERTY_ACK)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAck(Boolean ack) {
    this.ack = ack;
  }


  public ExportFormatData messageType(Boolean messageType) {
    
    this.messageType = messageType;
    return this;
  }

   /**
   * Get messageType
   * @return messageType
  **/

  @JsonProperty(JSON_PROPERTY_MESSAGE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getMessageType() {
    return messageType;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMessageType(Boolean messageType) {
    this.messageType = messageType;
  }


  public ExportFormatData devAddr(Boolean devAddr) {
    
    this.devAddr = devAddr;
    return this;
  }

   /**
   * Get devAddr
   * @return devAddr
  **/

  @JsonProperty(JSON_PROPERTY_DEV_ADDR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getDevAddr() {
    return devAddr;
  }


  @JsonProperty(JSON_PROPERTY_DEV_ADDR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDevAddr(Boolean devAddr) {
    this.devAddr = devAddr;
  }


  public ExportFormatData connectIds(Boolean connectIds) {
    
    this.connectIds = connectIds;
    return this;
  }

   /**
   * Get connectIds
   * @return connectIds
  **/

  @JsonProperty(JSON_PROPERTY_CONNECT_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getConnectIds() {
    return connectIds;
  }


  @JsonProperty(JSON_PROPERTY_CONNECT_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConnectIds(Boolean connectIds) {
    this.connectIds = connectIds;
  }


  public ExportFormatData sendmlWrap(Boolean sendmlWrap) {
    
    this.sendmlWrap = sendmlWrap;
    return this;
  }

   /**
   * Get sendmlWrap
   * @return sendmlWrap
  **/

  @JsonProperty(JSON_PROPERTY_SENDML_WRAP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSendmlWrap() {
    return sendmlWrap;
  }


  @JsonProperty(JSON_PROPERTY_SENDML_WRAP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSendmlWrap(Boolean sendmlWrap) {
    this.sendmlWrap = sendmlWrap;
  }


  public ExportFormatData decodingForwardingMode(StateChangeType decodingForwardingMode) {
    
    this.decodingForwardingMode = decodingForwardingMode;
    return this;
  }

   /**
   * Get decodingForwardingMode
   * @return decodingForwardingMode
  **/

  @JsonProperty(JSON_PROPERTY_DECODING_FORWARDING_MODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public StateChangeType getDecodingForwardingMode() {
    return decodingForwardingMode;
  }


  @JsonProperty(JSON_PROPERTY_DECODING_FORWARDING_MODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDecodingForwardingMode(StateChangeType decodingForwardingMode) {
    this.decodingForwardingMode = decodingForwardingMode;
  }


  public ExportFormatData decodingStorageMode(StateChangeType decodingStorageMode) {
    
    this.decodingStorageMode = decodingStorageMode;
    return this;
  }

   /**
   * Get decodingStorageMode
   * @return decodingStorageMode
  **/

  @JsonProperty(JSON_PROPERTY_DECODING_STORAGE_MODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public StateChangeType getDecodingStorageMode() {
    return decodingStorageMode;
  }


  @JsonProperty(JSON_PROPERTY_DECODING_STORAGE_MODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDecodingStorageMode(StateChangeType decodingStorageMode) {
    this.decodingStorageMode = decodingStorageMode;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExportFormatData exportFormatData = (ExportFormatData) o;
    return Objects.equals(this.code, exportFormatData.code) &&
        Objects.equals(this.name, exportFormatData.name) &&
        Objects.equals(this.fCntUp, exportFormatData.fCntUp) &&
        Objects.equals(this.payloadParsed, exportFormatData.payloadParsed) &&
        Objects.equals(this.sensorType, exportFormatData.sensorType) &&
        Objects.equals(this.tags, exportFormatData.tags) &&
        Objects.equals(this.coordinates, exportFormatData.coordinates) &&
        Objects.equals(this.gateways, exportFormatData.gateways) &&
        Objects.equals(this.commParams, exportFormatData.commParams) &&
        Objects.equals(this.listWrap, exportFormatData.listWrap) &&
        Objects.equals(this.batteryLevel, exportFormatData.batteryLevel) &&
        Objects.equals(this.frequency, exportFormatData.frequency) &&
        Objects.equals(this.timeOnAir, exportFormatData.timeOnAir) &&
        Objects.equals(this.ack, exportFormatData.ack) &&
        Objects.equals(this.messageType, exportFormatData.messageType) &&
        Objects.equals(this.devAddr, exportFormatData.devAddr) &&
        Objects.equals(this.connectIds, exportFormatData.connectIds) &&
        Objects.equals(this.sendmlWrap, exportFormatData.sendmlWrap) &&
        Objects.equals(this.decodingForwardingMode, exportFormatData.decodingForwardingMode) &&
        Objects.equals(this.decodingStorageMode, exportFormatData.decodingStorageMode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, name, fCntUp, payloadParsed, sensorType, tags, coordinates, gateways, commParams, listWrap, batteryLevel, frequency, timeOnAir, ack, messageType, devAddr, connectIds, sendmlWrap, decodingForwardingMode, decodingStorageMode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExportFormatData {\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    fCntUp: ").append(toIndentedString(fCntUp)).append("\n");
    sb.append("    payloadParsed: ").append(toIndentedString(payloadParsed)).append("\n");
    sb.append("    sensorType: ").append(toIndentedString(sensorType)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    coordinates: ").append(toIndentedString(coordinates)).append("\n");
    sb.append("    gateways: ").append(toIndentedString(gateways)).append("\n");
    sb.append("    commParams: ").append(toIndentedString(commParams)).append("\n");
    sb.append("    listWrap: ").append(toIndentedString(listWrap)).append("\n");
    sb.append("    batteryLevel: ").append(toIndentedString(batteryLevel)).append("\n");
    sb.append("    frequency: ").append(toIndentedString(frequency)).append("\n");
    sb.append("    timeOnAir: ").append(toIndentedString(timeOnAir)).append("\n");
    sb.append("    ack: ").append(toIndentedString(ack)).append("\n");
    sb.append("    messageType: ").append(toIndentedString(messageType)).append("\n");
    sb.append("    devAddr: ").append(toIndentedString(devAddr)).append("\n");
    sb.append("    connectIds: ").append(toIndentedString(connectIds)).append("\n");
    sb.append("    sendmlWrap: ").append(toIndentedString(sendmlWrap)).append("\n");
    sb.append("    decodingForwardingMode: ").append(toIndentedString(decodingForwardingMode)).append("\n");
    sb.append("    decodingStorageMode: ").append(toIndentedString(decodingStorageMode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

