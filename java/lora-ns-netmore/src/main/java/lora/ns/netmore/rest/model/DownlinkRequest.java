/*
 * netmore-web-backend
 * Front end for web services.
 *
 * The version of the OpenAPI document: 1.2.83
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package lora.ns.netmore.rest.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * DownlinkRequest
 */
@JsonPropertyOrder({
  DownlinkRequest.JSON_PROPERTY_DEVICE_IDS,
  DownlinkRequest.JSON_PROPERTY_F_PORT,
  DownlinkRequest.JSON_PROPERTY_PAYLOAD,
  DownlinkRequest.JSON_PROPERTY_REQUEST_ID,
  DownlinkRequest.JSON_PROPERTY_VALIDITY,
  DownlinkRequest.JSON_PROPERTY_F_CNT,
  DownlinkRequest.JSON_PROPERTY_CONFIRMED
})
public class DownlinkRequest {
  public static final String JSON_PROPERTY_DEVICE_IDS = "deviceIds";
  private List<String> deviceIds = new ArrayList<>();

  public static final String JSON_PROPERTY_F_PORT = "fPort";
  private String fPort;

  public static final String JSON_PROPERTY_PAYLOAD = "payload";
  private String payload;

  public static final String JSON_PROPERTY_REQUEST_ID = "requestId";
  private String requestId;

  public static final String JSON_PROPERTY_VALIDITY = "validity";
  private Double validity;

  public static final String JSON_PROPERTY_F_CNT = "fCnt";
  private Double fCnt;

  public static final String JSON_PROPERTY_CONFIRMED = "confirmed";
  private Boolean confirmed;

  public DownlinkRequest() {
  }

  public DownlinkRequest deviceIds(List<String> deviceIds) {
    
    this.deviceIds = deviceIds;
    return this;
  }

  public DownlinkRequest addDeviceIdsItem(String deviceIdsItem) {
    if (this.deviceIds == null) {
      this.deviceIds = new ArrayList<>();
    }
    this.deviceIds.add(deviceIdsItem);
    return this;
  }

   /**
   * Get deviceIds
   * @return deviceIds
  **/

  @JsonProperty(JSON_PROPERTY_DEVICE_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getDeviceIds() {
    return deviceIds;
  }


  @JsonProperty(JSON_PROPERTY_DEVICE_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDeviceIds(List<String> deviceIds) {
    this.deviceIds = deviceIds;
  }


  public DownlinkRequest fPort(String fPort) {
    
    this.fPort = fPort;
    return this;
  }

   /**
   * Port number to send to.
   * @return fPort
  **/

  @JsonProperty(JSON_PROPERTY_F_PORT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getfPort() {
    return fPort;
  }


  @JsonProperty(JSON_PROPERTY_F_PORT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setfPort(String fPort) {
    this.fPort = fPort;
  }


  public DownlinkRequest payload(String payload) {
    
    this.payload = payload;
    return this;
  }

   /**
   * Payload to send to the device.
   * @return payload
  **/

  @JsonProperty(JSON_PROPERTY_PAYLOAD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPayload() {
    return payload;
  }


  @JsonProperty(JSON_PROPERTY_PAYLOAD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPayload(String payload) {
    this.payload = payload;
  }


  public DownlinkRequest requestId(String requestId) {
    
    this.requestId = requestId;
    return this;
  }

   /**
   * Optional request id
   * @return requestId
  **/

  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRequestId() {
    return requestId;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }


  public DownlinkRequest validity(Double validity) {
    
    this.validity = validity;
    return this;
  }

   /**
   * Optional validity in seconds (Default: 86400s)
   * @return validity
  **/

  @JsonProperty(JSON_PROPERTY_VALIDITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getValidity() {
    return validity;
  }


  @JsonProperty(JSON_PROPERTY_VALIDITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValidity(Double validity) {
    this.validity = validity;
  }


  public DownlinkRequest fCnt(Double fCnt) {
    
    this.fCnt = fCnt;
    return this;
  }

   /**
   * This should only be set for encrypted downlinks.
   * @return fCnt
  **/

  @JsonProperty(JSON_PROPERTY_F_CNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getfCnt() {
    return fCnt;
  }


  @JsonProperty(JSON_PROPERTY_F_CNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setfCnt(Double fCnt) {
    this.fCnt = fCnt;
  }


  public DownlinkRequest confirmed(Boolean confirmed) {
    
    this.confirmed = confirmed;
    return this;
  }

   /**
   * Get confirmed
   * @return confirmed
  **/

  @JsonProperty(JSON_PROPERTY_CONFIRMED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getConfirmed() {
    return confirmed;
  }


  @JsonProperty(JSON_PROPERTY_CONFIRMED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConfirmed(Boolean confirmed) {
    this.confirmed = confirmed;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DownlinkRequest downlinkRequest = (DownlinkRequest) o;
    return Objects.equals(this.deviceIds, downlinkRequest.deviceIds) &&
        Objects.equals(this.fPort, downlinkRequest.fPort) &&
        Objects.equals(this.payload, downlinkRequest.payload) &&
        Objects.equals(this.requestId, downlinkRequest.requestId) &&
        Objects.equals(this.validity, downlinkRequest.validity) &&
        Objects.equals(this.fCnt, downlinkRequest.fCnt) &&
        Objects.equals(this.confirmed, downlinkRequest.confirmed);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deviceIds, fPort, payload, requestId, validity, fCnt, confirmed);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DownlinkRequest {\n");
    sb.append("    deviceIds: ").append(toIndentedString(deviceIds)).append("\n");
    sb.append("    fPort: ").append(toIndentedString(fPort)).append("\n");
    sb.append("    payload: ").append(toIndentedString(payload)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    validity: ").append(toIndentedString(validity)).append("\n");
    sb.append("    fCnt: ").append(toIndentedString(fCnt)).append("\n");
    sb.append("    confirmed: ").append(toIndentedString(confirmed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

