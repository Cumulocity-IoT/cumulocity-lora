/*
 * netmore-web-backend
 * Front end for web services.
 *
 * The version of the OpenAPI document: 1.2.83
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package lora.ns.netmore.rest.model;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * SendML
 */
@JsonPropertyOrder({
  SendML.JSON_PROPERTY_T,
  SendML.JSON_PROPERTY_N,
  SendML.JSON_PROPERTY_U,
  SendML.JSON_PROPERTY_V,
  SendML.JSON_PROPERTY_I,
  SendML.JSON_PROPERTY_RW,
  SendML.JSON_PROPERTY_TRANSACTION_ID,
  SendML.JSON_PROPERTY_TAGS
})
public class SendML {
  public static final String JSON_PROPERTY_T = "t";
  private SendMLT t;

  public static final String JSON_PROPERTY_N = "n";
  private String n;

  public static final String JSON_PROPERTY_U = "u";
  private String u;

  public static final String JSON_PROPERTY_V = "v";
  private Object v = null;

  public static final String JSON_PROPERTY_I = "i";
  private Object i = null;

  public static final String JSON_PROPERTY_RW = "rw";
  private Boolean rw;

  public static final String JSON_PROPERTY_TRANSACTION_ID = "transactionId";
  private String transactionId;

  public static final String JSON_PROPERTY_TAGS = "tags";
  private Map<String, List<String>> tags = new HashMap<>();

  public SendML() {
  }

  public SendML t(SendMLT t) {
    
    this.t = t;
    return this;
  }

   /**
   * Get t
   * @return t
  **/

  @JsonProperty(JSON_PROPERTY_T)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SendMLT getT() {
    return t;
  }


  @JsonProperty(JSON_PROPERTY_T)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setT(SendMLT t) {
    this.t = t;
  }


  public SendML n(String n) {
    
    this.n = n;
    return this;
  }

   /**
   * name
   * @return n
  **/

  @JsonProperty(JSON_PROPERTY_N)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getN() {
    return n;
  }


  @JsonProperty(JSON_PROPERTY_N)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setN(String n) {
    this.n = n;
  }


  public SendML u(String u) {
    
    this.u = u;
    return this;
  }

   /**
   * unit
   * @return u
  **/

  @JsonProperty(JSON_PROPERTY_U)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getU() {
    return u;
  }


  @JsonProperty(JSON_PROPERTY_U)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setU(String u) {
    this.u = u;
  }


  public SendML v(Object v) {
    
    this.v = v;
    return this;
  }

   /**
   * value
   * @return v
  **/

  @JsonProperty(JSON_PROPERTY_V)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getV() {
    return v;
  }


  @JsonProperty(JSON_PROPERTY_V)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setV(Object v) {
    this.v = v;
  }


  public SendML i(Object i) {
    this.i = i;
    
    return this;
  }

   /**
   * original identifier, might be modbuss function.register id.
   * @return i
  **/

  @JsonProperty(JSON_PROPERTY_I)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getI() {
    return i;
  }
  
  @JsonProperty(JSON_PROPERTY_I)
  public void setI(Object i) {
    this.i = i;
  }


  public SendML rw(Boolean rw) {
    
    this.rw = rw;
    return this;
  }

   /**
   * read write - true if writeable.
   * @return rw
  **/

  @JsonProperty(JSON_PROPERTY_RW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getRw() {
    return rw;
  }


  @JsonProperty(JSON_PROPERTY_RW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRw(Boolean rw) {
    this.rw = rw;
  }


  public SendML transactionId(String transactionId) {
    
    this.transactionId = transactionId;
    return this;
  }

   /**
   * Transaction id might be set if the data is triggered by user action.
   * @return transactionId
  **/

  @JsonProperty(JSON_PROPERTY_TRANSACTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTransactionId() {
    return transactionId;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransactionId(String transactionId) {
    this.transactionId = transactionId;
  }


  public SendML tags(Map<String, List<String>> tags) {
    
    this.tags = tags;
    return this;
  }

  public SendML putTagsItem(String key, List<String> tagsItem) {
    if (this.tags == null) {
      this.tags = new HashMap<>();
    }
    this.tags.put(key, tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/

  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, List<String>> getTags() {
    return tags;
  }


  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTags(Map<String, List<String>> tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SendML sendML = (SendML) o;
    return Objects.equals(this.t, sendML.t) &&
        Objects.equals(this.n, sendML.n) &&
        Objects.equals(this.u, sendML.u) &&
        Objects.equals(this.v, sendML.v) &&
        Objects.equals(this.i, sendML.i) &&
        Objects.equals(this.rw, sendML.rw) &&
        Objects.equals(this.transactionId, sendML.transactionId) &&
        Objects.equals(this.tags, sendML.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(t, n, u, v, i, rw, transactionId, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SendML {\n");
    sb.append("    t: ").append(toIndentedString(t)).append("\n");
    sb.append("    n: ").append(toIndentedString(n)).append("\n");
    sb.append("    u: ").append(toIndentedString(u)).append("\n");
    sb.append("    v: ").append(toIndentedString(v)).append("\n");
    sb.append("    i: ").append(toIndentedString(i)).append("\n");
    sb.append("    rw: ").append(toIndentedString(rw)).append("\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

