/*
 * netmore-web-backend
 * Front end for web services.
 *
 * The version of the OpenAPI document: 1.2.83
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package lora.ns.netmore.rest.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ChangePasswordRequest
 */
@JsonPropertyOrder({
  ChangePasswordRequest.JSON_PROPERTY_OLD_PASSWORD,
  ChangePasswordRequest.JSON_PROPERTY_NEW_PASSWORD,
  ChangePasswordRequest.JSON_PROPERTY_LOGOUT_ALL
})
public class ChangePasswordRequest {
  public static final String JSON_PROPERTY_OLD_PASSWORD = "oldPassword";
  private String oldPassword;

  public static final String JSON_PROPERTY_NEW_PASSWORD = "newPassword";
  private String newPassword;

  public static final String JSON_PROPERTY_LOGOUT_ALL = "logoutAll";
  private Boolean logoutAll;

  public ChangePasswordRequest() {
  }

  public ChangePasswordRequest oldPassword(String oldPassword) {
    
    this.oldPassword = oldPassword;
    return this;
  }

   /**
   * Get oldPassword
   * @return oldPassword
  **/

  @JsonProperty(JSON_PROPERTY_OLD_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getOldPassword() {
    return oldPassword;
  }


  @JsonProperty(JSON_PROPERTY_OLD_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOldPassword(String oldPassword) {
    this.oldPassword = oldPassword;
  }


  public ChangePasswordRequest newPassword(String newPassword) {
    
    this.newPassword = newPassword;
    return this;
  }

   /**
   * Get newPassword
   * @return newPassword
  **/

  @JsonProperty(JSON_PROPERTY_NEW_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getNewPassword() {
    return newPassword;
  }


  @JsonProperty(JSON_PROPERTY_NEW_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNewPassword(String newPassword) {
    this.newPassword = newPassword;
  }


  public ChangePasswordRequest logoutAll(Boolean logoutAll) {
    
    this.logoutAll = logoutAll;
    return this;
  }

   /**
   * logoutAll users from the system default is true.
   * @return logoutAll
  **/

  @JsonProperty(JSON_PROPERTY_LOGOUT_ALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getLogoutAll() {
    return logoutAll;
  }


  @JsonProperty(JSON_PROPERTY_LOGOUT_ALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLogoutAll(Boolean logoutAll) {
    this.logoutAll = logoutAll;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChangePasswordRequest changePasswordRequest = (ChangePasswordRequest) o;
    return Objects.equals(this.oldPassword, changePasswordRequest.oldPassword) &&
        Objects.equals(this.newPassword, changePasswordRequest.newPassword) &&
        Objects.equals(this.logoutAll, changePasswordRequest.logoutAll);
  }

  @Override
  public int hashCode() {
    return Objects.hash(oldPassword, newPassword, logoutAll);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChangePasswordRequest {\n");
    sb.append("    oldPassword: ").append(toIndentedString(oldPassword)).append("\n");
    sb.append("    newPassword: ").append(toIndentedString(newPassword)).append("\n");
    sb.append("    logoutAll: ").append(toIndentedString(logoutAll)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

