/*
 * netmore-web-backend
 * Front end for web services.
 *
 * The version of the OpenAPI document: 1.2.83
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package lora.ns.netmore.rest.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ExportReport
 */
@JsonPropertyOrder({
  ExportReport.JSON_PROPERTY_NAME,
  ExportReport.JSON_PROPERTY_ID,
  ExportReport.JSON_PROPERTY_COUNT,
  ExportReport.JSON_PROPERTY_DEVICE_COUNT
})
public class ExportReport {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_COUNT = "count";
  private Double count;

  public static final String JSON_PROPERTY_DEVICE_COUNT = "deviceCount";
  private Double deviceCount;

  public ExportReport() {
  }

  public ExportReport name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public ExportReport id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public ExportReport count(Double count) {
    
    this.count = count;
    return this;
  }

   /**
   * Get count
   * @return count
  **/

  @JsonProperty(JSON_PROPERTY_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getCount() {
    return count;
  }


  @JsonProperty(JSON_PROPERTY_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCount(Double count) {
    this.count = count;
  }


  public ExportReport deviceCount(Double deviceCount) {
    
    this.deviceCount = deviceCount;
    return this;
  }

   /**
   * Get deviceCount
   * @return deviceCount
  **/

  @JsonProperty(JSON_PROPERTY_DEVICE_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getDeviceCount() {
    return deviceCount;
  }


  @JsonProperty(JSON_PROPERTY_DEVICE_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDeviceCount(Double deviceCount) {
    this.deviceCount = deviceCount;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExportReport exportReport = (ExportReport) o;
    return Objects.equals(this.name, exportReport.name) &&
        Objects.equals(this.id, exportReport.id) &&
        Objects.equals(this.count, exportReport.count) &&
        Objects.equals(this.deviceCount, exportReport.deviceCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, id, count, deviceCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExportReport {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    deviceCount: ").append(toIndentedString(deviceCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

