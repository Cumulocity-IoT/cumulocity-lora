/*
 * netmore-web-backend
 * Front end for web services.
 *
 * The version of the OpenAPI document: 1.2.83
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package lora.ns.netmore.rest.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import lora.ns.netmore.rest.model.DeviceType;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreateSensorTypeRequest
 */
@JsonPropertyOrder({
  CreateSensorTypeRequest.JSON_PROPERTY_ID,
  CreateSensorTypeRequest.JSON_PROPERTY_NAME,
  CreateSensorTypeRequest.JSON_PROPERTY_MANUFACTURER_ID,
  CreateSensorTypeRequest.JSON_PROPERTY_DEFAULT_DEVICE_TYPE
})
public class CreateSensorTypeRequest {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_MANUFACTURER_ID = "manufacturerId";
  private String manufacturerId;

  public static final String JSON_PROPERTY_DEFAULT_DEVICE_TYPE = "defaultDeviceType";
  private DeviceType defaultDeviceType;

  public CreateSensorTypeRequest() {
  }

  public CreateSensorTypeRequest id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public CreateSensorTypeRequest name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public CreateSensorTypeRequest manufacturerId(String manufacturerId) {
    
    this.manufacturerId = manufacturerId;
    return this;
  }

   /**
   * Get manufacturerId
   * @return manufacturerId
  **/

  @JsonProperty(JSON_PROPERTY_MANUFACTURER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getManufacturerId() {
    return manufacturerId;
  }


  @JsonProperty(JSON_PROPERTY_MANUFACTURER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setManufacturerId(String manufacturerId) {
    this.manufacturerId = manufacturerId;
  }


  public CreateSensorTypeRequest defaultDeviceType(DeviceType defaultDeviceType) {
    
    this.defaultDeviceType = defaultDeviceType;
    return this;
  }

   /**
   * Get defaultDeviceType
   * @return defaultDeviceType
  **/

  @JsonProperty(JSON_PROPERTY_DEFAULT_DEVICE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DeviceType getDefaultDeviceType() {
    return defaultDeviceType;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT_DEVICE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefaultDeviceType(DeviceType defaultDeviceType) {
    this.defaultDeviceType = defaultDeviceType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateSensorTypeRequest createSensorTypeRequest = (CreateSensorTypeRequest) o;
    return Objects.equals(this.id, createSensorTypeRequest.id) &&
        Objects.equals(this.name, createSensorTypeRequest.name) &&
        Objects.equals(this.manufacturerId, createSensorTypeRequest.manufacturerId) &&
        Objects.equals(this.defaultDeviceType, createSensorTypeRequest.defaultDeviceType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, manufacturerId, defaultDeviceType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateSensorTypeRequest {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    manufacturerId: ").append(toIndentedString(manufacturerId)).append("\n");
    sb.append("    defaultDeviceType: ").append(toIndentedString(defaultDeviceType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

