/*
 * netmore-web-backend
 * Front end for web services.
 *
 * The version of the OpenAPI document: 1.2.83
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package lora.ns.netmore.rest.model;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * ExportConfigType
 */
@JsonPropertyOrder({
  ExportConfigType.JSON_PROPERTY_URL,
  ExportConfigType.JSON_PROPERTY_TOPIC,
  ExportConfigType.JSON_PROPERTY_CA,
  ExportConfigType.JSON_PROPERTY_CERT,
  ExportConfigType.JSON_PROPERTY_KEY,
  ExportConfigType.JSON_PROPERTY_CLIENT_ID,
  ExportConfigType.JSON_PROPERTY_PASSWORD,
  ExportConfigType.JSON_PROPERTY_USERNAME,
  ExportConfigType.JSON_PROPERTY_QOS,
  ExportConfigType.JSON_PROPERTY_QUIET_MODE,
  ExportConfigType.JSON_PROPERTY_CLEAN_SESSION,
  ExportConfigType.JSON_PROPERTY_HTTPS_HOSTNAME_VERIFICATION_ENABLED,
  ExportConfigType.JSON_PROPERTY_KEYSPACE,
  ExportConfigType.JSON_PROPERTY_DATACENTER,
  ExportConfigType.JSON_PROPERTY_CERTIFICATE,
  ExportConfigType.JSON_PROPERTY_HEADERS,
  ExportConfigType.JSON_PROPERTY_SHARED_ACCESS_KEY,
  ExportConfigType.JSON_PROPERTY_SHARED_ACCESS_KEY_NAME,
  ExportConfigType.JSON_PROPERTY_CREDENTIALS
})
public class ExportConfigType {
  public static final String JSON_PROPERTY_URL = "url";
  private String url;

  public static final String JSON_PROPERTY_TOPIC = "topic";
  private String topic;

  public static final String JSON_PROPERTY_CA = "ca";
  private String ca;

  public static final String JSON_PROPERTY_CERT = "cert";
  private String cert;

  public static final String JSON_PROPERTY_KEY = "key";
  private String key;

  public static final String JSON_PROPERTY_CLIENT_ID = "clientId";
  private String clientId;

  public static final String JSON_PROPERTY_PASSWORD = "password";
  private String password;

  public static final String JSON_PROPERTY_USERNAME = "username";
  private String username;

  public static final String JSON_PROPERTY_QOS = "qos";
  private Double qos;

  public static final String JSON_PROPERTY_QUIET_MODE = "quietMode";
  private Boolean quietMode;

  public static final String JSON_PROPERTY_CLEAN_SESSION = "cleanSession";
  private Boolean cleanSession;

  public static final String JSON_PROPERTY_HTTPS_HOSTNAME_VERIFICATION_ENABLED = "httpsHostnameVerificationEnabled";
  private Boolean httpsHostnameVerificationEnabled;

  public static final String JSON_PROPERTY_KEYSPACE = "keyspace";
  private String keyspace;

  public static final String JSON_PROPERTY_DATACENTER = "datacenter";
  private String datacenter;

  public static final String JSON_PROPERTY_CERTIFICATE = "certificate";
  private String certificate;

  public static final String JSON_PROPERTY_HEADERS = "headers";
  private List<HttpPushExportConfigHeadersInner> headers = new ArrayList<>();

  public static final String JSON_PROPERTY_SHARED_ACCESS_KEY = "sharedAccessKey";
  private String sharedAccessKey;

  public static final String JSON_PROPERTY_SHARED_ACCESS_KEY_NAME = "sharedAccessKeyName";
  private String sharedAccessKeyName;

  public static final String JSON_PROPERTY_CREDENTIALS = "credentials";
  private String credentials;

  public ExportConfigType() {
  }

  public ExportConfigType url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/

  @JsonProperty(JSON_PROPERTY_URL)
  public String getUrl() {
    return url;
  }


  @JsonProperty(JSON_PROPERTY_URL)
  public void setUrl(String url) {
    this.url = url;
  }


  public ExportConfigType topic(String topic) {
    
    this.topic = topic;
    return this;
  }

   /**
   * Get topic
   * @return topic
  **/

  @JsonProperty(JSON_PROPERTY_TOPIC)
  public String getTopic() {
    return topic;
  }


  @JsonProperty(JSON_PROPERTY_TOPIC)
  public void setTopic(String topic) {
    this.topic = topic;
  }


  public ExportConfigType ca(String ca) {
    
    this.ca = ca;
    return this;
  }

   /**
   * Ca cert of the server, this value should be base64 encoded
   * @return ca
  **/

  @JsonProperty(JSON_PROPERTY_CA)
  public String getCa() {
    return ca;
  }


  @JsonProperty(JSON_PROPERTY_CA)
  public void setCa(String ca) {
    this.ca = ca;
  }


  public ExportConfigType cert(String cert) {
    
    this.cert = cert;
    return this;
  }

   /**
   * Cert of client server, this value should be base64 encoded
   * @return cert
  **/

  @JsonProperty(JSON_PROPERTY_CERT)
  public String getCert() {
    return cert;
  }


  @JsonProperty(JSON_PROPERTY_CERT)
  public void setCert(String cert) {
    this.cert = cert;
  }


  public ExportConfigType key(String key) {
    
    this.key = key;
    return this;
  }

   /**
   * Key of the client server, this value should be base64 encoded
   * @return key
  **/

  @JsonProperty(JSON_PROPERTY_KEY)
  public String getKey() {
    return key;
  }


  @JsonProperty(JSON_PROPERTY_KEY)
  public void setKey(String key) {
    this.key = key;
  }


  public ExportConfigType clientId(String clientId) {
    
    this.clientId = clientId;
    return this;
  }

   /**
   * Get clientId
   * @return clientId
  **/

  @JsonProperty(JSON_PROPERTY_CLIENT_ID)
  public String getClientId() {
    return clientId;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_ID)
  public void setClientId(String clientId) {
    this.clientId = clientId;
  }


  public ExportConfigType password(String password) {
    
    this.password = password;
    return this;
  }

   /**
   * Get password
   * @return password
  **/

  @JsonProperty(JSON_PROPERTY_PASSWORD)
  public String getPassword() {
    return password;
  }


  @JsonProperty(JSON_PROPERTY_PASSWORD)
  public void setPassword(String password) {
    this.password = password;
  }


  public ExportConfigType username(String username) {
    
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/

  @JsonProperty(JSON_PROPERTY_USERNAME)
  public String getUsername() {
    return username;
  }


  @JsonProperty(JSON_PROPERTY_USERNAME)
  public void setUsername(String username) {
    this.username = username;
  }


  public ExportConfigType qos(Double qos) {
    
    this.qos = qos;
    return this;
  }

   /**
   * Get qos
   * @return qos
  **/

  @JsonProperty(JSON_PROPERTY_QOS)
  public Double getQos() {
    return qos;
  }


  @JsonProperty(JSON_PROPERTY_QOS)
  public void setQos(Double qos) {
    this.qos = qos;
  }


  public ExportConfigType quietMode(Boolean quietMode) {
    
    this.quietMode = quietMode;
    return this;
  }

   /**
   * Get quietMode
   * @return quietMode
   * @deprecated
  **/
  @Deprecated

  @JsonProperty(JSON_PROPERTY_QUIET_MODE)
  public Boolean getQuietMode() {
    return quietMode;
  }


  @JsonProperty(JSON_PROPERTY_QUIET_MODE)
  public void setQuietMode(Boolean quietMode) {
    this.quietMode = quietMode;
  }


  public ExportConfigType cleanSession(Boolean cleanSession) {
    
    this.cleanSession = cleanSession;
    return this;
  }

   /**
   * Get cleanSession
   * @return cleanSession
  **/

  @JsonProperty(JSON_PROPERTY_CLEAN_SESSION)
  public Boolean getCleanSession() {
    return cleanSession;
  }


  @JsonProperty(JSON_PROPERTY_CLEAN_SESSION)
  public void setCleanSession(Boolean cleanSession) {
    this.cleanSession = cleanSession;
  }


  public ExportConfigType httpsHostnameVerificationEnabled(Boolean httpsHostnameVerificationEnabled) {
    
    this.httpsHostnameVerificationEnabled = httpsHostnameVerificationEnabled;
    return this;
  }

   /**
   * Get httpsHostnameVerificationEnabled
   * @return httpsHostnameVerificationEnabled
  **/

  @JsonProperty(JSON_PROPERTY_HTTPS_HOSTNAME_VERIFICATION_ENABLED)
  public Boolean getHttpsHostnameVerificationEnabled() {
    return httpsHostnameVerificationEnabled;
  }


  @JsonProperty(JSON_PROPERTY_HTTPS_HOSTNAME_VERIFICATION_ENABLED)
  public void setHttpsHostnameVerificationEnabled(Boolean httpsHostnameVerificationEnabled) {
    this.httpsHostnameVerificationEnabled = httpsHostnameVerificationEnabled;
  }


  public ExportConfigType keyspace(String keyspace) {
    
    this.keyspace = keyspace;
    return this;
  }

   /**
   * Get keyspace
   * @return keyspace
  **/

  @JsonProperty(JSON_PROPERTY_KEYSPACE)
  public String getKeyspace() {
    return keyspace;
  }


  @JsonProperty(JSON_PROPERTY_KEYSPACE)
  public void setKeyspace(String keyspace) {
    this.keyspace = keyspace;
  }


  public ExportConfigType datacenter(String datacenter) {
    
    this.datacenter = datacenter;
    return this;
  }

   /**
   * Get datacenter
   * @return datacenter
  **/

  @JsonProperty(JSON_PROPERTY_DATACENTER)
  public String getDatacenter() {
    return datacenter;
  }


  @JsonProperty(JSON_PROPERTY_DATACENTER)
  public void setDatacenter(String datacenter) {
    this.datacenter = datacenter;
  }


  public ExportConfigType certificate(String certificate) {
    
    this.certificate = certificate;
    return this;
  }

   /**
   * Get certificate
   * @return certificate
  **/

  @JsonProperty(JSON_PROPERTY_CERTIFICATE)
  public String getCertificate() {
    return certificate;
  }


  @JsonProperty(JSON_PROPERTY_CERTIFICATE)
  public void setCertificate(String certificate) {
    this.certificate = certificate;
  }


  public ExportConfigType headers(List<HttpPushExportConfigHeadersInner> headers) {
    
    this.headers = headers;
    return this;
  }

  public ExportConfigType addHeadersItem(HttpPushExportConfigHeadersInner headersItem) {
    if (this.headers == null) {
      this.headers = new ArrayList<>();
    }
    this.headers.add(headersItem);
    return this;
  }

   /**
   * Get headers
   * @return headers
  **/

  @JsonProperty(JSON_PROPERTY_HEADERS)
  public List<HttpPushExportConfigHeadersInner> getHeaders() {
    return headers;
  }


  @JsonProperty(JSON_PROPERTY_HEADERS)
  public void setHeaders(List<HttpPushExportConfigHeadersInner> headers) {
    this.headers = headers;
  }


  public ExportConfigType sharedAccessKey(String sharedAccessKey) {
    
    this.sharedAccessKey = sharedAccessKey;
    return this;
  }

   /**
   * Get sharedAccessKey
   * @return sharedAccessKey
  **/

  @JsonProperty(JSON_PROPERTY_SHARED_ACCESS_KEY)
  public String getSharedAccessKey() {
    return sharedAccessKey;
  }


  @JsonProperty(JSON_PROPERTY_SHARED_ACCESS_KEY)
  public void setSharedAccessKey(String sharedAccessKey) {
    this.sharedAccessKey = sharedAccessKey;
  }


  public ExportConfigType sharedAccessKeyName(String sharedAccessKeyName) {
    
    this.sharedAccessKeyName = sharedAccessKeyName;
    return this;
  }

   /**
   * Get sharedAccessKeyName
   * @return sharedAccessKeyName
  **/

  @JsonProperty(JSON_PROPERTY_SHARED_ACCESS_KEY_NAME)
  public String getSharedAccessKeyName() {
    return sharedAccessKeyName;
  }


  @JsonProperty(JSON_PROPERTY_SHARED_ACCESS_KEY_NAME)
  public void setSharedAccessKeyName(String sharedAccessKeyName) {
    this.sharedAccessKeyName = sharedAccessKeyName;
  }


  public ExportConfigType credentials(String credentials) {
    
    this.credentials = credentials;
    return this;
  }

   /**
   * Get credentials
   * @return credentials
  **/

  @JsonProperty(JSON_PROPERTY_CREDENTIALS)
  public String getCredentials() {
    return credentials;
  }


  @JsonProperty(JSON_PROPERTY_CREDENTIALS)
  public void setCredentials(String credentials) {
    this.credentials = credentials;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExportConfigType exportConfigType = (ExportConfigType) o;
    return Objects.equals(this.url, exportConfigType.url) &&
        Objects.equals(this.topic, exportConfigType.topic) &&
        Objects.equals(this.ca, exportConfigType.ca) &&
        Objects.equals(this.cert, exportConfigType.cert) &&
        Objects.equals(this.key, exportConfigType.key) &&
        Objects.equals(this.clientId, exportConfigType.clientId) &&
        Objects.equals(this.password, exportConfigType.password) &&
        Objects.equals(this.username, exportConfigType.username) &&
        Objects.equals(this.qos, exportConfigType.qos) &&
        Objects.equals(this.quietMode, exportConfigType.quietMode) &&
        Objects.equals(this.cleanSession, exportConfigType.cleanSession) &&
        Objects.equals(this.httpsHostnameVerificationEnabled, exportConfigType.httpsHostnameVerificationEnabled) &&
        Objects.equals(this.keyspace, exportConfigType.keyspace) &&
        Objects.equals(this.datacenter, exportConfigType.datacenter) &&
        Objects.equals(this.certificate, exportConfigType.certificate) &&
        Objects.equals(this.headers, exportConfigType.headers) &&
        Objects.equals(this.sharedAccessKey, exportConfigType.sharedAccessKey) &&
        Objects.equals(this.sharedAccessKeyName, exportConfigType.sharedAccessKeyName) &&
        Objects.equals(this.credentials, exportConfigType.credentials);
  }

  @Override
  public int hashCode() {
    return Objects.hash(url, topic, ca, cert, key, clientId, password, username, qos, quietMode, cleanSession, httpsHostnameVerificationEnabled, keyspace, datacenter, certificate, headers, sharedAccessKey, sharedAccessKeyName, credentials);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExportConfigType {\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    topic: ").append(toIndentedString(topic)).append("\n");
    sb.append("    ca: ").append(toIndentedString(ca)).append("\n");
    sb.append("    cert: ").append(toIndentedString(cert)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    qos: ").append(toIndentedString(qos)).append("\n");
    sb.append("    quietMode: ").append(toIndentedString(quietMode)).append("\n");
    sb.append("    cleanSession: ").append(toIndentedString(cleanSession)).append("\n");
    sb.append("    httpsHostnameVerificationEnabled: ").append(toIndentedString(httpsHostnameVerificationEnabled)).append("\n");
    sb.append("    keyspace: ").append(toIndentedString(keyspace)).append("\n");
    sb.append("    datacenter: ").append(toIndentedString(datacenter)).append("\n");
    sb.append("    certificate: ").append(toIndentedString(certificate)).append("\n");
    sb.append("    headers: ").append(toIndentedString(headers)).append("\n");
    sb.append("    sharedAccessKey: ").append(toIndentedString(sharedAccessKey)).append("\n");
    sb.append("    sharedAccessKeyName: ").append(toIndentedString(sharedAccessKeyName)).append("\n");
    sb.append("    credentials: ").append(toIndentedString(credentials)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

