/*
 * netmore-web-backend
 * Front end for web services.
 *
 * The version of the OpenAPI document: 1.2.83
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package lora.ns.netmore.rest.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import lora.ns.netmore.rest.model.FrequencyPlan;
import lora.ns.netmore.rest.model.PacketForwarder;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreateLoraGateway
 */
@JsonPropertyOrder({
  CreateLoraGateway.JSON_PROPERTY_ACTIVE,
  CreateLoraGateway.JSON_PROPERTY_GW_EUI,
  CreateLoraGateway.JSON_PROPERTY_PROVISIONED,
  CreateLoraGateway.JSON_PROPERTY_NETWORK_SERVER_ID,
  CreateLoraGateway.JSON_PROPERTY_PACKET_FORWARDER,
  CreateLoraGateway.JSON_PROPERTY_FREQUENCY_PLAN
})
public class CreateLoraGateway {
  public static final String JSON_PROPERTY_ACTIVE = "active";
  private Boolean active;

  public static final String JSON_PROPERTY_GW_EUI = "gwEui";
  private String gwEui;

  public static final String JSON_PROPERTY_PROVISIONED = "provisioned";
  private Boolean provisioned;

  public static final String JSON_PROPERTY_NETWORK_SERVER_ID = "networkServerId";
  private String networkServerId;

  public static final String JSON_PROPERTY_PACKET_FORWARDER = "packetForwarder";
  private PacketForwarder packetForwarder;

  public static final String JSON_PROPERTY_FREQUENCY_PLAN = "frequencyPlan";
  private FrequencyPlan frequencyPlan;

  public CreateLoraGateway() {
  }

  public CreateLoraGateway active(Boolean active) {
    
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/

  @JsonProperty(JSON_PROPERTY_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getActive() {
    return active;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActive(Boolean active) {
    this.active = active;
  }


  public CreateLoraGateway gwEui(String gwEui) {
    
    this.gwEui = gwEui;
    return this;
  }

   /**
   * *
   * @return gwEui
  **/
  @JsonProperty(JSON_PROPERTY_GW_EUI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getGwEui() {
    return gwEui;
  }


  @JsonProperty(JSON_PROPERTY_GW_EUI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setGwEui(String gwEui) {
    this.gwEui = gwEui;
  }


  public CreateLoraGateway provisioned(Boolean provisioned) {
    
    this.provisioned = provisioned;
    return this;
  }

   /**
   * Get provisioned
   * @return provisioned
  **/

  @JsonProperty(JSON_PROPERTY_PROVISIONED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getProvisioned() {
    return provisioned;
  }


  @JsonProperty(JSON_PROPERTY_PROVISIONED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProvisioned(Boolean provisioned) {
    this.provisioned = provisioned;
  }


  public CreateLoraGateway networkServerId(String networkServerId) {
    
    this.networkServerId = networkServerId;
    return this;
  }

   /**
   * Get networkServerId
   * @return networkServerId
  **/

  @JsonProperty(JSON_PROPERTY_NETWORK_SERVER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNetworkServerId() {
    return networkServerId;
  }


  @JsonProperty(JSON_PROPERTY_NETWORK_SERVER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNetworkServerId(String networkServerId) {
    this.networkServerId = networkServerId;
  }


  public CreateLoraGateway packetForwarder(PacketForwarder packetForwarder) {
    
    this.packetForwarder = packetForwarder;
    return this;
  }

   /**
   * Get packetForwarder
   * @return packetForwarder
  **/

  @JsonProperty(JSON_PROPERTY_PACKET_FORWARDER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public PacketForwarder getPacketForwarder() {
    return packetForwarder;
  }


  @JsonProperty(JSON_PROPERTY_PACKET_FORWARDER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPacketForwarder(PacketForwarder packetForwarder) {
    this.packetForwarder = packetForwarder;
  }


  public CreateLoraGateway frequencyPlan(FrequencyPlan frequencyPlan) {
    
    this.frequencyPlan = frequencyPlan;
    return this;
  }

   /**
   * Get frequencyPlan
   * @return frequencyPlan
  **/

  @JsonProperty(JSON_PROPERTY_FREQUENCY_PLAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FrequencyPlan getFrequencyPlan() {
    return frequencyPlan;
  }


  @JsonProperty(JSON_PROPERTY_FREQUENCY_PLAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFrequencyPlan(FrequencyPlan frequencyPlan) {
    this.frequencyPlan = frequencyPlan;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateLoraGateway createLoraGateway = (CreateLoraGateway) o;
    return Objects.equals(this.active, createLoraGateway.active) &&
        Objects.equals(this.gwEui, createLoraGateway.gwEui) &&
        Objects.equals(this.provisioned, createLoraGateway.provisioned) &&
        Objects.equals(this.networkServerId, createLoraGateway.networkServerId) &&
        Objects.equals(this.packetForwarder, createLoraGateway.packetForwarder) &&
        Objects.equals(this.frequencyPlan, createLoraGateway.frequencyPlan);
  }

  @Override
  public int hashCode() {
    return Objects.hash(active, gwEui, provisioned, networkServerId, packetForwarder, frequencyPlan);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateLoraGateway {\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    gwEui: ").append(toIndentedString(gwEui)).append("\n");
    sb.append("    provisioned: ").append(toIndentedString(provisioned)).append("\n");
    sb.append("    networkServerId: ").append(toIndentedString(networkServerId)).append("\n");
    sb.append("    packetForwarder: ").append(toIndentedString(packetForwarder)).append("\n");
    sb.append("    frequencyPlan: ").append(toIndentedString(frequencyPlan)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

