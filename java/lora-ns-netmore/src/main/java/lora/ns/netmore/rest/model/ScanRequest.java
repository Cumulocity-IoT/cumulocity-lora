/*
 * netmore-web-backend
 * Front end for web services.
 *
 * The version of the OpenAPI document: 1.2.83
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package lora.ns.netmore.rest.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import lora.ns.netmore.rest.model.ScanType;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ScanRequest
 */
@JsonPropertyOrder({
  ScanRequest.JSON_PROPERTY_DEV_EUI,
  ScanRequest.JSON_PROPERTY_TYPE
})
public class ScanRequest {
  public static final String JSON_PROPERTY_DEV_EUI = "devEui";
  private String devEui;

  public static final String JSON_PROPERTY_TYPE = "type";
  private ScanType type;

  public ScanRequest() {
  }

  public ScanRequest devEui(String devEui) {
    
    this.devEui = devEui;
    return this;
  }

   /**
   * Get devEui
   * @return devEui
  **/

  @JsonProperty(JSON_PROPERTY_DEV_EUI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDevEui() {
    return devEui;
  }


  @JsonProperty(JSON_PROPERTY_DEV_EUI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDevEui(String devEui) {
    this.devEui = devEui;
  }


  public ScanRequest type(ScanType type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/

  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ScanType getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(ScanType type) {
    this.type = type;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScanRequest scanRequest = (ScanRequest) o;
    return Objects.equals(this.devEui, scanRequest.devEui) &&
        Objects.equals(this.type, scanRequest.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(devEui, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScanRequest {\n");
    sb.append("    devEui: ").append(toIndentedString(devEui)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

