/*
 * netmore-web-backend
 * Front end for web services.
 *
 * The version of the OpenAPI document: 1.2.83
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package lora.ns.netmore.rest.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import lora.ns.netmore.rest.model.ExportReport;
import lora.ns.netmore.rest.model.ProductReport;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ExternalBillingReport
 */
@JsonPropertyOrder({
  ExternalBillingReport.JSON_PROPERTY_NAME,
  ExternalBillingReport.JSON_PROPERTY_CUSTOMER_ID,
  ExternalBillingReport.JSON_PROPERTY_EXTERNAL_REFERENCE,
  ExternalBillingReport.JSON_PROPERTY_BILLING_PERIOD,
  ExternalBillingReport.JSON_PROPERTY_PRODUCTS,
  ExternalBillingReport.JSON_PROPERTY_EXPORTS,
  ExternalBillingReport.JSON_PROPERTY_SUB_CUSTOMERS
})
public class ExternalBillingReport {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_CUSTOMER_ID = "customerId";
  private String customerId;

  public static final String JSON_PROPERTY_EXTERNAL_REFERENCE = "externalReference";
  private String externalReference;

  public static final String JSON_PROPERTY_BILLING_PERIOD = "billingPeriod";
  private String billingPeriod;

  public static final String JSON_PROPERTY_PRODUCTS = "products";
  private List<ProductReport> products = new ArrayList<>();

  public static final String JSON_PROPERTY_EXPORTS = "exports";
  private List<ExportReport> exports = new ArrayList<>();

  public static final String JSON_PROPERTY_SUB_CUSTOMERS = "subCustomers";
  private List<ExternalBillingReport> subCustomers;

  public ExternalBillingReport() {
  }

  public ExternalBillingReport name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public ExternalBillingReport customerId(String customerId) {
    
    this.customerId = customerId;
    return this;
  }

   /**
   * Get customerId
   * @return customerId
  **/

  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCustomerId() {
    return customerId;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCustomerId(String customerId) {
    this.customerId = customerId;
  }


  public ExternalBillingReport externalReference(String externalReference) {
    
    this.externalReference = externalReference;
    return this;
  }

   /**
   * Get externalReference
   * @return externalReference
  **/

  @JsonProperty(JSON_PROPERTY_EXTERNAL_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getExternalReference() {
    return externalReference;
  }


  @JsonProperty(JSON_PROPERTY_EXTERNAL_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExternalReference(String externalReference) {
    this.externalReference = externalReference;
  }


  public ExternalBillingReport billingPeriod(String billingPeriod) {
    
    this.billingPeriod = billingPeriod;
    return this;
  }

   /**
   * Get billingPeriod
   * @return billingPeriod
  **/

  @JsonProperty(JSON_PROPERTY_BILLING_PERIOD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBillingPeriod() {
    return billingPeriod;
  }


  @JsonProperty(JSON_PROPERTY_BILLING_PERIOD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBillingPeriod(String billingPeriod) {
    this.billingPeriod = billingPeriod;
  }


  public ExternalBillingReport products(List<ProductReport> products) {
    
    this.products = products;
    return this;
  }

  public ExternalBillingReport addProductsItem(ProductReport productsItem) {
    if (this.products == null) {
      this.products = new ArrayList<>();
    }
    this.products.add(productsItem);
    return this;
  }

   /**
   * Get products
   * @return products
  **/

  @JsonProperty(JSON_PROPERTY_PRODUCTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<ProductReport> getProducts() {
    return products;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProducts(List<ProductReport> products) {
    this.products = products;
  }


  public ExternalBillingReport exports(List<ExportReport> exports) {
    
    this.exports = exports;
    return this;
  }

  public ExternalBillingReport addExportsItem(ExportReport exportsItem) {
    if (this.exports == null) {
      this.exports = new ArrayList<>();
    }
    this.exports.add(exportsItem);
    return this;
  }

   /**
   * Get exports
   * @return exports
  **/

  @JsonProperty(JSON_PROPERTY_EXPORTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<ExportReport> getExports() {
    return exports;
  }


  @JsonProperty(JSON_PROPERTY_EXPORTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExports(List<ExportReport> exports) {
    this.exports = exports;
  }


  public ExternalBillingReport subCustomers(List<ExternalBillingReport> subCustomers) {
    
    this.subCustomers = subCustomers;
    return this;
  }

  public ExternalBillingReport addSubCustomersItem(ExternalBillingReport subCustomersItem) {
    if (this.subCustomers == null) {
      this.subCustomers = new ArrayList<>();
    }
    this.subCustomers.add(subCustomersItem);
    return this;
  }

   /**
   * Get subCustomers
   * @return subCustomers
  **/

  @JsonProperty(JSON_PROPERTY_SUB_CUSTOMERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ExternalBillingReport> getSubCustomers() {
    return subCustomers;
  }


  @JsonProperty(JSON_PROPERTY_SUB_CUSTOMERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubCustomers(List<ExternalBillingReport> subCustomers) {
    this.subCustomers = subCustomers;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExternalBillingReport externalBillingReport = (ExternalBillingReport) o;
    return Objects.equals(this.name, externalBillingReport.name) &&
        Objects.equals(this.customerId, externalBillingReport.customerId) &&
        Objects.equals(this.externalReference, externalBillingReport.externalReference) &&
        Objects.equals(this.billingPeriod, externalBillingReport.billingPeriod) &&
        Objects.equals(this.products, externalBillingReport.products) &&
        Objects.equals(this.exports, externalBillingReport.exports) &&
        Objects.equals(this.subCustomers, externalBillingReport.subCustomers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, customerId, externalReference, billingPeriod, products, exports, subCustomers);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExternalBillingReport {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    externalReference: ").append(toIndentedString(externalReference)).append("\n");
    sb.append("    billingPeriod: ").append(toIndentedString(billingPeriod)).append("\n");
    sb.append("    products: ").append(toIndentedString(products)).append("\n");
    sb.append("    exports: ").append(toIndentedString(exports)).append("\n");
    sb.append("    subCustomers: ").append(toIndentedString(subCustomers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

