/*
 * netmore-web-backend
 * Front end for web services.
 *
 * The version of the OpenAPI document: 1.2.83
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package lora.ns.netmore.rest.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import lora.ns.netmore.rest.model.Access;
import lora.ns.netmore.rest.model.DeviceGroup;
import lora.ns.netmore.rest.model.ExportConfig;
import lora.ns.netmore.rest.model.GatewayGroup;
import lora.ns.netmore.rest.model.LoraCustomer;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Customer
 */
@JsonPropertyOrder({
  Customer.JSON_PROPERTY_CUSTOMER_ID,
  Customer.JSON_PROPERTY_PARENT_ID,
  Customer.JSON_PROPERTY_NAME,
  Customer.JSON_PROPERTY_CREATED,
  Customer.JSON_PROPERTY_CREATED_BY,
  Customer.JSON_PROPERTY_LAST_UPDATED,
  Customer.JSON_PROPERTY_LAST_UPDATED_BY,
  Customer.JSON_PROPERTY_ACCESS,
  Customer.JSON_PROPERTY_DEVICE_GROUPS,
  Customer.JSON_PROPERTY_GATEWAY_GROUPS,
  Customer.JSON_PROPERTY_SUB_CUSTOMERS,
  Customer.JSON_PROPERTY_ALLOW_SUB_CUSTOMERS,
  Customer.JSON_PROPERTY_ALLOW_DEVICE_GROUPS,
  Customer.JSON_PROPERTY_ALLOW_GATEWAY_GROUPS,
  Customer.JSON_PROPERTY_REQUIRE_T_OTP,
  Customer.JSON_PROPERTY_TAGS,
  Customer.JSON_PROPERTY_ALLOW_CUSTOMIZATIONS,
  Customer.JSON_PROPERTY_EXTERNAL_REFERENCE,
  Customer.JSON_PROPERTY_EXPORTS,
  Customer.JSON_PROPERTY_LORA
})
public class Customer {
  public static final String JSON_PROPERTY_CUSTOMER_ID = "customerId";
  private String customerId;

  public static final String JSON_PROPERTY_PARENT_ID = "parentId";
  private String parentId;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_CREATED = "created";
  private OffsetDateTime created;

  public static final String JSON_PROPERTY_CREATED_BY = "createdBy";
  private String createdBy;

  public static final String JSON_PROPERTY_LAST_UPDATED = "lastUpdated";
  private OffsetDateTime lastUpdated;

  public static final String JSON_PROPERTY_LAST_UPDATED_BY = "lastUpdatedBy";
  private String lastUpdatedBy;

  public static final String JSON_PROPERTY_ACCESS = "access";
  private List<Access> access = new ArrayList<>();

  public static final String JSON_PROPERTY_DEVICE_GROUPS = "deviceGroups";
  private List<DeviceGroup> deviceGroups = new ArrayList<>();

  public static final String JSON_PROPERTY_GATEWAY_GROUPS = "gatewayGroups";
  private List<GatewayGroup> gatewayGroups = new ArrayList<>();

  public static final String JSON_PROPERTY_SUB_CUSTOMERS = "subCustomers";
  private List<Customer> subCustomers;

  public static final String JSON_PROPERTY_ALLOW_SUB_CUSTOMERS = "allowSubCustomers";
  private Boolean allowSubCustomers;

  public static final String JSON_PROPERTY_ALLOW_DEVICE_GROUPS = "allowDeviceGroups";
  private Boolean allowDeviceGroups;

  public static final String JSON_PROPERTY_ALLOW_GATEWAY_GROUPS = "allowGatewayGroups";
  private Boolean allowGatewayGroups;

  public static final String JSON_PROPERTY_REQUIRE_T_OTP = "requireTOtp";
  private Boolean requireTOtp;

  public static final String JSON_PROPERTY_TAGS = "tags";
  private Map<String, List<String>> tags = new HashMap<>();

  public static final String JSON_PROPERTY_ALLOW_CUSTOMIZATIONS = "allowCustomizations";
  private Boolean allowCustomizations;

  public static final String JSON_PROPERTY_EXTERNAL_REFERENCE = "externalReference";
  private String externalReference;

  public static final String JSON_PROPERTY_EXPORTS = "exports";
  private List<ExportConfig> exports = new ArrayList<>();

  public static final String JSON_PROPERTY_LORA = "lora";
  private LoraCustomer lora;

  public Customer() {
  }

  public Customer customerId(String customerId) {
    
    this.customerId = customerId;
    return this;
  }

   /**
   * Customer id
   * @return customerId
  **/

  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCustomerId() {
    return customerId;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCustomerId(String customerId) {
    this.customerId = customerId;
  }


  public Customer parentId(String parentId) {
    
    this.parentId = parentId;
    return this;
  }

   /**
   * Parent customer id, if this is a root node this is undefined.
   * @return parentId
  **/

  @JsonProperty(JSON_PROPERTY_PARENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getParentId() {
    return parentId;
  }


  @JsonProperty(JSON_PROPERTY_PARENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParentId(String parentId) {
    this.parentId = parentId;
  }


  public Customer name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Descriptive name of customer
   * @return name
  **/

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public Customer created(OffsetDateTime created) {
    
    this.created = created;
    return this;
  }

   /**
   * Date when customer was created
   * @return created
  **/

  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreated() {
    return created;
  }


  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }


  public Customer createdBy(String createdBy) {
    
    this.createdBy = createdBy;
    return this;
  }

   /**
   * create by, user id of the creating user.
   * @return createdBy
  **/

  @JsonProperty(JSON_PROPERTY_CREATED_BY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCreatedBy() {
    return createdBy;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_BY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedBy(String createdBy) {
    this.createdBy = createdBy;
  }


  public Customer lastUpdated(OffsetDateTime lastUpdated) {
    
    this.lastUpdated = lastUpdated;
    return this;
  }

   /**
   * Last time data was changed.
   * @return lastUpdated
  **/

  @JsonProperty(JSON_PROPERTY_LAST_UPDATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getLastUpdated() {
    return lastUpdated;
  }


  @JsonProperty(JSON_PROPERTY_LAST_UPDATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLastUpdated(OffsetDateTime lastUpdated) {
    this.lastUpdated = lastUpdated;
  }


  public Customer lastUpdatedBy(String lastUpdatedBy) {
    
    this.lastUpdatedBy = lastUpdatedBy;
    return this;
  }

   /**
   * Updated by, user id of the last update.
   * @return lastUpdatedBy
  **/

  @JsonProperty(JSON_PROPERTY_LAST_UPDATED_BY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLastUpdatedBy() {
    return lastUpdatedBy;
  }


  @JsonProperty(JSON_PROPERTY_LAST_UPDATED_BY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLastUpdatedBy(String lastUpdatedBy) {
    this.lastUpdatedBy = lastUpdatedBy;
  }


  public Customer access(List<Access> access) {
    
    this.access = access;
    return this;
  }

  public Customer addAccessItem(Access accessItem) {
    if (this.access == null) {
      this.access = new ArrayList<>();
    }
    this.access.add(accessItem);
    return this;
  }

   /**
   * Access granted this customer
   * @return access
  **/

  @JsonProperty(JSON_PROPERTY_ACCESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<Access> getAccess() {
    return access;
  }


  @JsonProperty(JSON_PROPERTY_ACCESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAccess(List<Access> access) {
    this.access = access;
  }


  public Customer deviceGroups(List<DeviceGroup> deviceGroups) {
    
    this.deviceGroups = deviceGroups;
    return this;
  }

  public Customer addDeviceGroupsItem(DeviceGroup deviceGroupsItem) {
    if (this.deviceGroups == null) {
      this.deviceGroups = new ArrayList<>();
    }
    this.deviceGroups.add(deviceGroupsItem);
    return this;
  }

   /**
   * Device groups that the customer have access to, might be edges owned by some one else.
   * @return deviceGroups
  **/

  @JsonProperty(JSON_PROPERTY_DEVICE_GROUPS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<DeviceGroup> getDeviceGroups() {
    return deviceGroups;
  }


  @JsonProperty(JSON_PROPERTY_DEVICE_GROUPS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDeviceGroups(List<DeviceGroup> deviceGroups) {
    this.deviceGroups = deviceGroups;
  }


  public Customer gatewayGroups(List<GatewayGroup> gatewayGroups) {
    
    this.gatewayGroups = gatewayGroups;
    return this;
  }

  public Customer addGatewayGroupsItem(GatewayGroup gatewayGroupsItem) {
    if (this.gatewayGroups == null) {
      this.gatewayGroups = new ArrayList<>();
    }
    this.gatewayGroups.add(gatewayGroupsItem);
    return this;
  }

   /**
   * Gateways groups that the customer have access to
   * @return gatewayGroups
  **/

  @JsonProperty(JSON_PROPERTY_GATEWAY_GROUPS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<GatewayGroup> getGatewayGroups() {
    return gatewayGroups;
  }


  @JsonProperty(JSON_PROPERTY_GATEWAY_GROUPS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setGatewayGroups(List<GatewayGroup> gatewayGroups) {
    this.gatewayGroups = gatewayGroups;
  }


  public Customer subCustomers(List<Customer> subCustomers) {
    
    this.subCustomers = subCustomers;
    return this;
  }

  public Customer addSubCustomersItem(Customer subCustomersItem) {
    if (this.subCustomers == null) {
      this.subCustomers = new ArrayList<>();
    }
    this.subCustomers.add(subCustomersItem);
    return this;
  }

   /**
   * If this customer have child customers that it can manage then they get listed here.
   * @return subCustomers
  **/

  @JsonProperty(JSON_PROPERTY_SUB_CUSTOMERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Customer> getSubCustomers() {
    return subCustomers;
  }


  @JsonProperty(JSON_PROPERTY_SUB_CUSTOMERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubCustomers(List<Customer> subCustomers) {
    this.subCustomers = subCustomers;
  }


  public Customer allowSubCustomers(Boolean allowSubCustomers) {
    
    this.allowSubCustomers = allowSubCustomers;
    return this;
  }

   /**
   * This is true if the customer is allowed to create new sub customers
   * @return allowSubCustomers
  **/

  @JsonProperty(JSON_PROPERTY_ALLOW_SUB_CUSTOMERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getAllowSubCustomers() {
    return allowSubCustomers;
  }


  @JsonProperty(JSON_PROPERTY_ALLOW_SUB_CUSTOMERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAllowSubCustomers(Boolean allowSubCustomers) {
    this.allowSubCustomers = allowSubCustomers;
  }


  public Customer allowDeviceGroups(Boolean allowDeviceGroups) {
    
    this.allowDeviceGroups = allowDeviceGroups;
    return this;
  }

   /**
   * This is true if the customer is allowed to create new device groups
   * @return allowDeviceGroups
  **/

  @JsonProperty(JSON_PROPERTY_ALLOW_DEVICE_GROUPS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getAllowDeviceGroups() {
    return allowDeviceGroups;
  }


  @JsonProperty(JSON_PROPERTY_ALLOW_DEVICE_GROUPS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAllowDeviceGroups(Boolean allowDeviceGroups) {
    this.allowDeviceGroups = allowDeviceGroups;
  }


  public Customer allowGatewayGroups(Boolean allowGatewayGroups) {
    
    this.allowGatewayGroups = allowGatewayGroups;
    return this;
  }

   /**
   * This is true if the customer is allowed to create new gateway groups
   * @return allowGatewayGroups
  **/

  @JsonProperty(JSON_PROPERTY_ALLOW_GATEWAY_GROUPS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getAllowGatewayGroups() {
    return allowGatewayGroups;
  }


  @JsonProperty(JSON_PROPERTY_ALLOW_GATEWAY_GROUPS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAllowGatewayGroups(Boolean allowGatewayGroups) {
    this.allowGatewayGroups = allowGatewayGroups;
  }


  public Customer requireTOtp(Boolean requireTOtp) {
    
    this.requireTOtp = requireTOtp;
    return this;
  }

   /**
   * Is time-based onetime password, this enforce the TOTP to be set on new users, when creating new customers if nothing else is set this setting will be copied down to the new customer.
   * @return requireTOtp
  **/

  @JsonProperty(JSON_PROPERTY_REQUIRE_T_OTP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getRequireTOtp() {
    return requireTOtp;
  }


  @JsonProperty(JSON_PROPERTY_REQUIRE_T_OTP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRequireTOtp(Boolean requireTOtp) {
    this.requireTOtp = requireTOtp;
  }


  public Customer tags(Map<String, List<String>> tags) {
    
    this.tags = tags;
    return this;
  }

  public Customer putTagsItem(String key, List<String> tagsItem) {
    if (this.tags == null) {
      this.tags = new HashMap<>();
    }
    this.tags.put(key, tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/

  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, List<String>> getTags() {
    return tags;
  }


  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTags(Map<String, List<String>> tags) {
    this.tags = tags;
  }


  public Customer allowCustomizations(Boolean allowCustomizations) {
    
    this.allowCustomizations = allowCustomizations;
    return this;
  }

   /**
   * Allow customer white labeling
   * @return allowCustomizations
  **/

  @JsonProperty(JSON_PROPERTY_ALLOW_CUSTOMIZATIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getAllowCustomizations() {
    return allowCustomizations;
  }


  @JsonProperty(JSON_PROPERTY_ALLOW_CUSTOMIZATIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAllowCustomizations(Boolean allowCustomizations) {
    this.allowCustomizations = allowCustomizations;
  }


  public Customer externalReference(String externalReference) {
    
    this.externalReference = externalReference;
    return this;
  }

   /**
   * External reference
   * @return externalReference
  **/

  @JsonProperty(JSON_PROPERTY_EXTERNAL_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExternalReference() {
    return externalReference;
  }


  @JsonProperty(JSON_PROPERTY_EXTERNAL_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExternalReference(String externalReference) {
    this.externalReference = externalReference;
  }


  public Customer exports(List<ExportConfig> exports) {
    
    this.exports = exports;
    return this;
  }

  public Customer addExportsItem(ExportConfig exportsItem) {
    if (this.exports == null) {
      this.exports = new ArrayList<>();
    }
    this.exports.add(exportsItem);
    return this;
  }

   /**
   * Available export configs
   * @return exports
  **/

  @JsonProperty(JSON_PROPERTY_EXPORTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<ExportConfig> getExports() {
    return exports;
  }


  @JsonProperty(JSON_PROPERTY_EXPORTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExports(List<ExportConfig> exports) {
    this.exports = exports;
  }


  public Customer lora(LoraCustomer lora) {
    
    this.lora = lora;
    return this;
  }

   /**
   * Get lora
   * @return lora
  **/

  @JsonProperty(JSON_PROPERTY_LORA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LoraCustomer getLora() {
    return lora;
  }


  @JsonProperty(JSON_PROPERTY_LORA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLora(LoraCustomer lora) {
    this.lora = lora;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Customer customer = (Customer) o;
    return Objects.equals(this.customerId, customer.customerId) &&
        Objects.equals(this.parentId, customer.parentId) &&
        Objects.equals(this.name, customer.name) &&
        Objects.equals(this.created, customer.created) &&
        Objects.equals(this.createdBy, customer.createdBy) &&
        Objects.equals(this.lastUpdated, customer.lastUpdated) &&
        Objects.equals(this.lastUpdatedBy, customer.lastUpdatedBy) &&
        Objects.equals(this.access, customer.access) &&
        Objects.equals(this.deviceGroups, customer.deviceGroups) &&
        Objects.equals(this.gatewayGroups, customer.gatewayGroups) &&
        Objects.equals(this.subCustomers, customer.subCustomers) &&
        Objects.equals(this.allowSubCustomers, customer.allowSubCustomers) &&
        Objects.equals(this.allowDeviceGroups, customer.allowDeviceGroups) &&
        Objects.equals(this.allowGatewayGroups, customer.allowGatewayGroups) &&
        Objects.equals(this.requireTOtp, customer.requireTOtp) &&
        Objects.equals(this.tags, customer.tags) &&
        Objects.equals(this.allowCustomizations, customer.allowCustomizations) &&
        Objects.equals(this.externalReference, customer.externalReference) &&
        Objects.equals(this.exports, customer.exports) &&
        Objects.equals(this.lora, customer.lora);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customerId, parentId, name, created, createdBy, lastUpdated, lastUpdatedBy, access, deviceGroups, gatewayGroups, subCustomers, allowSubCustomers, allowDeviceGroups, allowGatewayGroups, requireTOtp, tags, allowCustomizations, externalReference, exports, lora);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Customer {\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("    lastUpdatedBy: ").append(toIndentedString(lastUpdatedBy)).append("\n");
    sb.append("    access: ").append(toIndentedString(access)).append("\n");
    sb.append("    deviceGroups: ").append(toIndentedString(deviceGroups)).append("\n");
    sb.append("    gatewayGroups: ").append(toIndentedString(gatewayGroups)).append("\n");
    sb.append("    subCustomers: ").append(toIndentedString(subCustomers)).append("\n");
    sb.append("    allowSubCustomers: ").append(toIndentedString(allowSubCustomers)).append("\n");
    sb.append("    allowDeviceGroups: ").append(toIndentedString(allowDeviceGroups)).append("\n");
    sb.append("    allowGatewayGroups: ").append(toIndentedString(allowGatewayGroups)).append("\n");
    sb.append("    requireTOtp: ").append(toIndentedString(requireTOtp)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    allowCustomizations: ").append(toIndentedString(allowCustomizations)).append("\n");
    sb.append("    externalReference: ").append(toIndentedString(externalReference)).append("\n");
    sb.append("    exports: ").append(toIndentedString(exports)).append("\n");
    sb.append("    lora: ").append(toIndentedString(lora)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

