/*
 * netmore-web-backend
 * Front end for web services.
 *
 * The version of the OpenAPI document: 1.2.83
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package lora.ns.netmore.rest.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SensorDataGatewayData
 */
@JsonPropertyOrder({
  SensorDataGatewayData.JSON_PROPERTY_ID_GATEWAY,
  SensorDataGatewayData.JSON_PROPERTY_RSSI,
  SensorDataGatewayData.JSON_PROPERTY_SNR,
  SensorDataGatewayData.JSON_PROPERTY_ANTENNA,
  SensorDataGatewayData.JSON_PROPERTY_GATEWAY_IDENTIFIER,
  SensorDataGatewayData.JSON_PROPERTY_GW_EUI
})
public class SensorDataGatewayData {
  public static final String JSON_PROPERTY_ID_GATEWAY = "idGateway";
  private Double idGateway;

  public static final String JSON_PROPERTY_RSSI = "rssi";
  private String rssi;

  public static final String JSON_PROPERTY_SNR = "snr";
  private String snr;

  public static final String JSON_PROPERTY_ANTENNA = "antenna";
  private Double antenna;

  public static final String JSON_PROPERTY_GATEWAY_IDENTIFIER = "gatewayIdentifier";
  private String gatewayIdentifier;

  public static final String JSON_PROPERTY_GW_EUI = "gwEui";
  private String gwEui;

  public SensorDataGatewayData() {
  }

  public SensorDataGatewayData idGateway(Double idGateway) {
    
    this.idGateway = idGateway;
    return this;
  }

   /**
   * Get idGateway
   * @return idGateway
  **/

  @JsonProperty(JSON_PROPERTY_ID_GATEWAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getIdGateway() {
    return idGateway;
  }


  @JsonProperty(JSON_PROPERTY_ID_GATEWAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIdGateway(Double idGateway) {
    this.idGateway = idGateway;
  }


  public SensorDataGatewayData rssi(String rssi) {
    
    this.rssi = rssi;
    return this;
  }

   /**
   * Get rssi
   * @return rssi
  **/

  @JsonProperty(JSON_PROPERTY_RSSI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRssi() {
    return rssi;
  }


  @JsonProperty(JSON_PROPERTY_RSSI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRssi(String rssi) {
    this.rssi = rssi;
  }


  public SensorDataGatewayData snr(String snr) {
    
    this.snr = snr;
    return this;
  }

   /**
   * Get snr
   * @return snr
  **/

  @JsonProperty(JSON_PROPERTY_SNR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSnr() {
    return snr;
  }


  @JsonProperty(JSON_PROPERTY_SNR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSnr(String snr) {
    this.snr = snr;
  }


  public SensorDataGatewayData antenna(Double antenna) {
    
    this.antenna = antenna;
    return this;
  }

   /**
   * Get antenna
   * @return antenna
  **/

  @JsonProperty(JSON_PROPERTY_ANTENNA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getAntenna() {
    return antenna;
  }


  @JsonProperty(JSON_PROPERTY_ANTENNA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAntenna(Double antenna) {
    this.antenna = antenna;
  }


  public SensorDataGatewayData gatewayIdentifier(String gatewayIdentifier) {
    
    this.gatewayIdentifier = gatewayIdentifier;
    return this;
  }

   /**
   * Get gatewayIdentifier
   * @return gatewayIdentifier
  **/

  @JsonProperty(JSON_PROPERTY_GATEWAY_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGatewayIdentifier() {
    return gatewayIdentifier;
  }


  @JsonProperty(JSON_PROPERTY_GATEWAY_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGatewayIdentifier(String gatewayIdentifier) {
    this.gatewayIdentifier = gatewayIdentifier;
  }


  public SensorDataGatewayData gwEui(String gwEui) {
    
    this.gwEui = gwEui;
    return this;
  }

   /**
   * Get gwEui
   * @return gwEui
  **/

  @JsonProperty(JSON_PROPERTY_GW_EUI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGwEui() {
    return gwEui;
  }


  @JsonProperty(JSON_PROPERTY_GW_EUI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGwEui(String gwEui) {
    this.gwEui = gwEui;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SensorDataGatewayData sensorDataGatewayData = (SensorDataGatewayData) o;
    return Objects.equals(this.idGateway, sensorDataGatewayData.idGateway) &&
        Objects.equals(this.rssi, sensorDataGatewayData.rssi) &&
        Objects.equals(this.snr, sensorDataGatewayData.snr) &&
        Objects.equals(this.antenna, sensorDataGatewayData.antenna) &&
        Objects.equals(this.gatewayIdentifier, sensorDataGatewayData.gatewayIdentifier) &&
        Objects.equals(this.gwEui, sensorDataGatewayData.gwEui);
  }

  @Override
  public int hashCode() {
    return Objects.hash(idGateway, rssi, snr, antenna, gatewayIdentifier, gwEui);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SensorDataGatewayData {\n");
    sb.append("    idGateway: ").append(toIndentedString(idGateway)).append("\n");
    sb.append("    rssi: ").append(toIndentedString(rssi)).append("\n");
    sb.append("    snr: ").append(toIndentedString(snr)).append("\n");
    sb.append("    antenna: ").append(toIndentedString(antenna)).append("\n");
    sb.append("    gatewayIdentifier: ").append(toIndentedString(gatewayIdentifier)).append("\n");
    sb.append("    gwEui: ").append(toIndentedString(gwEui)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

