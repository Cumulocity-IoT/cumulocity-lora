/*
 * netmore-web-backend
 * Front end for web services.
 *
 * The version of the OpenAPI document: 1.2.83
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package lora.ns.netmore.rest.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * AuditChange
 */
@JsonPropertyOrder({
  AuditChange.JSON_PROPERTY_NEW_VALUE,
  AuditChange.JSON_PROPERTY_OLD_VALUE,
  AuditChange.JSON_PROPERTY_PROPERTY
})
public class AuditChange {
  public static final String JSON_PROPERTY_NEW_VALUE = "newValue";
  private Object newValue = null;

  public static final String JSON_PROPERTY_OLD_VALUE = "oldValue";
  private Object oldValue = null;

  public static final String JSON_PROPERTY_PROPERTY = "property";
  private String property;

  public AuditChange() {
  }

  public AuditChange newValue(Object newValue) {
    
    this.newValue = newValue;
    return this;
  }

   /**
   * Get newValue
   * @return newValue
  **/

  @JsonProperty(JSON_PROPERTY_NEW_VALUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getNewValue() {
    return newValue;
  }


  @JsonProperty(JSON_PROPERTY_NEW_VALUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNewValue(Object newValue) {
    this.newValue = newValue;
  }


  public AuditChange oldValue(Object oldValue) {
    
    this.oldValue = oldValue;
    return this;
  }

   /**
   * Get oldValue
   * @return oldValue
  **/

  @JsonProperty(JSON_PROPERTY_OLD_VALUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getOldValue() {
    return oldValue;
  }


  @JsonProperty(JSON_PROPERTY_OLD_VALUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOldValue(Object oldValue) {
    this.oldValue = oldValue;
  }


  public AuditChange property(String property) {
    
    this.property = property;
    return this;
  }

   /**
   * Get property
   * @return property
  **/

  @JsonProperty(JSON_PROPERTY_PROPERTY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getProperty() {
    return property;
  }


  @JsonProperty(JSON_PROPERTY_PROPERTY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProperty(String property) {
    this.property = property;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuditChange auditChange = (AuditChange) o;
    return Objects.equals(this.newValue, auditChange.newValue) &&
        Objects.equals(this.oldValue, auditChange.oldValue) &&
        Objects.equals(this.property, auditChange.property);
  }

  @Override
  public int hashCode() {
    return Objects.hash(newValue, oldValue, property);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuditChange {\n");
    sb.append("    newValue: ").append(toIndentedString(newValue)).append("\n");
    sb.append("    oldValue: ").append(toIndentedString(oldValue)).append("\n");
    sb.append("    property: ").append(toIndentedString(property)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

