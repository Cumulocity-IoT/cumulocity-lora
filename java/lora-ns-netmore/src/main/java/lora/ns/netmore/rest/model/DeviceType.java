/*
 * netmore-web-backend
 * Front end for web services.
 *
 * The version of the OpenAPI document: 1.2.83
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package lora.ns.netmore.rest.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Gets or Sets DeviceType
 */
public enum DeviceType {
  
  BUTTON("button"),
  
  CALCULATED("calculated"),
  
  COLDWATERMETER("coldWaterMeter"),
  
  COOLINGMETER("coolingMeter"),
  
  DOORSENSOR("doorSensor"),
  
  EDGENODE("edgeNode"),
  
  ELECTRICMETER("electricMeter"),
  
  GASMETER("gasMeter"),
  
  GENERICEWS("genericEws"),
  
  GENERICLORA("genericLora"),
  
  GENERICNBIOT("genericNbIot"),
  
  GENERICMODBUS("genericModbus"),
  
  HEATINGMETER("heatingMeter"),
  
  HOTWATERMETER("hotWaterMeter"),
  
  NETWORKROUTER("networkRouter"),
  
  NETWORKSWITCH("networkSwitch"),
  
  PARKINGSENSOR("parkingSensor"),
  
  PEOPLECOUNTER("peopleCounter"),
  
  PROTOCOLCONVERTER("protocolConverter"),
  
  PULSECOUNTER("pulseCounter"),
  
  ROOMSENSOR("roomSensor"),
  
  SMOKEDETECTOR("smokeDetector"),
  
  SOUNDLEVELSENSOR("soundLevelSensor"),
  
  TRACKER("tracker"),
  
  UNKNOWN("unknown"),
  
  VENTILATION("ventilation"),
  
  VIBRATIONSENSOR("vibrationSensor"),
  
  WEATHERSENSOR("weatherSensor"),
  
  WINDOWSENSOR("windowSensor");

  private String value;

  DeviceType(String value) {
    this.value = value;
  }

  @JsonValue
  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  @JsonCreator
  public static DeviceType fromValue(String value) {
    for (DeviceType b : DeviceType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }
}

