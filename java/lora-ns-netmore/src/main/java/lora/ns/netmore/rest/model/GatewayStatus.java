/*
 * netmore-web-backend
 * Front end for web services.
 *
 * The version of the OpenAPI document: 1.2.83
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package lora.ns.netmore.rest.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import lora.ns.netmore.rest.model.GatewayConnection;
import lora.ns.netmore.rest.model.Location;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * GatewayStatus
 */
@JsonPropertyOrder({
  GatewayStatus.JSON_PROPERTY_GATEWAY_ID,
  GatewayStatus.JSON_PROPERTY_NAME,
  GatewayStatus.JSON_PROPERTY_DESCRIPTION,
  GatewayStatus.JSON_PROPERTY_GATEWAY_TYPE,
  GatewayStatus.JSON_PROPERTY_ACTIVE,
  GatewayStatus.JSON_PROPERTY_ONLINE,
  GatewayStatus.JSON_PROPERTY_PROVISIONED,
  GatewayStatus.JSON_PROPERTY_LAST_UPDATED,
  GatewayStatus.JSON_PROPERTY_PRIMARY_CONNECTION,
  GatewayStatus.JSON_PROPERTY_SECONDARY_CONNECTION,
  GatewayStatus.JSON_PROPERTY_LOCATION,
  GatewayStatus.JSON_PROPERTY_TAGS,
  GatewayStatus.JSON_PROPERTY_ASSIGNED_CUSTOMER_ID
})
public class GatewayStatus {
  public static final String JSON_PROPERTY_GATEWAY_ID = "gatewayId";
  private Double gatewayId;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_GATEWAY_TYPE = "gatewayType";
  private String gatewayType;

  public static final String JSON_PROPERTY_ACTIVE = "active";
  private Boolean active;

  public static final String JSON_PROPERTY_ONLINE = "online";
  private Boolean online;

  public static final String JSON_PROPERTY_PROVISIONED = "provisioned";
  private Boolean provisioned;

  public static final String JSON_PROPERTY_LAST_UPDATED = "lastUpdated";
  private String lastUpdated;

  public static final String JSON_PROPERTY_PRIMARY_CONNECTION = "primaryConnection";
  private GatewayConnection primaryConnection;

  public static final String JSON_PROPERTY_SECONDARY_CONNECTION = "secondaryConnection";
  private GatewayConnection secondaryConnection;

  public static final String JSON_PROPERTY_LOCATION = "location";
  private Location location;

  public static final String JSON_PROPERTY_TAGS = "tags";
  private Map<String, List<String>> tags = new HashMap<>();

  public static final String JSON_PROPERTY_ASSIGNED_CUSTOMER_ID = "assignedCustomerId";
  private String assignedCustomerId;

  public GatewayStatus() {
  }

  public GatewayStatus gatewayId(Double gatewayId) {
    
    this.gatewayId = gatewayId;
    return this;
  }

   /**
   * Get gatewayId
   * @return gatewayId
  **/

  @JsonProperty(JSON_PROPERTY_GATEWAY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getGatewayId() {
    return gatewayId;
  }


  @JsonProperty(JSON_PROPERTY_GATEWAY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setGatewayId(Double gatewayId) {
    this.gatewayId = gatewayId;
  }


  public GatewayStatus name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public GatewayStatus description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/

  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public GatewayStatus gatewayType(String gatewayType) {
    
    this.gatewayType = gatewayType;
    return this;
  }

   /**
   * Get gatewayType
   * @return gatewayType
  **/

  @JsonProperty(JSON_PROPERTY_GATEWAY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getGatewayType() {
    return gatewayType;
  }


  @JsonProperty(JSON_PROPERTY_GATEWAY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setGatewayType(String gatewayType) {
    this.gatewayType = gatewayType;
  }


  public GatewayStatus active(Boolean active) {
    
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/

  @JsonProperty(JSON_PROPERTY_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getActive() {
    return active;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setActive(Boolean active) {
    this.active = active;
  }


  public GatewayStatus online(Boolean online) {
    
    this.online = online;
    return this;
  }

   /**
   * Get online
   * @return online
  **/

  @JsonProperty(JSON_PROPERTY_ONLINE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getOnline() {
    return online;
  }


  @JsonProperty(JSON_PROPERTY_ONLINE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOnline(Boolean online) {
    this.online = online;
  }


  public GatewayStatus provisioned(Boolean provisioned) {
    
    this.provisioned = provisioned;
    return this;
  }

   /**
   * Get provisioned
   * @return provisioned
  **/

  @JsonProperty(JSON_PROPERTY_PROVISIONED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getProvisioned() {
    return provisioned;
  }


  @JsonProperty(JSON_PROPERTY_PROVISIONED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProvisioned(Boolean provisioned) {
    this.provisioned = provisioned;
  }


  public GatewayStatus lastUpdated(String lastUpdated) {
    
    this.lastUpdated = lastUpdated;
    return this;
  }

   /**
   * Get lastUpdated
   * @return lastUpdated
  **/

  @JsonProperty(JSON_PROPERTY_LAST_UPDATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLastUpdated() {
    return lastUpdated;
  }


  @JsonProperty(JSON_PROPERTY_LAST_UPDATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLastUpdated(String lastUpdated) {
    this.lastUpdated = lastUpdated;
  }


  public GatewayStatus primaryConnection(GatewayConnection primaryConnection) {
    
    this.primaryConnection = primaryConnection;
    return this;
  }

   /**
   * Get primaryConnection
   * @return primaryConnection
  **/

  @JsonProperty(JSON_PROPERTY_PRIMARY_CONNECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GatewayConnection getPrimaryConnection() {
    return primaryConnection;
  }


  @JsonProperty(JSON_PROPERTY_PRIMARY_CONNECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrimaryConnection(GatewayConnection primaryConnection) {
    this.primaryConnection = primaryConnection;
  }


  public GatewayStatus secondaryConnection(GatewayConnection secondaryConnection) {
    
    this.secondaryConnection = secondaryConnection;
    return this;
  }

   /**
   * Get secondaryConnection
   * @return secondaryConnection
  **/

  @JsonProperty(JSON_PROPERTY_SECONDARY_CONNECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GatewayConnection getSecondaryConnection() {
    return secondaryConnection;
  }


  @JsonProperty(JSON_PROPERTY_SECONDARY_CONNECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecondaryConnection(GatewayConnection secondaryConnection) {
    this.secondaryConnection = secondaryConnection;
  }


  public GatewayStatus location(Location location) {
    
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/

  @JsonProperty(JSON_PROPERTY_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Location getLocation() {
    return location;
  }


  @JsonProperty(JSON_PROPERTY_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocation(Location location) {
    this.location = location;
  }


  public GatewayStatus tags(Map<String, List<String>> tags) {
    
    this.tags = tags;
    return this;
  }

  public GatewayStatus putTagsItem(String key, List<String> tagsItem) {
    if (this.tags == null) {
      this.tags = new HashMap<>();
    }
    this.tags.put(key, tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/

  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, List<String>> getTags() {
    return tags;
  }


  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTags(Map<String, List<String>> tags) {
    this.tags = tags;
  }


  public GatewayStatus assignedCustomerId(String assignedCustomerId) {
    
    this.assignedCustomerId = assignedCustomerId;
    return this;
  }

   /**
   * Get assignedCustomerId
   * @return assignedCustomerId
  **/

  @JsonProperty(JSON_PROPERTY_ASSIGNED_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAssignedCustomerId() {
    return assignedCustomerId;
  }


  @JsonProperty(JSON_PROPERTY_ASSIGNED_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAssignedCustomerId(String assignedCustomerId) {
    this.assignedCustomerId = assignedCustomerId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GatewayStatus gatewayStatus = (GatewayStatus) o;
    return Objects.equals(this.gatewayId, gatewayStatus.gatewayId) &&
        Objects.equals(this.name, gatewayStatus.name) &&
        Objects.equals(this.description, gatewayStatus.description) &&
        Objects.equals(this.gatewayType, gatewayStatus.gatewayType) &&
        Objects.equals(this.active, gatewayStatus.active) &&
        Objects.equals(this.online, gatewayStatus.online) &&
        Objects.equals(this.provisioned, gatewayStatus.provisioned) &&
        Objects.equals(this.lastUpdated, gatewayStatus.lastUpdated) &&
        Objects.equals(this.primaryConnection, gatewayStatus.primaryConnection) &&
        Objects.equals(this.secondaryConnection, gatewayStatus.secondaryConnection) &&
        Objects.equals(this.location, gatewayStatus.location) &&
        Objects.equals(this.tags, gatewayStatus.tags) &&
        Objects.equals(this.assignedCustomerId, gatewayStatus.assignedCustomerId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(gatewayId, name, description, gatewayType, active, online, provisioned, lastUpdated, primaryConnection, secondaryConnection, location, tags, assignedCustomerId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GatewayStatus {\n");
    sb.append("    gatewayId: ").append(toIndentedString(gatewayId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    gatewayType: ").append(toIndentedString(gatewayType)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    online: ").append(toIndentedString(online)).append("\n");
    sb.append("    provisioned: ").append(toIndentedString(provisioned)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("    primaryConnection: ").append(toIndentedString(primaryConnection)).append("\n");
    sb.append("    secondaryConnection: ").append(toIndentedString(secondaryConnection)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    assignedCustomerId: ").append(toIndentedString(assignedCustomerId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

