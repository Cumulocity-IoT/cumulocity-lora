/*
 * netmore-web-backend
 * Front end for web services.
 *
 * The version of the OpenAPI document: 1.2.83
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package lora.ns.netmore.rest.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * LoginState
 */
@JsonPropertyOrder({
  LoginState.JSON_PROPERTY_CLIENT_ID,
  LoginState.JSON_PROPERTY_CODE,
  LoginState.JSON_PROPERTY_ISS,
  LoginState.JSON_PROPERTY_SESSION_STATE,
  LoginState.JSON_PROPERTY_REDIRECT_URI
})
public class LoginState {
  public static final String JSON_PROPERTY_CLIENT_ID = "client_id";
  private String clientId;

  public static final String JSON_PROPERTY_CODE = "code";
  private String code;

  public static final String JSON_PROPERTY_ISS = "iss";
  private String iss;

  public static final String JSON_PROPERTY_SESSION_STATE = "session_state";
  private String sessionState;

  public static final String JSON_PROPERTY_REDIRECT_URI = "redirect_uri";
  private String redirectUri;

  public LoginState() {
  }

  public LoginState clientId(String clientId) {
    
    this.clientId = clientId;
    return this;
  }

   /**
   * Get clientId
   * @return clientId
  **/

  @JsonProperty(JSON_PROPERTY_CLIENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getClientId() {
    return clientId;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setClientId(String clientId) {
    this.clientId = clientId;
  }


  public LoginState code(String code) {
    
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/

  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCode() {
    return code;
  }


  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCode(String code) {
    this.code = code;
  }


  public LoginState iss(String iss) {
    
    this.iss = iss;
    return this;
  }

   /**
   * Get iss
   * @return iss
  **/

  @JsonProperty(JSON_PROPERTY_ISS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getIss() {
    return iss;
  }


  @JsonProperty(JSON_PROPERTY_ISS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIss(String iss) {
    this.iss = iss;
  }


  public LoginState sessionState(String sessionState) {
    
    this.sessionState = sessionState;
    return this;
  }

   /**
   * Get sessionState
   * @return sessionState
  **/

  @JsonProperty(JSON_PROPERTY_SESSION_STATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSessionState() {
    return sessionState;
  }


  @JsonProperty(JSON_PROPERTY_SESSION_STATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSessionState(String sessionState) {
    this.sessionState = sessionState;
  }


  public LoginState redirectUri(String redirectUri) {
    
    this.redirectUri = redirectUri;
    return this;
  }

   /**
   * Get redirectUri
   * @return redirectUri
  **/

  @JsonProperty(JSON_PROPERTY_REDIRECT_URI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRedirectUri() {
    return redirectUri;
  }


  @JsonProperty(JSON_PROPERTY_REDIRECT_URI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRedirectUri(String redirectUri) {
    this.redirectUri = redirectUri;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoginState loginState = (LoginState) o;
    return Objects.equals(this.clientId, loginState.clientId) &&
        Objects.equals(this.code, loginState.code) &&
        Objects.equals(this.iss, loginState.iss) &&
        Objects.equals(this.sessionState, loginState.sessionState) &&
        Objects.equals(this.redirectUri, loginState.redirectUri);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientId, code, iss, sessionState, redirectUri);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoginState {\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    iss: ").append(toIndentedString(iss)).append("\n");
    sb.append("    sessionState: ").append(toIndentedString(sessionState)).append("\n");
    sb.append("    redirectUri: ").append(toIndentedString(redirectUri)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

