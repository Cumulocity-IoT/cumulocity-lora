/*
 * netmore-web-backend
 * Front end for web services.
 *
 * The version of the OpenAPI document: 1.2.83
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package lora.ns.netmore.rest.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ExportMessageFormats
 */
@JsonPropertyOrder({
  ExportMessageFormats.JSON_PROPERTY_UPLINK,
  ExportMessageFormats.JSON_PROPERTY_DOWNLINK,
  ExportMessageFormats.JSON_PROPERTY_DOWNLINK_FAILED,
  ExportMessageFormats.JSON_PROPERTY_JOIN_REQUEST,
  ExportMessageFormats.JSON_PROPERTY_JOIN_ACCEPT
})
public class ExportMessageFormats {
  public static final String JSON_PROPERTY_UPLINK = "uplink";
  private Boolean uplink;

  public static final String JSON_PROPERTY_DOWNLINK = "downlink";
  private Boolean downlink;

  public static final String JSON_PROPERTY_DOWNLINK_FAILED = "downlinkFailed";
  private Boolean downlinkFailed;

  public static final String JSON_PROPERTY_JOIN_REQUEST = "joinRequest";
  private Boolean joinRequest;

  public static final String JSON_PROPERTY_JOIN_ACCEPT = "joinAccept";
  private Boolean joinAccept;

  public ExportMessageFormats() {
  }

  public ExportMessageFormats uplink(Boolean uplink) {
    
    this.uplink = uplink;
    return this;
  }

   /**
   * Get uplink
   * @return uplink
  **/

  @JsonProperty(JSON_PROPERTY_UPLINK)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getUplink() {
    return uplink;
  }


  @JsonProperty(JSON_PROPERTY_UPLINK)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUplink(Boolean uplink) {
    this.uplink = uplink;
  }


  public ExportMessageFormats downlink(Boolean downlink) {
    
    this.downlink = downlink;
    return this;
  }

   /**
   * Get downlink
   * @return downlink
  **/

  @JsonProperty(JSON_PROPERTY_DOWNLINK)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getDownlink() {
    return downlink;
  }


  @JsonProperty(JSON_PROPERTY_DOWNLINK)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDownlink(Boolean downlink) {
    this.downlink = downlink;
  }


  public ExportMessageFormats downlinkFailed(Boolean downlinkFailed) {
    
    this.downlinkFailed = downlinkFailed;
    return this;
  }

   /**
   * Get downlinkFailed
   * @return downlinkFailed
  **/

  @JsonProperty(JSON_PROPERTY_DOWNLINK_FAILED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getDownlinkFailed() {
    return downlinkFailed;
  }


  @JsonProperty(JSON_PROPERTY_DOWNLINK_FAILED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDownlinkFailed(Boolean downlinkFailed) {
    this.downlinkFailed = downlinkFailed;
  }


  public ExportMessageFormats joinRequest(Boolean joinRequest) {
    
    this.joinRequest = joinRequest;
    return this;
  }

   /**
   * Get joinRequest
   * @return joinRequest
  **/

  @JsonProperty(JSON_PROPERTY_JOIN_REQUEST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getJoinRequest() {
    return joinRequest;
  }


  @JsonProperty(JSON_PROPERTY_JOIN_REQUEST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setJoinRequest(Boolean joinRequest) {
    this.joinRequest = joinRequest;
  }


  public ExportMessageFormats joinAccept(Boolean joinAccept) {
    
    this.joinAccept = joinAccept;
    return this;
  }

   /**
   * Get joinAccept
   * @return joinAccept
  **/

  @JsonProperty(JSON_PROPERTY_JOIN_ACCEPT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getJoinAccept() {
    return joinAccept;
  }


  @JsonProperty(JSON_PROPERTY_JOIN_ACCEPT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setJoinAccept(Boolean joinAccept) {
    this.joinAccept = joinAccept;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExportMessageFormats exportMessageFormats = (ExportMessageFormats) o;
    return Objects.equals(this.uplink, exportMessageFormats.uplink) &&
        Objects.equals(this.downlink, exportMessageFormats.downlink) &&
        Objects.equals(this.downlinkFailed, exportMessageFormats.downlinkFailed) &&
        Objects.equals(this.joinRequest, exportMessageFormats.joinRequest) &&
        Objects.equals(this.joinAccept, exportMessageFormats.joinAccept);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uplink, downlink, downlinkFailed, joinRequest, joinAccept);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExportMessageFormats {\n");
    sb.append("    uplink: ").append(toIndentedString(uplink)).append("\n");
    sb.append("    downlink: ").append(toIndentedString(downlink)).append("\n");
    sb.append("    downlinkFailed: ").append(toIndentedString(downlinkFailed)).append("\n");
    sb.append("    joinRequest: ").append(toIndentedString(joinRequest)).append("\n");
    sb.append("    joinAccept: ").append(toIndentedString(joinAccept)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

