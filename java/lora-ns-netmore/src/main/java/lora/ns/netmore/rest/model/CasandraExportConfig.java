/*
 * netmore-web-backend
 * Front end for web services.
 *
 * The version of the OpenAPI document: 1.2.83
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package lora.ns.netmore.rest.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CasandraExportConfig
 */
@JsonPropertyOrder({
  CasandraExportConfig.JSON_PROPERTY_URL,
  CasandraExportConfig.JSON_PROPERTY_KEYSPACE,
  CasandraExportConfig.JSON_PROPERTY_PASSWORD,
  CasandraExportConfig.JSON_PROPERTY_USERNAME,
  CasandraExportConfig.JSON_PROPERTY_DATACENTER,
  CasandraExportConfig.JSON_PROPERTY_CERTIFICATE
})
public class CasandraExportConfig {
  public static final String JSON_PROPERTY_URL = "url";
  private String url;

  public static final String JSON_PROPERTY_KEYSPACE = "keyspace";
  private String keyspace;

  public static final String JSON_PROPERTY_PASSWORD = "password";
  private String password;

  public static final String JSON_PROPERTY_USERNAME = "username";
  private String username;

  public static final String JSON_PROPERTY_DATACENTER = "datacenter";
  private String datacenter;

  public static final String JSON_PROPERTY_CERTIFICATE = "certificate";
  private String certificate;

  public CasandraExportConfig() {
  }

  public CasandraExportConfig url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/

  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUrl() {
    return url;
  }


  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUrl(String url) {
    this.url = url;
  }


  public CasandraExportConfig keyspace(String keyspace) {
    
    this.keyspace = keyspace;
    return this;
  }

   /**
   * Get keyspace
   * @return keyspace
  **/

  @JsonProperty(JSON_PROPERTY_KEYSPACE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getKeyspace() {
    return keyspace;
  }


  @JsonProperty(JSON_PROPERTY_KEYSPACE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setKeyspace(String keyspace) {
    this.keyspace = keyspace;
  }


  public CasandraExportConfig password(String password) {
    
    this.password = password;
    return this;
  }

   /**
   * Get password
   * @return password
  **/

  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPassword() {
    return password;
  }


  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPassword(String password) {
    this.password = password;
  }


  public CasandraExportConfig username(String username) {
    
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/

  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUsername() {
    return username;
  }


  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUsername(String username) {
    this.username = username;
  }


  public CasandraExportConfig datacenter(String datacenter) {
    
    this.datacenter = datacenter;
    return this;
  }

   /**
   * Get datacenter
   * @return datacenter
  **/

  @JsonProperty(JSON_PROPERTY_DATACENTER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDatacenter() {
    return datacenter;
  }


  @JsonProperty(JSON_PROPERTY_DATACENTER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDatacenter(String datacenter) {
    this.datacenter = datacenter;
  }


  public CasandraExportConfig certificate(String certificate) {
    
    this.certificate = certificate;
    return this;
  }

   /**
   * Get certificate
   * @return certificate
  **/

  @JsonProperty(JSON_PROPERTY_CERTIFICATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCertificate() {
    return certificate;
  }


  @JsonProperty(JSON_PROPERTY_CERTIFICATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCertificate(String certificate) {
    this.certificate = certificate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CasandraExportConfig casandraExportConfig = (CasandraExportConfig) o;
    return Objects.equals(this.url, casandraExportConfig.url) &&
        Objects.equals(this.keyspace, casandraExportConfig.keyspace) &&
        Objects.equals(this.password, casandraExportConfig.password) &&
        Objects.equals(this.username, casandraExportConfig.username) &&
        Objects.equals(this.datacenter, casandraExportConfig.datacenter) &&
        Objects.equals(this.certificate, casandraExportConfig.certificate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(url, keyspace, password, username, datacenter, certificate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CasandraExportConfig {\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    keyspace: ").append(toIndentedString(keyspace)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    datacenter: ").append(toIndentedString(datacenter)).append("\n");
    sb.append("    certificate: ").append(toIndentedString(certificate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

