/*
 * netmore-web-backend
 * Front end for web services.
 *
 * The version of the OpenAPI document: 1.2.83
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package lora.ns.netmore.rest.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import lora.ns.netmore.rest.model.Subscription;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * MessageConfig
 */
@JsonPropertyOrder({
  MessageConfig.JSON_PROPERTY_LANG,
  MessageConfig.JSON_PROPERTY_SEND_DEVICE_ONLINE_STATE,
  MessageConfig.JSON_PROPERTY_ALARMS,
  MessageConfig.JSON_PROPERTY_WARNINGS,
  MessageConfig.JSON_PROPERTY_SUBSCRIBERS
})
public class MessageConfig {
  /**
   * Gets or Sets lang
   */
  public enum LangEnum {
    SWEDISH("Swedish"),
    
    ENGLISH("English");

    private String value;

    LangEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static LangEnum fromValue(String value) {
      for (LangEnum b : LangEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_LANG = "lang";
  private LangEnum lang;

  public static final String JSON_PROPERTY_SEND_DEVICE_ONLINE_STATE = "sendDeviceOnlineState";
  private Boolean sendDeviceOnlineState;

  public static final String JSON_PROPERTY_ALARMS = "alarms";
  private List<String> alarms;

  public static final String JSON_PROPERTY_WARNINGS = "warnings";
  private List<String> warnings;

  public static final String JSON_PROPERTY_SUBSCRIBERS = "subscribers";
  private List<Subscription> subscribers;

  public MessageConfig() {
  }

  public MessageConfig lang(LangEnum lang) {
    
    this.lang = lang;
    return this;
  }

   /**
   * Get lang
   * @return lang
  **/

  @JsonProperty(JSON_PROPERTY_LANG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LangEnum getLang() {
    return lang;
  }


  @JsonProperty(JSON_PROPERTY_LANG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLang(LangEnum lang) {
    this.lang = lang;
  }


  public MessageConfig sendDeviceOnlineState(Boolean sendDeviceOnlineState) {
    
    this.sendDeviceOnlineState = sendDeviceOnlineState;
    return this;
  }

   /**
   * Get sendDeviceOnlineState
   * @return sendDeviceOnlineState
  **/

  @JsonProperty(JSON_PROPERTY_SEND_DEVICE_ONLINE_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSendDeviceOnlineState() {
    return sendDeviceOnlineState;
  }


  @JsonProperty(JSON_PROPERTY_SEND_DEVICE_ONLINE_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSendDeviceOnlineState(Boolean sendDeviceOnlineState) {
    this.sendDeviceOnlineState = sendDeviceOnlineState;
  }


  public MessageConfig alarms(List<String> alarms) {
    
    this.alarms = alarms;
    return this;
  }

  public MessageConfig addAlarmsItem(String alarmsItem) {
    if (this.alarms == null) {
      this.alarms = new ArrayList<>();
    }
    this.alarms.add(alarmsItem);
    return this;
  }

   /**
   * Get alarms
   * @return alarms
  **/

  @JsonProperty(JSON_PROPERTY_ALARMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getAlarms() {
    return alarms;
  }


  @JsonProperty(JSON_PROPERTY_ALARMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAlarms(List<String> alarms) {
    this.alarms = alarms;
  }


  public MessageConfig warnings(List<String> warnings) {
    
    this.warnings = warnings;
    return this;
  }

  public MessageConfig addWarningsItem(String warningsItem) {
    if (this.warnings == null) {
      this.warnings = new ArrayList<>();
    }
    this.warnings.add(warningsItem);
    return this;
  }

   /**
   * Get warnings
   * @return warnings
  **/

  @JsonProperty(JSON_PROPERTY_WARNINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getWarnings() {
    return warnings;
  }


  @JsonProperty(JSON_PROPERTY_WARNINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWarnings(List<String> warnings) {
    this.warnings = warnings;
  }


  public MessageConfig subscribers(List<Subscription> subscribers) {
    
    this.subscribers = subscribers;
    return this;
  }

  public MessageConfig addSubscribersItem(Subscription subscribersItem) {
    if (this.subscribers == null) {
      this.subscribers = new ArrayList<>();
    }
    this.subscribers.add(subscribersItem);
    return this;
  }

   /**
   * Get subscribers
   * @return subscribers
  **/

  @JsonProperty(JSON_PROPERTY_SUBSCRIBERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Subscription> getSubscribers() {
    return subscribers;
  }


  @JsonProperty(JSON_PROPERTY_SUBSCRIBERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubscribers(List<Subscription> subscribers) {
    this.subscribers = subscribers;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MessageConfig messageConfig = (MessageConfig) o;
    return Objects.equals(this.lang, messageConfig.lang) &&
        Objects.equals(this.sendDeviceOnlineState, messageConfig.sendDeviceOnlineState) &&
        Objects.equals(this.alarms, messageConfig.alarms) &&
        Objects.equals(this.warnings, messageConfig.warnings) &&
        Objects.equals(this.subscribers, messageConfig.subscribers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(lang, sendDeviceOnlineState, alarms, warnings, subscribers);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MessageConfig {\n");
    sb.append("    lang: ").append(toIndentedString(lang)).append("\n");
    sb.append("    sendDeviceOnlineState: ").append(toIndentedString(sendDeviceOnlineState)).append("\n");
    sb.append("    alarms: ").append(toIndentedString(alarms)).append("\n");
    sb.append("    warnings: ").append(toIndentedString(warnings)).append("\n");
    sb.append("    subscribers: ").append(toIndentedString(subscribers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

