openapi: 3.1.0
info:
  title: ThingPark things management Networks API
  description: >
    REST interface for networks management.
  version: '7.3'
servers:
  - url: 'https://community.thingpark.io/thingpark/wireless/rest'
    description: Community
  - url: 'https://thingparkenterprise.eu.actility.com/thingpark/wireless/rest'
    description: Europe
  - url: 'https://thingparkenterprise.us.actility.com/thingpark/wireless/rest'
    description: United-States
  - url: 'https://thingparkenterprise.au.actility.com/thingpark/wireless/rest'
    description: Australia
  - url: 'https://{hostname}/thingpark/wireless/rest'
    description: Self-hosted TPE
    variables:
      hostname:
        default: enterprise.actility.local
        description: Hostname of the self-hosted TPE deployment
paths:
  '/partners/mine':
    get:
      tags:
        - partners
      summary: Retrieve a network partner
      description: |
        Retrieve a network partner.

        ### Access rights:
        - `<NetworkPartner>/x`
      responses:
        '200':
          $ref: '#/components/responses/Partner'
        default:
          $ref: '#/components/responses/Error'
    put:
      tags:
        - partners
      summary: Update a network partner
      description: |
        Update a network partner.

        ### Access rights:
        - If the partner's type is `SUBSCRIBER`:
          - `<NetworkPartner>/RA`
          - `<NetworkPartner>/s1`: `MANAGE_SUBSCRIBER`
        - Else:
          - `<NetworkPartner>/a`

        ### Optimistic locking:
        - `<partner>.occ`
      parameters:
        - $ref: '#/components/parameters/Force'
      requestBody:
        $ref: '#/components/requestBodies/Partner'
      responses:
        '200':
          $ref: '#/components/responses/Partner'
        default:
          $ref: '#/components/responses/Error'
    delete:
      tags:
        - partners
      summary: Deactivate a network partner
      description: |
        Deactivate a network partner. The state is moved to DEACTIVATED and
        the network partner can no longer be accessed.

        ### Access rights:
        - `<NetworkPartner>/RA`
      responses:
        '204':
          $ref: '#/components/responses/Delete'
        default:
          $ref: '#/components/responses/Error'
    parameters: []
  '/partners/mine/bsProfiles':
    get:
      tags:
        - bs-profiles
      summary: Retrieve base station models
      description: |
        Retrieve the list of base station models accessible to the network
        partner.

        ### Access rights:
        - `<NetworkPartner>/x`
      parameters:
        - $ref: '#/components/parameters/PageIndex'
        - name: vendorID
          in: query
          description: Base station manufacturer ID filtering (exact match)
          schema:
            type: string
        - name: ismBandID
          in: query
          description: >
            ISM band ID filtering (exact match)

            If multiple ismBandID, return Base station models supporting any of ISM Band
          schema:
            type: array
            items:
              $ref: '#/components/schemas/IsmBandID'
        - $ref: '#/components/parameters/Language-tag'
      responses:
        '200':
          $ref: '#/components/responses/BsProfiles'
        default:
          $ref: '#/components/responses/Error'
    parameters: []
  '/partners/mine/bsVendors':
    get:
      tags:
        - bs-profiles
      summary: Retrieve base station manufacturers
      description: |
        Retrieve the list of base station manufacturers accessible to the network
        partner.

        ### Access rights:
        - `<NetworkPartner>/x`
      parameters:
        - $ref: '#/components/parameters/PageIndex'
        - name: name
          in: query
          description: |
            Base station manufacturer name filtering (prefix match)

            This parameter must no longer be used: name filtering is limited to the en-US language.
          deprecated: true
          schema:
            type: string
        - name: ID
          in: query
          description: Base station manufacturer ID filtering (exact match)
          schema:
            type: string
        - name: ismBandID
          in: query
          description: >
            ISM band ID filtering (exact match)


            Only return Base station manufacturers having at least one Base Station Profile supporting this IMS band
          schema:
            type: array
            items:
              $ref: '#/components/schemas/IsmBandID'
        - name: sort
          in: query
          description: >
            Defines how results are sorted:

            - BY_NAME: Base station manufacturers are ordered by name (lexicographic order)

            - BY_LAST_CREATED: Base station manufacturers of last created Base

            Stations are returned first (reverse creation date order) then

            remaining Base station manufacturers are ordered by name (lexicographic

            order)


            When this query parameter is not specified, BY_NAME is used by default.
          schema:
            enum:
              - BY_NAME
              - BY_LAST_CREATED
            type: string
        - $ref: '#/components/parameters/Language-tag'
      responses:
        '200':
          $ref: '#/components/responses/BaseStationVendors'
        default:
          $ref: '#/components/responses/Error'
    parameters: []
  '/partners/mine/bss':
    get:
      tags:
        - base-stations
      summary: Retrieve base stations
      description: |
        Retrieve the list of base stations attached to the network partner.

        ### Access rights:
        - `<NetworkPartner>/x`
        - If the authenticated user has domain restrictions, only base stations
          matching the domain restrictions can be retrieved.
      x-rateLimit:
        category: MEDIUM_IMPACT
      parameters:
        - $ref: '#/components/parameters/PageIndex'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/Language-tag'
        - $ref: '#/components/parameters/BsName'
        - $ref: '#/components/parameters/BsLRRID'
        - $ref: '#/components/parameters/BsVersion'
        - $ref: '#/components/parameters/BsCustomVersion'
        - $ref: '#/components/parameters/BsRebootFrom'
        - $ref: '#/components/parameters/BsMinRC'
        - $ref: '#/components/parameters/BsAlarmLevel'
        - name: minLat
          in: query
          description: >
            Only returns BS that match the geolocation rectangle.


            When no localization query parameter are set, non-localized BS will be also returned.
          schema:
            type: number
            format: float
        - name: minLon
          in: query
          description: >
            Only returns BS that match the geolocation rectangle.


            When no localization query parameter are set, non-localized BS will be also returned.
          schema:
            type: number
            format: float
        - name: maxLat
          in: query
          description: >
            Only returns BS that match the geolocation rectangle.


            When no localization query parameter are set, non-localized BS will be also returned.
          schema:
            type: number
            format: float
        - name: maxLon
          in: query
          description: >
            Only returns BS that match the geolocation rectangle.


            When no localization query parameter are set, non-localized BS will be also returned.
          schema:
            type: number
            format: float
        - $ref: '#/components/parameters/BsLRRUUID'
        - $ref: '#/components/parameters/BsHealthState'
        - $ref: '#/components/parameters/BsQuery'
        - $ref: '#/components/parameters/BsTag'
        - $ref: '#/components/parameters/BsDomain'
        - name: sort
          in: query
          description: |
            Defines how results are sorted (&lt;attribute&gt;,&lt;order&gt;).

            Following attributes are supported:
            - 'name': by name
            - 'lastUpFrameDate': by timestamp of the last downlink frame
            - 'lastDwFrameDate': by timestamp of the last uplink frame
            - 'version': by software version of the BS
            - 'lastReboot': by last reboot timestamp of the BS (software uptime)
            - 'creationDate': by date of creation of the BS

            Following orders are supported:
            - 'asc': ascending order
            - 'desc': descending order

            By default, results are sorted by creation date ascending order.
          schema:
            type: string
            example: name,asc
        - $ref: '#/components/parameters/BsRfRegionID'
        - $ref: '#/components/parameters/BsSecurityState'
        - $ref: '#/components/parameters/BsAppServerID'
      responses:
        '200':
          $ref: '#/components/responses/Bss'
        default:
          $ref: '#/components/responses/Error'
    post:
      tags:
        - base-stations
      summary: Add a base station
      description: |
        Add a base station. The base station is initially in the `ACTIVE` state.

        To be fully operational, the RF region of the base station must be configured using the
        "Update the RF region of a base station" POST operation.

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      x-rateLimit:
        category: MEDIUM_IMPACT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bs'
            examples:
              BaseStation:
                $ref: '#/components/examples/BaseStationPost'
        required: true
      responses:
        '201':
          $ref: '#/components/responses/Bs'
        default:
          $ref: '#/components/responses/Error'
    parameters: []
  '/partners/mine/bss/alarms':
    get:
      tags:
        - alarms
      summary: Retrieve alarms of all base stations
      description: |
        Retrieve a list of alarms associated with all base stations.
        Alarms are filtered and sorted according to the query parameters.

        For more information about possible alarms, see <a href="./alarms.html" target="_blank">Alarms</a>.

        ### Access rights:
        - `<NetworkPartner>/x`
        - If the authenticated user has domain restrictions, only alarms of base
          stations matching the domain restrictions can be retrieved.
      parameters:
        - $ref: '#/components/parameters/PageIndex'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/Language-tag'
        - $ref: '#/components/parameters/TimestampFrom'
        - $ref: '#/components/parameters/TimestampTo'
        - $ref: '#/components/parameters/AlarmID'
        - $ref: '#/components/parameters/AlarmUid'
        - name: lrrID
          in: query
          description: LRR ID filtering (prefix match)
          schema:
            type: array
            items:
              type: string
        - name: state
          in: query
          description: >
            State of the alarm:

            - 6: CRITICAL 

            - 5: MAJOR

            - 4: MINOR

            - 3: WARNING

            - 2: INDETERMINATE

            - 1: CLEARED


            The state filtering strategy is defined by the query parameter stateFiltering

            Note: When this query parameter is not specified, alarms are returned without consideration for the state (i.e. alarms can be UNCLEARED or CLEARED)
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 6
        - name: stateFiltering
          in: query
          description: >
            Alarm state filtering strategy:

            - 'EQUAL_OR_UPPER': Only returns alarms for which the state is equal to or upper than the provided level in query parameter state

            - 'EQUAL': Only returns alarms for which the state is equal to the provided level in query parameter state


            By default, 'EQUAL_OR_UPPER' mode is used.
          schema:
            type: string
            enum:
              - EQUAL_OR_UPPER
              - EQUAL
            default: EQUAL_OR_UPPER
        - $ref: '#/components/parameters/AlarmAcked'
        - $ref: '#/components/parameters/BsDomain'
        - name: sort
          in: query
          description: >
            Defines how results are sorted (&lt;attribute&gt;,&lt;order&gt;).


            Following attributes are supported:

            - 'state': results are sorted by state then by update timestamp (decreasing order)

            - 'acked': results are sorted by acked status then by update timestamp (decreasing order)


            Following orders are supported:

            - 'asc': ascending order

            - 'desc': descending order


            By default, results are sorted by update timestamp (decreasing order)
          schema:
            type: string
            example: state,desc
        - name: limit
          in: query
          description: >
            Limit the number of results. By default, no limit is applied.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          $ref: '#/components/responses/AlarmsBsActive'
        default:
          $ref: '#/components/responses/Error'
    parameters: []
  '/partners/mine/bss/alarms/ack':
    post:
      tags:
        - alarms
      summary: Ack a list of base station alarms
      description: |
        Acknowledge a list of alarms associated with all base stations.
        Alarms to acknowledge are identified by their Uids.

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, only alarms of base
          stations matching the domain restrictions can be acknowledged.
      requestBody:
        $ref: '#/components/requestBodies/AlarmsBssAck'
      responses:
        '204':
          description: Operation success
        default:
          $ref: '#/components/responses/Error'
    parameters: []
  '/partners/mine/bss/alarms/histories':
    get:
      tags:
        - alarms
      summary: Retrieve alarms history of all base stations
      description: |
        Retrieve the alarms history (cleared alarms) associated with all base stations.
        Alarms are filtered according to the query parameters.
        Alarms are sorted by clearance timestamp in descending order.

        For more information about possible alarms, see <a href="./alarms.html" target="_blank">Alarms</a>.

        ### Access rights:
        - `<NetworkPartner>/x`
        - If the authenticated user has domain restrictions, only alarms of base
          stations matching the domain restrictions can be retrieved.
      parameters:
        - $ref: '#/components/parameters/PageIndex'
        - $ref: '#/components/parameters/Language-tag'
        - $ref: '#/components/parameters/TimestampFrom'
        - $ref: '#/components/parameters/TimestampTo'
        - $ref: '#/components/parameters/AlarmID'
        - $ref: '#/components/parameters/AlarmUid'
        - $ref: '#/components/parameters/AlarmIndex'
        - $ref: '#/components/parameters/AlarmHistoryState'
        - $ref: '#/components/parameters/AlarmAcked'
        - name: lrrID
          in: query
          description: LRR ID filtering (prefix match)
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          $ref: '#/components/responses/AlarmsBs'
        default:
          $ref: '#/components/responses/Error'
    parameters: []
  '/partners/mine/bss/alarms/stateDistributions':
    get:
      tags:
        - alarms
      summary: Retrieve the states distribution of base station alarms
      description: |
        Retrieve the states distribution of alarms associated with all base stations.
        Alarms are filtered according to the query parameters.

        ### Access rights:
        - `<NetworkPartner>/x`
        - If the authenticated user has domain restrictions, only alarms of base
          stations matching the domain restrictions are counted.
      x-rateLimit:
        category: MEDIUM_IMPACT
      parameters:
        - $ref: '#/components/parameters/TimestampFrom'
        - $ref: '#/components/parameters/TimestampTo'
        - $ref: '#/components/parameters/AlarmState'
        - $ref: '#/components/parameters/AlarmAcked'
      responses:
        '200':
          $ref: '#/components/responses/AlarmsBssStateDistributions'
        default:
          $ref: '#/components/responses/Error'
    parameters: []
  '/partners/mine/bss/clusters':
    parameters: []
    get:
      tags:
        - base-stations
      summary: Retrieve base stations clusters
      description: |
        Retrieve the list of base stations attached to the network partner
        having known geographical coordinates. Base stations that are close
        to each other are grouped in the same cluster.
        Distance threshold to group two base stations in the same cluster is
        evaluated to ensure that at most 64 clusters are returned for the 
        given bounding box.

        ### Access rights:
        - `<NetworkPartner>/x`
        - If the authenticated user has domain restrictions, only base stations
          matching the domain restrictions can be retrieved.
      x-rateLimit:
        category: HIGH_IMPACT
      parameters:
        - $ref: '#/components/parameters/Language-tag'
        - name: minLat
          in: query
          required: true
          description: >
            Only returns BS that match the geolocation rectangle.
          schema:
            type: number
            format: float
        - name: minLon
          in: query
          required: true
          description: >
            Only returns BS that match the geolocation rectangle.
          schema:
            type: number
            format: float
        - name: maxLat
          in: query
          required: true
          description: >
            Only returns BS that match the geolocation rectangle.
          schema:
            type: number
            format: float
        - name: maxLon
          in: query
          required: true
          description: >
            Only returns BS that match the geolocation rectangle.
          schema:
            type: number
            format: float
        - $ref: '#/components/parameters/BsName'
        - $ref: '#/components/parameters/BsLRRID'
        - $ref: '#/components/parameters/BsVersion'
        - $ref: '#/components/parameters/BsCustomVersion'
        - $ref: '#/components/parameters/BsRebootFrom'
        - $ref: '#/components/parameters/BsMinRC'
        - $ref: '#/components/parameters/BsAlarmLevel'
        - $ref: '#/components/parameters/BsLRRUUID'
        - $ref: '#/components/parameters/BsHealthState'
        - $ref: '#/components/parameters/BsQuery'
        - $ref: '#/components/parameters/BsTag'
        - $ref: '#/components/parameters/BsDomain'
        - $ref: '#/components/parameters/BsRfRegionID'
        - $ref: '#/components/parameters/BsSecurityState'
        - $ref: '#/components/parameters/BsAppServerID'
      responses:
        '200':
          $ref: '#/components/responses/BssClusters'
        default:
          $ref: '#/components/responses/Error'
  '/partners/mine/bss/counters':
    get:
      tags:
        - base-stations
      summary: Retrieve the number of base stations per health state
      description: |
        Retrieve the number of base stations per health state.

        ### Access rights:
        - `<NetworkPartner>/x`
        - If the authenticated user has domain restrictions, only base stations
          matching the domain restrictions are counted.
      x-rateLimit:
        category: MEDIUM_IMPACT
      responses:
        '200':
          $ref: '#/components/responses/Counters'
        default:
          $ref: '#/components/responses/Error'
    parameters: []
  '/partners/mine/bss/domains':
    post:
      tags:
        - base-stations
      summary: Associate domains with base stations
      description: |
        Add or remove a list of domains on a list of Base Stations.

        When adding a domain, any existing domain belonging to the same group is
        replaced by the new one.

        When removing a domain, no error is returned if the domain is not
        associated with a subset or all targeted Base Stations.

        Only supported if the partner's type is `SUBSCRIBER`.

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, base stations must
          match the domain restrictions before and after the operation.
      requestBody:
        $ref: '#/components/requestBodies/BssDomains'
      responses:
        '204':
          description: Operation success
        default:
          $ref: '#/components/responses/Error'
    parameters: []
  '/partners/mine/bss/tags':
    post:
      tags:
        - base-stations
      summary: Tag or untag a list of base stations
      description: |
        Tag or untag a list of base stations by providing either a list of LRR IDs or a list of search criteria:
        * If a list of LRR IDs is provided in the request body: Tag or untag the list of base stations identified by the list of LRR IDs. The maximum number of LRR IDs is the maximum page size (system-wide configuration).
        * Else: Tag or untag the list of base stations matching the query parameters. Only one page is tagged/untagged at once.

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, only base stations
          matching the domain restrictions can be tagged.
      parameters:
        - $ref: '#/components/parameters/PageIndex'
        - $ref: '#/components/parameters/PageSize'
        - name: name
          in: query
          description: Only tags/untags base stations matching this name (prefix match)
          schema:
            type: string
        - name: LRRID
          in: query
          description: Only tags/untags base stations matching this LRR ID (prefix match)
          schema:
            type: array
            items:
              type: string
        - name: version
          in: query
          description: Only tags/untags base stations matching this software version
            (prefix match)
          schema:
            type: string
        - name: customVersion
          in: query
          description: Only tags/untags base stations matching this custom version (exact
            match)
          schema:
            type: string
        - name: rebootFrom
          in: query
          description: >
            Only tags/untags base stations matching this rebooted since this
            date/time.


            Syntax: ISO 8601 date/time including time offset. If no time offset is provided the server's offset is used by default.
          schema:
            type: string
            format: date-time
        - name: minRC
          in: query
          description: >-
            Only tags/untags base stations for which the min remaining capacity
            (up or down) is equal or lower than the provided min remaining
            capacity
          schema:
            type: integer
            format: int32
        - name: alarmLevel
          in: query
          description: >
            Only tags/untags base stations for which one or several NOT-ACKED
            alarms exist:

            - 6: tags/untags base stations with at least a CRITICAL nack alarm (state = 6)

            - 5: tags/untags base stations with at least a CRITICAL or a MAJOR nack alarm (state >=5)

            - 4: tags/untags base stations with at least a CRITICAL, MAJOR or MINOR nack alarm (state >=4)

            - 3: tags/untags base stations with at least a CRITICAL, MAJOR, MINOR or WARNING nack alarm (state >=3)

            - 2: tags/untags base stations with at least an UNCLEARED nack alarm (state >=2)

            - 1: tags/untags base stations with at least an UNCLEARED or CLEARED nack alarm

            (state >=1)


            Note: When this query parameter is not specified, base stations are tagged/untagged without consideration for alarms.
          schema:
            type: integer
            format: int32
        - name: minLat
          in: query
          description: >
            Only tags/untags base stations matching this geolocation rectangle.


            When no localization query parameter are set, non-localized BS will be also tagged/untagged.
          schema:
            type: number
            format: float
        - name: minLon
          in: query
          description: >
            Only tags/untags base stations matching this geolocation rectangle.


            When no localization query parameter are set, non-localized BS will be also tagged/untagged.
          schema:
            type: number
            format: float
        - name: maxLat
          in: query
          description: >
            Only tags/untags base stations matching this geolocation rectangle.


            When no localization query parameter are set, non-localized BS will be also tagged/untagged.
          schema:
            type: number
            format: float
        - name: maxLon
          in: query
          description: >
            Only tags/untags base stations matching this geolocation rectangle.


            When no localization query parameter are set, non-localized BS will be also tagged/untagged.
          schema:
            type: number
            format: float
        - name: LRRUUID
          in: query
          description: Only tags/untags base stations matching this LRR UUID (prefix match)
          schema:
            type: string
        - name: healthState
          in: query
          description: |
            Only tags/untags base stations matching this health state.

            Multiple values can be set. If not provided, all Base Stations are
            tagged/untagged.
          schema:
            $ref: '#/components/schemas/BsHealthState'
        - name: query
          in: query
          description: |
            Only tags/untags base stations with a LRR ID or LRR UUID or name containing
            the provided term. (prefix match)
          schema:
            type: string
        - name: tag
          in: query
          description: |
            Only tags/untags base stations matching this tag name (exact match)
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TagName'
        - name: action
          in: query
          description: |
            Action to perform:
            - TAG: tag all base stations matching the criteria
            - UNTAG: untag all base stations matching the criteria
          schema:
            enum:
              - TAG
              - UNTAG
            type: string
            default: TAG
        - name: sort
          in: query
          description: |
            Defines how results are sorted (&lt;attribute&gt;,&lt;order&gt;).

            Following attributes are supported:
            - 'name': by name
            - 'lastUpFrameDate': by timestamp of the last downlink frame
            - 'lastDwFrameDate': by timestamp of the last uplink frame
            - 'version': by software version of the BS
            - 'lastReboot': by last reboot timestamp of the BS (software uptime)
            - 'creationDate': by date of creation of the BS

            Following orders are supported:
            - 'asc': ascending order
            - 'desc': descending order

            By default, results are sorted by creation date ascending order.
          schema:
            type: string
            example: name,asc
        - name: rfRegionID
          in: query
          description: Only tags/untags base stations matching this RF Region provisioning
            ID (exact match)
          schema:
            type: array
            items:
              type: string
      requestBody:
        $ref: '#/components/requestBodies/BssTag'
      responses:
        '200':
          $ref: '#/components/responses/BsTag'
        default:
          $ref: '#/components/responses/Error'
    parameters: []
  '/partners/mine/bss/tags/suggestions':
    get:
      tags:
        - base-stations
      summary: Retrieve tag name suggestions
      description: |
        Retrieve a list of tag names starting with a query string (case insensitive).

        The number of tag names returned in the response is configurable
        (system-wide). By default the 20 first results are returned.

        Results are ordered by "name" (lexicographic order).

        ### Access rights:
        - `<NetworkPartner>/x`
      parameters:
        - $ref: '#/components/parameters/Query'
        - $ref: '#/components/parameters/Exclude'
      responses:
        '200':
          $ref: '#/components/responses/TagSuggestions'
        default:
          $ref: '#/components/responses/Error'
    parameters: []
  '/partners/mine/bss/{bsUid}':
    get:
      tags:
        - base-stations
      summary: Retrieve a base station
      description: |
        Retrieve a base station.

        ### Access rights:
        - `<NetworkPartner>/x`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      parameters:
        - $ref: '#/components/parameters/Language-tag'
      responses:
        '200':
          $ref: '#/components/responses/Bs'
        default:
          $ref: '#/components/responses/Error'
    put:
      tags:
        - base-stations
      summary: Update a base station
      description: |
        Update a base station.

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions before and after the update.

        ### Optimistic locking:
        - `<bs>.occ`
      parameters:
        - $ref: '#/components/parameters/Force'
      requestBody:
        $ref: '#/components/requestBodies/Bs'
      responses:
        '200':
          $ref: '#/components/responses/Bs'
        default:
          $ref: '#/components/responses/Error'
    delete:
      tags:
        - base-stations
      summary: Delete a base station
      description: |
        Delete a base station.

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      x-rateLimit:
        category: MEDIUM_IMPACT
      responses:
        '204':
          $ref: '#/components/responses/Delete'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/admins/antennasGainAndLossStatus':
    get:
      tags:
        - admins
      summary: Retrieve gain and cable loss of all antennas of a base station
      description: |
        Retrieve gain and cable loss of all antennas of a base station.

        Only supported if the following condition is satisfied:
        - The Base Station executes the Actility LRR software (`model.softwareType = 'LRR_LINUX'`)

          AND
        - The LRR software version is &gt;= 2.0.0 (`version >= '2.0.0'`)

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      x-rateLimit:
        category: MEDIUM_IMPACT
      responses:
        '200':
          $ref: '#/components/responses/AntennasGainAndLossStatus'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/admins/availableLrrVersions':
    get:
      tags:
        - admins
      summary: Retrieve the list of available LRR software versions of a base station
      description: |
        Retrieve the list of available LRR software versions for this model of
        base station.

        Only supported if the Base Station executes the Actility LRR software (`model.softwareType = 'LRR_LINUX'`).

        Only LRR software version that match the following rules are returned:
        - LRR software version must &gt; than the current version,
        - LRR software version status must be UP-TO-DATE,
        - LRR software version must be &gt;= 1.4.2 (this is the first LRR
          version where HTTP commands are working),
        - If the firmware version and the FPGA version currently installed on
          the Base Station have been reported: LRR software version must be
          compatible with these versions
        - If the firmware version and the FPGA version currently installed on
          the Base Station have not been reported: no firmware version
          compatibility and no FPGA version compatibility must be defined for the
          LRR software version

        ### Access rights:
        - `<NetworkPartner>/x`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      x-rateLimit:
        category: MEDIUM_IMPACT
      responses:
        '200':
          $ref: '#/components/responses/AvailableLrrVersions'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/admins/backup':
    post:
      tags:
        - admins
      summary: Backup the current LRR software configuration of a base station
      description: |
        Backup the current LRR software configuration (The previous one is
        erased).

        Only supported if the following condition is satisfied:
        - The Base Station executes the Actility LRR software (`model.softwareType = 'LRR_LINUX'`)

          AND
        - The LRR software version is &gt;= 1.4.12 (`version >= '1.4.12'`)

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.

        ### Optimistic locking:
        - `<bs>.occ`
      x-rateLimit:
        category: MEDIUM_IMPACT
      requestBody:
        $ref: '#/components/requestBodies/Backup'
      responses:
        '201':
          $ref: '#/components/responses/Backup'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/admins/backupSwVersion':
    get:
      tags:
        - admins
      summary: Retrieve the backup version of a base station
      description: |
        Retrieve the backup version.

        Only supported if the following condition is satisfied:
        - The Base Station executes the Actility LRR software (`model.softwareType = 'LRR_LINUX'`)

          AND
        - The LRR software version is &gt;= 1.4.12 (`version >= '1.4.12'`)

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      x-rateLimit:
        category: MEDIUM_IMPACT
      responses:
        '200':
          $ref: '#/components/responses/BackupSwVersion'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/admins/cancelRadioScan':
    post:
      tags:
        - admins
      summary: Cancel the analysis of the radio spectrum for a base station
      description: |
        Cancel the analysis of the radio spectrum (the report will not be
        generated).

        Only supported if the following condition is satisfied:
        - The Base Station executes the Actility LRR software (`model.softwareType = 'LRR_LINUX'`)

          AND
        - The LRR software version is &gt;= 1.4.20 (`version >= '1.4.20'`)

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.

        ### Optimistic locking:
        - `<bs>.occ`
      x-rateLimit:
        category: MEDIUM_IMPACT
      requestBody:
        $ref: '#/components/requestBodies/CancelRadioScan'
      responses:
        '201':
          $ref: '#/components/responses/CancelRadioScan'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/admins/downloadLrrVersion':
    post:
      tags:
        - admins
      summary: Download a LRR software package from repository for a base station
      description: |
        Download a LRR software package from repository to be available for LRR software upgrade.

        Only supported if the Base Station executes the Actility LRR software (`model.softwareType = 'LRR_LINUX'`).

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.

        ### Optimistic locking:
        - `<bs>.occ`
      x-rateLimit:
        category: MEDIUM_IMPACT
      requestBody:
        $ref: '#/components/requestBodies/DownloadLrrVersion'
      responses:
        '201':
          $ref: '#/components/responses/DownloadLrrVersion'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/admins/fineTimestampKeysStatus':
    get:
      tags:
        - admins
      summary: Retrieve the fine-timestamps decryption keys of a base station
      description: |
        Retrieve the current fine-timestamps decryption keys.

        Only supported if the following condition is satisfied:
        - The Base Station executes the Actility LRR software (`model.softwareType = 'LRR_LINUX'`)

          AND
        - The LRR software version is &gt;= 2.0.0 (`version >= '2.0.0'`)

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      x-rateLimit:
        category: MEDIUM_IMPACT
      responses:
        '200':
          $ref: '#/components/responses/FineTimestampKeysStatus'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/admins/lastCmdStatus':
    get:
      tags:
        - admins
      summary: Retrieve the last command completion status of a base station
      description: |
        Retrieve the last command completion status.

        If the last command completion status is still PROCESSING after 10 minutes and the Base Station is not reachable:
        the last command completion status is automatically moved to ERR_NOEND.

        Only supported if the following condition is satisfied:
        - The Base Station executes the Actility LRR software (`model.softwareType = 'LRR_LINUX'`) and the LRR software version is &gt;= 1.4.12 (`version >= '1.4.12'`)

          OR
        - The Base Station executes the Semtech Basic Station software (`model.softwareType = 'BASIC_STATION_LINUX'`)

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      x-rateLimit:
        category: MEDIUM_IMPACT
      responses:
        '200':
          $ref: '#/components/responses/LastCmdStatus'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/admins/locationStatus':
    get:
      tags:
        - admins
      summary: Retrieve the location status of a base station
      description: |
        Retrieve the Base Station location status.

        Only supported if the following condition is satisfied:
        - The Base Station executes the Actility LRR software (`model.softwareType = 'LRR_LINUX'`) and the LRR software version is &gt;= 1.8.0 (`version >= '1.8.0'`)

          OR
        - The Base Station executes the Semtech Basic Station software (`model.softwareType = 'BASIC_STATION_LINUX'`)

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      x-rateLimit:
        category: MEDIUM_IMPACT
      responses:
        '200':
          $ref: '#/components/responses/LocationStatus'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/admins/logStatus':
    get:
      tags:
        - admins
      summary: Retrieve the log configuration of a base station
      description: |
        Retrieve the current log configuration.

        Only supported if the following condition is satisfied:
        - The Base Station executes the Actility LRR software (`model.softwareType = 'LRR_LINUX'`)

          AND
        - The LRR software version is &gt;= 2.2.17 (`version >= '2.2.17'`)

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      x-rateLimit:
        category: MEDIUM_IMPACT
      responses:
        '200':
          $ref: '#/components/responses/LogStatus'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/admins/reboot':
    post:
      tags:
        - admins
      summary: Reboot a base station
      description: |
        Reboot the Base Station.

        Only supported if the following condition is satisfied:
        - The Base Station executes the Actility LRR software (`model.softwareType = 'LRR_LINUX'`)

          AND
        - The LRR software version is &gt;= 1.4.12 (`version >= '1.4.12'`)

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.

        ### Optimistic locking:
        - `<bs>.occ`
      x-rateLimit:
        category: MEDIUM_IMPACT
      requestBody:
        $ref: '#/components/requestBodies/Reboot'
      responses:
        '201':
          $ref: '#/components/responses/Reboot'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/admins/restart':
    post:
      tags:
        - admins
      summary: Restart the LRR software of a base station
      description: |
        Restart the LRR software.

        Only supported if the following condition is satisfied:
        - The Base Station executes the Actility LRR software (`model.softwareType = 'LRR_LINUX'`)

          AND
        - The LRR software version is &gt;= 1.4.12 (`version >= '1.4.12'`)

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.

        ### Optimistic locking:
        - `<bs>.occ`
      x-rateLimit:
        category: MEDIUM_IMPACT
      requestBody:
        $ref: '#/components/requestBodies/Restart'
      responses:
        '201':
          $ref: '#/components/responses/Restart'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/admins/restore':
    post:
      tags:
        - admins
      summary: Restore the backup LRR software configuration of a base station
      description: |
        Restore the backup LRR software configuration (The current one is
        erased).

        Only supported if the following condition is satisfied:
        - The Base Station executes the Actility LRR software (`model.softwareType = 'LRR_LINUX'`)

          AND
        - The LRR software version is &gt;= 1.4.12 (`version >= '1.4.12'`)

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.

        ### Optimistic locking:
        - `<bs>.occ`
      x-rateLimit:
        category: MEDIUM_IMPACT
      requestBody:
        $ref: '#/components/requestBodies/Restore'
      responses:
        '201':
          $ref: '#/components/responses/Restore'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/admins/rfRegionStatus':
    get:
      tags:
        - admins
      summary: Retrieve the RF region of a base station
      description: |
        Retrieve the current RF Region provisioning ID and version.

        Only supported if the following condition is satisfied:
        - The Base Station executes the Actility LRR software (`model.softwareType = 'LRR_LINUX'`) and the LRR software version is &gt;= 1.8.0 (`version >= '1.8.0'`)

          OR
        - The Base Station executes the Semtech Basic Station software (`model.softwareType = 'BASIC_STATION_LINUX'`)

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      x-rateLimit:
        category: MEDIUM_IMPACT
      responses:
        '200':
          $ref: '#/components/responses/RfRegionStatus'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/admins/rfcDownlinkStop':
    post:
      tags:
        - admins
      summary: Stop the RF cell downlink communication of a base station
      description: |
        Stop the RF cell downlink communication.

        Only supported if the following condition is satisfied:
        - The Base Station executes the Actility LRR software (`model.softwareType = 'LRR_LINUX'`)

          AND
        - The LRR software version is &gt;= 1.4.12 (`version >= '1.4.12'`)

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.

        ### Optimistic locking:
        - `<bs>.occ`
      x-rateLimit:
        category: MEDIUM_IMPACT
      requestBody:
        $ref: '#/components/requestBodies/RfcDownlinkStop'
      responses:
        '201':
          $ref: '#/components/responses/RfcDownlinkStop'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/admins/rfcStart':
    post:
      tags:
        - admins
      summary: Restart the RF cell uplink and downlink communication of a base station
      description: |
        Restart the RF cell uplink and downlink communication.

        Only supported if the following condition is satisfied:
        - The Base Station executes the Actility LRR software (`model.softwareType = 'LRR_LINUX'`)

          AND
        - The LRR software version is &gt;= 1.4.12 (`version >= '1.4.12'`)

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.

        ### Optimistic locking:
        - `<bs>.occ`
      x-rateLimit:
        category: MEDIUM_IMPACT
      requestBody:
        $ref: '#/components/requestBodies/RfcStart'
      responses:
        '201':
          $ref: '#/components/responses/RfcStart'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/admins/rfcStatus':
    get:
      tags:
        - admins
      summary: Retrieve the RF cell status of a base station
      description: |
        Retrieve the RF Cell state.

        Only supported if the following condition is satisfied:
        - The Base Station executes the Actility LRR software (`model.softwareType = 'LRR_LINUX'`)

          AND
        - The LRR software version is &gt;= 1.4.12 (`version >= '1.4.12'`)

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      x-rateLimit:
        category: MEDIUM_IMPACT
      responses:
        '200':
          $ref: '#/components/responses/RfcStatus'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/admins/rfcStop':
    post:
      tags:
        - admins
      summary: Stop the RF cell uplink and downlink communication of a base station
      description: |
        Stop the RF cell uplink and downlink communication.

        Only supported if the following condition is satisfied:
        - The Base Station executes the Actility LRR software (`model.softwareType = 'LRR_LINUX'`)

          AND
        - The LRR software version is &gt;= 1.4.12 (`version >= '1.4.12'`)

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.

        ### Optimistic locking:
        - `<bs>.occ`
      x-rateLimit:
        category: MEDIUM_IMPACT
      requestBody:
        $ref: '#/components/requestBodies/RfcStop'
      responses:
        '201':
          $ref: '#/components/responses/RfcStop'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/admins/scanRadio':
    post:
      tags:
        - admins
      summary: Start an analysis of the radio spectrum for a base station
      description: |
        Start an analysis of the radio spectrum.

        Only supported if the following condition is satisfied:
        - The Base Station executes the Actility LRR software (`model.softwareType = 'LRR_LINUX'`)

          AND
        - The LRR software version is &gt;= 1.4.20 (`version >= '1.4.20'`)

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.

        ### Optimistic locking:
        - `<bs>.occ`
      x-rateLimit:
        category: MEDIUM_IMPACT
      requestBody:
        $ref: '#/components/requestBodies/ScanRadio'
      responses:
        '201':
          $ref: '#/components/responses/ScanRadio'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/admins/scanRadioStatus':
    get:
      tags:
        - admins
      summary: Retrieve the RF scan status of a base station
      description: |
        Retrieve the RF scan status.

        Only supported if the following condition is satisfied:
        - The Base Station executes the Actility LRR software (`model.softwareType = 'LRR_LINUX'`)

          AND
        - The LRR software version is &gt;= 1.4.20 (`version >= '1.4.20'`)

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      x-rateLimit:
        category: MEDIUM_IMPACT
      responses:
        '200':
          $ref: '#/components/responses/ScanRadioStatus'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/admins/settings':
    put:
      tags:
        - admins
      summary: Update the administration settings of a base station
      description: |
        Update the administration settings

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.

        ### Optimistic locking:
        - `<bs>.occ`
      x-rateLimit:
        category: MEDIUM_IMPACT
      requestBody:
        $ref: '#/components/requestBodies/AdminSettings'
      responses:
        '200':
          $ref: '#/components/responses/AdminSettings'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/admins/softwareUptime':
    get:
      tags:
        - admins
      summary: Retrieve the LRR software uptime of a base station
      description: |
        Retrieve the LRR software uptime.

        Only supported if the following condition is satisfied:
        - The Base Station executes the Actility LRR software (`model.softwareType = 'LRR_LINUX'`)

          AND
        - The LRR software version is &gt;= 1.4.12 (`version >= '1.4.12'`)

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      x-rateLimit:
        category: MEDIUM_IMPACT
      responses:
        '200':
          $ref: '#/components/responses/SoftwareUptime'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/admins/swVersion':
    get:
      tags:
        - admins
      summary: Retrieve the LRR software version of a base station
      description: |
        Retrieve the LRR software version

        Only supported if the following condition is satisfied:
        - The Base Station executes the Actility LRR software (`model.softwareType = 'LRR_LINUX'`)

          AND
        - The LRR software version is &gt;= 1.4.12 (`version >= '1.4.12'`)

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      x-rateLimit:
        category: MEDIUM_IMPACT
      responses:
        '200':
          $ref: '#/components/responses/SwVersion'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/admins/systemUptime':
    get:
      tags:
        - admins
      summary: Retrieve the system uptime of a base station
      description: |
        Retrieve the BS uptime.

        Only supported if the following condition is satisfied:
        - The Base Station executes the Actility LRR software (`model.softwareType = 'LRR_LINUX'`)

          AND
        - The LRR software version is &gt;= 1.4.12 (`version >= '1.4.12'`)

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      x-rateLimit:
        category: MEDIUM_IMPACT
      responses:
        '200':
          $ref: '#/components/responses/SystemUptime'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/admins/updateAntennasGainAndLoss':
    post:
      tags:
        - admins
      summary: Update the gain and cable loss for all antennas of a base station
      description: |
        Update the gain and cable loss for all antennas.

        Only supported if the following condition is satisfied:
        - The Base Station executes the Actility LRR software (`model.softwareType = 'LRR_LINUX'`)

          AND
        - The LRR software version is &gt;= 2.0.0 (`version >= '2.0.0'`)

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.

        ### Optimistic locking:
        - `<bs>.occ`
      x-rateLimit:
        category: MEDIUM_IMPACT
      requestBody:
        $ref: '#/components/requestBodies/UpdateAntennasGainAndLoss'
      responses:
        '201':
          $ref: '#/components/responses/UpdateAntennasGainAndLoss'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/admins/updateFineTimestampKeys':
    post:
      tags:
        - admins
      summary: Update the fine-timestamps decryption keys of a base station
      description: |
        Update the fine-timestamps decryption keys.

        Only supported if the following condition is satisfied:
        - The Base Station executes the Actility LRR software (`model.softwareType = 'LRR_LINUX'`)

          AND
        - The LRR software version is &gt;= 2.0.0 (`version >= '2.0.0'`)

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.

        ### Optimistic locking:
        - `<bs>.occ`
      x-rateLimit:
        category: MEDIUM_IMPACT
      requestBody:
        $ref: '#/components/requestBodies/UpdateFineTimestampKeys'
      responses:
        '201':
          $ref: '#/components/responses/UpdateFineTimestampKeys'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/admins/updateLocation':
    post:
      tags:
        - admins
      summary: Update the location of a base station
      description: |
        Update the Base Station location.

        Only supported if the following condition is satisfied:
        - The Base Station executes the Actility LRR software (`model.softwareType = 'LRR_LINUX'`) and the LRR software version is &gt;= 1.8.0 (`version >= '1.8.0'`)

          OR
        - The Base Station executes the Semtech Basic Station software (`model.softwareType = 'BASIC_STATION_LINUX'`)

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.

        ### Optimistic locking:
        - `<bs>.occ`
      x-rateLimit:
        category: MEDIUM_IMPACT
      requestBody:
        $ref: '#/components/requestBodies/UpdateLocation'
      responses:
        '201':
          $ref: '#/components/responses/UpdateLocation'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/admins/updateLog':
    post:
      tags:
        - admins
      summary: Update the log configuration of a base station
      description: |
        Update the log configuration.

        Only supported if the following condition is satisfied:
        - The Base Station executes the Actility LRR software (`model.softwareType = 'LRR_LINUX'`)

          AND
        - The LRR software version is &gt;= 2.2.17 (`version >= '2.2.17'`)

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.

        ### Optimistic locking:
        - `<bs>.occ`
      x-rateLimit:
        category: MEDIUM_IMPACT
      requestBody:
        $ref: '#/components/requestBodies/UpdateLog'
      responses:
        '201':
          $ref: '#/components/responses/UpdateLog'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/admins/updateRfRegion':
    post:
      tags:
        - admins
      summary: Update the RF region of a base station
      description: |
        Update the LRR RF Region.

        Only supported if the following condition is satisfied:
        - The Base Station executes the Actility LRR software (`model.softwareType = 'LRR_LINUX'`) and the LRR software version is &gt;= 1.8.0 (`version >= '1.8.0'`)

          OR
        - The Base Station executes the Semtech Basic Station software (`model.softwareType = 'BASIC_STATION_LINUX'`)

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.

        ### Optimistic locking:
        - `<bs>.occ`
      x-rateLimit:
        category: MEDIUM_IMPACT
      requestBody:
        $ref: '#/components/requestBodies/UpdateRfRegion'
      responses:
        '201':
          $ref: '#/components/responses/UpdateRfRegion'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/admins/upgrade':
    post:
      tags:
        - admins
      summary: Upgrade the LRR software of a base station
      description: |
        Upgrade the LRR software version.

        Only supported if the following condition is satisfied:
        - The Base Station executes the Actility LRR software (`model.softwareType = 'LRR_LINUX'`)

          AND
        - The LRR software version is &gt;= 1.4.12 (`version >= '1.4.12'`)

        The following rules must be matched:
        - Target version must &gt; than the current version
        - Target version status must be UP-TO-DATE

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.

        ### Optimistic locking:
        - `<bs>.occ`
      x-rateLimit:
        category: MEDIUM_IMPACT
      requestBody:
        $ref: '#/components/requestBodies/Upgrade'
      responses:
        '201':
          $ref: '#/components/responses/Upgrade'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/admins/basicsStation/remoteShells':
    parameters:
      - $ref: '#/components/parameters/Bs'
    get:
      tags:
        - admins
      summary: List remote shell sessions
      description: |
        List remote shell sessions. This operation is available only for basics station models.

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.

      x-rateLimit:
        category: MEDIUM_IMPACT
      responses:
        '200':
          $ref: '#/components/responses/BasicsStationRemoteShellSessions'
        default:
          $ref: '#/components/responses/ErrorJsonOnly'
  '/partners/mine/bss/{bsUid}/admins/basicsStation/remoteShells/{remoteShellIdx}':
    parameters:
      - $ref: '#/components/parameters/Bs'
      - $ref: '#/components/parameters/RemoteShellIdx'
      - name: term
        in: query
        required: false
        description: the `TERM` env var value
        schema:
          type: string
    get:
      tags:
        - admins
      summary: Start the remote shell session
      description: |
        Start the remote shell session. This operation is available only for basics station models.

        The operation is expected a websocket connection. Session input / output is transported
        as websocket message.

        The session will be automatically stopped on websocket close.

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.

      x-rateLimit:
        category: HIGH_IMPACT
      responses:
        '101':
          description: Upgrade to websocket
        default:
          $ref: '#/components/responses/ErrorJsonOnly'
  '/partners/mine/bss/{bsUid}/admins/basicsStation/remoteShells/{remoteShellIdx}/stop':
    parameters:
      - $ref: '#/components/parameters/Bs'
      - $ref: '#/components/parameters/RemoteShellIdx'
    post:
      tags:
        - admins
      summary: Stop the remote shell session
      description: |
        Stop the remote shell session. This operation is available only for basics station models.

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.

      x-rateLimit:
        category: HIGH_IMPACT
      responses:
        '204':
          description: Session stopped
        default:
          $ref: '#/components/responses/ErrorJsonOnly'
  '/partners/mine/bss/{bsUid}/alarms':
    get:
      tags:
        - alarms
      summary: Retrieve alarms of a base station
      description: |
        Retrieve a list of alarms associated with a given base station.
        Alarms are filtered according to the query parameters.
        Alarms are sorted by last update timestamp in descending order.

        For more information about possible alarms, see <a href="./alarms.html" target="_blank">Alarms</a>.

        ### Access rights:
        - `<NetworkPartner>/x`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      parameters:
        - $ref: '#/components/parameters/PageIndex'
        - $ref: '#/components/parameters/Language-tag'
        - $ref: '#/components/parameters/TimestampFrom'
        - $ref: '#/components/parameters/TimestampTo'
        - $ref: '#/components/parameters/AlarmID'
        - $ref: '#/components/parameters/AlarmState'
        - $ref: '#/components/parameters/AlarmAcked'
      responses:
        '200':
          $ref: '#/components/responses/AlarmsActive'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/alarms/ack':
    post:
      tags:
        - alarms
      summary: Ack a list of alarms for a base station
      description: |
        Acknowledge a list of alarms associated with a given base station.
        Alarms to acknowledge are filtered according to the query parameters.

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      x-rateLimit:
        category: MEDIUM_IMPACT
      parameters:
        - $ref: '#/components/parameters/TimestampFrom'
        - $ref: '#/components/parameters/TimestampTo'
        - $ref: '#/components/parameters/AlarmID'
        - $ref: '#/components/parameters/AlarmState'
        - $ref: '#/components/parameters/KpiAlgo'
      responses:
        '201':
          description: Operation success
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/alarms/histories':
    get:
      tags:
        - alarms
      summary: Retrieve alarms history of a base station
      description: |
        Retrieve the alarms history (cleared alarms) associated with a given base station.
        Alarms are filtered according to the query parameters.
        Alarms are sorted by clearance timestamp in descending order.

        For more information about possible alarms, see <a href="./alarms.html" target="_blank">Alarms</a>.

        ### Access rights:
        - `<NetworkPartner>/x`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      parameters:
        - $ref: '#/components/parameters/PageIndex'
        - $ref: '#/components/parameters/Language-tag'
        - $ref: '#/components/parameters/TimestampFrom'
        - $ref: '#/components/parameters/TimestampTo'
        - $ref: '#/components/parameters/AlarmID'
        - $ref: '#/components/parameters/AlarmIndex'
        - $ref: '#/components/parameters/AlarmHistoryState'
        - $ref: '#/components/parameters/AlarmAcked'
      responses:
        '200':
          $ref: '#/components/responses/Alarms'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/alarms/{alarmUid}/ack':
    post:
      tags:
        - alarms
      summary: Ack a base station alarm
      description: |
        Acknowledge a base station alarm identified by its Uid.

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      responses:
        '201':
          description: Operation success
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Alarm'
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/ants':
    get:
      tags:
        - base-stations
      summary: Retrieve the RF antennas of a base station
      description: |
        Retrieve the list of antennas attached to the base station.

        ### Access rights:
        - `<NetworkPartner>/x`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      responses:
        '200':
          $ref: '#/components/responses/Ants'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/ants/{antUid}':
    get:
      tags:
        - base-stations
      summary: Retrieve a base station RF antenna
      description: |
        Retrieve an antenna detail.

        ### Access rights:
        - `<NetworkPartner>/x`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      responses:
        '200':
          $ref: '#/components/responses/Ant'
        default:
          $ref: '#/components/responses/Error'
    put:
      tags:
        - base-stations
      summary: Update a base station RF antenna
      description: |
        Update an antenna.

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.

        ### Optimistic locking:
        - `<bs>.occ`
      parameters:
        - $ref: '#/components/parameters/Force'
      requestBody:
        $ref: '#/components/requestBodies/Ant'
      responses:
        '200':
          $ref: '#/components/responses/Ant'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Ant'
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/ants/{antUid}/images':
    get:
      tags:
        - base-stations
      summary: Retrieve the images of a base station RF antenna
      description: |
        Retrieve the list of images associated to an antenna.

        Results are not ordered.

        ### Access rights:
        - `<NetworkPartner>/x`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      parameters:
        - $ref: '#/components/parameters/PageIndex'
      responses:
        '200':
          $ref: '#/components/responses/Images'
        default:
          $ref: '#/components/responses/Error'
    post:
      tags:
        - base-stations
      summary: Upload an image of a base station RF antenna
      description: |
        Upload an image of a base station antenna.

        The image is directly transported in the HTTP payload (for instance with
        an image/jpeg content-type).

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      requestBody:
        content:
          image/jpeg:
            schema:
              type: string
              format: binary
      responses:
        '204':
          description: Operation success
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Ant'
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/ants/{antUid}/images/{imageUid}':
    get:
      tags:
        - base-stations
      summary: Retrieve an image of a base station RF antenna
      description: |
        Retrieve an image.

        The image is directly transported in the HTTP payload (for instance with
        an image/jpeg content-type).

        ### Access rights:
        - `<NetworkPartner>/x`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      responses:
        '200':
          description: Image successfuly retrieves
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
        default:
          $ref: '#/components/responses/Error'
    delete:
      tags:
        - base-stations
      summary: Delete an image of a base station RF antenna
      description: |
        Remove an image to the antenna.

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      responses:
        '204':
          $ref: '#/components/responses/Delete'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Ant'
      - $ref: '#/components/parameters/Bs'
      - $ref: '#/components/parameters/Image'
  '/partners/mine/bss/{bsUid}/check':
    get:
      tags:
        - base-stations
      summary: Retrieve the states of a base station
      description: |
        Retrieve the current states of the base stations.

        ### Access rights:
        - `<NetworkPartner>/x`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      responses:
        '200':
          $ref: '#/components/responses/Check'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/frames':
    get:
      tags:
        - base-stations
      summary: Retrieve the radio traffic history of a base station
      description: |
        Retrieve the uplink and downlink frames history:
        - Number of uplink and downlink frame per aggregated time slot
        - Cumulated payload size (expressed in kilo bytes) for uplink and down
        link frame per aggregated time slot

        ### Access rights:
        - `<NetworkPartner>/x`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      x-rateLimit:
        category: MEDIUM_IMPACT
      parameters:
        - name: begin
          in: query
          description: >
            Date/time of the first frame to retrieve (OPTIONAL).


            Syntax: ISO 8601 date/time including time offset. If no time offset is provided the server's offset is used by default.


            Default value: When this query parameter is not specified the last frames are retrieved by default.
          schema:
            type: string
            format: date-time
        - $ref: '#/components/parameters/DurationDaysHours'
        - $ref: '#/components/parameters/AggregationStep'
        - $ref: '#/components/parameters/KpiAlgo'
        - $ref: '#/components/parameters/Timezone'
      responses:
        '200':
          $ref: '#/components/responses/Frames'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/regenerateCertificate':
    post:
      tags:
        - base-stations
      summary: Regenerate the certificate of a base station
      description: |
        Revoke the current X.509 certificate and generate a new one.

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      responses:
        '204':
          description: Operation success
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/rfcell/ants/{antUid}/lcs/{lcId}/dutyCycles':
    get:
      tags:
        - rfcell
      summary: Retrieve the duty cycle records for a base station antenna on a logical
        channel
      description: |
        Retrieve the duty cycle records.

        ### Access rights:
        - `<NetworkPartner>/x`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      responses:
        '200':
          $ref: '#/components/responses/DutyCycles'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Ant'
      - $ref: '#/components/parameters/Bs'
      - $ref: '#/components/parameters/Lc'
  '/partners/mine/bss/{bsUid}/rfcell/ants/{antUid}/lcs/{lcId}/dutyCycles/histories':
    get:
      tags:
        - rfcell
      summary: Retrieve the duty cycle history for a base station antenna on a logical
        channel
      description: |
        Retrieve the duty cycle history.

        ### Access rights:
        - `<NetworkPartner>/x`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      x-rateLimit:
        category: MEDIUM_IMPACT
      parameters:
        - $ref: '#/components/parameters/BeginFirstReportAnalyse'
        - $ref: '#/components/parameters/DurationDaysHours'
        - $ref: '#/components/parameters/AggregationStep'
        - $ref: '#/components/parameters/KpiAlgo'
        - $ref: '#/components/parameters/Timezone'
      responses:
        '200':
          $ref: '#/components/responses/HistoriesDutyCycles'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Ant'
      - $ref: '#/components/parameters/Bs'
      - $ref: '#/components/parameters/Lc'
  '/partners/mine/bss/{bsUid}/rfcell/ants/{antUid}/lcs/{lcId}/dutyCycles/reset':
    post:
      tags:
        - rfcell
      summary: Reset the duty cycle records for a base station antenna on a logical
        channel
      description: |
        Reset the duty cycle records.

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      parameters:
        - $ref: '#/components/parameters/ResetAll'
      responses:
        '204':
          description: Operation success
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Ant'
      - $ref: '#/components/parameters/Bs'
      - $ref: '#/components/parameters/Lc'
  '/partners/mine/bss/{bsUid}/rfcell/ants/{antUid}/lcs/{lcId}/signalsAndNoises':
    get:
      tags:
        - rfcell
      summary: Retrieve the signal strength and noise records for a base station
        antenna on a logical channel
      description: |
        Retrieve the signal strength and noise records.

        ### Access rights:
        - `<NetworkPartner>/x`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      responses:
        '200':
          $ref: '#/components/responses/SignalsAndNoises'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Ant'
      - $ref: '#/components/parameters/Bs'
      - $ref: '#/components/parameters/Lc'
  '/partners/mine/bss/{bsUid}/rfcell/ants/{antUid}/lcs/{lcId}/signalsAndNoises/reset':
    post:
      tags:
        - rfcell
      summary: Reset the signal strength and noise records for a base station antenna
        on a logical channel
      description: |
        Reset the signal strength and noise records (by default for the given logical
        channel).

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      parameters:
        - $ref: '#/components/parameters/ResetAll'
      responses:
        '204':
          description: Operation success
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Ant'
      - $ref: '#/components/parameters/Bs'
      - $ref: '#/components/parameters/Lc'
  '/partners/mine/bss/{bsUid}/rfcell/ants/{antUid}/lcs/{lcId}/signalsAndNoises/snDistributions':
    get:
      tags:
        - rfcell
      summary: Retrieve the signal strength and noise distributions for a base station
        antenna on a logical channel
      description: |
        Analyze the RSSI (Received Signal Strength Indicator), SNR (Signal to
        Noise Ratio) or ESP (Estimated Signal Power) distribution for uplink
        packets over a reference period for a given logical channel (LC):
        - Uplink frames RSSI distribution,
        - Uplink frames SNR distribution,
        - Uplink frames ESP distribution.

        ### Access rights:
        - `<NetworkPartner>/x`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      x-rateLimit:
        category: MEDIUM_IMPACT
      parameters:
        - $ref: '#/components/parameters/BeginFirstFrameAnalyse'
        - $ref: '#/components/parameters/DurationHoursMinutes'
        - name: precision
          deprecated: true
          in: query
          description: |
            Define the precision of each level (OPTIONAL)

            Default value: When this query parameter is not specified a
            precision of **1 dBm** is used for RSSI and ESP, and a precision of **0.2
            dB** is used for SNR

            Supported precision: Between **0.1 ... 1***

            This parameter must no longer be used: the default precision must be used.
          schema:
            type: number
            format: float
        - name: type
          in: query
          description: >
            Type of the analysis to perform ("RSSI", "SNR" or "ESP")


            Default value: When this query parameter is not specified a RSSI analysis is performed.
          schema:
            enum:
              - RSSI
              - SNR
              - ESP
            type: string
        - $ref: '#/components/parameters/KpiAlgo'
      responses:
        '200':
          $ref: '#/components/responses/SnDistributions'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Ant'
      - $ref: '#/components/parameters/Bs'
      - $ref: '#/components/parameters/Lc'
  '/partners/mine/bss/{bsUid}/rfcell/ants/{antUid}/spreadingFactors/sfDistributions':
    get:
      tags:
        - rfcell
      summary: Retrieve the spreading factor distribution for a base station antenna
      description: |
        Analyze the spreading factor (SF) distribution for uplink and downlink
        packets over a reference period for a range of logical channels:
        - Uplink frames SF distribution,
        - Downlink frames SF distribution.

        ### Access rights:
        - `<NetworkPartner>/x`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      parameters:
        - name: lcs
          deprecated: true
          in: query
          description: |
            Logical channels considered for SF distribution:
            - A logical channel (e.g. 255)
            - A list of logical channels (e.g. 1,2,3)
            - A range of logical channels (e.g. 0-254)

            Default value: When this query parameter is not specified all
            logical channels are considered.

            This parameter must no longer be used: SF distribution should be done on all logical channels.
          example: '1,2,3'
          schema:
            type: string
        - $ref: '#/components/parameters/BeginFirstFrameAnalyse'
        - $ref: '#/components/parameters/DurationHoursMinutes'
      responses:
        '200':
          $ref: '#/components/responses/SfDistributions'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Ant'
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/rfcell/beacons':
    get:
      tags:
        - rfcell
      summary: Retrieve the beacon transmissions statistics of a base station
      description: |
        Retrieve the beacon transmissions statistics:
        - Total number of beacon transmissions requested by the LRC since LRR
          startup
        - Total number of beacon effectively transmitted since LRR startup
        - The delivery cause of the last beacon transmission

        Not available if the Base Station executes the Semtech Basic Station software (`model.softwareType = 'BASIC_STATION_LINUX'`).

        ### Access rights:
        - `<NetworkPartner>/x`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      responses:
        '200':
          $ref: '#/components/responses/Beacons'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/rfcell/downlinks/statusDistribution':
    get:
      tags:
        - rfcell
      summary: Retrieve the distribution of downlink transmission failures for a base
        station
      description: |
        Analyze the Downlink frames delivery status distribution over a
        reference period:
        - RX1 failure causes distribution
        - RX2 failure causes distribution
        - Ping slot failure causes distribution
        - Total downlink frames actually sent
        - Total downlink frames transmission failures

        ### Access rights:
        - `<NetworkPartner>/x`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      x-rateLimit:
        category: MEDIUM_IMPACT
      parameters:
        - $ref: '#/components/parameters/AntennaIndex'
        - $ref: '#/components/parameters/BeginFirstFrameAnalyse'
        - $ref: '#/components/parameters/DurationDaysHours'
        - $ref: '#/components/parameters/KpiAlgo'
      responses:
        '200':
          $ref: '#/components/responses/StatusDistributions'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/rfcell/indicators':
    get:
      tags:
        - rfcell
      summary: Retrieve the advanced RF cell indicators of a base station
      description: |
        Retrieve the advanced RF cell indicators.

        For now the following advanced RF cell indicators are supported:

        <html>
        <table>
        <thead><tr>
          <th><strong>ID</strong></th>
          <th><strong>Type</strong></th>
          <th><strong>Category</strong></th>
          <th><strong>Description</strong></th>
        </tr></thead>
        <tbody>
        <tr>
          <td>urcv</td>
          <td>Integer (w/o max)</td>
          <td>Uplink</td>
          <td>Number of frames received from the radio</td></tr>
        <tr>
          <td>ucrc</td>
          <td>Integer (w/o max)</td>
          <td>Uplink</td>
          <td>Number of frames received with a CRC error</td></tr>
        <tr>
          <td>usz</td>
          <td>Integer (w/o max)</td>
          <td>Uplink</td>
          <td>Number of frames received with a wrong length</td></tr>
        <tr>
          <td>udly</td>
          <td>Integer (w/o max)</td>
          <td>Uplink</td>
          <td>Number of response received too late and reported to the R2 slot</td></tr>
        <tr>
          <td>uder</td>
          <td>Integer (w/o max)</td>
          <td>Uplink</td>
          <td>Number of response received too late and discarded (no R2 or received after R2)</td></tr>
        <tr>
          <td>unwf</td>
          <td>Integer (w/o max)</td>
          <td>Uplink</td>
          <td>Number of frames dropped due to network filters</td></tr>
        <tr>
          <td>dsnd</td>
          <td>Integer (w/o max)</td>
          <td>Downlink</td>
          <td>Number of frames sent toward the radio (including ACK)</td></tr>
        <tr>
          <td>dwai</td>
          <td>Integer with MAX</td>
          <td>Downlink</td>
          <td>Number of frames waiting a transmission slot</td></tr>
        <tr>
          <td>dbsy</td>
          <td>Integer (w/o max)</td>
          <td>Downlink</td>
          <td>Number of downlink packets dropped because the modem was busy</td></tr>
        <tr>
          <td>cok</td>
          <td>Integer (w/o max)</td>
          <td>RF cell modem</td>
          <td>Number of modem starting OK</td></tr>
        <tr>
          <td>cerr</td>
          <td>Integer (w/o max)</td>
          <td>RF cell modem</td>
          <td>Number of modem starting failure</td></tr>
        <tr>
          <td>conf</td>
          <td>Integer (w/o max)</td>
          <td>RF cell modem</td>
          <td>Number of modem configuration failure</td></tr>
        <tr>
          <td>clnk</td>
          <td>Integer (w/o max)</td>
          <td>RF cell modem</td>
          <td>Number of times the link with the modem has been lost</td></tr>
        <tr>
          <td>breq</td>
          <td>Integer (w/o max)</td>
          <td>Beacons</td>
          <td>Number of beacon transmissions requested </td></tr>
        <tr>
          <td>bsnd</td>
          <td>Integer (w/o max)</td>
          <td>Beacons</td>
          <td>Number of beacons transmitted </td></tr>
        </tbody></table></html>

        Not available if the Base Station executes the Semtech Basic Station software (`model.softwareType = 'BASIC_STATION_LINUX'`).

        ### Access rights:
        - `<NetworkPartner>/x`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      responses:
        '200':
          $ref: '#/components/responses/IndicatorsRfcell'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/rfcell/indicators/reset':
    post:
      tags:
        - rfcell
      summary: Reset the advanced RF cell indicators of a base station
      description: |
        Reset the advanced RF cell indicators.

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      responses:
        '204':
          description: Operation success
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/rfcell/servedDevices':
    get:
      tags:
        - rfcell
      summary: Retrieve the list of devices served by a base station
      description: |
        Retrieve the list of devices for which the last uplink frame was in the RF range of the base station.

        If the network partner is a subscriber, only devices belonging to the same subscriber account are returned.

        Following information elements are available for each device:
        - Name (only returned if the device belongs to the network partner and matches the domain restrictons of the authenticated user),
        - HREF (only returned if the device belongs to the network partner and matches the domain restrictons of the authenticated user),
        - DevEUI,
        - DevAddr,
        - Timestamp of the last uplink frame,
        - Last known location (latitude and longitude) when available,
        - Last RSSI, SNR and ESP from the point of view of the base station (even when the base station was not selected as best LRR),
        - LRR ID of the best gateway (this is the LRR ID of the base station when the base station was the best gateway for this device,
          this is the LRR ID of another base station when the base station was not the best gateway for this device).

        Note: The "best gateway" is the base station offering the strongest RF link (highest SNR of the last uplink packet).

        Additionally, retrieve the list of all base stations involved in the analysis.
        Following information elements are available for each base station:
        - LRR ID,
        - Location (latitude and longitude) when available,
        - HREF when the base station belongs to the same network partner and matches the domain restrictons of the authenticated user,

        Limitation:
        - Roaming devices are not retrieved.

        ### Access rights:
        - `<NetworkPartner>/x`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      parameters:
        - $ref: '#/components/parameters/PageIndex'
        - $ref: '#/components/parameters/PageSize'
        - name: duration
          in: query
          description: |
            Size of the analysis window. Supported values: PxD (x days).
          schema:
            type: string
            default: P1D
        - name: bsRank
          in: query
          description: Only return devices for which the rank of this base station in the
            RF link matches one of the specified values.
          schema:
            type: array
            items:
              type: integer
              format: int32
              minimum: 1
              maximum: 3
            default: [ 1, 2, 3 ]
        - name: devicesWithLocationOnly
          in: query
          description: Only return devices for which the location is available.
          schema:
            type: boolean
            default: false
          allowEmptyValue: true
        - name: sort
          in: query
          description: |
            Defines how results are sorted (&lt;attribute&gt;,&lt;order&gt;).

            Following attributes are supported:
            - 'lastUpTimestamp': by timestamp of the last uplink frame

            Following orders are supported:
            - 'asc': ascending order
            - 'desc': descending order

            By default, results are sorted by timestamp of the last uplink frame descending order.
          schema:
            type: string
            default: lastUpTimestamp,desc
      responses:
        '200':
          $ref: '#/components/responses/ServedDevices'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/sys/cpu':
    get:
      tags:
        - sys
      summary: Retrieve the CPU usage records of a base station
      description: |
        Retrieve the min and max CPU usage since last record reset.

        Not available if the Base Station executes the Semtech Basic Station software (`model.softwareType = 'BASIC_STATION_LINUX'`).

        ### Access rights:
        - `<NetworkPartner>/x`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      responses:
        '200':
          $ref: '#/components/responses/Cpu'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/sys/cpu/histories':
    get:
      tags:
        - sys
      summary: Retrieve the CPU usage history of a base station
      description: |
        Retrieve the CPU history.

        Not available if the Base Station executes the Semtech Basic Station software (`model.softwareType = 'BASIC_STATION_LINUX'`).

        ### Access rights:
        - `<NetworkPartner>/x`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      x-rateLimit:
        category: MEDIUM_IMPACT
      parameters:
        - $ref: '#/components/parameters/BeginFirstReportAnalyse'
        - $ref: '#/components/parameters/DurationDaysHours'
        - $ref: '#/components/parameters/AggregationStep'
        - $ref: '#/components/parameters/KpiAlgo'
        - $ref: '#/components/parameters/Timezone'
      responses:
        '200':
          $ref: '#/components/responses/HistoriesCpu'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/sys/cpu/reset':
    post:
      tags:
        - sys
      summary: Reset the CPU usage records of a base station
      description: |
        Reset the min and max CPU usage record.

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      responses:
        '204':
          description: Operation success
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/sys/disks/{diskIndex}':
    get:
      tags:
        - sys
      summary: Retrieve the usage records of a filesystem partition on a base station
      description: |
        Retrieve the min and max file system usage since last record reset.

        Not available if the Base Station executes the Semtech Basic Station software (`model.softwareType = 'BASIC_STATION_LINUX'`).

        ### Access rights:
        - `<NetworkPartner>/x`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      responses:
        '200':
          $ref: '#/components/responses/Disk'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
      - $ref: '#/components/parameters/Disk'
  '/partners/mine/bss/{bsUid}/sys/disks/{diskIndex}/histories':
    get:
      tags:
        - sys
      summary: Retrieve the usage history of a filesystem partition on a base station
      description: |
        Retrieve the file system usage history.

        Not available if the Base Station executes the Semtech Basic Station software (`model.softwareType = 'BASIC_STATION_LINUX'`).

        ### Access rights:
        - `<NetworkPartner>/x`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      x-rateLimit:
        category: MEDIUM_IMPACT
      parameters:
        - $ref: '#/components/parameters/BeginFirstReportAnalyse'
        - $ref: '#/components/parameters/DurationDaysHours'
        - $ref: '#/components/parameters/AggregationStep'
        - $ref: '#/components/parameters/KpiAlgo'
        - $ref: '#/components/parameters/Timezone'
      responses:
        '200':
          $ref: '#/components/responses/HistoriesDisk'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
      - $ref: '#/components/parameters/Disk'
  '/partners/mine/bss/{bsUid}/sys/disks/{diskIndex}/reset':
    post:
      tags:
        - sys
      summary: Reset the usage records of a filesystem partition on a base station
      description: |
        Reset the min and max file system usage record.

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      responses:
        '204':
          description: Operation success
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
      - $ref: '#/components/parameters/Disk'
  '/partners/mine/bss/{bsUid}/sys/ram':
    get:
      tags:
        - sys
      summary: Retrieve the RAM usage records of a base station
      description: |
        Retrieve the min and max RAM usage since last record reset.

        Not available if the Base Station executes the Semtech Basic Station software (`model.softwareType = 'BASIC_STATION_LINUX'`).

        ### Access rights:
        - `<NetworkPartner>/x`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      responses:
        '200':
          $ref: '#/components/responses/Ram'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/sys/ram/histories':
    get:
      tags:
        - sys
      summary: Retrieve the RAM usage history of a base station
      description: |
        Retrieve the RAM history.

        Not available if the Base Station executes the Semtech Basic Station software (`model.softwareType = 'BASIC_STATION_LINUX'`).

        ### Access rights:
        - `<NetworkPartner>/x`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      x-rateLimit:
        category: MEDIUM_IMPACT
      parameters:
        - $ref: '#/components/parameters/BeginFirstReportAnalyse'
        - $ref: '#/components/parameters/DurationDaysHours'
        - $ref: '#/components/parameters/AggregationStep'
        - $ref: '#/components/parameters/KpiAlgo'
        - $ref: '#/components/parameters/Timezone'
      responses:
        '200':
          $ref: '#/components/responses/HistoriesRam'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/sys/ram/reset':
    post:
      tags:
        - sys
      summary: Reset the RAM usage records of a base station
      description: |
        Reset the min and max RAM usage record.

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      responses:
        '204':
          description: Operation success
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/tags':
    get:
      tags:
        - base-stations
      summary: Retrieve the tags of a base station
      description: |
        Retrieve the list of Tags associated with a Base Station.

        Results are ordered by "name" (lexicographic order).

        ### Access rights:
        - `<NetworkPartner>/x`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      parameters:
        - $ref: '#/components/parameters/PageIndex'
      responses:
        '200':
          $ref: '#/components/responses/BsTags'
        default:
          $ref: '#/components/responses/Error'
    post:
      tags:
        - base-stations
      summary: Add a tag to a base station
      description: |
        Add a Tag to a Base Station.

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      requestBody:
        $ref: '#/components/requestBodies/BsTag'
      responses:
        '201':
          $ref: '#/components/responses/BsTag'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/tags/{tagUid}':
    put:
      tags:
        - base-stations
      summary: Update a base station tag
      description: |
        Update a Tag associated with a Base Station.

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      requestBody:
        $ref: '#/components/requestBodies/BsTag'
      responses:
        '200':
          $ref: '#/components/responses/BsTag'
        default:
          $ref: '#/components/responses/Error'
    delete:
      tags:
        - base-stations
      summary: Remove a tag from a base station
      description: |
        Remove a Tag from a Base Station.

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      responses:
        '204':
          $ref: '#/components/responses/Delete'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Tag'
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/wans/iecQueues':
    get:
      tags:
        - wans
      summary: Retrieve the uplink queue usage records of a base station
      description: |
        Retrieve the IEC queues records.

        Not available if the Base Station executes the Semtech Basic Station software (`model.softwareType = 'BASIC_STATION_LINUX'`).

        ### Access rights:
        - `<NetworkPartner>/x`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      responses:
        '200':
          $ref: '#/components/responses/IecQueues'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/wans/iecQueues/histories':
    get:
      tags:
        - wans
      summary: Retrieve the uplink queue usage history of a base station
      description: |
        Retrieve the IEC queues history.

        Not available if the Base Station executes the Semtech Basic Station software (`model.softwareType = 'BASIC_STATION_LINUX'`).

        ### Access rights:
        - `<NetworkPartner>/x`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      x-rateLimit:
        category: MEDIUM_IMPACT
      parameters:
        - $ref: '#/components/parameters/BeginFirstReportAnalyse'
        - $ref: '#/components/parameters/DurationDaysHours'
        - $ref: '#/components/parameters/AggregationStep'
        - $ref: '#/components/parameters/KpiAlgo'
        - $ref: '#/components/parameters/Timezone'
      responses:
        '200':
          $ref: '#/components/responses/HistoriesIecQueues'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/wans/iecQueues/reset':
    post:
      tags:
        - wans
      summary: Reset the uplink queue records of a base station
      description: |
        Reset the IEC queues records.

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      responses:
        '204':
          description: Operation success
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/wans/indicators':
    get:
      tags:
        - wans
      summary: Retrieve the advanced backhaul indicators of a base station
      description: |
        Retrieve the advanced WAN indicators.

        Not available if the Base Station executes the Semtech Basic Station software (`model.softwareType = 'BASIC_STATION_LINUX'`).

        ### Access rights:
        - `<NetworkPartner>/x`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      responses:
        '200':
          $ref: '#/components/responses/IndicatorsWans'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/wans/indicators/reset':
    post:
      tags:
        - wans
      summary: Reset the advanced backhaul indicators of a base station
      description: |
        Reset the advanced WAN indicators.

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      responses:
        '204':
          description: Operation success
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
  '/partners/mine/bss/{bsUid}/wans/ints/{intUid}':
    get:
      tags:
        - wans
      summary: Retrieve the usage records of a base station backhaul interface
      description: |
        Retrieve the network interface records.

        Not available if the Base Station executes the Semtech Basic Station software (`model.softwareType = 'BASIC_STATION_LINUX'`).

        ### Access rights:
        - `<NetworkPartner>/x`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      responses:
        '200':
          $ref: '#/components/responses/Int'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
      - $ref: '#/components/parameters/Int'
  '/partners/mine/bss/{bsUid}/wans/ints/{intUid}/bitrates':
    get:
      tags:
        - wans
      summary: Retrieve the TX/RX throughput of a base station backhaul interface
      description: |
        Retrieve the Tx/Rx average and max bitrate for a given network
        interface.

        Not available if the Base Station executes the Semtech Basic Station software (`model.softwareType = 'BASIC_STATION_LINUX'`).

        ### Access rights:
        - `<NetworkPartner>/x`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      x-rateLimit:
        category: MEDIUM_IMPACT
      parameters:
        - $ref: '#/components/parameters/BeginFirstReportAnalyse'
        - $ref: '#/components/parameters/DurationDaysHours'
        - $ref: '#/components/parameters/AggregationStep'
        - $ref: '#/components/parameters/KpiAlgo'
        - $ref: '#/components/parameters/Timezone'
      responses:
        '200':
          $ref: '#/components/responses/Bitrates'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
      - $ref: '#/components/parameters/Int'
  '/partners/mine/bss/{bsUid}/wans/ints/{intUid}/histories':
    get:
      tags:
        - wans
      summary: Retrieve the traffic history of a base station backhaul interface
      description: |
        Retrieve the Tx/Rx traffic history of a given network interface.

        ### Access rights:
        - `<NetworkPartner>/x`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      parameters:
        - $ref: '#/components/parameters/BeginFirstReportAnalyse'
        - $ref: '#/components/parameters/DurationDaysHours'
        - $ref: '#/components/parameters/AggregationStep'
        - $ref: '#/components/parameters/Timezone'
      responses:
        '200':
          $ref: '#/components/responses/HistoriesInt'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
      - $ref: '#/components/parameters/Int'
  '/partners/mine/bss/{bsUid}/wans/ints/{intUid}/reset':
    post:
      tags:
        - wans
      summary: Reset the usage records of a base station backhaul interface
      description: |
        Reset the network interface records (by default for the given
        interface).

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      parameters:
        - name: resetAll
          in: query
          description: Force the reset for all network interface.
          schema:
            type: boolean
      responses:
        '204':
          description: Operation success
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
      - $ref: '#/components/parameters/Int'
  '/partners/mine/bss/{bsUid}/wans/ints/{intUid}/roundTrips':
    get:
      tags:
        - wans
      summary: Retrieve the round trip delay history of a base station backhaul
        interface
      description: |
        Retrieve the average, standard deviation and max round trip for a given
        network interface.

        Not available if the Base Station executes the Semtech Basic Station software (`model.softwareType = 'BASIC_STATION_LINUX'`).

        ### Access rights:
        - `<NetworkPartner>/x`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      x-rateLimit:
        category: MEDIUM_IMPACT
      parameters:
        - $ref: '#/components/parameters/BeginFirstReportAnalyse'
        - $ref: '#/components/parameters/DurationDaysHours'
        - $ref: '#/components/parameters/AggregationStep'
        - $ref: '#/components/parameters/KpiAlgo'
        - $ref: '#/components/parameters/Timezone'
      responses:
        '200':
          $ref: '#/components/responses/RoundTrips'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
      - $ref: '#/components/parameters/Int'
  '/partners/mine/bss/{bsUid}/wans/lrcs/{lrcUid}':
    get:
      tags:
        - wans
      summary: Retrieve the backhaul usage records of a base station with a network
        server
      description: |
        Retrieve the LRC records.

        Not available if the Base Station executes the Semtech Basic Station software (`model.softwareType = 'BASIC_STATION_LINUX'`).

        ### Access rights:
        - `<NetworkPartner>/x`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      responses:
        '200':
          $ref: '#/components/responses/Lrc'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
      - $ref: '#/components/parameters/Lrc'
  '/partners/mine/bss/{bsUid}/wans/lrcs/{lrcUid}/iecPackets':
    get:
      tags:
        - wans
      summary: Retrieve the backhaul traffic history of a base station with a network
        server
      description: |
        Retrieve the received/send IEC packet history for a given LRC.

        Not available if the Base Station executes the Semtech Basic Station software (`model.softwareType = 'BASIC_STATION_LINUX'`).

        ### Access rights:
        - `<NetworkPartner>/x`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      x-rateLimit:
        category: MEDIUM_IMPACT
      parameters:
        - $ref: '#/components/parameters/BeginFirstReportAnalyse'
        - $ref: '#/components/parameters/DurationDaysHours'
        - $ref: '#/components/parameters/AggregationStep'
        - $ref: '#/components/parameters/KpiAlgo'
        - $ref: '#/components/parameters/Timezone'
      responses:
        '200':
          $ref: '#/components/responses/IecPackets'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
      - $ref: '#/components/parameters/Lrc'
  '/partners/mine/bss/{bsUid}/wans/lrcs/{lrcUid}/reset':
    post:
      tags:
        - wans
      summary: Reset the backhaul usage records of a base station with a network server
      description: |
        Reset the LRC records (by default for the given LRC).

        ### Access rights:
        - `<NetworkPartner>/a`
        - If the authenticated user has domain restrictions, the base station
          must match the domain restrictions.
      parameters:
        - name: resetAll
          in: query
          description: Force the reset for all LRCs.
          schema:
            type: boolean
      responses:
        '204':
          description: Operation success
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/Bs'
      - $ref: '#/components/parameters/Lrc'
  '/partners/mine/ismBands':
    get:
      tags:
        - partners
      summary: Retrieve ISM bands
      description: |
        Retrieve the list of ISM bands accessible to the Network Partner.

        ### Access rights:
        - `<NetworkPartner>/x`
      parameters:
        - $ref: '#/components/parameters/PageIndex'
      responses:
        '200':
          $ref: '#/components/responses/IsmBands'
        default:
          $ref: '#/components/responses/Error'
    parameters: []
  '/partners/mine/licenses':
    get:
      tags:
        - partners
      summary: Retrieve the license
      description: |
        Retrieve the license detail.

        ### Access rights:
        - `<NetworkPartner>/x`
      responses:
        '200':
          $ref: '#/components/responses/Licenses'
        default:
          $ref: '#/components/responses/Error'
    post:
      tags:
        - partners
      summary: Upload a license file
      description: |
        Upload a license file.

        ### Access rights:
        - `<NetworkPartner>/a`
      requestBody:
        $ref: '#/components/requestBodies/Licenses'
      responses:
        '201':
          $ref: '#/components/responses/Licenses'
        default:
          $ref: '#/components/responses/Error'
    parameters: []
  '/partners/mine/partners':
    parameters: []
  '/partners/mine/restricted':
    put:
      tags:
        - partners
      summary: Update the restricted settings of a network partner
      description: >
        Update the restricted settings of Network Partner.


        Note: Restricted settings can be retrieved from the &lt;partner&gt; resource.


        ### Access rights:

        - `<NetworkPartner>/RA`


        ### Optimistic locking:

        - `<partner>.occ`
      parameters:
        - $ref: '#/components/parameters/Force'
      requestBody:
        $ref: '#/components/requestBodies/Restricted'
      responses:
        '200':
          $ref: '#/components/responses/Restricted'
        default:
          $ref: '#/components/responses/Error'
    parameters: []
  '/partners/mine/rfRegions':
    get:
      tags:
        - rf-regions
      summary: Retrieve RF regions
      description: >
        Retrieve the list of RF Regions accessible to the Network partner.


        ### Access rights:

        - `<NetworkPartner>/x`
      parameters:
        - $ref: '#/components/parameters/PageIndex'
        - name: ID
          in: query
          description: RF Region provisioning ID filtering (exact match)
          schema:
            type: string
        - name: ismBandID
          in: query
          description: >
            ISM band ID filtering (exact match)

            If multiple ismBandID, return RF Regions supporting any of ISM Band
          schema:
            type: array
            items:
              $ref: '#/components/schemas/IsmBandID'
        - $ref: '#/components/parameters/Language-tag'
      responses:
        '200':
          $ref: '#/components/responses/RfRegions'
        default:
          $ref: '#/components/responses/Error'
    parameters: []
  '/partners/mine/rfRegions/{rfRegionUid}':
    get:
      tags:
        - rf-regions
      summary: Retrieve a RF region
      description: >
        Retrieve a RF Region detail.


        ### Access rights:

        - `<NetworkPartner>/x`
      parameters:
        - $ref: '#/components/parameters/Language-tag'
      responses:
        '200':
          $ref: '#/components/responses/RfRegion'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/RfRegion'
  '/partners/mine/rfRegions/{rfRegionUid}/lcs':
    get:
      tags:
        - rf-regions
      summary: Retrieve the logical channels of a RF region
      description: >
        Retrieve the list of Logical Channels associated with a RF Region.


        ### Access rights:

        - `<NetworkPartner>/x`
      parameters:
        - $ref: '#/components/parameters/PageIndex'
      responses:
        '200':
          $ref: '#/components/responses/RfRegionLcs'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/RfRegion'
  '/partners/mine/usersAlarmsSubscriptions':
    get:
      tags:
        - users
      summary: Retrieve the alarms subscriptions of all users
      description: |
        Retrieve the alarms subscriptions of all users.

        ### Access rights:
        - `<NetworkPartner>/RA`
        - `<NetworkPartner>/s1`: `MANAGE_SUBSCRIBER`
        - Access is granted to user on its own registration (hardcoded without ACL Permission)
      parameters:
        - $ref: '#/components/parameters/PageIndex'
        - $ref: '#/components/parameters/PageSize'
        - name: thingparkID
          in: query
          description: Returns alarms subscription matching the ThingPark ID (exact match).
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/UsersAlarmsSubscriptions'
        default:
          $ref: '#/components/responses/Error'
    parameters: []
  '/partners/mine/users/{thingparkID}/alarmsSubscription':
    get:
      tags:
        - users
      summary: Retrieve the alarms subscription of a user
      description: |
        Retrieve the alarms subscription of a user.

        ### Access rights:
        - `<NetworkPartner>/RA`
        - `<NetworkPartner>/s1`: `MANAGE_SUBSCRIBER`
        - Access is granted to user on its own registration (hardcoded without ACL Permission)
      responses:
        '200':
          $ref: '#/components/responses/AlarmsSubscription'
        default:
          $ref: '#/components/responses/Error'
    post:
      tags:
        - users
      summary: Create the alarms subscription of a user
      description: |
        Create the alarms subscription of a user.

        ### Access rights:
        - `<NetworkPartner>/RA`
        - `<NetworkPartner>/s1`: `MANAGE_SUBSCRIBER`
        - Access is granted to user on its own registration (hardcoded without ACL Permission)
      requestBody:
        $ref: '#/components/requestBodies/AlarmsSubscription'
      responses:
        '201':
          $ref: '#/components/responses/AlarmsSubscription'
        default:
          $ref: '#/components/responses/Error'
    put:
      tags:
        - users
      summary: Update the alarms subscription of a user
      description: |
        Update the alarms subscription of a user.

        ### Access rights:
        - `<NetworkPartner>/RA`
        - `<NetworkPartner>/s1`: `MANAGE_SUBSCRIBER`
        - Access is granted to user on its own registration (hardcoded without ACL Permission)
      requestBody:
        $ref: '#/components/requestBodies/AlarmsSubscription'
      responses:
        '200':
          $ref: '#/components/responses/AlarmsSubscription'
        default:
          $ref: '#/components/responses/Error'
    delete:
      tags:
        - users
      summary: Delete the alarms subscription of a user
      description: |
        Delete the alarms subscription of a user.

        ### Access rights:
        - `<NetworkPartner>/RA`
        - `<NetworkPartner>/s1`: `MANAGE_SUBSCRIBER`
        - Access is granted to user on its own registration (hardcoded without ACL Permission)
      responses:
        '204':
          $ref: '#/components/responses/Delete'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - $ref: '#/components/parameters/User'
components:
  schemas:
    AdminSettings:
      type: object
      required:
        - occContext
      x-requiredRead:
        - activateBeaconTransmission
        - activateRX2Optimization
        - activateSupportFor802_15_4
      properties:
        activateBeaconTransmission:
          type: boolean
          description: Activate beacon transmission
        activateRX2Optimization:
          type: boolean
          description: Active RX2 optimization
        activateSupportFor802_15_4:
          type: boolean
          description: Active Support for 802.15.4
        allowClassB:
          type: boolean
          description: |
            Allow Class B

            This parameter must no longer be used: it is ignored and always set to true.
          deprecated: true
        occContext:
          $ref: '#/components/schemas/OccContext'
        upgradePolicy:
          enum:
            - MANUAL
            - TPK_POLICY
          type: string
          description: |
            Base station upgrade policy: MANUAL, TPK_POLICY

            This parameter must no longer be used: the associated feature is no more available in the product.
          deprecated: true
    Alarms:
      type: object
      required:
        - briefs
        - more
      properties:
        briefs:
          type: array
          items:
            $ref: '#/components/schemas/AlarmBrief'
        more:
          $ref: '#/components/schemas/More'
    AlarmBrief:
      type: object
      required:
        - creationTimestamp
        - updateTimestamp
        - ID
        - level
        - occurrence
        - state
        - acked
        - alarmUid
      properties:
        ID:
          type: integer
          description: Alarm ID identifying the type of alarm
          format: int32
          example: 121
        acked:
          type: boolean
          description: True when the alarm has been acknowledged by a user
          example: true
        ackedInfo:
          type: string
          description: The name of the user who acknowledged the alarm
          example: "John Doe"
        ackedTimestamp:
          type: integer
          format: int64
          example: 1577836800000
          description: Acknowledgement timestamp, epoch time in milliseconds
        addInfo:
          type: string
          description: Additional information attached to the alarm (info1).
          example: ppp0
        addInfo2:
          type: string
          description: Additional information attached to the alarm (info2).
          example: ""
        addInfo3:
          type: string
          description: Additional information attached to the alarm (info3).
          example: ""
        addInfo4:
          type: string
          description: Additional information attached to the alarm (info4).
          example: ""
        addInfo5:
          type: string
          description: Additional information attached to the alarm (info5).
          example: ""
        alarmUid:
          type: string
          description: Alarm Uid identifying the alarm occurrence
          example: 5b1f81e7a1ae4234a037be11
        creationTimestamp:
          type: integer
          format: int64
          example: 1577836800000
          description: Creation timestamp, epoch time in milliseconds
        index:
          type: string
          description: Relative object index (the meaning of the index is defined per
            Alarm ID)
          example: "1"
        level:
          type: integer
          description: Alarm level
          format: int32
          minimum: 0
          maximum: 5
          example: 2
        occurrence:
          type: integer
          description: Number of alarm occurrences detected while the alarm was not cleared
          format: int32
          example: 1
        state:
          type: integer
          description: |
            Alarm severity state:
            - 1: CLEARED
            - 2: INDETERMINATE
            - 3: WARNING
            - 4: MINOR
            - 5: MAJOR
            - 6: CRITICAL
          format: int32
          minimum: 1
          maximum: 6
          example: 6
        updateTimestamp:
          type: integer
          format: int64
          example: 1577836800000
          description: Last update timestamp, epoch time in milliseconds
    AlarmActiveBrief:
      type: object
      allOf:
        - $ref: '#/components/schemas/AlarmBrief'
      required:
        - href
      properties:
        href:
          type: string
          description: Alarm HREF
          example: "/thingpark/wireless/rest/partners/1060/bss/3325/alarms/5b1f81e7a1ae42\
            34a037be11"
    AlarmBsBrief:
      type: object
      allOf:
        - $ref: '#/components/schemas/AlarmBrief'
        - type: object
          required:
            - bs
          properties:
            bs:
              type: object
              required:
                - lrrID
              properties:
                lrrID:
                  type: string
                  description: LRR ID of the Base Station associated with the alarm
                  example: 100001C2
                name:
                  type: string
                  description: Name of the Base Station associated with the alarm
                  example: PICO FFD
                domains:
                  $ref: '#/components/schemas/Domains'
    AlarmBsActiveBrief:
      type: object
      allOf:
        - $ref: '#/components/schemas/AlarmBsBrief'
      required:
        - href
      properties:
        href:
          type: string
          description: Alarm HREF
          example: "/thingpark/wireless/rest/partners/1060/bss/3325/alarms/5b1f81e7a1ae42\
            34a037be11"
    AlarmsActive:
      type: object
      properties:
        briefs:
          type: array
          items:
            $ref: '#/components/schemas/AlarmActiveBrief'
      allOf:
        - $ref: '#/components/schemas/Alarms'
    AlarmsBs:
      type: object
      required:
        - count
      properties:
        briefs:
          type: array
          items:
            $ref: '#/components/schemas/AlarmBsBrief'
        count:
          type: integer
          description: Total number of matching alarms
          example: 32
      allOf:
        - $ref: '#/components/schemas/Alarms'
    AlarmsBsActive:
      type: object
      properties:
        briefs:
          type: array
          items:
            $ref: '#/components/schemas/AlarmBsActiveBrief'
      allOf:
        - $ref: '#/components/schemas/AlarmsBs'
    AlarmsBssAck:
      type: object
      required:
        - alarmUids
      properties:
        alarmUids:
          type: array
          items:
            type: string
          description: Ack alarms matching these alarm UIDs (exact match).
          example:
            [
              "5d31e149cc9cc606607d15b7",
              "5eab200fcc9cc606600a5703",
              "5daf2a8bcc9cc60660c64ff1"
            ]
    AlarmsBssStateDistributions:
      type: object
      required:
        - briefs
        - totalCount
      properties:
        briefs:
          type: array
          items:
            type: object
            required:
              - count
              - state
            properties:
              count:
                type: integer
                description: Number of alarms in this state
                format: int32
              state:
                type: integer
                description: Reference alarm state used for this brief
                format: int32
        totalCount:
          type: integer
          description: Total number of alarms
          format: int32
    Ant:
      type: object
      required:
        - index
        - name
        - occContext
      properties:
        altitude:
          type: number
          description: |
            Altitude in meters

            Possible values: 0..10000

            -1 is used to clear the attribute
          format: float
          example: 562
        altitudeAboveGround:
          type: number
          description: |
            Altitude above the ground level in meters

            Possible values: 1..300

            -1 is used to clear the attribute
          format: float
          example: 10
        azimuth:
          type: number
          description: |
            Azimuth in degrees

            Possible values: 0..360

            -1 is used to clear the attribute
          format: float
          example: 30
        cableDelay:
          type: number
          description: |
            Cable delay in nanoseconds

            Possible values: 0..1000

            -1 is used to clear the attribute
          format: float
          example: 9
        cableLoss:
          type: number
          description: Cable loss in dB
          format: float
          example: 0.49
          readOnly: true
        clearance:
          type: string
          description: Antenna clearance
          example: |-
            <clearances>
            <clearance direction="N" type="CLEARED_WITHIN_500M" />
            <clearance direction="NE" type="CLEARED_WITHIN_500M" />
            <clearance direction="E" type="CLEARED_WITHIN_500M" />
            <clearance direction="SE" type="OBSTACLE_BLOCKING" dist="10" />
            <clearance direction="S" type="OBSTACLE_BLOCKING" dist="5" />
            <clearance direction="SW" type="OBSTACLE_BLOCKING" dist="7" />
            <clearance direction="W" type="CLEARED_WITHIN_500M" />
            <clearance direction="NW" type="CLEARED_WITHIN_500M" />
            </clearances>
        environment:
          enum:
            - URBAN_DENSE
            - URBAN
            - SUBURBAN
            - RURAL_FOREST
            - RURAL_TREES
            - RURAL_FLAT
            - TOWER
            - UNDEFINED
          type: string
          description: |
            Antenna environment
            - URBAN_DENSE: Urban dense
            - URBAN: Urban
            - SUBURBAN: Suburban
            - RURAL_FOREST: Rural/forest
            - RURAL_TREES: Rural trees
            - RURAL_FLAT: Rural flat
            - TOWER: Tower
            - UNDEFINED: Undefined environment
        gain:
          type: number
          description: Gain in dBi
          format: float
          example: 3
          readOnly: true
        horizontalHPBW:
          type: number
          description: |
            Horizontal HPBW in degrees

            Possible values: 30..360

            -1 is used to clear the attribute

            Default: Inherited from the BS profile
          format: float
          example: 60
        index:
          type: integer
          description: Antenna index starting from 0
          format: int32
          example: 0
          readOnly: true
        info1:
          type: string
          description: Additional information (free)
        info2:
          type: string
          description: Additional information (free)
        info3:
          type: string
          description: Additional information (free)
        installMode:
          enum:
            - OUTDOOR_ABOVE_ROOFTOP_LEVEL
            - OUTDOOR_BELOW_ROOFTOP_LEVEL
            - INDOOR
            - UNDEFINED
          type: string
          description: |
            Antenna installation mode
            - OUTDOOR_ABOVE_ROOFTOP_LEVEL: Outdoor above rooftop level
            - OUTDOOR_BELOW_ROOFTOP_LEVEL: Outdoor below rooftop level
            - INDOOR: Indoor
            - UNDEFINED: Undefined installation mode
        latitude:
          type: number
          description: |
            Latitude in decimal coordinate

            Possible values: -90..90

            -999 is used to clear the attribute
          format: float
          example: 47.517201
        longitude:
          type: number
          description: |
            Longitude in decimal coordinate

            Possible values: -180..180

            -999 is used to clear the attribute
          format: float
          example: 1.757812
        name:
          type: string
          description: |
            Antenna name
            Default: Inherited from the BS profile
          example: A1
          readOnly: true
        occContext:
          $ref: '#/components/schemas/OccContext'
        rx1:
          type: object
          readOnly: true
          properties:
            effectiveTxPower:
              type: number
              description: Effective TX power on RX1
              format: float
              example: 15.51
            maxTxPower:
              type: number
              description: Maximum allowed TX power on RX1
              format: float
              example: 16
        rx2:
          type: object
          readOnly: true
          properties:
            effectiveTxPower:
              type: number
              description: Effective TX power on RX2
              format: float
              example: 17.51
            maxTxPower:
              type: number
              description: Maximum allowed TX power on RX2
              format: float
              example: 20
        type:
          enum:
            - OMNI
            - UNI
            - UNDEFINED
          type: string
          description: |
            Antenna type
            - OMNI: Omnidirectional
            - UNI: Unidirectional/Sectorized
            - UNDEFINED: Undefined type
            Default: Inherited from the BS profile
    AntennasGainAndLossStatus:
      type: object
      properties:
        chains:
          type: array
          items:
            type: object
            properties:
              cableLoss:
                type: number
                description: Cable Loss in dB
                example: 0.49
                format: float
              gain:
                type: number
                description: Gain in dBi
                format: float
                example: 3
              index:
                type: integer
                description: Antenna chain index
                format: int32
                example: 0
              name:
                type: string
                description: Antenna name
                example: A1
        completionStatus:
          enum:
            - COMPLETED
            - ERR_NOSTART
            - ERR_EXEC
            - ERR_NOEND
          type: string
          description: >-
            Completion status of the command: COMPLETED, ERR_NOSTART, ERR_EXEC,
            ERR_NOEND
    Ants:
      type: object
      required:
        - briefs
      properties:
        briefs:
          type: array
          items:
            type: object
            required:
              - index
              - name
              - used
              - href
            properties:
              azimuth:
                type: number
                description: Azimuth in degrees
                format: float
              cableDelay:
                type: number
                description: Cable delay in nanoseconds
                format: float
                example: 9
              cableLoss:
                type: number
                description: Cable loss in dB
                format: float
                example: 0.49
              gain:
                type: number
                description: Antenna gain in dBi
                format: float
                example: 3
              href:
                type: string
                description: Antenna HREF
                example: /thingpark/wireless/rest/partners/1060/bss/29173/ants/35959
              index:
                type: integer
                description: Antenna index starting from 0
                format: int32
                example: 0
              name:
                type: string
                description: Antenna name
                example: A1
              type:
                enum:
                  - OMNI
                  - UNI
                type: string
                description: |
                  Antenna type
                  - OMNI: Omnidirectional
                  - UNI: Unidirectional/Sectorized
              used:
                type: boolean
                description: >-
                  TRUE if antenna is used according to the current RF hardware
                  configuration
    AvailableLrrVersions:
      type: object
      required:
        - briefs
      properties:
        briefs:
          type: array
          items:
            type: object
            required:
              - version
              - status
              - statusInfo
            properties:
              package:
                type: string
                description: Package name
                example: lrr-2.2.64-wirmav2.tar.gz
              status:
                type: integer
                format: int64
                example: 1577836800000
                description: Version status (always UPTODATE for now), epoch time in
                  milliseconds
              statusInfo:
                type: string
                description: Friendly version status info
              version:
                type: string
                description: LRR software version
    Backup:
      type: object
      required:
        - occContext
      properties:
        occContext:
          $ref: '#/components/schemas/OccContext'
    BackupSwVersion:
      type: object
      required:
        - backup
      properties:
        backup:
          type: object
          required:
            - version
            - date
            - status
            - statusInfo
          properties:
            date:
              type: integer
              format: int64
              example: 1577836800000
              description: Backup date, epoch time in milliseconds
            status:
              enum:
                - OUTDATED
                - UPTODATE
                - DEPRECATED
              type: string
              description: 'Version status: OUTDATED, UPTODATE, DEPRECATED'
            statusInfo:
              type: string
              description: |
                Friendly version status info
            version:
              type: string
              description: Backup LRR software version
        completionStatus:
          enum:
            - COMPLETED
            - ERR_NOSTART
            - ERR_EXEC
            - ERR_NOEND
          type: string
          description: >-
            Completion status of the command: COMPLETED, ERR_NOSTART, ERR_EXEC,
            ERR_NOEND
    BaseStationVendors:
      type: object
      required:
        - briefs
        - more
      properties:
        briefs:
          type: array
          items:
            type: object
            required:
              - ID
            properties:
              ID:
                type: string
                description: ID of the base station manufacturer
              logo:
                type: string
                description: Logo HREF of the base station manufacturer
              name:
                type: string
                description: |
                  Name of the base station manufacturer

                  This property must no longer be used: the property `commercialName` must be used in replacement.
                deprecated: true
              commercialName:
                type: string
                description: Commercial name of the base station manufacturer
              commercialDescription:
                type: string
                description: Commercial description of the base station manufacturer
        more:
          $ref: '#/components/schemas/More'
    BasicsStationRemoteShellSessions:
      type: array
      items:
        type: object
        required:
          - started
          - user
        properties:
          started:
            type: boolean
            description: Status of the session
          user:
            type: string
            description: Username of the user that started the session
      example:
        - user: john.doe
          started: false
        - user: alice.roe
          started: true
    Beacons:
      type: object
      required:
        - totalRequested
        - totalSent
      properties:
        lastDeliveryCause:
          type: string
          description: |
            Specify the delivery cause of the last beacon transmission:
            - 0x: Success
            - Ax: Transmission slot busy
            - Bx: Too late for beacon slot
            - Dx: DC constraint on beacon slot
          example: '00'
        lastDeliveryFailedCause:
          type: string
          description: |
            Specify the delivery cause of the last beacon transmission failure:
            - 0x: Success
            - Ax: Transmission slot busy
            - Bx: Too late for beacon slot
            - Dx: DC constraint on beacon slot
          example: 'A0'
        lastDeliveryFailedCauseDate:
          type: integer
          format: int64
          example: 1577836800000
          description: Last beacon transmission failure report date, epoch time in
            milliseconds.
        totalRequested:
          type: integer
          description: >-
            Total number of beacon transmissions requested by the LRC since LRR
            startup.
          format: int32
          example: 152
        totalSent:
          type: integer
          description: Total number of beacon effectively transmitted since LRR startup.
          format: int32
          example: 136
    Bitrates:
      type: object
      required:
        - briefs
        - now
      properties:
        briefs:
          type: array
          items:
            type: object
            required:
              - timestamp
              - tx
              - rx
            properties:
              rx:
                type: object
                required:
                  - avgBitRate
                  - maxBitRate
                properties:
                  avgBitRate:
                    type: integer
                    description: Average Rx bitrate for this aggregated time slot (b/s).
                    format: int32
                  maxBitRate:
                    type: integer
                    description: MAX Rx bitrate for this aggregated time slot (b/s).
                    format: int32
              timestamp:
                type: integer
                format: int64
                example: 1577836800000
                description: Reference timestamp of the aggregated time slot, epoch time in
                  milliseconds.
              tx:
                type: object
                required:
                  - avgBitrate
                  - maxBitRate
                properties:
                  avgBitrate:
                    type: integer
                    description: Average Tx bitrate for this aggregated time slot (b/s).
                    format: int32
                  maxBitRate:
                    type: integer
                    description: MAX Tx bitrate for this aggregated time slot (b/s).
                    format: int32
        now:
          type: integer
          format: int64
          example: 1577836800000
          description: Current time of the server, epoch time in milliseconds
    Bs:
      type: object
      required:
        - identificationMode
        - stateSince
        - cnxState
        - healthState
        - vendor
        - activateRX2Optimization
        - activateSupportFor802_15_4
        - activateBeaconTransmission
        - creationDate
        - locationType
        - fpgaBoards
        - lrcs
        - ints
        - alarm6
        - alarm5
        - alarm4
        - alarm3
        - alarm2
        - alarm1
        - owner
        - host
        - now
      x-requiredCreate:
        - model
      x-requiredUpdate:
        - occContext
      x-requiredRead:
        - occContext
        - name
        - lrrID
        - state
        - model
        - bsSecurity
        - rfHardwareConfig
        - state
        - rfCoverageType
      properties:
        activateBeaconTransmission:
          type: boolean
          description: Activate beacon transmission
          readOnly: true
        activateRX2Optimization:
          type: integer
          enum:
            - 0
            - 1
          description: Active RX2 optimization
          readOnly: true
        activateSupportFor802_15_4:
          type: integer
          enum:
            - 0
            - 1
          description: Active Support for 802.15.4
          readOnly: true
        adminAltGround:
          type: integer
          description: |
            Administrative altitude of the BS above the  ground

            Note: Always optional.
          format: int32
        alarm1:
          type: integer
          description: Number of CLEARED alarms not ACKED
          format: int32
          example: 9
          readOnly: true
        alarm103:
          type: string
          description: |
            Two thresholds can be configured for the alarm 103 (no uplink activity) in an XML document:
            - The root XML element is `alarm103`
            - The enclosed `threshold1` self-closing XML element configures the first threshold of the alarm
            - The enclosed `threshold2` self-closing XML element configures the second threshold of the alarm
            - For each threshold XML element the following attributes are available:
              - `status`: `ENABLE` or `DISABLE` this threshold
              - `level`: severity (2-6) of the alarm for this threshold
              - `duration`: inactivity period (RFC 3339 duration between `PT1H` and `P30D`) after which the alarm is triggered for this threshold
            - The following constraints must be satisfied:
              - `threshold2@status` can be set to `ENABLE` only if `threshold1@status` is `ENABLE`
              - `threshold1@level` must be lower than `threshold2@level`
              - `threshold1@duration` must be lower than `threshold2@duration`
          example: <alarm103><threshold1 status="ENABLE" level="3"
            duration="PT1H"/><threshold2 status="ENABLE" level="5"
            duration="PT5H"/></alarm103>
        alarm2:
          type: integer
          description: Number of INDETERMINATE alarms not ACKED
          format: int32
          example: 0
          readOnly: true
        alarm3:
          type: integer
          description: Number of WARNING alarms not ACKED
          format: int32
          example: 1
          readOnly: true
        alarm4:
          type: integer
          description: Number of MINOR alarms not ACKED
          format: int32
          example: 0
          readOnly: true
        alarm5:
          type: integer
          description: Number of MAJOR alarms not ACKED
          format: int32
          example: 1
          readOnly: true
        alarm6:
          type: integer
          description: Number of CRITICAL alarms not ACKED
          format: int32
          example: 0
          readOnly: true
        allowClassB:
          type: boolean
          description: |
            Allow Class B

            This parameter must no longer be used: it is ignored and always set to true.
          deprecated: true
          readOnly: true
        antennasConfig:
          type: string
          description: |
            Antennas configuration

            Default: Inherited from the BS profile

            This parameter must no longer be used: the endpoint `GET /partners/{partnerUid}/bss/{bsUid}/ants` must be used in replacement.
          example: |
            <antennas>
              <antenna idx="0" name="A1" type="OMNI3" env="URBAN"/>
              <antenna idx="1" name="A2" type="UNI12" azimuth="-120" env="URBAN_DENSE"/>
              <antenna idx="2" name="A3" type="UNI12" azimuth="20" env="SUBURBAN"/>
            </antennas>
          deprecated: true
        appServers:
          $ref: '#/components/schemas/BsAppServers'
        backup:
          type: object
          readOnly: true
          required:
            - date
            - version
          properties:
            date:
              type: integer
              format: int64
              example: 1577836800000
              description: Backup date, epoch time in milliseconds
            status:
              enum:
                - OUTDATED
                - UPTODATE
                - DEPRECATED
                - UNKNOWN
              type: string
              description: 'Version status: OUTDATED, UPTODATE, DEPRECATED, UNKNOWN'
            statusInfo:
              type: string
              description: Friendly version status info
            version:
              type: string
              description: Backup LRR software version
        bsSecurity:
          type: object
          required:
            - type
          description: |
            The base station security defines how the connection to the core network is secured.
            It only applies when the base station identification mode is `LRR_UUID`.
            When the base station identification mode is `LRR_ID`, the management of the base station security is performed outside the Network Manager API and type is set to `DISABLE`.
          properties:
            expirationDate:
              type: integer
              format: int64
              example: 1609459200000
              description: Date of X.509 certificate expiration, epoch time in milliseconds
              readOnly: true
            generationDate:
              type: integer
              format: int64
              example: 1577836800000
              description: Date of X.509 certificate generation, epoch time in milliseconds
              readOnly: true
            type:
              enum:
                - IPSEC_X509
                - DISABLE
              type: string
              description: |
                Base Station security type:
                - `IPSEC_X509`: the connection to the core network is secured using IPsec or TLS (X.509 certificates) - forbidden if defaultBsSecurity is `DISABLE_M`
                - `DISABLE`: the connection to the core network is not secured - forbidden if defaultBsSecurity is `IPSEC_X509_M`
        classBState:
          type: integer
          description: |
            Class B state:
            - Not supported (0)
            - Supported but not operational (1)
            - Supported and operational (2)
            - Unknown because of disconnected Base Station (null)
          format: int32
          readOnly: true
        cnxState:
          enum:
            - NEVERCNX
            - CNX
            - DISC
            - UNKNOWN
          type: string
          description: |
            Base station connection state:
            - NEVERCNX: The BS has never been connected.
            - CNX: The BS has an IEC link started with at least a LRC.
            - DISC:  The BS is disconnected from all LRCs.
            - UNKNOWN:  The BS connection state is currently undefined.
          readOnly: true
        cnxStateSince:
          type: integer
          format: int64
          example: 1577836800000
          description: >-
            Base station connection state reached since timestamp when the BS
            has already been connected, epoch time in milliseconds.
          readOnly: true
        contactInfo:
          type: string
          description: |
            Contact information
          default: Not set
        cpu:
          type: integer
          description: CPU usage (%)
          format: int32
          example: 23
          readOnly: true
        creationDate:
          type: integer
          format: int64
          example: 1577836800000
          description: Base station creation date, epoch time in milliseconds.
          readOnly: true
        customerAdminData:
          type: string
          description: |
            BS administrative info
          default: Not set
        customs:
          type: object
          readOnly: true
          properties:
            version:
              description: Optional custom version fields returns as <key>=<value> pair.
              example:
                - hardware_version=1.0.0
              type: array
              items:
                type: string
        diskConfig:
          type: string
          description: |
            Mounted filesystems of the base station.

            Empty until the configuration is reported by the base station.

            This parameter must no longer be used: ignored in requests, the `mfs` property must be used in responses.
          example: |-
            <mounts>
            <mount idx="0" name="/"/>
            <mount idx="1" name="/boot"/>
            <mount idx="2" name="/home"/>
            </mounts>
          deprecated: true
        domains:
          $ref: '#/components/schemas/Domains'
        dwFrame:
          type: object
          readOnly: true
          properties:
            history:
              type: object
              properties:
                val:
                  type: array
                  items:
                    type: integer
                    description: >-
                      List of last cumulated downlink frame per 10 minutes
                      **Averaging is locally computed by the GUI**
                    format: int32
                  example: [ 6842, 1235, 5431, 3492 ]
            last:
              type: object
              properties:
                ant:
                  type: string
                  description: Last  downlink frame  antenna
                  example: A1
                date:
                  type: integer
                  format: int64
                  example: 1577836800000
                  description: Last downlink frame timestamp, epoch time in milliseconds
                lc:
                  type: string
                  description: Last downlink frame logical channel (LC1  ... LC7)
            minRC:
              type: object
              properties:
                ant:
                  type: string
                  description: Min downlink RC antenna
                  example: A1
                dc:
                  type: number
                  description: Max downlink DC (duty cycle)
                  format: float
                lc:
                  type: string
                  description: Min downlink RC logical channel (LC1  ... LC7)
                rc:
                  type: number
                  description: Min downlink RC (remaining capacity)
                  format: float
        fpgaBoards:
          type: array
          readOnly: true
          items:
            type: object
            required:
              - index
            properties:
              index:
                type: integer
                description: FPGA board index starting from 0
                format: int32
              key:
                type: string
                description: Fine-timestamps decryption AES 128 key
        gpsAntennaConfig:
          type: string
          description: GPS antenna configuration.
          example: |-
            <gpsAntenna>
            <cableDelay>9</cableDelay>
            <hCellAntDist />
            <vCellAntDist />
            <info1 />
            <info2 />
            <info3 />
            </gpsAntenna>
        gpsReceiverConfig:
          enum:
            - PRESENT
            - ABSENT
          type: string
          description: |
            GPS receiver configuration reported by the base station:
            - PRESENT (i.e. Present and used)
            - ABSENT (i.e. Absent or not used)

            Default: Inherited from the BS profile

            Can no more be updated via API: ignored in requests.
        gpsSync:
          type: integer
          description: |
            GPS receiver synchronization status:
            - Locking/No signal (0)
            - Locked (1)
            - Unknown because of disconnected Base Station (null)
          format: int32
          example: 1
          readOnly: true
        healthState:
          $ref: '#/components/schemas/BsHealthState'
        host:
          type: object
          required:
            - name
          properties:
            ID:
              type: string
              description: |
                BS host ID

                Default: The owner
            accessRight:
              enum:
                - RO
                - RW
              type: string
              description: |
                BS host access right: RO, RW

                Default: RW when the host = owner, RO otherwise.
            name:
              type: string
              description: BS owner name
              readOnly: true
        identificationMode:
          enum:
            - LRR_ID
            - LRR_UUID
          type: string
          description: |
            Base Station identification mode:
            - `LRR_ID`: The Base Station is identified by its LRR ID. The LRR
              UUID can be updated. Then if the LRR UUID is correctly reported by
              the Base Station, the identification mode moves to `LRR_UUID`.
            - `LRR_UUID`: The Base Station is identified by its LRR UUID. The
              LRR UUID cannot be updated.

            The `LRR_ID` identification mode is deprecated and should not be used.
          readOnly: true
        ints:
          type: object
          readOnly: true
          description: |
            WAN backhaul interfaces of the base station.

            Empty until the configuration is reported by the base station.
          properties:
            int:
              type: array
              items:
                $ref: '#/components/schemas/BsInt'
              example:
                - name: eth0
                  type: ETHERNET
                  state: 0
                  stateSince: 1577836800000
                  ip: 1.2.3.4
                  activity: 176407
                  avgRoundTrip: 2
                  devRoundTrip: 0
                  tx:
                    totalTraffic: 50593.632999999914
                    avgBitRate: 2928
                  rx:
                    totalTraffic: 82784.73800000016
                    avgBitRate: 1473
                - name: wwan1
                  type: GPRS
                  state: 5
                  stateSince: 1577836800000
                  activity: 0
                  tx:
                    totalTraffic: 0
                    avgBitRate: 0
                  rx:
                    totalTraffic: 0
                    avgBitRate: 0
        ismBand:
          type: string
          allOf:
            - $ref: '#/components/schemas/IsmBandID'
            - type: string
              description: >
                When known, the ISM band associated with the BS. The following
                values are supported:


                "eu868", "eu433", "cn779", "as923", "tw920", "us915", "au915", "cn470", "in865", "ru864", "ww2g4"
              readOnly: true
              example: eu868
        lastGeoAlt:
          type: integer
          description: Network altitude of the BS when available
          format: int32
          example: 562
          readOnly: true
        lastGeoLat:
          type: number
          description: Network location of the BS when available
          format: float
          example: 47.517201
          readOnly: true
        lastGeoLon:
          type: number
          description: Network location of the BS when available
          format: float
          example: 1.757812
          readOnly: true
        lastReboot:
          type: integer
          format: int64
          example: 1577836800000
          description: Last reboot timestamp (**software uptime**), epoch time in
            milliseconds
          readOnly: true
        lastRebootCause:
          type: integer
          description: |
            - Last reboot restart root cause: Administrative (0)
            - Software crash (1)
          format: int32
          readOnly: true
        lastReport:
          type: integer
          format: int64
          example: 1577836800000
          description: Last report timestamp, epoch time in milliseconds
          readOnly: true
        lastSystemReboot:
          type: integer
          format: int64
          example: 1577836800000
          description: Last reboot timestamp (**system uptime**), epoch time in milliseconds
          readOnly: true
        locationType:
          type: integer
          description: >-
            Type of location currently activated (Unknown:0 or Administrative:1
            or GPS:2)
          format: int32
          example: 2
          readOnly: true
        log:
          type: object
          readOnly: true
          properties:
            ramDirUsed:
              type: boolean
              description: TRUE when RAM disk is used for logging
            traceLevel:
              type: integer
              description: LRR trace level (0..3). 0 means no trace.
              format: int32
            traceSince:
              type: integer
              format: int64
              example: 1577836800000
              description: LRR trace activated (1..3) or deactivated (0) since timestamp,
                epoch time in milliseconds.
        logicalChannels:
          type: object
          readOnly: true
          properties:
            upDown:
              description: |
                List of symmetric uplink/downlink channels

                **For eu868, eu433, cn779, as923, kr920, sg920, tw920:**
                from 1 to 16

                **For us915, au915:**
                from 0 to 71

                **For cn470:**
                from 0 to 95

                **For ww2g4:**
                from 1 to 3
              type: array
              items:
                type: object
                properties:
                  from:
                    type: string
                  to:
                    type: string
              example:
                - from: '1'
                  to: '16'
            downAsym:
              description: |
                List of asymmetric downlink channels

                **For eu868, eu433, cn779, as923, kr920, sg920, tw920:**
                from 127 to 142

                **For us915, au915:**
                from 127 to 134

                **For cn470:**
                from 127 to 174

                **For ww2g4:**
                n/a
              type: array
              items:
                type: object
                properties:
                  from:
                    type: string
                  to:
                    type: string
              example:
                - from: '127'
                  to: '142'
            rx2:
              type: string
              description: |
                RX2 channel

                **For eu868, eu433, cn779, as923, kr920, sg920, tw920:**
                255

                **For us915, au915:**
                255

                **For cn470:**
                255

                **For ww2g4:**
                n/a
              example: '255'
          description: |
            The attribute returns the default list of LC indexes, as DECIMAL ranges,
            sorted by:
            - Symmetric uplink/downlink channels,
            - Asymmetric downlink channels,
            - And RX2 channel.

            NOTE: When the ISM band is unknown (i.e. not yet reported by the
            LRR), the WS returns a default list of LC indexes.

            This parameter must no longer be used: the endpoint `GET /partners/{partnerUid}/rfRegions/{rfRegionUid}/lcs` must be used in replacement.
          deprecated: true
        lrcConfig:
          type: string
          description: |
            LRCs used by the base station.

            Empty until the configuration is reported by the base station.

            This parameter must no longer be used: ignored in requests, the `lrcs` property must be used in responses.
          example: |
            <lrcs>
              <lrc idx="0" name="LRC1" lrcid="00000065" address="lrc1.thingpark.com"/>
              <lrc idx="1" name="LRC2" lrcid="00000066" address="lrc2.thingpark.com"/>
            </lrcs>
          deprecated: true
        lrcs:
          type: object
          readOnly: true
          description: |
            LRCs used by the base station.

            Empty until the configuration is reported by the base station.
          properties:
            lrc:
              type: array
              items:
                type: object
                required:
                  - name
                properties:
                  address:
                    type: string
                    description: LRC address
                    example: lrc1.thingpark.com
                  ID:
                    type: string
                    description: LRC identifier
                    example: '00000065'
                  lastCom:
                    type: integer
                    format: int64
                    example: 1577836800000
                    description: LRC last communication timestamp, epoch time in milliseconds
                  name:
                    type: string
                    description: LRC name
                  state:
                    type: integer
                    description: 'LRC  state: Down (0), Stopped (1), Started (2)'
                    format: int32
                  stateSince:
                    type: integer
                    format: int64
                    example: 1577836800000
                    description: LRC state since, epoch time in milliseconds
              example:
                - lastCom: 1549553301000
                  name: LRC1
                  state: 2
                  stateSince: 1549553301000
                - name: LRC2
        lrrID:
          type: string
          maxLength: 8
          minLength: 8
          pattern: '^(?!0{8})(?![fF]{3}[eE])(?![fF]{4})[0-9a-fA-F]{8}$'
          x-updateForbidden: true
          description: |
            Base Station LRR ID: 8 hexadecimal characters / case insensitive but
            always converted in upper case by the server. The value `00000000`
            and the prefixes `FFFE` and `FFFF` are reserved and forbidden.

            Forbidden in Create if LRR UUID is provided:
            - The identification mode is set to `LRR_UUID`
            - The LRR ID is automatically allocated and returned in response

            Mandatory in Create if LRR UUID is not provided:
            - The identification mode is set to `LRR_ID`
            - This case is deprecated and should not be used
          example: '10020039'
        lrrUUID:
          type: string
          maxLength: 55
          minLength: 9
          pattern: '^([0-9a-fA-F]{6})-([0-9a-fA-F]{2,48})$'
          description: |
            Base Station LRR UUID: `<LRR-OUI>-<LRR-GID>`

            Where:
            - `<LRR-OUI>` is the IEEE OUI of the Base station manufacturer (6
            hexadecimal characters / case insensitive but always converted in upper case by the server)
            - `<LRR-GID>` is the Base Station identifier relatively to the vendor
            (maximum 48 hexadecimal characters / case insensitive but always converted in upper case by the server)

            Mandatory in Create if LRR ID is not provided:
            - The identification mode is set to `LRR_UUID`
            - The LRR ID is automatically allocated and returned in response

            Forbidden in Create if LRR ID is provided:
            - The identification mode is set to `LRR_ID`
            - This case is deprecated and should not be used

            Forbidden in Update if BS identification mode is `LRR_UUID`
          example: 7076FF-024B0B030008
        mfs:
          type: object
          readOnly: true
          description: |
            Mounted filesystems of the base station.

            Empty until the configuration is reported by the base station.
          properties:
            mfs:
              type: array
              items:
                type: object
                required:
                  - name
                  - used
                properties:
                  name:
                    type: string
                    description: File system name
                    example: /usr
                  used:
                    type: integer
                    description: File system current usage (%)
                    format: int32
                    example: 53
              example:
                - name: /usr
                  used: 53
                - name: /tmp
                  used: 0
        model:
          type: object
          required:
            - commercialName
            - logo
            - ID
            - rfHardwareConfig
            - softwareType
          properties:
            ID:
              type: string
              x-updateForbidden: true
              description: BS profile ID
              example: GEN/GW.2
            commercialName:
              type: string
              description: BS profile name
              example: For ref design V2.X
              readOnly: true
            ismBands:
              type: array
              description: |
                List of IMS band IDs associated with the BS profile.
                If default ISM bands are defined for the network partner, the list is filtered to only keep ISM bands matching the default ones.
              items:
                type: object
                description: |
                  List of IMS band IDs associated with the BS profile.
                  If default ISM bands are defined for the network partner, the list is filtered to only keep ISM bands matching the default ones.
                properties:
                  ID:
                    $ref: '#/components/schemas/IsmBandID'
            logo:
              type: string
              description: BS profile logo HREF
              example: /thingpark/wireless/rest/resources/files/logo/baseStationProfile/64
              readOnly: true
            rfHardwareConfig:
              enum:
                - S1_A1_B1
                - S1_A2_B1
                - S1_A2_B2
                - S1_A1_B4
                - S3_A3_B3
              type: string
              description: |
                RF hardware configuration of the BS profile:
                - `S1_A1_B1`: 1 sector, 1 antenna, 1 board (mono-sector 1\*8 or
                  1\*16)
                - `S1_A2_B1`: 1 sector, 2 antennas, 1 board (mono-sector 2\*8)
                - `S1_A2_B2`: 1 sector, 2 antennas, 2 boards (mono-sector 2\*16)
                - `S1_A1_B4`: 1 sector, 1 antennas, 4 boards (mono-sector 1\*64)
                - `S3_A3_B3`: 3 sectors, 3 antennas, 3 boards (tri-sectors 1\*8
                  or 1\*16)
              example: S1_A1_B1
              readOnly: true
            softwareType:
              type: string
              enum:
                - LRR_LINUX
                - BASIC_STATION_LINUX
                - LRR_FREERTOS
              description: |
                Type of software executed on the Base Station:
                - LRR_LINUX: Actility LRR on Linux OS
                - BASIC_STATION_LINUX: Semtech Basic Station on Linux OS
                - LRR_FREERTOS: Actility LRR on FreeRTOS
              readOnly: true
        name:
          type: string
          description: |
            BS name

            Default: The name is generated
        now:
          type: integer
          format: int64
          example: 1577836800000
          description: Current time of the server, epoch time in milliseconds
          readOnly: true
        occContext:
          $ref: '#/components/schemas/OccContext'
        owner:
          type: object
          readOnly: true
          required:
            - name
            - ID
            - accessRight
          properties:
            ID:
              type: string
              description: BS owner ID
            accessRight:
              type: string
              description: 'BS owner access right: RO, RW'
            name:
              type: string
              description: BS owner name
        power:
          type: object
          readOnly: true
          description: |
            Power source of the base station.

            Empty until the configuration is reported by the base station.
          properties:
            batteryLevel:
              type: integer
              description: Battery remaining level (%)
              format: int32
            status:
              type: integer
              description: |
                Power status:
                - WIND (1)
                - SOLAR (2)
                - BATTERY (3)
                - POE (4)
                - MAINS (5)
                - Unknown because of disconnected Base Station (null)
              format: int32
        powerConfig:
          enum:
            - MAINS
            - POE
            - WBAT
            - SBAT
          type: string
          description: |
            Power source of the base station:
            - MAINS,
            - POE (Power over Ethernet),
            - WBAT (Wind / Battery),
            - SBAT (Solar / Battery)

            Empty until the configuration is reported by the base station.

            This parameter must no longer be used: ignored in requests, the `power` property must be used in responses.
          deprecated: true
        publicKey:
          type: string
          description: >
            SSH public key used by the base station to authenticate to the Key
            installer.

            This property is relevant only if bsSecurity is `IPSEC_X509`.

            The public key must be provided in PEM PKCS8 format.
          example: |-
            -----BEGIN PUBLIC KEY-----
            MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsJKtG6m1J/FNiOOucXB9
            s6ASjngXZYnAqbpB548W8MSKLexRfqGZzLr5GT0gnWkl20ahiGUFM8LlIM7UfHKD
            UUEsHsaC4Zu92VYGE7jmLOdc57srH8csMEfjJc8aQLUvbF4w/N+rw47B6323mbsb
            RGDq14MLpKk1Zp8s5rBZH6gyZzTtjuuAKXMdOoIRyo4RyvVGGiSxw6VqRA3eHNEc
            B+DlIoRCdq251pTXUqLGxYgDFJKSxmAwyVLPpqNYojxp77o2LqoSsXSaOWUk+fxw
            Q8y4Az/n5a59f/4noYmBBvjcthAJ7KvnEdCIPnlHgisCHxQktzaou2283Ow39lX+
            0wIDAQAB
            -----END PUBLIC KEY-----
        rfCoverageType:
          enum:
            - PERMANENT
            - TEMPORARY_MOBILE
            - TEMPORARY_STATIONARY
          type: string
          description: >
            Specify if the RF coverage provided by the base station is
            permanent, or temporary for recovery purposes. In case of temporary
            RF coverage, the base station may be mobile or stationary. A base
            station used for temporary RF coverage is not taken into account by
            adaptive data rate algorithm. Additionally, a mobile base station is
            never selected for class B/C downlink transmission.
        ram:
          type: integer
          description: RAM usage (%)
          format: int32
          example: 5
          readOnly: true
        reverseSshState:
          type: integer
          description: |
            Reverse SSH state:
            - Closed (0)
            - Opened (>0)
          format: int32
          readOnly: true
        rfHardwareConfig:
          enum:
            - S1_A1_B1
            - S1_A2_B1
            - S1_A2_B2
            - S1_A1_B4
            - S3_A3_B3
          type: string
          description: |
            RF hardware configuration:
            - `S1_A1_B1`: 1 sector, 1 antenna, 1 board (mono-sector 1\*8 or
              1\*16)
            - `S1_A2_B1`: 1 sector, 2 antennas, 1 board (mono-sector 2\*8)
            - `S1_A2_B2`: 1 sector, 2 antennas, 2 boards (mono-sector 2\*16)
            - `S1_A1_B4`: 1 sector, 1 antennas, 4 boards (mono-sector 1\*64)
            - `S3_A3_B3`: 3 sectors, 3 antennas, 3 boards (tri-sectors 1\*8 or
              1\*16)

            Default: Inherited from the BS profile
        rfRegionID:
          type: string
          description: RF Region provisioning ID
          readOnly: true
        rfRegionIDVersion:
          type: integer
          description: RF Region version
          format: int32
          readOnly: true
        rfRegionName:
          type: string
          description: RF Region name
          readOnly: true
        rfRegionHref:
          type: string
          description: RF Region href
          readOnly: true
          example: /thingpark/wireless/rest/partners/10/rfRegions/103
        rfScanState:
          type: integer
          description: |
            RF scan state:
            - No started (0)
            - In progress (>0)
          format: int32
          readOnly: true
        rfcellState:
          type: integer
          description: |
            RF cell state:
            - Stopped (0)
            - Downlink stopped (1)
            - Started (2)
            - Unknown because of disconnected Base Station (null)
          format: int32
          readOnly: true
        smn:
          type: string
          description: BS serial marketing number
        state:
          $ref: '#/components/schemas/BsState'
        stateSince:
          type: integer
          format: int64
          example: 1577836800000
          description: Base station admin state reached since timestamp, epoch time in
            milliseconds.
          readOnly: true
        staticAddress:
          type: string
          description: |
            BS address (static)
          default: Not set
        temp:
          type: integer
          description: 'Temperature status: temperature (?C)'
          format: int32
          readOnly: true
        timeSync:
          type: integer
          description: |
            Time synchronization status:
            - Local / Not synchronized (0)
            - NTP (1)
            - NTP sync with GPS (2)
            - Radio sync with GPS (3)
            - Unknown because of disconnected Base Station (null)
          format: int32
          example: 1
          readOnly: true
        upFrame:
          type: object
          readOnly: true
          properties:
            history:
              type: object
              properties:
                val:
                  type: array
                  items:
                    type: integer
                    description: >-
                      List of last cumulated uplink frame per 10 minutes
                      **Averaging is locally computed by the GUI**
                    format: int32
                  example: [ 1064, 3215, 5127, 1248 ]
            last:
              type: object
              properties:
                ant:
                  type: string
                  description: Last  uplink frame  antenna
                  example: A1
                date:
                  type: integer
                  format: int64
                  example: 1577836800000
                  description: Last uplink frame timestamp, epoch time in milliseconds
                lc:
                  type: string
                  description: Last uplink frame logical channel (LC1  ... LC7)
            minRC:
              type: object
              properties:
                ant:
                  type: string
                  description: Min uplink RC antenna
                  example: A1
                dc:
                  type: number
                  description: Max uplink DC (duty cycle)
                  format: float
                lc:
                  type: string
                  description: Min uplink RC logical channel (LC1  ... LC7)
                rc:
                  type: number
                  description: Min uplink RC (remaining capacity)
                  format: float
        upgradePolicy:
          enum:
            - MANUAL
            - TPK_POLICY
          type: string
          description: |
            Base station upgrade policy: MANUAL, TPK_POLICY

            This parameter must no longer be used: the associated feature is no more available in the product.
          readOnly: true
          deprecated: true
        vendor:
          type: object
          required:
            - ID
            - logo
          readOnly: true
          properties:
            ID:
              type: string
              description: BS vendor ID
            logo:
              type: string
              description: BS vendor logo HREF
            name:
              type: string
              description: |
                BS vendor name

                This property must no longer be used: the property `commercialName` must be used in replacement.
              deprecated: true
            commercialName:
              type: string
              description: Commercial name of the base station manufacturer
            commercialDescription:
              type: string
              description: Commercial description of the base station manufacturer
        version:
          type: object
          readOnly: true
          properties:
            status:
              enum:
                - OUTDATED
                - UPTODATE
                - DEPRECATED
              type: string
              description: 'Version status: OUTDATED, UPTODATE, DEPRECATED'
            statusInfo:
              type: string
              description: Friendly version status info
            version:
              type: string
              description: LRR software version
        wanConfig:
          type: string
          description: |
            WAN backhaul interfaces of the base station.

            Empty until the configuration is reported by the base station.

            Only the imei, imsi and iccid attributes of a GPRS interface can be updated.

            This parameter must no longer be used: the `ints` property must be used in responses (IMEI, IMSI and ICCID are now reported by the base station).
          example: |
            <interfaces>
              <interface idx="0" name="sl0" type="GPRS" iccid="8991101200003204510" imei="228012176510740"/>
              <interface idx="1" name="eth0" type="ETHERNET"/>
            </interfaces>
          deprecated: true
    BsHealthState:
      type: string
      enum:
        - INIT
        - ACTIVE
        - BACKHAUL_CNX_ERROR
        - RF_ERROR
        - SUSPENDED
      description: |
        Base Station health state:
        - INIT: The base station has been created, but has never
          communicated with the network server
        - ACTIVE: The base station is connected to the network, transmitting
          and receiving packets
        - BACKHAUL_CNX_ERROR: The base station has backhaul connection
          issues, and cannot communicate with the network server
        - RF_ERROR: The base station has radio transmission issues, and
          cannot send or receive LoRaWAN packets to or from a device
        - SUSPENDED: The base station has been administratively suspended
          and is no more connected to the network server
      readOnly: true
    BsAppServers:
      type: array
      description: |
        List of application servers associated with the base station for alarms
        reporting purposes.

        Only supported if the partner's type is `SUBSCRIBER`: associated
        applications servers must belong to the same subscriber account and must
        be of type Kafka.

        If the authenticated user has domain restrictions, only the following
        application servers can be associated with a base station:
        - Application servers not associated with any domain
        - Application servers associated with domains and matching the domain
          restrictions
      items:
        type: object
        required:
          - ID
          - name
          - href
        properties:
          ID:
            type: string
            description: Application server ID
            example: TWA_199906997.22.AS
          href:
            type: string
            description: Application server HREF
            example: /thingpark/wireless/rest/subscriptions/33/appServers/22
            readOnly: true
          name:
            type: string
            description: Application Server name
            example: my MQTT application
            readOnly: true
      minItems: 1
      maxItems: 5
    BsInt:
      type: object
      required:
        - name
        - type
      anyOf:
        - $ref: '#/components/schemas/BsIntEthernet'
        - $ref: '#/components/schemas/BsIntCellular'
        - $ref: '#/components/schemas/BsIntWlan'
      discriminator:
        propertyName: type
        mapping:
          ETHERNET: '#/components/schemas/BsIntEthernet'
          GPRS: '#/components/schemas/BsIntCellular'
          WLAN: '#/components/schemas/BsIntWlan'
      properties:
        activity:
          type: integer
          description: Activity (second)
          format: int32
          example: 176407
        devRoundTrip:
          type: integer
          description: Interface deviation round trip in ms
          format: int32
          example: 0
        stateSince:
          type: integer
          description: Interface state since, epoch time in milliseconds
          format: int64
          example: 1577836800000
        rx:
          type: object
          properties:
            avgBitRate:
              type: integer
              description: Interface average RX traffic in b/s
              format: int32
              example: 1473
            totalTraffic:
              type: number
              description: Interface total RX  traffic in kB
              format: float
              example: 82784.73800000016
        tx:
          type: object
          properties:
            avgBitRate:
              type: integer
              description: Interface average TX traffic in b/s
              format: int32
              example: 2928
            totalTraffic:
              type: number
              description: Interface total TX  traffic in kB
              format: float
              example: 50593.632999999914
        avgRoundTrip:
          type: integer
          description: Interface average round trip in ms
          format: int32
        ip:
          type: string
          description: Interface IP address
        name:
          type: string
          description: Interface name
        type:
          enum:
            - ETHERNET
            - GPRS
            - WLAN
          type: string
          description: Interface type
    BsIntEthernet:
      title: ETHERNET
      type: object
      required:
        - state
        - type
      properties:
        state:
          type: integer
          description: |
            State for a ETHERNET interface:
            - Down / No started (5)
            - Up / Link down (4)
            - Up / No IP / No DHCP lease (3)
            - Up / Network down (2)
            - Up and running (1)
            - Up / running and used (0)
            - Unknown because of disconnected Base Station (null)
          format: int32
    BsIntCellular:
      title: GPRS
      type: object
      properties:
        state:
          type: integer
          description: |
            State for a GPRS interface:
            - Down / No started  (5)
            - Up / Nw. reg. failed / No sig. (4)
            - Up / No IP / No PDP context (3)
            - Up / Network down (2)
            - Up and running (1)
            - Up / running and used (0)
            - Unknown because of disconnected Base Station (null)
          format: int32
        connectionType:
          enum:
            - 3G
            - 4G
          type: string
          description: Cellular connection type
        iccid:
          type: string
          description: ICCID of the SIM card
          example: '89370010100019228581'
        imei:
          type: string
          description: IMEI of the Base Station
          example: '861107030078134'
        imsi:
          type: string
          description: IMSI of the SIM card
          example: '246012101922858'
        networkOperator:
          type: string
          description: Cellular network operator
          example: Orange
        rssi:
          type: number
          format: float
          description: Cellular RSSI in dBm
          example: -83
        rscp:
          type: number
          format: float
          description: Cellular 3G RSCP in dBm
          example: -86
        ecIo:
          type: number
          format: float
          description: Cellular 3G Ec/Io in dB
          example: -8
        rsrp:
          type: number
          format: float
          description: Cellular 4G RSRP in dBm
          example: -86
        rsrq:
          type: number
          format: float
          description: Cellular 4G RSRQ in dBm
          example: -7
        sinr:
          type: number
          format: float
          description: Cellular 4G SINR in dB
          example: 18.5
    BsIntWlan:
      title: WLAN
      type: object
      properties:
        rssi:
          type: number
          format: float
          description: WLAN RSSI in dBm
          example: -83
        ssid:
          type: string
          description: SSID of WLAN network
          example: Office Network
        state:
          type: integer
          description: |
            State for a WLAN interface:
            - Down / No started  (5)
            - Up / SSID not found / No sig. (4)
            - Up / No IP / No DHCP lease (3)
            - Up / Network down (2)
            - Up and running (1)
            - Up / running and used (0)
            - Unknown because of disconnected Base Station (null)
          format: int32
    BssClusters:
      type: object
      required:
        - count
        - clusters
      properties:
        count:
          description: Total number of base stations in the bounding box
          type: integer
        clusters:
          type: array
          items:
            type: object
            description: A group a base stations close to each other.
            required:
              - count
              - location
              - bbox
            properties:
              count:
                type: integer
                description: Number of base stations grouped in the cluster. A cluster may
                  contain only one element.
                minimum: 1
              location:
                $ref: "#/components/schemas/Coordinates"
              bbox:
                description: "The bounding box containing all base stations of the cluster:
                  west, south, east, north."
                type: object
                required:
                  - northeast
                  - southwest
                properties:
                  northeast:
                    $ref: "#/components/schemas/Coordinates"
                  southwest:
                    $ref: "#/components/schemas/Coordinates"
                example:
                  northeast:
                    lat: 51.686
                    lng: 0.236
                  southwest:
                    lat: 51.28
                    lng: -0.489
              item:
                $ref: '#/components/schemas/BsBrief'
      example:
        count: 31
        clusters:
          - count: 10
            location:
              lat: 49.1885797
              lng: -0.2925326
            bbox:
              northeast:
                lat: 49.1891392559
                lng: -0.2931879108
              southwest:
                lat: 49.1879542168
                lng: -0.2912362304
          - count: 20
            location:
              lat: 48.8752245
              lng: 2.3324039
            bbox:
              northeast:
                lat: 48.8757421684
                lng: 2.3323493691
              southwest:
                lat: 48.8745461124
                lng: 2.3347097131
          - count: 1
            location:
              lat: 48.7586084
              lng: -3.4667419
            bbox:
              northeast:
                lat: 48.7586084
                lng: -3.4667419
              southwest:
                lat: 48.7586084
                lng: -3.4667419
            item:
              activateBeaconTransmission: false
              activateRX2Optimization: 1
              alarm1: 4
              alarm2: 0
              alarm3: 0
              alarm4: 0
              alarm5: 1
              alarm6: 4
              alarmCount: 9
              alarmLevel: 6
              allowClassB: true
              ant:
                - cableLoss: 0
                  gain: 0
              cableLoss: 0
              gain: 0
              beacons:
                lastDeliveryCause: "00"
              classBState: 2
              cnxState: "CNX"
              cnxStateSince: 1637076999056
              cpu: 8
              creationDate: 1574243933084
              domains:
                - name: France/Paris
                  group:
                    name: Site
                - name: Network
                  group:
                    name: Vertical
              dwFrame:
                history:
                  val: [ 1, 0, 0, 0, 1, 0, 0, 1, 0, 0 ]
                last:
                  ant: "A1"
                  date: 1637597638032
                  lc: "LC253"
              gpsReceiverConfig: "PRESENT"
              gpsSync: 1
              healthState: "ACTIVE"
              href: "/thingpark/wireless/rest/partners/1060/bss/33148"
              ints:
                int:
                  - avgRoundTrip: 1
                    ip: "10.100.34.235"
                    name: "eth0"
                    rxAvgRate: 728
                    state: 0
                    txAvgRate: 1345
                    type: "ETHERNET"
                  - name: "ppp0"
                    rxAvgRate: 0
                    state: 5
                    txAvgRate: 0
                    type: "GPRS"
              ismBand: "eu868"
              lastReboot: 1637076983810
              lastReport: 1637596068365
              lat: 48.7586084
              locationType: 2
              lon: -3.4667419
              lrrID: "10020039"
              lrrUUID: "001558-024B0B030008"
              mfs:
                - name: "/"
                  used: 5
              model:
                ID: "UFISP/FCMLB.1"
                commercialName: "Macro V1.5"
                logo: "/thingpark/wireless/rest/resources/files/logo/baseStationProfile/745"
              name: My base station
              power:
                status: 5
              ram: 5
              rfHardwareConfig: "S1_A1_B1"
              rfRegionID: "EU868_8channels.172"
              state: "ACTIVE"
              stateSince: 1574243933084
              tags: []
              timeSync: 1
              upFrame:
                history:
                  val: [ 1, 0, 0, 0, 1, 0, 0, 1, 0, 0 ]
                last:
                  ant: "A1"
                  date: 1637597636032
                  lc: "LC8"
              vendor:
                commercialDescription: "Services enabler and a system integrator."
                commercialName: "Ufispace"
                logo: "/thingpark/wireless/rest/resources/files/logo/baseStationVendor/103"
                name: "Ufispace"
              version: "2.4.73"
    BsProfiles:
      type: object
      required:
        - briefs
        - more
      properties:
        briefs:
          type: array
          items:
            type: object
            required:
              - commercialName
              - ID
              - vendor
              - rfHardwareConfig
              - softwareType
            properties:
              ID:
                type: string
                description: ID of the base station model
                example: GEN/GW.1
              commercialName:
                type: string
                description: B2C name of the base station model
                example: For ref design V1.5
              vendor:
                type: object
                required:
                  - ID
                properties:
                  ID:
                    type: string
                    description: ID of the base station manufacturer
                    example: generic
                  name:
                    type: string
                    description: |
                      Name of the base station manufacturer

                      This property must no longer be used: the property `commercialName` must be used in replacement.
                    deprecated: true
                    example: Generic
                  commercialName:
                    type: string
                    description: Commercial name of the base station manufacturer
                    example: Generic
                  commercialDescription:
                    type: string
                    description: Commercial description of the base station manufacturer
                    example: Vendor used for generic Base station model.
              defaultIsmBands:
                type: array
                description: |
                  List of ISM bands supported by the base station model.
                  If the list of base station models is filtered by ISM bands, this list is an intersection between requested ISM bands and supported ISM bands.
                items:
                  type: object
                  properties:
                    ID:
                      $ref: '#/components/schemas/IsmBandID'
                    name:
                      $ref: '#/components/schemas/IsmBandName'
              rfHardwareConfig:
                enum:
                  - S1_A1_B1
                  - S1_A2_B1
                  - S1_A2_B2
                  - S1_A1_B4
                  - S3_A3_B3
                type: string
                description: |
                  RF hardware configuration of the base station model:
                  - `S1_A1_B1`: 1 sector, 1 antenna, 1 board (mono-sector 1\*8
                    or 1\*16)
                  - `S1_A2_B1`: 1 sector, 2 antennas, 1 board (mono-sector 2\*8)
                  - `S1_A2_B2`: 1 sector, 2 antennas, 2 boards (mono-sector
                    2\*16)
                  - `S1_A1_B4`: 1 sector, 1 antennas, 4 boards (mono-sector
                    1\*64)
                  - `S3_A3_B3`: 3 sectors, 3 antennas, 3 boards (tri-sectors
                    1\*8 or 1\*16)
                example: S1_A1_B1
              softwareType:
                type: string
                enum:
                  - LRR_LINUX
                  - BASIC_STATION_LINUX
                  - LRR_FREERTOS
                description: |
                  Type of software executed on the Base Station:
                  - LRR_LINUX: Actility LRR on Linux OS
                  - BASIC_STATION_LINUX: Semtech Basic Station on Linux OS
                  - LRR_FREERTOS: Actility LRR on FreeRTOS
        more:
          $ref: '#/components/schemas/More'
    Bss:
      type: object
      required:
        - briefs
        - now
        - more
        - count
      properties:
        briefs:
          type: array
          items:
            $ref: '#/components/schemas/BsBrief'
        more:
          $ref: '#/components/schemas/More'
        now:
          type: integer
          format: int64
          example: 1577836800000
          description: Current time of the server, epoch time in milliseconds
        count:
          type: integer
          description: Total number of matching base stations
          example: 32
    BsBrief:
      type: object
      required:
        - name
        - model
        - vendor
        - lrrID
        - state
        - stateSince
        - cnxState
        - healthState
        - ints
        - alarmLevel
        - alarmCount
        - href
        - creationDate
        - tags
        - alarm1
        - alarm2
        - alarm3
        - alarm4
        - alarm5
        - alarm6
      properties:
        activateBeaconTransmission:
          type: boolean
          description: |
            Activate beacon transmission

            Note: Null is returned after the upgrade to ThingPark 7.0 until the base station transmit one configuration report.
        activateRX2Optimization:
          type: integer
          enum:
            - 0
            - 1
          description: |
            Active RX2 optimization

            Note: Null is returned after the upgrade to ThingPark 7.0 until the base station transmit one configuration report.
        alarm1:
          type: integer
          description: Number of CLEARED alarms not ACKED
          format: int32
          example: 9
        alarm2:
          type: integer
          description: Number of INDETERMINATE alarms not ACKED
          format: int32
          example: 0
        alarm3:
          type: integer
          description: Number of WARNING alarms not ACKED
          format: int32
          example: 1
        alarm4:
          type: integer
          description: Number of MINOR alarms not ACKED
          format: int32
          example: 0
        alarm5:
          type: integer
          description: Number of MAJOR alarms not ACKED
          format: int32
          example: 1
        alarm6:
          type: integer
          description: Number of CRITICAL alarms not ACKED
          format: int32
          example: 0
        alarmCount:
          type: integer
          description: Total number of alarm not acked
          format: int32
        alarmLevel:
          type: integer
          description: >-
            Highest not acked alarm level (6 ... 1) or 0 when the BS is not
            associated with not acked alarm
          format: int32
        allowClassB:
          type: boolean
          description: |
            Allow Class B

            Note: Null is returned after the upgrade to ThingPark 7.0 until the base station transmit one configuration report.

            This parameter must no longer be used: it is ignored and always set to true.
          deprecated: true
        alt:
          type: integer
          description: >-
            Network or administrative BS absolute altitude (according to the
            type of location currently activated)
          format: int32
        ants:
          type: object
          properties:
            ant:
              type: array
              items:
                type: object
                properties:
                  cableLoss:
                    type: number
                    description: Cable loss in dB
                    format: float
                    example: 0.49
                  gain:
                    type: number
                    description: Antenna gain in dBi
                    format: float
                    example: 3
        appServers:
          $ref: '#/components/schemas/BsAppServers'
        beacons:
          type: object
          properties:
            lastDeliveryCause:
              type: string
              description: |
                Specify the delivery cause of the last beacon transmission:
                - 0x: Success
                - Ax: Transmission slot busy
                - Bx: Too late for beacon slot
                - Dx: DC constraint on beacon slot
              example: '00'
            lastDeliveryFailedCause:
              type: string
              description: |
                Specify the delivery cause of the last beacon transmission failure:
                - 0x: Success
                - Ax: Transmission slot busy
                - Bx: Too late for beacon slot
                - Dx: DC constraint on beacon slot
              example: 'A0'
            lastDeliveryFailedCauseDate:
              type: integer
              format: int64
              example: 1577836800000
              description: Last beacon transmission failure report date, epoch time in
                milliseconds.
        bsSecurity:
          type: object
          required:
            - type
          description: |
            The base station security defines how the connection to the core network is secured.
            It only applies when the base station identification mode is `LRR_UUID`.
            When the base station identification mode is `LRR_ID`, the management of the base station security is performed outside the Network Manager API and type is set to `DISABLE`.
          properties:
            expirationDate:
              type: integer
              format: int64
              example: 1609459200000
              description: Date of Base Station certificate expiration, epoch time in
                milliseconds
            generationDate:
              type: integer
              format: int64
              example: 1577836800000
              description: Date of Base Station certificate generation, epoch time in
                milliseconds
            type:
              enum:
                - IPSEC_X509
                - DISABLE
              type: string
              description: |
                Base Station security type:
                - `IPSEC_X509`: the connection to the core network is secured using IPsec or TLS (X.509 certificates) 
                - `DISABLE`: the connection to the core network is not secured
        classBState:
          type: integer
          description: |
            Class B state:
            - Not supported (0)
            - Supported but not operational (1)
            - Supported and operational (2)
            - Unknown because of disconnected Base Station (null)
          format: int32
        cnxState:
          enum:
            - NEVERCNX
            - CNX
            - DISC
            - UNKNOWN
          type: string
          description: |
            Base station connection state:
            - NEVERCNX: The BS has never been connected.
            - CNX: The BS has an IEC link started with at least a LRC.
            - DISC:  The BS is disconnected from all LRCs.
            - UNKNOWN:  The BS connection state is currently undefined.
        cnxStateSince:
          type: integer
          format: int64
          example: 1577836800000
          description: >-
            Base station connection state  reached since timestamp when the BS
            has already been connected, epoch time in milliseconds.
        cpu:
          type: integer
          description: CPU usage (%)
          format: int32
          example: 23
        creationDate:
          type: integer
          format: int64
          example: 1577836800000
          description: Base station creation date, epoch time in milliseconds.
        customerAdminData:
          type: string
          description: |
            BS administrative info

            Note: Null is returned after the upgrade to ThingPark 7.0 until the base station transmit one configuration report.
        customs:
          type: object
          properties:
            version:
              description: >-
                Optional custom version fields returns as <key>=<value> pair.
              example:
                - hardware_version=1.0.0
              type: array
              items:
                type: string
        domains:
          $ref: '#/components/schemas/Domains'
        dwFrame:
          type: object
          properties:
            history:
              type: object
              properties:
                val:
                  type: array
                  items:
                    type: integer
                    description: >-
                      List of last cumulated downlink frame per 10 minutes
                      **Averaging is locally computed by the GUI**
                    format: int32
                  example: [ 6842, 1235, 5431, 3492 ]
            last:
              type: object
              properties:
                ant:
                  type: string
                  description: Last  downlink frame  antenna
                  example: A1
                date:
                  type: integer
                  format: int64
                  example: 1577836800000
                  description: Last downlink frame timestamp, epoch time in milliseconds
                lc:
                  type: string
                  description: Last downlink frame logical channel (LC1  ... LC7)
            minRC:
              type: object
              properties:
                ant:
                  type: string
                  description: Min downlink RC antenna
                  example: A1
                lc:
                  type: string
                  description: Min downlink RC logical channel (LC1  ... LC7)
                rc:
                  type: number
                  description: Min downlink RC (remaining capacity)
                  format: float
        gpsReceiverConfig:
          enum:
            - PRESENT
            - ABSENT
          type: string
          description: |
            GPS receiver configuration:
            - PRESENT (i.e. Present and used)
            - ABSENT (i.e. Absent or not used)

            Default: Inherited from the BS profile
        gpsSync:
          type: integer
          description: |
            GPS receiver synchronization status:
            - Locking/No signal (0)
            - Locked (1)
            - Unknown because of disconnected Base Station (null)
          format: int32
          example: 1
        healthState:
          $ref: '#/components/schemas/BsHealthState'
        href:
          type: string
          description: Base station href
        ints:
          type: object
          description: |
            WAN backhaul interfaces of the base station.

            Empty until the configuration is reported by the base station.
          properties:
            int:
              type: array
              items:
                type: object
                allOf:
                  - $ref: '#/components/schemas/BsBriefInt'
              example:
                - name: eth0
                  type: ETHERNET
                  state: 0
                  ip: 1.2.3.4
                  avgRoundTrip: 2
                  txAvgRate: 13969
                  rxAvgRate: 11114
                - name: wwan1
                  type: GPRS
                  state: 5
                  txAvgRate: 0
                  rxAvgRate: 0
        ismBand:
          type: string
          allOf:
            - $ref: '#/components/schemas/IsmBandID'
            - type: string
              description: >
                When known, the ISM band associated with the BS. The following
                values are supported:


                "eu868", "eu433", "cn779", "as923", "tw920", "us915", "au915", "cn470", "in865", "ru864"
              example: eu868
        lastReboot:
          type: integer
          format: int64
          example: 1577836800000
          description: Last reboot timestamp of the BS (**software uptime**), epoch time
            in milliseconds
        lastReport:
          type: integer
          format: int64
          example: 1577836800000
          description: Last report timestamp, epoch time in milliseconds
        lat:
          type: number
          description: >-
            Network or administrative BS location (according to the type of
            location currently activated)
          format: float
          example: 47.517201
        locationType:
          type: integer
          description: >-
            Type of location currently activated (Unknown:0 or Administrative:1
            or GPS:2)
          format: int32
          example: 2
        lon:
          type: number
          description: >-
            Network or administrative BS location (according to the type of
            location currently activated)
          format: float
          example: 1.757812
        lrrID:
          type: string
          maxLength: 8
          minLength: 8
          pattern: '^[0-9a-fA-F]{8}$'
          description: |
            LRR ID: 8 hexadecimal characters / always converted in upper case by the server
          example: '10020039'
        lrrUUID:
          type: string
          maxLength: 55
          minLength: 9
          pattern: '^([0-9a-fA-F]{6})-([0-9a-fA-F]{2,48})$'
          description: >
            BS LRR UUID: <LRR-OUI>-<LRR-GID>


            Where:

            - <LRR-OUI> is the IEEE OUI of the Base station manufacturer (6 hexadecimal characters / always converted in upper case by the server)

            - <LRR-GID> is the Base Station identifier relatively to the vendor (maximum 48 hexadecimal characters / always converted in upper case by the server)
          example: 7076FF-024B0B030008
        mfs:
          type: array
          description: |
            Mounted filesystems of the base station.

            Empty until the configuration is reported by the base station.
          items:
            type: object
            required:
              - name
              - used
            properties:
              name:
                type: string
                description: File system name
                example: /usr
              used:
                type: integer
                description: File system current usage (%)
                format: int32
                example: 53
          example:
            - name: /usr
              used: 53
            - name: /tmp
              used: 0
        model:
          type: object
          required:
            - ID
            - commercialName
            - logo
          properties:
            ID:
              type: string
              description: BS profile ID
              example: GEN/GW.2
            commercialName:
              type: string
              description: BS profile name
              example: For ref design V2.X
            logo:
              type: string
              description: BS profile logo HREF
              example: /thingpark/wireless/rest/resources/files/logo/baseStationProfile/64
        name:
          type: string
          description: BS name
        power:
          type: object
          description: |
            Power source of the base station.

            Empty until the configuration is reported by the base station.
          properties:
            batteryLevel:
              type: integer
              description: >-
                Remaining battery level (%) when the activated power source is
                WIND or SOLAR.
              format: int32
            status:
              type: integer
              description: |
                Power source currently activated:
                - WIND (1)
                - SOLAR (2)
                - BATTERY (3)
                - POE (4)
                - MAINS (5)
                - Unknown because of disconnected Base Station (null)
              format: int32
        ram:
          type: integer
          description: RAM usage (%)
          format: int32
          example: 5
        rfHardwareConfig:
          enum:
            - S1_A1_B1
            - S1_A2_B1
            - S1_A2_B2
            - S1_A1_B4
            - S3_A3_B3
          type: string
          description: |
            RF hardware configuration:
            - `S1_A1_B1`: 1 sector, 1 antenna, 1 board (mono-sector 1\*8 or
              1\*16)
            - `S1_A2_B1`: 1 sector, 2 antennas, 1 board (mono-sector 2\*8)
            - `S1_A2_B2`: 1 sector, 2 antennas, 2 boards (mono-sector 2\*16)
            - `S1_A1_B4`: 1 sector, 1 antennas, 4 boards (mono-sector 1\*64)
            - `S3_A3_B3`: 3 sectors, 3 antennas, 3 boards (tri-sectors 1\*8 or
              1\*16)

            Note: Null is returned after the upgrade to ThingPark 7.0 until the
            base station transmit one configuration report.
        state:
          $ref: '#/components/schemas/BsState'
        stateSince:
          type: integer
          format: int64
          example: 1577836800000
          description: Base station admin state reached since timestamp, epoch time in
            milliseconds.
        tags:
          type: array
          description: List of tags associated with the Base Station
          items:
            type: object
            required:
              - name
              - multicastVisibility
            properties:
              name:
                $ref: '#/components/schemas/TagName'
              multicastVisibility:
                type: boolean
                description: TRUE if the tag is visible for multicast.
          example:
            - name: tag1
              multicastVisibility: true
            - name: tag2
              multicastVisibility: false
        timeSync:
          type: integer
          description: |
            Time synchronization status:
            - Local / Not synchronized (0)
            - NTP (1)
            - NTP sync with GPS (2)
            - Radio sync with GPS (3)
            - Unknown because of disconnected Base Station (null)
          format: int32
        upFrame:
          type: object
          readOnly: true
          properties:
            history:
              type: object
              properties:
                val:
                  type: array
                  items:
                    type: integer
                    description: >-
                      List of last cumulated uplink frame per 10 minutes
                      **Averaging is locally computed by the GUI**
                    format: int32
                  example: [ 1064, 3215, 5127, 1248 ]
            last:
              type: object
              properties:
                ant:
                  type: string
                  description: Last  uplink frame  antenna
                  example: A1
                date:
                  type: integer
                  format: int64
                  example: 1577836800000
                  description: Last uplink frame timestamp, epoch time in milliseconds
                lc:
                  type: string
                  description: Last uplink frame logical channel (LC1  ... LC7)
            minRC:
              type: object
              properties:
                ant:
                  type: string
                  description: Min uplink RC antenna
                  example: A1
                lc:
                  type: string
                  description: Min uplink RC logical channel (LC1  ... LC7)
                rc:
                  type: number
                  description: Min uplink RC (remaining capacity)
                  format: float
        vendor:
          type: object
          required:
            - logo
          properties:
            logo:
              type: string
              description: BS vendor logo HREF
            name:
              type: string
              description: |
                BS vendor name

                This property must no longer be used: the property `commercialName` must be used in replacement.
              deprecated: true
            commercialName:
              type: string
              description: Commercial name of the base station manufacturer
            commercialDescription:
              type: string
              description: Commercial description of the base station manufacturer
        version:
          type: string
          description: Software version of the BS
          example: "2.2.43"
        rfRegionID:
          type: string
          description: RF Region provisioning ID
          example: EU868_8channels.172
    BsBriefInt:
      type: object
      required:
        - name
        - type
      anyOf:
        - $ref: '#/components/schemas/BsBriefIntEthernet'
        - $ref: '#/components/schemas/BsBriefIntCellular'
        - $ref: '#/components/schemas/BsBriefIntWlan'
      discriminator:
        propertyName: type
        mapping:
          ETHERNET: '#/components/schemas/BsBriefIntEthernet'
          GPRS: '#/components/schemas/BsBriefIntCellular'
          WLAN: '#/components/schemas/BsBriefIntWlan'
      properties:
        avgRoundTrip:
          type: integer
          description: Interface average round trip in ms
          format: int32
        ip:
          type: string
          description: Interface IP address
        name:
          type: string
          description: Interface name
        rxAvgRate:
          type: integer
          description: Interface  Rx average bitrate (b/s)
          format: int32
        txAvgRate:
          type: integer
          description: Interface  Tx average bitrate (b/s)
          format: int32
        type:
          enum:
            - ETHERNET
            - GPRS
            - WLAN
          type: string
          description: Interface type
    BsBriefIntEthernet:
      title: ETHERNET
      type: object
      required:
        - state
        - type
      properties:
        state:
          type: integer
          description: |
            State for a ETHERNET interface:
            - Down / No started (5)
            - Up / Link down (4)
            - Up / No IP / No DHCP lease (3)
            - Up / Network down (2)
            - Up and running (1)
            - Up / running and used (0)
            - Unknown because of disconnected Base Station (null)
          format: int32
    BsBriefIntCellular:
      title: GPRS
      type: object
      properties:
        state:
          type: integer
          description: |
            State for a GPRS interface:
            - Down / No started  (5)
            - Up / Nw. reg. failed / No sig. (4)
            - Up / No IP / No PDP context (3)
            - Up / Network down (2)
            - Up and running (1)
            - Up / running and used (0)
            - Unknown because of disconnected Base Station (null)
          format: int32
        connectionType:
          enum:
            - 3G
            - 4G
          type: string
          description: Cellular connection type
        iccid:
          type: string
          description: ICCID of the SIM card
          example: '89370010100019228581'
        imei:
          type: string
          description: IMEI of the Base Station
          example: '861107030078134'
        imsi:
          type: string
          description: IMSI of the SIM card
          example: '246012101922858'
        networkOperator:
          type: string
          description: Cellular network operator
          example: Orange
        rssi:
          type: number
          format: float
          description: Cellular RSSI in dBm
          example: -83
        rscp:
          type: number
          format: float
          description: Cellular 3G RSCP in dBm
          example: -86
        ecIo:
          type: number
          format: float
          description: Cellular 3G Ec/Io in dB
          example: -8
        rsrp:
          type: number
          format: float
          description: Cellular 4G RSRP in dBm
          example: -86
        rsrq:
          type: number
          format: float
          description: Cellular 4G RSRQ in dBm
          example: -7
        sinr:
          type: number
          format: float
          description: Cellular 4G SINR in dB
          example: 18.5
    BsBriefIntWlan:
      title: WLAN
      type: object
      properties:
        rssi:
          type: number
          format: float
          description: WLAN RSSI in dBm
          example: -83
        ssid:
          type: string
          description: SSID of WLAN network
          example: Office Network
        state:
          type: integer
          description: |
            State for a WLAN interface:
            - Down / No started  (5)
            - Up / SSID not found / No sig. (4)
            - Up / No IP / No DHCP lease (3)
            - Up / Network down (2)
            - Up and running (1)
            - Up / running and used (0)
            - Unknown because of disconnected Base Station (null)
          format: int32
    BsState:
      enum:
        - INIT
        - VALIDATING
        - ACTIVE
        - SUSPENDED
      type: string
      description: |
        Base station admin state:
        - INIT: Initial configuration.
        - VALIDATING: Waiting operator validation (DEPRECATED).
        - ACTIVE:  Validated and activated.
        - SUSPENDED:  Validated and deactivated.

        Note: The INIT state is not used for now.
    BssDomains:
      type: object
      required:
        - LRRIDs
      properties:
        addedDomains:
          type: array
          description: |
            List of domains to add to the list of Base Stations. The list cannot
            contain more than one domain for a given group and cannot contain a
            domain belonging to a group used in `removedDomains` list.
          items:
            type: object
            allOf:
              - $ref: '#/components/schemas/Domain'
              - type: object
                description: |
                  The domain must exist in the subscriber account and must be in
                  ACTIVE state to be used. Any existing domain belonging to the
                  same group is replaced by the new one.
          minItems: 1
          example:
            - name: France/Paris
              group:
                name: Site
        removedDomains:
          type: array
          description: |
            List of domains to remove from the list of Base Stations. The list
            may contain several domains for a given group but cannot contain a
            domain belonging to a group used in `addedDomains` list.
          items:
            type: object
            allOf:
              - $ref: '#/components/schemas/Domain'
              - type: object
                description: |
                  No error is returned if the domain is not associated with a
                  subset or all targeted Base Stations.
          minItems: 1
          example:
            - name: Energy
              group:
                name: Vertical
            - name: Location
              group:
                name: Vertical
        LRRIDs:
          type: array
          items:
            type: string
          minItems: 1
          description: |
            Add or remove domains on base stations matching these LRR IDs (exact match).
          example: [ "1000010E", "10000022", "10000013" ]
    BsTag:
      type: object
      x-requiredCreate:
        - name
      x-requiredRead:
        - multicastVisibility
        - name
      properties:
        managedNetworkVisibility:
          type: boolean
          description: |
            TRUE if the tag is visible for managed customer network.

            This parameter must no longer be used: it is ignored and always set to false.
          default: true
          deprecated: true
        multicastVisibility:
          type: boolean
          description: TRUE if the tag is visible for multicast.
          default: true
        name:
          type: string
          allOf:
            - $ref: '#/components/schemas/TagName'
            - type: string
              x-updateForbidden: true
    BssTag:
      type: object
      allOf:
        - $ref: '#/components/schemas/BsTag'
        - type: object
          properties:
            LRRIDs:
              type: array
              items:
                type: string
              description: |
                Only tags/untags base stations matching these LRR IDs (exact match).
              example: [ "1000010E", "10000022", "10000013" ]
    BsTags:
      type: object
      required:
        - briefs
        - more
      properties:
        briefs:
          type: array
          items:
            type: object
            required:
              - name
              - multicastVisibility
              - href
            properties:
              managedNetworkVisibility:
                type: boolean
                description: |
                  TRUE if the tag is visible for managed customer network.

                  This parameter must no longer be used: it is ignored and always set to false.
                deprecated: true
              multicastVisibility:
                type: boolean
                description: TRUE if the tag is visible for multicast.
              name:
                $ref: '#/components/schemas/TagName'
              href:
                type: string
          example:
            - name: tag1
              managedNetworkVisibility: false
              multicastVisibility: true
              href: /thingpark/wireless/rest/partners/1060/bss/3325/tags/21
            - name: tag2
              managedNetworkVisibility: false
              multicastVisibility: true
              href: /thingpark/wireless/rest/partners/1060/bss/3325/tags/84
            - name: tag3
              managedNetworkVisibility: false
              multicastVisibility: false
              href: /thingpark/wireless/rest/partners/1060/bss/3325/tags/670
        more:
          $ref: '#/components/schemas/More'
    CancelRadioScan:
      type: object
      required:
        - occContext
      properties:
        occContext:
          $ref: '#/components/schemas/OccContext'
    Check:
      type: object
      required:
        - state
        - stateSince
        - cnxState
      properties:
        cnxState:
          enum:
            - NEVERCNX
            - CNX
            - DISC
          type: string
          description: |
            Base station connection state:
            - NEVERCNX: The BS has never been connected.
            - CNX: The BS has an IEC link started with at least a LRC.
            - DISC:  The BS  is disconnected from all LRCs.
          readOnly: true
        cnxStateSince:
          type: integer
          format: int64
          example: 1577836800000
          description: >-
            Base station connection state reached since timestamp when the BS
            has already been connected, epoch time in milliseconds.
          readOnly: true
        state:
          $ref: '#/components/schemas/BsState'
        stateSince:
          type: integer
          format: int64
          example: 1577836800000
          description: Base station admin state reached since timestamp, epoch time in
            milliseconds.
          readOnly: true
    CloseSsh:
      type: object
      required:
        - occContext
      properties:
        occContext:
          $ref: '#/components/schemas/OccContext'
    Coordinates:
      description: Geographical coordinates
      type: object
      required:
        - lat
        - lng
      properties:
        lat:
          description: Latitude
          type: number
          minimum: -90
          maximum: 90
          example: 42.59277039545001
        lng:
          description: Longitude
          type: number
          minimum: -180
          maximum: 180
          example: 5.8045532062725265
    Counters:
      type: object
      required:
        - briefs
        - totalCount
      properties:
        briefs:
          type: array
          items:
            type: object
            required:
              - healthState
              - count
            properties:
              count:
                type: integer
                description: Number of Base Stations in this health state
                format: int32
              healthState:
                $ref: '#/components/schemas/BsHealthState'
        totalCount:
          type: integer
          description: Total number of Base Stations
          format: int32
    Cpu:
      type: object
      required:
        - recordedSince
      properties:
        maxCPU:
          type: object
          properties:
            recordedDate:
              type: integer
              format: int64
              example: 1577836800000
              description: 'Recorded date **[RECORDED]**, epoch time in milliseconds'
            value:
              type: integer
              description: 'Max CPU (%) **[RECORDED]**'
              format: int32
        minCPU:
          type: object
          properties:
            recordedDate:
              type: integer
              format: int64
              example: 1577836800000
              description: 'Recorded date **[RECORDED]**, epoch time in milliseconds'
            value:
              type: integer
              description: 'Min CPU (%) **[RECORDED]**'
              format: int32
        recordedSince:
          type: integer
          format: int64
          example: 1577836800000
          description: Recorded since date, epoch time in milliseconds
    DevicesScattering:
      type: object
      required:
        - briefs
        - lrrs
      properties:
        briefs:
          type: array
          items:
            type: object
            required:
              - eui
              - rssi
              - snr
              - lrrID
            properties:
              eui:
                type: string
                description: Device EUI
              loc:
                type: object
                properties:
                  lat:
                    type: number
                    description: Last device location (when available)
                    format: float
                  lon:
                    type: number
                    description: Last device location (when available)
                    format: float
                  type:
                    type: integer
                    description: >-
                      Type of location currently activated (Manual:0 or
                      Network:1)
                    format: int32
              lrrID:
                type: string
                description: >-
                  LRR ID of this BS when the BS is primary, otherwise the LRR ID
                  of the third party primary BS.
              rssi:
                type: number
                description: Last RSSI for this BS
                format: float
              snr:
                type: number
                description: Last SNR for this BS
                format: float
        lrrs:
          type: array
          items:
            type: object
            required:
              - lrrID
            properties:
              lan:
                type: number
                description: Third party BS location (when available)
                format: float
              lon:
                type: number
                description: Third party BS location (when available)
                format: float
              lrrID:
                type: string
                description: LRR ID of third party BS involved in this scattering analysis.
    Disk:
      type: object
      required:
        - recordedSince
      properties:
        maxDisk:
          type: object
          properties:
            recordedDate:
              type: integer
              format: int64
              example: 1577836800000
              description: Recorded date, epoch time in milliseconds
            value:
              type: integer
              description: Max file system usage (%)
              format: int32
        minDisk:
          type: object
          properties:
            recordedDate:
              type: integer
              format: int64
              example: 1577836800000
              description: Recorded date, epoch time in milliseconds
            value:
              type: integer
              description: Min file system usage (%)
              format: int32
        recordedSince:
          type: integer
          format: int64
          example: 1577836800000
          description: Recorded since date, epoch time in milliseconds
    Domain:
      type: object
      description: |
        The domain must exist in the subscriber account and must be in `ACTIVE`
        state to be used.
      required:
        - name
        - group
      properties:
        name:
          type: string
          description: Domain name
          pattern: ^((?!\x20)[^\x00-\x1F\x2F\x3A\x3C\x3E\x7F]{1,20}(?<!\x20)\/){0,4}(?!\x20)[^\x00-\x1F\x2F\x3A\x3C\x3E\x7F]{1,20}(?<!\x20)$
          example: France/Paris
        group:
          type: object
          required:
            - name
          properties:
            name:
              type: string
              description: Domain group name
              pattern: ^(?!\x20)[^\x00-\x1F\x3A\x3C\x3E\x7F]{1,20}(?<!\x20)$
              example: Site
    Domains:
      type: array
      description: |
        List of domains associated with the Base Station. The list cannot
        contain more than one domain for a given group.

        Only supported if the partner's type is `SUBSCRIBER`.
      items:
        $ref: '#/components/schemas/Domain'
      example:
        - name: France/Paris
          group:
            name: Site
        - name: Network
          group:
            name: Vertical
    DomainRestrictions:
      type: object
      description: |
        User's domain restrictions:
        - If no domain restrictions are defined, the user can access all
          cross-domain resources and all domain-specific resources
        - Else, the user can access all cross-domain resources and only
          domain-specific resources matching the domain restrictions
      required:
        - and
      properties:
        and:
          type: array
          description: |
            A resource matches if it matches all `and` items.
          items:
            type: object
            description: |
              A resource matches if it is associated with a domain satisfying
              the following requirements:
              - The group name of the resource domain is `group.name` (exact
                match)
              - If `type` is `PREFIX`:
                - The name of the resource domain is prefixed with `name`
              - Else: (`type` is `FULL`)
                - The name of the resource domain is `name` (exact match)
            required:
              - type
              - name
              - group
            properties:
              type:
                type: string
                enum:
                  - FULL
                  - PREFIX
                description: |
                  Type of domain restriction:
                  - `FULL`: restriction on full domain
                  - `PREFIX`: restriction on domain prefix
                example: FULL
              name:
                type: string
                description: Name of the full domain or domain prefix
                pattern: ^((?!\x20)[^\x00-\x1F\x2F\x3A\x3C\x3E\x7F]{1,20}(?<!\x20)\/){0,4}(?!\x20)[^\x00-\x1F\x2F\x3A\x3C\x3E\x7F]{1,20}(?<!\x20)$
                example: France/Caen
              group:
                type: object
                description: |
                  Domain group associated with the domain restriction
                required:
                  - name
                properties:
                  name:
                    type: string
                    description: Name of the domain group
                    pattern: ^(?!\x20)[^\x00-\x1F\x3A\x3C\x3E\x7F]{1,20}(?<!\x20)$
                    example: Site
            minItems: 1
          example:
            - type: PREFIX
              name: France
              group:
                name: Site
            - type: FULL
              name: Energy
              group:
                name: Vertical
    DownloadLrrVersion:
      type: object
      required:
        - version
        - occContext
      properties:
        occContext:
          $ref: '#/components/schemas/OccContext'
        version:
          type: string
          description: LRR software version
    DutyCycles:
      type: object
      required:
        - recordedSince
      properties:
        maxDonwlinkDC:
          type: object
          properties:
            value:
              type: number
              description: 'Max downlink DC (%) **[RECORDED]**'
              format: float
        maxDownlinkDC:
          type: object
          properties:
            recordedDate:
              type: integer
              format: int64
              example: 1577836800000
              description: 'Recorded date **[RECORDED]**, epoch time in milliseconds'
        maxUplinkDC:
          type: object
          properties:
            recordedDate:
              type: integer
              format: int64
              example: 1577836800000
              description: 'Recorded date **[RECORDED]**, epoch time in milliseconds'
            value:
              type: number
              description: 'Max uplink DC (%) **[RECORDED]**'
              format: float
        minDonwlinkRC:
          type: object
          properties:
            value:
              type: number
              description: 'Min downlinkRC (%) **[RECORDED]**'
              format: float
        minDownlinkRC:
          type: object
          properties:
            recordedDate:
              type: integer
              format: int64
              example: 1577836800000
              description: 'Recorded date **[RECORDED]**, epoch time in milliseconds'
        minUplinkRC:
          type: object
          properties:
            recordedDate:
              type: integer
              format: int64
              example: 1577836800000
              description: 'Recorded date **[RECORDED]**, epoch time in milliseconds'
            value:
              type: number
              description: 'Min uplink RC (%) **[RECORDED]**'
              format: float
        recordedSince:
          type: integer
          format: int64
          example: 1577836800000
          description: Recorded since date, epoch time in milliseconds
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          example: 25
        message:
          type: string
          example: unknown error
    FineTimestampKeysStatus:
      type: object
      properties:
        completionStatus:
          enum:
            - COMPLETED
            - ERR_NOSTART
            - ERR_EXEC
            - ERR_NOEND
          type: string
          description: >-
            Completion status of the command: COMPLETED, ERR_NOSTART, ERR_EXEC,
            ERR_NOEND
        fpgaBoards:
          type: array
          items:
            type: object
            properties:
              index:
                type: integer
                description: FPGA board index starting from 0
                format: int32
              key:
                type: string
                description: Fine-timestamps decryption AES 128 key
    Frames:
      type: object
      required:
        - briefs
        - now
      properties:
        briefs:
          type: array
          items:
            type: object
            required:
              - timestamp
              - up
              - dw
            properties:
              dw:
                type: object
                description: Downlink indicators for this aggregated time slot.
                required:
                  - count
                  - size
                  - countSent
                  - sizeSent
                  - countFailed
                  - sizeFailed
                properties:
                  count:
                    type: integer
                    description: |
                      Number of downlink frames scheduled for transmission
                      during this aggregated time slot. It includes downlink
                      frames effectively sent and downlink frames whose
                      transmission failed.
                    format: int32
                  countFailed:
                    type: integer
                    description: |
                      Number of downlink frames whose transmission failed during
                      this aggregated time slot.
                    format: int32
                  countSent:
                    type: integer
                    description: |
                      Number of downlink frames effectively sent during this
                      aggregated time slot.
                    format: int32
                  size:
                    type: integer
                    description: |
                      Cumulated size in bytes of downlink frame payloads during
                      this aggregated time slot. It includes downlink frames
                      effectively sent and downlink frames whose transmission
                      failed.
                    format: int32
                  sizeFailed:
                    type: integer
                    description: |
                      Cumulated size in bytes of downlink frame payloads whose
                      transmission failed during this aggregated time slot.
                    format: int32
                  sizeSent:
                    type: integer
                    description: |
                      Cumulated size in bytes of downlink frame payloads
                      effectively sent during this aggregated time slot.
                    format: int32
              timestamp:
                type: integer
                format: int64
                example: 1577836800000
                description: Reference timestamp of the aggregated time slot, epoch time in
                  milliseconds.
              up:
                type: object
                description: Uplink indicators for this aggregated time slot.
                required:
                  - count
                  - size
                  - countOnTime
                  - sizeOnTime
                  - countLate
                  - sizeLate
                properties:
                  count:
                    type: integer
                    description: |
                      Number of uplink frames received during this aggregated
                      time slot. It includes uplink frames received on time and
                      uplink frames received late.
                    format: int32
                  countLate:
                    type: integer
                    description: |
                      Number of uplink frames received late during this
                      aggregated time slot.
                    format: int32
                  countOnTime:
                    type: integer
                    description: |
                      Number of uplink frames received on time during this
                      aggregated time slot.
                    format: int32
                  size:
                    type: integer
                    description: |
                      Cumulated size in bytes of uplink frame payloads during
                      this aggregated time slot. It includes uplink frames
                      received on time and uplink frames received late.
                    format: int32
                  sizeLate:
                    type: integer
                    description: |
                      Cumulated size in bytes of uplink frame payloads received
                      late during this aggregated time slot.
                    format: int32
                  sizeOnTime:
                    type: integer
                    description: |
                      Cumulated size in bytes of uplink frame payloads received
                      on time during this aggregated time slot.
                    format: int32
        now:
          type: integer
          format: int64
          example: 1577836800000
          description: Current time of the server, epoch time in milliseconds
    HistoriesCpu:
      type: object
      required:
        - briefs
        - now
      properties:
        briefs:
          type: array
          items:
            type: object
            required:
              - timestamp
              - avgCPU
              - devCPU
              - maxCPU
            properties:
              avgCPU:
                type: integer
                description: Average CPU (%) for this aggregated time slot.
                format: int32
              devCPU:
                type: integer
                description: >-
                  Average standard deviation CPU (%) for this aggregated time
                  slot.
                format: int32
              maxCPU:
                type: integer
                description: Average of MAX CPU (%) for this aggregated time slot.
                format: int32
              timestamp:
                type: integer
                format: int64
                example: 1577836800000
                description: Reference timestamp of the aggregated time slot, epoch time in
                  milliseconds.
        now:
          type: integer
          format: int64
          example: 1577836800000
          description: Current time of the server, epoch time in milliseconds
    HistoriesDisk:
      type: object
      required:
        - briefs
        - now
      properties:
        briefs:
          type: array
          items:
            type: object
            required:
              - timestamp
              - avgDisk
              - maxDisk
            properties:
              avgDisk:
                type: integer
                description: Average file system usage (%) for this aggregated time slot.
                format: int32
              maxDisk:
                type: integer
                description: Max file system usage (%) for this aggregated time slot.
                format: int32
              timestamp:
                type: integer
                format: int64
                example: 1577836800000
                description: Reference timestamp of the aggregated time slot, epoch time in
                  milliseconds.
        now:
          type: integer
          format: int64
          example: 1577836800000
          description: Current time of the server, epoch time in milliseconds
    HistoriesDutyCycles:
      type: object
      required:
        - briefs
        - now
      properties:
        briefs:
          type: array
          items:
            type: object
            required:
              - timestamp
              - up
              - dw
            properties:
              dw:
                type: object
                required:
                  - DC
                properties:
                  DC:
                    type: number
                    description: Average downlink DC (%) for this aggregated time slot.
                    format: float
              timestamp:
                type: integer
                format: int64
                example: 1577836800000
                description: Reference timestamp of the aggregated time slot, epoch time in
                  milliseconds.
              up:
                type: object
                properties:
                  DC:
                    type: number
                    description: |
                      Average uplink DC (%) for this aggregated time slot.

                      NOTE: Not applicable to the RX2 logical channel
                    format: float
        now:
          type: integer
          format: int64
          example: 1577836800000
          description: Current time of the server, epoch time in milliseconds
    HistoriesIecQueues:
      type: object
      required:
        - briefs
        - now
      properties:
        briefs:
          type: array
          items:
            type: object
            required:
              - timestamp
              - ltq
            properties:
              ltq:
                type: object
                required:
                  - avgCount
                  - maxCount
                properties:
                  avgCount:
                    type: integer
                    description: >-
                      Average number of uplink frames waiting in the long term
                      queue for this aggregated time slot.
                    format: int32
                  maxCount:
                    type: integer
                    description: >-
                      Maximum number of uplink frames waiting in the long term
                      queue for this aggregated time slot.
                    format: int32
              timestamp:
                type: integer
                format: int64
                example: 1577836800000
                description: Reference timestamp of the aggregated time slot, epoch time in
                  milliseconds.
        now:
          type: integer
          format: int64
          example: 1577836800000
          description: Current time of the server, epoch time in milliseconds
    HistoriesInt:
      type: object
      required:
        - briefs
        - now
      properties:
        briefs:
          type: array
          items:
            type: object
            required:
              - timestamp
              - tx
              - rx
            properties:
              rx:
                type: object
                required:
                  - size
                properties:
                  size:
                    type: integer
                    description: Size of Rx traffic for this aggregated time slot (KB).
                    format: int32
              timestamp:
                type: integer
                format: int64
                description: Reference timestamp of the aggregated time slot, epoch time in
                  milliseconds.
              tx:
                type: object
                required:
                  - size
                properties:
                  size:
                    type: integer
                    description: Size of Tx traffic for this aggregated time slot (KB).
                    format: int32
          example:
            - rx:
                size: 1520
              timestamp: 1577750400000
              tx:
                size: 4261
            - rx:
                size: 2103
              timestamp: 1577836800000
              tx:
                size: 6027
        now:
          type: integer
          format: int64
          example: 1577836800000
          description: Current time of the server, epoch time in milliseconds
    HistoriesRam:
      type: object
      required:
        - briefs
        - now
      properties:
        briefs:
          type: array
          items:
            type: object
            required:
              - timestamp
              - avgRAM
              - maxRAM
            properties:
              avgRAM:
                type: integer
                description: Average RAM (%) for this aggregated time slot.
                format: int32
              maxRAM:
                type: integer
                description: Max RAM (%) for this aggregated time slot.
                format: int32
              timestamp:
                type: integer
                format: int64
                example: 1577836800000
                description: Reference timestamp of the aggregated time slot, epoch time in
                  milliseconds.
        now:
          type: integer
          format: int64
          example: 1577836800000
          description: Current time of the server, epoch time in milliseconds
    IecPackets:
      type: object
      required:
        - briefs
        - now
      properties:
        briefs:
          type: array
          items:
            type: object
            required:
              - timestamp
              - sent
              - received
            properties:
              received:
                type: object
                required:
                  - count
                  - byte
                properties:
                  byte:
                    type: number
                    description: >-
                      Sum of received IEC bytes for this aggregated time slot
                      (in kilo byte).
                    format: float
                  count:
                    type: integer
                    description: Sum of received IEC packets for this aggregated time slot.
                    format: int32
              sent:
                type: object
                required:
                  - count
                  - byte
                properties:
                  byte:
                    type: number
                    description: >-
                      Sum of sent IEC bytes for this aggregated time slot (in
                      kilo byte).
                    format: float
                  count:
                    type: integer
                    description: Sum of sent IEC packets for this aggregated time slot.
                    format: int32
              timestamp:
                type: integer
                format: int64
                example: 1577836800000
                description: Reference timestamp of the aggregated time slot, epoch time in
                  milliseconds.
        now:
          type: integer
          format: int64
          example: 1577836800000
          description: Current time of the server, epoch time in milliseconds
    IecQueues:
      type: object
      required:
        - recordedSince
      properties:
        ltq:
          type: object
          properties:
            average:
              type: integer
              description: Current number of uplink frames waiting in the long term queue
              format: int32
            max:
              type: integer
              description: >-
                Maximum number of uplink frames waiting in the long term queue
                **[RECORDED]**
              format: int32
            maxRecordedDate:
              type: integer
              format: int64
              example: 1577836800000
              description: >-
                Date of maximum number of uplink frames waiting in the long term
                queue **[RECORDED]**, epoch time in milliseconds
        recordedSince:
          type: integer
          format: int64
          example: 1577836800000
          description: Recorded since date, epoch time in milliseconds
    Images:
      type: object
      required:
        - briefs
        - more
      properties:
        briefs:
          type: array
          items:
            type: object
            required:
              - href
            properties:
              href:
                type: string
        more:
          $ref: '#/components/schemas/More'
    IndicatorsRfcell:
      type: object
      required:
        - inds
        - recordedSince
      properties:
        inds:
          type: array
          items:
            type: object
            required:
              - ID
            properties:
              ID:
                type: string
                description: Advanced indicator identifier
                example: urcv
              current:
                type: integer
                format: int32
              max:
                type: integer
                format: int32
              maxRecordedDate:
                type: integer
                format: int64
                example: 1577836800000
        recordedSince:
          type: integer
          format: int64
          example: 1577836800000
          description: Recorded since date, epoch time in milliseconds
    IndicatorsWans:
      type: object
      required:
        - inds
        - recordedSince
      properties:
        inds:
          type: array
          items:
            type: object
            required:
              - ID
            properties:
              ID:
                type: string
                description: Advanced indicator identifier
                example: ldrp
              current:
                type: integer
                format: int32
              max:
                type: integer
                format: int32
              maxRecordedDate:
                type: integer
                format: int64
                example: 1577836800000
        recordedSince:
          type: integer
          format: int64
          example: 1577836800000
          description: Recorded since date, epoch time in milliseconds
    Int:
      type: object
      required:
        - recordedSince
      properties:
        connectionType:
          enum:
            - 3G
            - 4G
          type: string
          description: Cellular connection type
        iccid:
          type: string
          description: ICCID of the SIM card
          example: '89370010100019228581'
        imei:
          type: string
          description: IMEI of the Base Station
          example: '861107030078134'
        imsi:
          type: string
          description: IMSI of the SIM card
          example: '246012101922858'
        networkOperator:
          type: string
          description: Cellular network operator
          example: Orange
        rssi:
          type: number
          format: float
          description: Cellular/WLAN RSSI in dBm
          example: -83
        rscp:
          type: number
          format: float
          description: Cellular 3G RSCP in dBm
          example: -86
        ecIo:
          type: number
          format: float
          description: Cellular 3G Ec/Io in dB
          example: -8
        rsrp:
          type: number
          format: float
          description: Cellular 4G RSRP in dBm
          example: -86
        rsrq:
          type: number
          format: float
          description: Cellular 4G RSRQ in dBm
          example: -7
        sinr:
          type: number
          format: float
          description: Cellular 4G SINR in dB
          example: 18.5
        ssid:
          type: string
          description: SSID of WLAN network
          example: Office Network
        activity:
          type: integer
          description: 'Activity (second)  **[RECORDED]**'
          format: int32
        address:
          type: string
          description: Interface IP address
        averageLatency:
          type: integer
          description: Average latency (ms)
          format: int32
        averageRxTraffic:
          type: integer
          description: Average Rx traffic (b/s)
          format: int32
        averageTxTraffic:
          type: integer
          description: Average Tx traffic (b/s)
          format: int32
        deviationLatency:
          type: integer
          description: Standard applicative latency (ms)
          format: int32
        maxLatency:
          type: object
          properties:
            recordedDate:
              type: integer
              format: int64
              example: 1577836800000
              description: 'Recorded date **[RECORDED]**, epoch time in milliseconds'
            value:
              type: integer
              description: 'MAX latency (ms) **[RECORDED]**'
              format: int32
        maxRxTraffic:
          type: object
          properties:
            recordedDate:
              type: integer
              format: int64
              example: 1577836800000
              description: 'Recorded date **[RECORDED]**, epoch time in milliseconds'
            value:
              type: integer
              description: 'Max Rx traffic (b/s) **[RECORDED]**'
              format: int32
        maxTxTraffic:
          type: object
          properties:
            recordedDate:
              type: integer
              format: int64
              example: 1577836800000
              description: 'Recorded date **[RECORDED]**, epoch time in milliseconds'
            value:
              type: integer
              description: 'Max Tx traffic (b/s) **[RECORDED]**'
              format: int32
        recordedSince:
          type: integer
          format: int64
          example: 1577836800000
          description: Recorded since date, epoch time in milliseconds
        totalRxTraffic:
          type: number
          description: 'Total Rx traffic  (in kilo byte) **[RECORDED]**'
        totalTxTraffic:
          type: number
          description: 'Total Tx traffic  (in kilo byte) **[RECORDED]**'
      example:
        activity: 176407
        address: '10.100.34.70'
        averageLatency: 2
        averageRxTraffic: 711
        averageTxTraffic: 373
        deviationLatency: 0
        maxLatency:
          recordedDate: 1572362901000
          value: 2006
        maxRxTraffic:
          recordedDate: 1522844704000
          value: 433152
        maxTxTraffic:
          recordedDate: 1523581324000
          value: 9764192
        recordedSince: 1521680642000
        totalRxTraffic: 7748166.628000051
        totalTxTraffic: 3347693.121999964
    IsmBandID:
      type: string
      enum:
        - eu868
        - eu433
        - cn779
        - as923
        - kr920
        - us915
        - au915
        - cn470
        - in865
        - ru864
        - ww2g4
      description: ISM band ID
      example: eu868
    IsmBandName:
      type: string
      enum:
        - EU863-870 (EU868)
        - EU433
        - CN779-787 (CN779)
        - AS923
        - KR920-923 (KR920)
        - US902-915 (US915)
        - AU915-928 (AU915)
        - CN470-510 (CN470)
        - IN865-867 (IN865)
        - RU864-870 (RU864)
        - WW2400
      description: ISM band name
      example: EU863-870 (EU868)
    IsmBands:
      type: object
      required:
        - briefs
        - more
      properties:
        briefs:
          type: array
          items:
            type: object
            required:
              - ID
              - name
              - defaultScan
            properties:
              ID:
                $ref: '#/components/schemas/IsmBandID'
              name:
                $ref: '#/components/schemas/IsmBandName'
              defaultScan:
                description: Default scan frequency
                type: object
                required:
                  - start
                  - stop
                  - step
                properties:
                  start:
                    type: number
                    description: |
                      First scanned frequency in MHz. Precision: `0.000001` MHz.
                    example: 863.1
                    exclusiveMinimum: 0
                  stop:
                    type: number
                    description: |
                      Last scanned frequency in MHz. Precision: `0.000001` MHz.
                    example: 869.9
                    exclusiveMinimum: 0
                  step:
                    type: number
                    description: |
                      Step width in KHz. Precision: `0.001` KHz.
                    example: 200
                    exclusiveMinimum: 0
          example:
            - ID: eu868
              name: EU863-870 (EU868)
              defaultScan:
                start: 863.1
                stop: 869.9
                step: 100
            - ID: eu433
              name: EU433
              defaultScan:
                start: 433.175
                stop: 434.675
                step: 25
            - ID: cn779
              name: CN779-787 (CN779)
              defaultScan:
                start: 779.1
                stop: 786.9
                step: 100
            - ID: as923
              name: AS923
              defaultScan:
                start: 915.2
                stop: 927.8
                step: 100
            - ID: kr920
              name: KR920-923 (KR920)
              defaultScan:
                start: 917.1
                stop: 923.5
                step: 100
            - ID: us915
              name: US902-915 (US915)
              defaultScan:
                start: 902.3
                stop: 914.9
                step: 200
            - ID: au915
              name: AU915-928 (AU915)
              defaultScan:
                start: 915.2
                stop: 927.8
                step: 200
            - ID: cn470
              name: CN470-510 (CN470)
              defaultScan:
                start: 470.3
                stop: 489.3
                step: 200
            - ID: in865
              name: IN865-867 (IN865)
              defaultScan:
                start: 865
                stop: 867
                step: 12.5
            - ID: ru864
              name: RU864-870 (RU864)
              defaultScan:
                start: 864.1
                stop: 869.9
                step: 200
            - ID: ww2g4
              name: WW2400
              defaultScan:
                start: 2400
                stop: 2480
                step: 1000
        more:
          $ref: '#/components/schemas/More'
    LastCmdStatus:
      type: object
      required:
        - now
      properties:
        lastCmdCompletionData:
          type: string
          description: Last command completion data (execution logs)
        lastCmdCompletionDate:
          type: integer
          format: int64
          example: 1577836800000
          description: Last command completion date, epoch time in milliseconds
        lastCmdCompletionStatus:
          enum:
            - PENDING
            - PROCESSING
            - COMPLETED
            - ERR_NOSTART
            - ERR_EXEC
            - ERR_NOEND
          type: string
          description: >-
            Last command completion status: PENDING, PROCESSING, COMPLETED,
            ERR_NOSTART, ERR_EXEC, ERR_NOEND
        lastCmdData:
          type: string
          description: |
            Last command request data when applicable:
            - version for the upgrade command,
            - port for the open reverse SSH command)
        lastCmdID:
          type: integer
          description: Last command ID allocated by the LRR
          format: int32
        lastCmdRequestDate:
          type: integer
          format: int64
          example: 1577836800000
          description: Last command request timestamp, epoch time in milliseconds
        lastCmdType:
          enum:
            - UPGRADE
            - RF_START
            - RF_STOP
            - RF_DWSTOP
            - REBOOT
            - RESTART
            - SSH_OPEN
            - SSH_CLOSE
            - BACKUP
            - RESTORE
            - RF_SCAN
            - LOCATION_ADMIN
            - LOCATION_GPS
            - UPDATE_RF_REGION
            - UPDATE_ANTENNA_GAIN_AND_LOSS
            - UPDATE_FINE_TS_KEYS
            - UPDATE_LOG
          type: string
          description: |
            Last command type: UPGRADE, RF_START, RF_STOP, RF_DWSTOP, REBOOT,
            RESTART, SSH_OPEN, SSH_CLOSE, BACKUP, RESTORE, RF_SCAN,
            LOCATION_ADMIN, LOCATION_GPS, UPDATE_RF_REGION,
            UPDATE_ANTENNA_GAIN_AND_LOSS, UPDATE_FINE_TS_KEYS, UPDATE_LOG
        now:
          type: integer
          format: int64
          example: 1577836800000
          description: Current time of the server, epoch time in milliseconds
    Licenses:
      type: object
      required:
        - licenseFile
        - status
      properties:
        expirationDate:
          type: integer
          format: int64
          example: 1577836800000
          description: Expiration date, epoch time in milliseconds
          readOnly: true
        key:
          type: string
          description: License key
          readOnly: true
          example: C7D82FE7F32778E39FB4BECB79EA6
        licenseFile:
          type: string
          description: License file (JSON document)
          writeOnly: true
          example: |-
            {
            "version": 1,
            "installationID": "CFC9F835BE8C4E1AB6DF83C68CC47",
            "customerName": "ACME",
            "numberOfDevices": 10000,
            "numberOfBaseStations": 10,
            "expirationDate": "2019-04-30T02:15:12.356Z",
            "licenseKey": "C7D82FE7F32778E39FB4BECB79EA6"
            }
        numberOfBaseStations:
          type: integer
          description: Number of licensed Base Stations
          format: int32
          readOnly: true
          example: 10
        numberOfDevices:
          type: integer
          description: Number of licensed Devices
          format: int32
          readOnly: true
          example: 10000
        status:
          enum:
            - MISSING
            - VALID
            - EXPIRED
            - LONG_TIME_EXPIRED
          type: string
          description: |
            License status:
            - `MISSING`: License is missing. API access is read only until a new valid license file is uploaded.
            - `VALID`: License is valid. No restrictions apply.
            - `EXPIRED`: License has expired. API access is read only until a new valid license file is uploaded.
            - `LONG_TIME_EXPIRED`: License has expired since more than 6 months. API access is read only and application servers are suspended until a new valid license file is uploaded.
          readOnly: true
          example: VALID
    LocationStatus:
      type: object
      properties:
        completionStatus:
          enum:
            - COMPLETED
            - ERR_NOSTART
            - ERR_EXEC
            - ERR_NOEND
          type: string
          description: >-
            Completion status of the command: COMPLETED, ERR_NOSTART, ERR_EXEC,
            ERR_NOEND
        location:
          type: object
          properties:
            altitude:
              type: integer
              description: Altitude of the BS when available (meters)
              format: int32
              example: 562
            latitude:
              type: number
              description: Latitude of the BS when available (decimal coordinates)
              format: float
              example: 47.517201
            longitude:
              type: number
              description: Longitude of the BS when available (decimal coordinates)
              format: float
              example: 1.757812
            type:
              type: integer
              description: >-
                Type of location currently activated (Unknown:0 or
                Admnistrative:1 or GPS:2)
              format: int32
              example: 2
    LogStatus:
      type: object
      properties:
        completionStatus:
          enum:
            - COMPLETED
            - ERR_NOSTART
            - ERR_EXEC
            - ERR_NOEND
          type: string
          description: >-
            Completion status of the command: COMPLETED, ERR_NOSTART, ERR_EXEC,
            ERR_NOEND
        ramDirUsed:
          type: boolean
          description: TRUE when RAM disk is used for logging
        traceLevel:
          type: integer
          description: LRR trace level (0..3). 0 means no trace.
          format: int32
        traceSince:
          type: integer
          format: int64
          example: 1577836800000
          description: LRR trace activated (1..3) or deactivated (0) since timestamp,
            epoch time in milliseconds.
    Lrc:
      type: object
      required:
        - recordedSince
      properties:
        averageLatency:
          type: integer
          description: Average applicative latency (ms)
          format: int32
        deviationLatency:
          type: integer
          description: Standard deviation applicative latency (ms)
          format: int32
        lastDownlinkFrame:
          type: integer
          format: int64
          example: 1577836800000
          description: Last downlink frame from this LRC, epoch time in milliseconds
        lastUplinkFrame:
          type: integer
          format: int64
          example: 1577836800000
          description: Last uplink frame toward this LRC, epoch time in milliseconds
        maxLatency:
          type: object
          properties:
            recordedDate:
              type: integer
              format: int64
              example: 1577836800000
              description: 'Recorded date **[RECORDED]**, epoch time in milliseconds'
            value:
              type: integer
              description: 'MAX applicative latency (ms) **[RECORDED]**'
              format: int32
        nbrDisconnection:
          type: integer
          description: 'Number of LRC disconnection **[RECORDED]**'
          format: int32
        receivedIecByte:
          type: integer
          description: >-
            Total IEC packet size (kilo byte) received from the LRC
            **[RECORDED]**
          format: int32
        receivedIecPacket:
          type: integer
          description: 'Total IEC packets received from the LRC **[RECORDED]**'
          format: int32
        recordedSince:
          type: integer
          format: int64
          example: 1577836800000
          description: Recorded since date, epoch time in milliseconds
        sentIecByte:
          type: integer
          description: 'Total IEC packet size (kilo byte) sent to the LRC **[RECORDED]**'
          format: int32
        sentIecPacket:
          type: integer
          description: 'Total IEC packets sent to the LRC **[RECORDED]**'
          format: int32
    OccContext:
      type: object
      required:
        - lastUpdate
        - version
        - who
      x-createForbidden: true
      properties:
        lastUpdate:
          type: integer
          format: int64
          example: 1577836800000
          readOnly: true
        version:
          minimum: 0
          type: integer
        who:
          type: string
          readOnly: true
      description: Optimistic Concurrency Control.
    OpenSsh:
      type: object
      required:
        - occContext
        - reverseSshPort
      properties:
        occContext:
          $ref: '#/components/schemas/OccContext'
        reverseSshPort:
          type: integer
          description: Reverse SSH port
          format: int32
    OpenTerminal:
      type: object
      required:
        - accessToken
        - occContext
      properties:
        accessToken:
          type: string
          description: Access token generated by TWA to open an SSH terminal.
          readOnly: true
        occContext:
          $ref: '#/components/schemas/OccContext'
    Partner:
      type: object
      required:
        - creationTimestamp
        - type
        - state
        - partner
        - supplier
        - defaultBsSecurity
        - totalBaseStationsUsed
        - occContext
        - operator
        - options
      properties:
        alarmStateNotifications:
          type: string
          description: |
            Alarm state notification (XML document)

            ```xml
            <!-- Example for the basic mode-->
            <notifications>
              <state val="1-6">
                <contact address="sms:+33123456789"/>
                <contact address="email:john.doe@supplier1.com"/>
                <contact address="email:alice.smith@supplier1.com"/>
              </state>
            </notifications>


            <!-- Example for the advanced mode:-->
            <notifications>
              <state val="3">
                <contact address="email:john.doe@supplier1.com"/>
              </state>
              <state val="4-6">
                <contact address="sms:+33123456789"/>
                <contact address="email:john.doe@supplier1.com"/>
                <contact address="email:alice.smith@supplier1.com"/>
              </state>
            </notifications>
            ```
          example: |
            <notifications>
              <state val="1-6">
                <contact address="sms:+33123456789"/>
                <contact address="email:john.doe@supplier1.com"/>
                <contact address="email:alice.smith@supplier1.com"/>
              </state>
            </notifications>
        allowedAdministration:
          type: boolean
          description: |
            True when the logged user is allowed to administrate BS (for
            instance the logged user is an Operator, or the logged user is the
            owner of the account and the administration of BS has been activated
            for this account).

            Note: To be TRUE, the logged user must have the RA permission, or
            the logged user must have the A permission and the administration
            must be delegated.

            This property must no longer be used: always set to true.
          readOnly: true
          deprecated: true
        allowedBsTagging:
          type: boolean
          description: |
            True when the logged user is allowed to tag BS (for
            instance the logged user is an Operator, or the logged user is the
            owner of the account and the tagging of BS has been activated
            for this account).

            Note: To be TRUE, the BS tags namespace must be SUBSCRIBER, or the logged user must have the RA permission, or
            the logged user must have the A permission and the BS tagging must be delegated.

            This property must no longer be used: always set to true.
          readOnly: true
          deprecated: true
        baseStationsNetID:
          type: string
          maxLength: 6
          minLength: 6
          pattern: '^([02]000[0-3][0-9a-fA-F]|400[0-1][0-9a-fA-F]{2}|[6-9a-fA-F][0-9a-fA-F]{5})$'
          description: NetID used for Base Stations at Network Partner level. NetID
            defined at Operator level is used if not set.
          readOnly: true
          example: '000001'
        baseStationTagsNamespace:
          enum:
            - OPERATOR
            - SUBSCRIBER
          type: string
          description: |
            Base Station Tags Namespace:
            - When set to OPERATOR, Base Station tags are defined in the Operator Namespace.
            - When set to SUBSCRIBER, Base Station tags are defined in the Subscriber Namespace.

            This parameter must no longer be used: always set to OPERATOR if the Network Partner is a SUPPLIER and SUBSCRIBER if the Network Partner is a SUBSCRIBER.
          readOnly: true
          deprecated: true
        creationTimestamp:
          type: integer
          format: int64
          example: 1577836800000
          description: Network partner creation timestamp, epoch time in milliseconds.
          readOnly: true
        defaultBsSecurity:
          enum:
            - IPSEC_X509
            - DISABLE
            - IPSEC_X509_M
            - DISABLE_M
          type: string
          description: |
            Default Base Station security:
            * `IPSEC_X509`: base station can be created using `IPSEC_X509` or `DISABLE` security, with `IPSEC_X509` as default.
            * `DISABLE`: base station can be created using `IPSEC_X509` or `DISABLE` security, with `DISABLE` as default.
            * `IPSEC_X509_M`: base station can be created only using `IPSEC_X509` security.
            * `DISABLE_M`: base station can be created only using `DISABLE` security.
          readOnly: true
        defaultIsmBand:
          type: object
          deprecated: true
          description: |
            This property must no longer be used: the property `defaultIsmBands` must be used in replacement.
          properties:
            ID:
              $ref: '#/components/schemas/IsmBandID'
            name:
              $ref: '#/components/schemas/IsmBandName'
        defaultIsmBands:
          type: array
          items:
            type: object
            properties:
              ID:
                $ref: '#/components/schemas/IsmBandID'
              name:
                $ref: '#/components/schemas/IsmBandName'
        delegateAdministration:
          type: boolean
          description: >-
            True when the administration is delegated to the owner of the
            account.

            This property must no longer be used: always set to true.
          readOnly: true
          deprecated: true
        delegateBsTagging:
          type: boolean
          description: >-
            True when the Base Stations tagging is delegated to the owner of the
            account.

            This property must no longer be used: always set to true.
          readOnly: true
          deprecated: true
        delegateBsValidation:
          type: boolean
          description: >-
            True when the BS validation is delegated to the owner of the
            account.

            This property must no longer be used: always set to true.
          readOnly: true
          deprecated: true
        installationID:
          type: string
          description: Installation ID
          readOnly: true
          example: 'adea5b3fe3d76ec7d424bc3d04d2a8634cbf30675bce559c16a814ebf92a4fe7'
        keyInstallerPubkeyAuthentication:
          type: string
          readOnly: true
          enum:
            - DISABLED
            - ENFORCED
            - OPTIONAL_DISABLED_BY_DEFAULT
            - OPTIONAL_ENABLED_BY_DEFAUL
          example: ENFORCED
          description: Public key authentication mode to connect to Key installer.
        occContext:
          $ref: '#/components/schemas/OccContext'
        operator:
          type: object
          required:
            - baseStationsNetID
          readOnly: true
          properties:
            baseStationsNetID:
              type: string
              maxLength: 6
              minLength: 6
              pattern: '^([02]000[0-3][0-9a-fA-F]|400[0-1][0-9a-fA-F]{2}|[6-9a-fA-F][0-9a-fA-F]{5})$'
              description: NetID used for Base Stations at Operator level.
              example: '000001'
        options:
          type: object
          required:
            - license
          readOnly: true
          properties:
            license:
              enum:
                - DEACTIVATED
                - ACTIVATED
              type: string
              description: |
                License option:
                - DEACTIVATED
                - ACTIVATED
        partner:
          type: object
          required:
            - ID
            - name
          properties:
            ID:
              type: string
              description: >
                Network Partner ID. Either a Supplier ID in the ThingPark System
                (SUPPLIER) or a Subscriber ID in the ThingPark System
                (SUBSCRIBER).
              example: acme-np
            name:
              type: string
              description: >
                SUPPLIER: Network Partner name retrieved from the ThingPark
                System.


                SUBSCRIBER: Subscriber organization or Subscriber name (if the organization is not defined) retrieved from the ThingPark System.
              readOnly: true
              example: 'ACME Network Partner'
        segregationID:
          type: string
          maxLength: 8
          minLength: 8
          pattern: '^[0-9a-fA-F]{8}$'
          description: Segregation ID used for Base Stations. When not set, the
            segregation ID is automatically generated based on network traffic
            segregation defined at Operator level.
          readOnly: true
          example: '1234ABCD'
        state:
          type: object
          required:
            - value
            - timestamp
          readOnly: true
          properties:
            timestamp:
              type: integer
              format: int64
              example: 1577836800000
            value:
              type: string
              description: Sate of the Network Partner
              example: 'ACTIVE'
        supplier:
          type: object
          required:
            - ID
            - name
          readOnly: true
          properties:
            ID:
              type: string
              description: >-
                Affiliated Connectivity Supplier ID: A Supplier ID in the
                ThingPark System.
            name:
              type: string
              description: >-
                Affiliated Connectivity Supplier name (retrieved from the
                ThingPark Back-office).
        totalBaseStationsGranted:
          type: integer
          description: |
            Number of base stations the network partner is allowed to create. If
            absent or NULL, the partner has no restriction.
          readOnly: true
        totalBaseStationsUsed:
          type: integer
          description: |
            Number of base stations created by the network partner.
          readOnly: true
        type:
          enum:
            - SUPPLIER
            - SUBSCRIBER
          type: string
          description: >-
            Type of the Network Partner. Either: A relative ThingPark
            Orchestration Service Supplier account (SUPPLIER) or a relative
            ThingPark Orchestration Service Subscriber account (SUBSCRIBER)
          readOnly: true
    Partners:
      type: object
      required:
        - briefs
        - more
      properties:
        briefs:
          type: array
          items:
            type: object
            required:
              - partner
            properties:
              partner:
                type: object
                required:
                  - ID
                  - name
                properties:
                  ID:
                    type: string
                    description: Network Partner ID.
                  name:
                    type: string
                    description: >-
                      Network Partner name (retrieved from the ThingPark
                      Back-office).
        more:
          $ref: '#/components/schemas/More'
    PartnersAuthentication:
      type: object
      required:
        - partner
      properties:
        disclaimerMessage:
          type: string
          description: |
            Operator disclaimer message for end-users in end-user language.

            Disclaimer message may be a HTML document.
        disclaimerRequired:
          type: boolean
          description: >-
            TRUE when disclaimer pop-up window must be displayed at login for
            End-Users
        partner:
          type: object
          required:
            - href
            - grantedPermissions
          properties:
            href:
              type: string
              description: Related TWN Network Partner HREF in the TWA database.
            grantedPermissions:
              type: array
              items:
                type: string
                enum:
                  - x
                  - a
                  - ra
                  - rc
                  - s1
            domainRestrictions:
              $ref: '#/components/schemas/DomainRestrictions'
        previousConnection:
          type: integer
          format: int64
          example: 1577836800000
          description: Date and time of last successful login, epoch time in milliseconds
        sessionToken:
          type: string
          description: |
            The session token is returned when required by the Operator.

            When provided, the session token must be provided as query parameter
            in all WS requests within the session.
        thingparkLastUnsuccessfulLogin:
          type: integer
          format: int64
          example: 1577836800000
          description: Date and time of last unsuccessful login, epoch time in milliseconds
        thingparkPreviousBadConsecutivePwd:
          type: integer
          description: Number of unsuccessful logins since the last successful login
          format: int32
        user:
          type: object
          properties:
            firstName:
              type: string
              description: >-
                First name of the logged administrator when the session is
                created with a ThingPark Orchestration Service user access code.
            language:
              type: string
              description: >-
                Language of the logged administrator when the session is created
                with a ThingPark Orchestration Service user access code.
              example: en-US
            lastName:
              type: string
              description: >-
                Last name of the logged administrator when the session is
                created with a ThingPark Orchestration Service user access code.
    Ram:
      type: object
      required:
        - recordedSince
      properties:
        maxRAM:
          type: object
          properties:
            recordedDate:
              type: integer
              format: int64
              example: 1577836800000
              description: 'Recorded date **[RECORDED]**, epoch time in milliseconds'
            value:
              type: integer
              description: 'Max RAM (%) **[RECORDED]**'
              format: int32
        minRAM:
          type: object
          properties:
            recordedDate:
              type: integer
              format: int64
              example: 1577836800000
              description: 'Recorded date **[RECORDED]**, epoch time in milliseconds'
            value:
              type: integer
              description: 'Min RAM (%) **[RECORDED]**'
              format: int32
        recordedSince:
          type: integer
          format: int64
          example: 1577836800000
          description: Recorded since date, epoch time in milliseconds
    Reboot:
      type: object
      required:
        - occContext
      properties:
        occContext:
          $ref: '#/components/schemas/OccContext'
    Restart:
      type: object
      required:
        - occContext
      properties:
        occContext:
          $ref: '#/components/schemas/OccContext'
    Restore:
      type: object
      required:
        - occContext
      properties:
        occContext:
          $ref: '#/components/schemas/OccContext'
    Restricted:
      type: object
      properties:
        baseStationsNetID:
          type: string
          maxLength: 6
          minLength: 6
          pattern: '^([02]000[0-3][0-9a-fA-F]|400[0-1][0-9a-fA-F]{2}|[6-9a-fA-F][0-9a-fA-F]{5})$'
          description: NetID used for Base Stations at Network Partner level.
          example: '000001'
        baseStationTagsNamespace:
          enum:
            - OPERATOR
            - SUBSCRIBER
          type: string
          description: |
            Base Station Tags Namespace:
            - When set to OPERATOR, Base Station tags are defined in the Operator Namespace.
            - When set to SUBSCRIBER, Base Station tags are defined in the Subscriber Namespace.

            This parameter must no longer be used: always set to OPERATOR if the Network Partner is a SUPPLIER and SUBSCRIBER if the Network Partner is a SUBSCRIBER.
          deprecated: true
        delegateAdministration:
          type: boolean
          description: |
            Administration delegation flag.

            This property must no longer be used: always set to true.
          deprecated: true
        segregationID:
          type: string
          maxLength: 8
          minLength: 8
          pattern: '^[0-9a-fA-F]{8}$'
          description: Segregation ID used for Base Stations.
          example: '1234ABCD'
    ReverseSshStatus:
      type: object
      properties:
        completionStatus:
          enum:
            - COMPLETED
            - ERR_NOSTART
            - ERR_EXEC
            - ERR_NOEND
          type: string
          description: >-
            Completion status of the command: COMPLETED, ERR_NOSTART, ERR_EXEC,
            ERR_NOEND
        reverseSshState:
          type: integer
          description: |
            Reverse SSH state:
            - Closed (0)
            - Opened (>0)
          format: int32
    RfRegionStatus:
      type: object
      properties:
        completionStatus:
          enum:
            - COMPLETED
            - ERR_NOSTART
            - ERR_EXEC
            - ERR_NOEND
          type: string
          description: >-
            Completion status of the command: COMPLETED, ERR_NOSTART, ERR_EXEC,
            ERR_NOEND
        rfRegion:
          type: object
          properties:
            ID:
              type: string
              description: RF Region provisioning ID
            name:
              type: string
              description: RF Region name
            version:
              type: integer
              description: RF Region version
              format: int32
    RfcDownlinkStop:
      type: object
      required:
        - occContext
      properties:
        occContext:
          $ref: '#/components/schemas/OccContext'
    RfcStart:
      type: object
      required:
        - occContext
      properties:
        occContext:
          $ref: '#/components/schemas/OccContext'
    RfcStatus:
      type: object
      properties:
        completionStatus:
          enum:
            - COMPLETED
            - ERR_NOSTART
            - ERR_EXEC
            - ERR_NOEND
          type: string
          description: >-
            Completion status of the command: COMPLETED, ERR_NOSTART, ERR_EXEC,
            ERR_NOEND
        rfcellState:
          type: integer
          description: |
            RF cell state:
            - Stopped (0)
            - Downlink stopped (1)
            - Started (2)
            - Unknown because of disconnected Base Station (null)
          format: int32
    RfcStop:
      type: object
      required:
        - occContext
      properties:
        occContext:
          $ref: '#/components/schemas/OccContext'
    RfRegion:
      type: object
      required:
        - href
        - provID
        - version
      properties:
        provID:
          type: string
          description: Provisioning ID of the RF Region
          example: AS923_8AsymChannels_1W.220
        commercialChangelog:
          type: string
          description: B2C changelog of the RF Region
          example: Last certified version
        commercialDescription:
          type: string
          description: B2C description of the RF Region
          example: This RF Region applies to Australia and other Latin American countries
            whose ISM band includes the 923 to 927MHz frequency range with
            maximum allowed power of 1W
        commercialName:
          type: string
          description: B2C name of the RF Region
          example: AS923 Australia Asymmetric 8-channels
        logo:
          type: string
          description: Logo HREF of the RF Region
          example: /thingpark/wireless/rest/resources/files/logo/rfRegion/253
        version:
          type: integer
          format: int32
          description: Version of the RF Region
          example: 1
    RfRegionLcs:
      type: object
      required:
        - briefs
        - more
      properties:
        briefs:
          type: array
          items:
            type: object
            required:
              - type
              - isDefault
              - usedForRx1
              - usedForRx2
              - usedForPingSlot
              - usedForBeacon
              - lc
              - frequency
              - minDR
              - maxDR
            properties:
              type:
                type: string
                enum:
                  - RX
                  - TX
                description: |
                  RF Region channel type:

                  -	'RX': RxChannel

                  -	'TX': TxChannel or RX2Freq
                example: RX
              usedForUplink:
                type: boolean
                description: This parameter determines whether the logical channel is used for
                  uplink frames.
                example: true
              usedForDownlink:
                type: boolean
                description: This parameter determines whether the logical channel is used for
                  downlink frames.
                example: true
              chIndex:
                type: integer
                minimum: 0
                maximum: 95
                description: This parameter defines the index of each LoRaWAN channel. It is
                  required for RX channels and optional for TX channels.
                example: 0
              isDefault:
                type: boolean
                description: This parameter determines whether the logical channel is part of
                  the default (mandatory) channels.
                example: true
              usedForRx1:
                type: boolean
                description: This parameter determines whether the logical channel is used for
                  RX1 slot.
                example: false
              usedForRx2:
                type: boolean
                description: This parameter determines whether the logical channel is used for
                  RX2 slot.
                example: false
              usedForPingSlot:
                type: boolean
                description: This parameter determines whether the logical channel is used for
                  Class B ping slots.
                example: false
              usedForBeacon:
                type: boolean
                description: This parameter determines whether the logical channel is used to
                  send Class B beacon signal.
                example: false
              lc:
                type: integer
                minimum: 0
                maximum: 255
                description: This parameter defines the Logical Channel index of the LoRaWAN
                  channel.
                example: 1
              sb:
                type: integer
                description: This parameter defines the sub-band of the LoRaWAN channel.
                example: 1
              dtc:
                type: integer
                minimum: 0
                maximum: 100
                description: This parameter defines the maximum allowed TX Duty Cycle of the
                  Sub-Band associated to the Logical Channel.
                example: 1
              frequency:
                type: number
                format: float
                description: This parameter defines the center frequency in MHz of the LoRaWAN
                  Channel.
                example: 923.2
              dlFrequency:
                type: number
                format: float
                description: |
                  This parameter defines the separate downlink center frequency in MHz for RX1 window.

                  Only applicable to 'RX' type.
                example: 925.0
              dlLC:
                type: integer
                minimum: 127
                maximum: 254
                description: |
                  This parameter defines the Logical Channel index of the downlink LoRaWAN channel for RX1 window.

                  Only applicable to 'RX' type.
                example: 127
              minDR:
                type: integer
                minimum: 0
                maximum: 5
                description: This parameter defines the minimum data rate of the logical
                  channel.
                example: 0
              maxDR:
                type: integer
                minimum: 0
                maximum: 5
                description: This parameter defines the maximum data rate of the logical
                  channel.
                example: 5
        more:
          $ref: '#/components/schemas/More'
    RfRegions:
      type: object
      required:
        - briefs
        - more
      properties:
        briefs:
          type: array
          items:
            type: object
            required:
              - href
              - provID
              - version
            properties:
              provID:
                type: string
                description: Provisioning ID of the RF Region
                example: AS923_8AsymChannels_1W.220
              commercialChangelog:
                type: string
                description: B2C changelog of the RF Region
                example: Last certified version
              commercialDescription:
                type: string
                description: B2C description of the RF Region
                example: This RF Region applies to Australia and other Latin American countries
                  whose ISM band includes the 923 to 927MHz frequency range with
                  maximum allowed power of 1W
              commercialName:
                type: string
                description: B2C name of the RF Region
                example: AS923 Australia Asymmetric 8-channels
              logo:
                type: string
                description: Logo HREF of the RF Region
                example: /thingpark/wireless/rest/resources/files/logo/rfRegion/253
              version:
                type: integer
                format: int32
                description: Version of the RF Region
                example: 1
              href:
                type: string
                description: HREF of the RF Region
                example: /thingpark/wireless/rest/partners/10/rfRegions/103
        more:
          $ref: '#/components/schemas/More'
    RoundTrips:
      type: object
      required:
        - briefs
        - now
      properties:
        briefs:
          type: array
          items:
            type: object
            required:
              - timestamp
              - avgRT
              - devRT
              - maxRT
            properties:
              avgRT:
                type: integer
                description: Average roundtrip for this aggregated time slot (ms).
                format: int32
              devRT:
                type: integer
                description: >
                  Standard deviation roundtrip for this aggregated time slot
                  (ms)


                  Note: Computed by averaging all standard deviation associated with the reference timestamp.
                format: int32
              maxRT:
                type: integer
                description: MAX roundtrip for this aggregated time slot (ms).
                format: int32
              timestamp:
                type: integer
                format: int64
                example: 1577836800000
                description: Reference timestamp of the aggregated time slot, epoch time in
                  milliseconds.
        now:
          type: integer
          format: int64
          example: 1577836800000
          description: Current time of the server, epoch time in milliseconds
    ScanRadio:
      type: object
      required:
        - occContext
      properties:
        occContext:
          $ref: '#/components/schemas/OccContext'
        frequency:
          type: object
          description: Frequency vector to scan.
          required:
            - start
            - stop
            - step
          properties:
            start:
              type: number
              description: |
                First scanned frequency in MHz. Precision: `0.000001` MHz.
              example: 863.1
              exclusiveMinimum: 0
            stop:
              type: number
              description: |
                Last scanned frequency in MHz. Precision: `0.000001` MHz.
              example: 869.9
              exclusiveMinimum: 0
            step:
              type: number
              description: |
                Step width in KHz. Precision: `0.001` KHz.
              example: 200
              exclusiveMinimum: 0
    ScanRadioStatus:
      type: object
      properties:
        completionStatus:
          enum:
            - COMPLETED
            - ERR_NOSTART
            - ERR_EXEC
            - ERR_NOEND
          type: string
          description: >-
            Completion status of the command: COMPLETED, ERR_NOSTART, ERR_EXEC,
            ERR_NOEND
        rfScanState:
          type: integer
          description: |
            RF scan state:
            - No started (0)
            - In progress (>0)
          format: int32
    ServedDevices:
      type: object
      required:
        - devices
        - lrrs
        - more
        - count
      properties:
        devices:
          type: array
          description: List of devices served by the base station
          items:
            type: object
            required:
              - devAddr
              - devEUI
              - lastUpTimestamp
              - lrrID
              - rssi
              - snr
              - esp
            properties:
              devAddr:
                type: string
                description: DevAddr
              devEUI:
                type: string
                description: DevEUI
              name:
                type: string
                description: |
                  Device name (only returned if the network partner is a subscriber).

                  If the authenticated user has domain restrictions, only
                  returned if the device matches the domain restrictions.
              href:
                type: string
                description: |
                  Device href (only returned if the network partner is a subscriber).

                  If the authenticated user has domain restrictions, only
                  returned if the device matches the domain restrictions.
              lastUpTimestamp:
                type: integer
                format: int64
                description: Timestamp of the last uplink frame, epoch time in milliseconds
              loc:
                type: object
                description: Last known device location (when available)
                required:
                  - lat
                  - lon
                properties:
                  lat:
                    type: number
                    description: Device latitude
                    format: float
                  lon:
                    type: number
                    description: Device longitude
                    format: float
              lrrID:
                type: string
                description: LRR ID of the base station offering the strongest RF link (highest
                  SNR of the last uplink packet)
              rssi:
                type: number
                description: Last RSSI for this base station
                format: float
              snr:
                type: number
                description: Last SNR for this base station
                format: float
              esp:
                type: number
                description: Last ESP for this base station
          example:
            - devAddr: "04F5F519"
              devEUI: "2504201820020000"
              name: Device 1
              href: /thingpark/wireless/rest/subscriptions/72619/devices/183760
              lastUpTimestamp: 1577836800000
              loc:
                lat: 48.636
                lon: -1.5114
              lrrID: "100001C3"
              rssi: -48
              snr: 10
              esp: -48.41392517089844
            - devAddr: "04F5F51A"
              devEUI: "2504201820020001"
              name: Device 2
              href: /thingpark/wireless/rest/subscriptions/72619/devices/183763
              lastUpTimestamp: 1577836800000
              loc:
                lat: 48.636
                lon: -1.5114
              lrrID: "100001C2"
              rssi: -36
              snr: 9.25
              esp: -36.4877
        lrrs:
          type: array
          description: List of all best base stations involved in this scattering analysis
          items:
            type: object
            required:
              - lrrID
            properties:
              lrrID:
                type: string
                description: LRR ID of the base station
              loc:
                type: object
                description: Last known base station location (when available)
                required:
                  - lat
                  - lon
                properties:
                  lat:
                    type: number
                    description: Base station latitude
                    format: float
                  lon:
                    type: number
                    description: Base station longitude
                    format: float
              href:
                type: string
                description: |
                  Base station HREF

                  If the authenticated user has domain restrictions, only
                  returned if the base station matches the domain restrictions.
          example:
            - lrrID: "100001C2"
              loc:
                lat: 48.636
                lon: -1.5114
              href: /thingpark/wireless/rest/partners/1060/bss/3325
            - lrrID: "100001C3"
              loc:
                lat: 48.636
                lon: -1.5114
              href: /thingpark/wireless/rest/partners/1060/bss/3328
        more:
          $ref: '#/components/schemas/More'
        count:
          type: integer
          description: Total number of matching devices
          example: 32
    SfDistributions:
      type: object
      required:
        - briefs
        - up
        - dw
      properties:
        briefs:
          type: array
          items:
            type: object
            required:
              - sf
              - up
              - dw
            properties:
              dw:
                type: object
                required:
                  - count
                  - airtime
                properties:
                  airtime:
                    type: integer
                    description: >
                      Cumulated airtime (ms) of downlink frames received with
                      this SF.


                      NOTE: Not yet implemented
                    format: int32
                  count:
                    type: integer
                    description: Number of downlink frames received with this SF.
                    format: int32
              sf:
                type: integer
                description: Reference spreading factor (7 to 12) used for this brief.
                format: int32
              up:
                type: object
                required:
                  - count
                  - airtime
                properties:
                  airtime:
                    type: integer
                    description: >
                      Cumulated airtime (ms) of uplink frames received with this
                      SF.


                      NOTE: Not yet implemented
                    format: int32
                  count:
                    type: integer
                    description: Number of uplink frames received with this SF.
                    format: int32
        dw:
          type: object
          required:
            - totalCount
            - totalAirtime
          properties:
            totalAirtime:
              type: integer
              description: >-
                Total airtime (ms) of downlink frames analyzed on the reference
                period.
              format: int32
            totalCount:
              type: integer
              description: >-
                Total number of downlink frames analyzed on the reference period.
              format: int32
        up:
          type: object
          required:
            - totalCount
            - totalAirtime
          properties:
            totalAirtime:
              type: integer
              description: >-
                Total airtime (ms) of uplink frames analyzed on the reference
                period.
              format: int32
            totalCount:
              type: integer
              description: Total number of uplink frames analyzed on the reference period.
              format: int32
    SfDistributionsLC:
      type: object
      required:
        - briefs
        - up
        - dw
      properties:
        briefs:
          type: array
          items:
            type: object
            required:
              - sf
              - up
              - dw
            properties:
              dw:
                type: object
                required:
                  - count
                  - airtime
                properties:
                  airtime:
                    type: integer
                    description: >
                      Cumulated airtime (ms)  of downlink frames received with
                      this SF.


                      NOTE: Not yet implemented
                    format: int32
                  count:
                    type: integer
                    description: Number of downlink frames received with this SF.
                    format: int32
              sf:
                type: integer
                description: Reference spreading factor (6 to 12) used for this brief.
                format: int32
              up:
                type: object
                required:
                  - count
                  - airtime
                properties:
                  airtime:
                    type: integer
                    description: >
                      Cumulated airtime (ms)  of uplink frames received with
                      this SF.


                      NOTE: Not yet implemented
                    format: int32
                  count:
                    type: integer
                    description: Number of uplink frames received with this SF.
                    format: int32
        dw:
          type: object
          required:
            - totalCount
            - totalAirtime
          properties:
            totalAirtime:
              type: integer
              description: >-
                Total airtime (ms) of downlink frames analyzed on the reference
                period.
              format: int32
            totalCount:
              type: integer
              description: >-
                Total number of downlink frames analyzed on the reference period.
              format: int32
        up:
          type: object
          required:
            - totalCount
            - totalAirtime
          properties:
            totalAirtime:
              type: integer
              description: >-
                Total airtime (ms) of uplink frames analyzed on the reference
                period.
              format: int32
            totalCount:
              type: integer
              description: Total number of uplink frames analyzed on the reference period.
              format: int32
    SignalsAndNoises:
      type: object
      required:
        - recordedSince
      properties:
        minRSSI:
          type: object
          properties:
            deviceEUI:
              type: string
              description: Associated Device EUI
            recordedDate:
              type: integer
              format: int64
              example: 1577836800000
              description: Recorded date, epoch time in milliseconds
            value:
              type: number
              description: Min RSSI recorded
              format: float
        minSNR:
          type: object
          properties:
            deviceEUI:
              type: string
              description: Associated Device EUI
            recordedDate:
              type: integer
              format: int64
              example: 1577836800000
              description: Recorded date, epoch time in milliseconds
            value:
              type: number
              description: Min SNR recorded
              format: float
        recordedSince:
          type: integer
          format: int64
          example: 1577836800000
          description: Recorded since date, epoch time in milliseconds
    SnDistributions:
      type: object
      required:
        - briefs
        - totalCount
      readOnly: true
      properties:
        briefs:
          type: array
          items:
            type: object
            required:
              - level
              - count
            properties:
              count:
                type: integer
                description: >-
                  Number of uplink frames received with this level of RSSI, SNR
                  or ESP according to the requesting information element  (see
                  query parameters)
                format: int32
              level:
                type: number
                description: >
                  Reference level used for this brief:

                  - decibel to a milliwatt (dBm), between -140 and -20 dBm,  for RSSI related information elements.

                  - decibel (dB), between -25 and +15 dB, for SNR related  information elements.

                  - decibel to a milliwatt (dBm), between -145 and 0 dBm,  for ESP related information elements.
                format: float
        totalCount:
          type: integer
          description: Total number of uplink frames analyzed on the reference period.
          format: int32
    SoftwareUptime:
      type: object
      properties:
        completionStatus:
          enum:
            - COMPLETED
            - ERR_NOSTART
            - ERR_EXEC
            - ERR_NOEND
          type: string
          description: >-
            Completion status of the command: COMPLETED, ERR_NOSTART, ERR_EXEC,
            ERR_NOEND
        lastReboot:
          type: integer
          format: int64
          example: 1577836800000
          description: Last reboot timestamp (**software uptime**), epoch time in
            milliseconds
    StatusDistributions:
      type: object
      required:
        - rx1Failures
        - rx2Failures
        - pingFailures
        - totalSent
        - totalFailed
      properties:
        rx1Failures:
          type: array
          items:
            type: object
            required:
              - value
              - count
            properties:
              count:
                type: integer
                description: >-
                  Number of downlink frames with this Delivery Failed Cause on
                  RX1.
                format: int32
              value:
                enum:
                  - A
                  - B
                  - C
                  - D
                  - E
                type: string
                description: |
                  Delivery Failed Cause on RX1.

                  Value choices:
                  - A: Class A: Transmission slot busy on RX1
                  - B: Class A: Too late for RX1
                  - C: Class A: LRC selected RX2
                  - D: Class A: DC constraint on RX1
                  - E: Class C: Frame expired before transmit
        rx2Failures:
          type: array
          items:
            type: object
            required:
              - value
              - count
            properties:
              count:
                type: integer
                description: >-
                  Number of downlink frames with this Delivery Failed Cause on
                  RX2.
                format: int32
              value:
                enum:
                  - A
                  - B
                  - D
                  - E
                type: string
                description: |
                  Delivery Failed Cause on RX2.

                  Value choices:
                  - A: Class A: Transmission slot busy on RX2
                  - B: Class A: Too late for RX2
                  - D: Class A: DC constraint on RX2
                  - E: Class C: Frame expired before transmit
        pingFailures:
          type: array
          items:
            type: object
            required:
              - value
              - count
            properties:
              count:
                type: integer
                description: >-
                  Number of downlink frames with this Delivery Failed Cause on
                  ping slot.
                format: int32
              value:
                enum:
                  - A
                  - B
                  - D
                type: string
                description: |
                  Delivery Failed Cause on ping slot.

                  Value choices:
                  - A: Class B: Transmission slot busy
                  - B: Class B: Too late for ping slot
                  - D: Class B: DC constraint on ping slot
        totalFailed:
          type: integer
          description: >-
            Total number of downlink frames transmission failures on the
            reference period.
          format: int32
        totalSent:
          type: integer
          description: >-
            Total number of downlink frames actually sent on the reference
            period.
          format: int32
    SwVersion:
      type: object
      properties:
        completionStatus:
          enum:
            - COMPLETED
            - ERR_NOSTART
            - ERR_EXEC
            - ERR_NOEND
          type: string
          description: >-
            Completion status of the command: COMPLETED, ERR_NOSTART, ERR_EXEC,
            ERR_NOEND
        version:
          type: object
          properties:
            status:
              enum:
                - OUTDATED
                - UPTODATE
                - DEPRECATED
              type: string
              description: 'Version status: OUTDATED, UPTODATE, DEPRECATED'
            statusInfo:
              type: string
              description: Friendly version status info
            version:
              type: string
              description: LRR software version
    SystemUptime:
      type: object
      properties:
        completionStatus:
          enum:
            - COMPLETED
            - ERR_NOSTART
            - ERR_EXEC
            - ERR_NOEND
          type: string
          description: >-
            Completion status of the command: COMPLETED, ERR_NOSTART, ERR_EXEC,
            ERR_NOEND
        lastsystemReboot:
          type: integer
          format: int64
          example: 1577836800000
          description: Last reboot timestamp (**system uptime**), epoch time in milliseconds
    TagName:
      type: string
      pattern: ^[^\x00-\x20\x3C\x3E\x7F]([^\x00-\x1F\x3C\x3E\x7F]{0,38}[^\x00-\x20\x3C\x3E\x7F])?$
      description: Tag name
      example: tag1
    TagSuggestions:
      type: object
      required:
        - briefs
        - query
      properties:
        briefs:
          type: array
          items:
            type: object
            required:
              - name
            properties:
              name:
                $ref: '#/components/schemas/TagName'
          example:
            - name: tag1
            - name: tag2
            - name: tag3
        query:
          type: string
          description: The query string provided in the request
    UpdateAntennasGainAndLoss:
      type: object
      required:
        - chains
        - occContext
      properties:
        chains:
          type: array
          items:
            type: object
            required:
              - index
              - gain
              - cableLoss
            properties:
              cableLoss:
                type: number
                description: Cable Loss in dB
                format: float
                example: 0.49
              gain:
                type: number
                description: Gain in dBi
                format: float
                example: 3
              index:
                type: integer
                description: Antenna chain index
                format: int32
                example: 0
        occContext:
          $ref: '#/components/schemas/OccContext'
    UpdateFineTimestampKeys:
      type: object
      required:
        - fpgaBoards
        - occContext
      properties:
        fpgaBoards:
          type: array
          items:
            type: object
            required:
              - index
              - key
            properties:
              index:
                type: integer
                description: FPGA board index starting from 0
                format: int32
              key:
                type: string
                description: Fine-timestamps decryption AES 128 key
        occContext:
          $ref: '#/components/schemas/OccContext'
    UpdateLocation:
      type: object
      required:
        - locationType
        - occContext
      properties:
        adminAlt:
          type: integer
          description: |
            Administrative altitude of the BS (meters)

            Note: Always optional.
          format: int32
          example: 562
        adminLat:
          type: number
          description: |
            Administrative latitude of the BS (decimal coordinates)

            Note: Mandatory when the type is Administrative, ignored otherwise.
          format: float
          example: 47.517201
        adminLon:
          type: number
          description: |
            Administrative longitude of the BS (decimal coordinates)

            Note: Mandatory when the type is Administrative, ignored otherwise.
          format: float
          example: 1.757812
        locationType:
          type: integer
          description: |
            Type of location currently activated:
            - 1: Administrative
            - 2: GPS

            Note: Only Administrative type is supported if the Base Station executes the Semtech Basic Station software (`model.softwareType = 'BASIC_STATION_LINUX'`).
          format: int32
          minimum: 1
          maximum: 2
          example: 2
        occContext:
          $ref: '#/components/schemas/OccContext'
    UpdateLog:
      type: object
      required:
        - traceLevel
        - occContext
      properties:
        occContext:
          $ref: '#/components/schemas/OccContext'
        traceLevel:
          type: integer
          description: LRR trace level (0..3). 0 means no trace.
          format: int32
    UpdateRfRegion:
      type: object
      required:
        - rfRegionID
        - occContext
      properties:
        occContext:
          $ref: '#/components/schemas/OccContext'
        rfRegionID:
          type: string
          maxLength: 32
          pattern: "^[a-zA-Z0-9_.-]+$"
          description: RF Region provisioning ID
    Upgrade:
      type: object
      required:
        - version
        - occContext
      properties:
        occContext:
          $ref: '#/components/schemas/OccContext'
        version:
          type: string
          description: Targeted version
    AlarmsSubscription:
      type: object
      required:
        - minimumSeverity
      properties:
        minimumSeverity:
          type: integer
          description: Notifies alarms equal to the selected severity or higher
          format: int32
          minimum: 2
          maximum: 6
          example: 2
        href:
          type: string
          description: HREF of the user alarms subscription
          readOnly: true
          example: /thingpark/wireless/rest/subscriptions/33/users/tpk-100000123/alarmsSubscription
    UsersAlarmsSubscriptions:
      type: object
      readOnly: true
      required:
        - briefs
        - more
      properties:
        briefs:
          type: array
          items:
            type: object
            required:
              - user
              - subscription
              - href
            properties:
              user:
                type: object
                required:
                  - thingparkID
                properties:
                  thingparkID:
                    type: string
                    description: ThingPark ID of the user
                    example: tpk-100000123
              subscription:
                $ref: '#/components/schemas/AlarmsSubscription'
        more:
          $ref: '#/components/schemas/More'
    More:
      type: boolean
      description: '*TRUE when more briefs can be retrieved with an upper page index.*'
    Success:
      type: boolean
      description: TRUE when the request has been successfully processed
      readOnly: true
  responses:
    AdminSettings:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdminSettings'
    Alarms:
      description: Successful RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Alarms'
    AlarmsActive:
      description: Successful RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AlarmsActive'
    AlarmsBs:
      description: Successful RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AlarmsBs'
    AlarmsBsActive:
      description: Successful RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AlarmsBsActive'
    AlarmsBssStateDistributions:
      description: Successful RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AlarmsBssStateDistributions'
    Ant:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Ant'
    AntennasGainAndLossStatus:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AntennasGainAndLossStatus'
    Ants:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Ants'
    AvailableLrrVersions:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AvailableLrrVersions'
    Backup:
      description: Successful CREATE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Backup'
    BackupSwVersion:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BackupSwVersion'
    BaseStationVendors:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseStationVendors'
    BasicsStationRemoteShellSessions:
      description: Remote shell sessions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BasicsStationRemoteShellSessions'
          examples:
            initial-state:
              summary: Initial state
              value:
                - user: ""
                  started: false
                - user: ""
                  started: false
            one-session:
              summary: One session is started
              value:
                - user: ""
                  started: false
                - user: "john.doe"
                  started: true
    Beacons:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Beacons'
    Bitrates:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Bitrates'
    Bs:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Bs'
    BsProfiles:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BsProfiles'
    Bss:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Bss'
    BssClusters:
      description: Successful RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BssClusters'
    BsTag:
      description: Successful CREATE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BsTag'
    BsTags:
      description: Successful RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BsTags'
    CancelRadioScan:
      description: Successful CREATE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CancelRadioScan'
    Check:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Check'
    CloseSsh:
      description: Successful CREATE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CloseSsh'
    Counters:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Counters'
    Cpu:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Cpu'
    Delete:
      description: Successful DELETE
    DevicesScattering:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DevicesScattering'
    Disk:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Disk'
    DownloadLrrVersion:
      description: Successful CREATE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DownloadLrrVersion'
    DutyCycles:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DutyCycles'
    Error:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ErrorJsonOnly:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    FineTimestampKeysStatus:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FineTimestampKeysStatus'
    Frames:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Frames'
    HistoriesCpu:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HistoriesCpu'
    HistoriesDisk:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HistoriesDisk'
    HistoriesDutyCycles:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HistoriesDutyCycles'
    HistoriesIecQueues:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HistoriesIecQueues'
    HistoriesInt:
      description: Successful RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HistoriesInt'
    HistoriesRam:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HistoriesRam'
    IecPackets:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IecPackets'
    IecQueues:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IecQueues'
    Images:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Images'
    IndicatorsRfcell:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IndicatorsRfcell'
    IndicatorsWans:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IndicatorsWans'
    Int:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Int'
    IsmBands:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IsmBands'
    LastCmdStatus:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LastCmdStatus'
    Licenses:
      description: Successful CREATE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Licenses'
    LocationStatus:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LocationStatus'
    LogStatus:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LogStatus'
    Lrc:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Lrc'
    OpenSsh:
      description: Successful CREATE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OpenSsh'
    OpenTerminal:
      description: Successful CREATE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OpenTerminal'
    Partner:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Partner'
    Partners:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Partners'
    PartnersAuthentication:
      description: |
        Successfully authenticated.

        The session ID is returned in a cookie named `JSESSIONID`.

        You need to include this cookie in subsequent requests.
      headers:
        Set-Cookie:
          schema:
            type: string
            example: JSESSIONID=abcde12345; Path=/; HttpOnly
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartnersAuthentication'
    Ram:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Ram'
    Reboot:
      description: Successful CREATE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Reboot'
    Restart:
      description: Successful CREATE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Restart'
    Restore:
      description: Successful CREATE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Restore'
    Restricted:
      description: Successful UPDATE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Restricted'
    ReverseSshStatus:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReverseSshStatus'
    RfRegion:
      description: Successful RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RfRegion'
    RfRegionLcs:
      description: Successful RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RfRegionLcs'
    RfRegions:
      description: Successful RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RfRegions'
    RfRegionStatus:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RfRegionStatus'
    RfcDownlinkStop:
      description: Successful CREATE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RfcDownlinkStop'
    RfcStart:
      description: Successful CREATE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RfcStart'
    RfcStatus:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RfcStatus'
    RfcStop:
      description: Successful CREATE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RfcStop'
    RoundTrips:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RoundTrips'
    ScanRadio:
      description: Successful CREATE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ScanRadio'
    ScanRadioStatus:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ScanRadioStatus'
    ServedDevices:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServedDevices'
    SfDistributions:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SfDistributions'
    SfDistributionsLC:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SfDistributionsLC'
    SignalsAndNoises:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SignalsAndNoises'
    SnDistributions:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SnDistributions'
    SoftwareUptime:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SoftwareUptime'
    StatusDistributions:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StatusDistributions'
    SwVersion:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SwVersion'
    SystemUptime:
      description: Successful UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SystemUptime'
    TagSuggestions:
      description: Successful RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TagSuggestions'
    UpdateAntennasGainAndLoss:
      description: Successful CREATE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateAntennasGainAndLoss'
    UpdateFineTimestampKeys:
      description: Successful CREATE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateFineTimestampKeys'
    UpdateLocation:
      description: Successful CREATE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateLocation'
    UpdateLog:
      description: Successful CREATE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateLog'
    UpdateRfRegion:
      description: Successful CREATE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateRfRegion'
    Upgrade:
      description: Successful CREATE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Upgrade'
    AlarmsSubscription:
      description: Successful CREATE, UPDATE or RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AlarmsSubscription'
    UsersAlarmsSubscriptions:
      description: Successful RETRIEVE
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UsersAlarmsSubscriptions'
  parameters:
    Alarm:
      name: alarmUid
      in: path
      description: Uid of Alarm
      required: true
      schema:
        type: string
        example: 5d31b91ccc9cc606607bc0a8
    AlarmAcked:
      name: acked
      in: query
      description: Only returns alarms that match the query parameter
      schema:
        type: boolean
    AlarmID:
      name: ID
      in: query
      description: ID of the alarm
      schema:
        type: integer
        format: int32
    AlarmIndex:
      name: index
      in: query
      description: Index of the alarm
      schema:
        type: string
    AlarmHistoryState:
      name: state
      in: query
      description: >
        Only returns alarm for which the state is equal or upper than the
        provided state according to the following definition:

        - 6: returns CRITICAL alarms (state = 6)

        - 5: returns CRITICAL and MAJOR alarms (state >=5)

        - 4: returns CRITICAL, MAJOR and MINOR alarms (state >=4)

        - 3: returns CRITICAL, MAJOR, MINOR and WARNING alarms (state >= 3)


        Note: When this query parameter is not specified, alarms are returned without consideration for the state.
      schema:
        type: integer
        format: int32
        minimum: 3
        maximum: 6
    AlarmState:
      name: state
      in: query
      description: >
        Only returns alarm for which the state is equal or upper than the
        provided state according to the following definition:

        - 6: returns CRITICAL alarms (state = 6)

        - 5: returns CRITICAL and MAJOR alarms (state >=5)

        - 4: returns CRITICAL, MAJOR and MINOR alarms (state >=4)

        - 3: returns CRITICAL, MAJOR, MINOR and WARNING alarms (state >= 3)

        - 2: return all UNCLEARED alarms (state >=2)

        - 1: only returns CLEARED alarms (state = 1)


        Note: When this query parameter is not specified, alarms are returned without consideration for the state (i.e. alarms can be UNCLEARED or CLEARED)
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 6
    AlarmUid:
      name: alarmUid
      in: query
      description: Alarm Uid identifying the alarm occurrence
      schema:
        type: string
        example: 5d31b91ccc9cc606607bc0a8
    Ant:
      name: antUid
      in: path
      description: Uid of Ant
      required: true
      schema:
        type: integer
        format: int32
    Bs:
      name: bsUid
      in: path
      description: |
        Unique identifier of the base station, either
        * the sequential integer (`UID`) assigned to the base station at creation (for example `1222`)
        * the `lrrID` in uppercase prefixed with the i letter in downcase (for example `i1000086C`)
        * the `lrrUUID` in uppercase prefixed with the u letter in downcase (for example `u7076FF-024B0B030008`)
      required: true
      examples:
        uid:
          summary: UID
          value: "1222"
        lrrID:
          summary: lrrID
          value: i1000086C
        lrrUUID:
          summary: lrrUUID
          value: u7076FF-024B0B030008
      schema:
        type: string
        pattern: ^(\d+|(i|u)[-_0-9A-Z]+)$
        example: "1222"
    BsAlarmLevel:
      name: alarmLevel
      in: query
      description: >
        Only returns BS for which one or several NOT-ACKED alarms exist:

        - 6: returns BS with at least a CRITICAL nack alarm (state = 6)

        - 5: returns BS with at least a CRITICAL or a MAJOR nack alarm (state >=5)

        - 4: returns BS with at least a CRITICAL, MAJOR or MINOR nack alarm (state >=4)

        - 3: returns BS with at least a CRITICAL, MAJOR, MINOR or WARNING nack alarm (state >=3)

        - 2: return BS with at least an UNCLEARED nack alarm (state >=2)

        - 1: return BS with at least an UNCLEARED or CLEARED nack alarm

        (state >=1)


        Note: When this query parameter is not specified, BS are returned without consideration for alarms.
      schema:
        type: integer
        format: int32
    BsAppServerID:
      name: appServerID
      in: query
      description: |
        Only returns Base Stations associated with the Application Server.

        Multiple values can be set: in this case Base Stations must be associated
        with all provided Application Servers.
      schema:
        type: array
        items:
          type: string
      style: form
      explode: true
    BsCustomVersion:
      name: customVersion
      in: query
      description: Custom version field filtering (exact match)
      schema:
        type: string
    BsDomain:
      name: domain
      in: query
      description: |
        Domain filtering (exact match)

        Domain group name and domain name must be provided as follow:
        `domain.group.name`:`domain.name`
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
        example:
          - Site:France/Caen
          - Vertical:Network
    BsHealthState:
      name: healthState
      in: query
      description: |
        Health state filtering.

        Multiple values can be set. If not provided, all Base Stations are
        returned.
      schema:
        type: array
        items:
          $ref: '#/components/schemas/BsHealthState'
      style: form
      explode: true
    BsLRRID:
      name: LRRID
      in: query
      description: LRR ID filtering (prefix match)
      schema:
        type: array
        items:
          type: string
    BsLRRUUID:
      name: LRRUUID
      in: query
      description: LRR UUID filtering (prefix match)
      schema:
        type: string
    BsMinRC:
      name: minRC
      in: query
      description: >-
        Only returns BS for  which the min remaining capacity (up or down) is
        equal or lower than the provided min remaining capacity
      schema:
        type: integer
        format: int32
    BsName:
      name: name
      in: query
      description: BS name filtering (prefix match)
      schema:
        type: string
    BsQuery:
      name: query
      in: query
      description: |
        Search base stations with a LRR ID or LRR UUID or name  containing
        the provided term. (prefix match)
      schema:
        type: string
    BsRebootFrom:
      name: rebootFrom
      in: query
      description: >
        Only returns BS reboot from this date/time.


        Syntax: ISO 8601 date/time including time offset. If no time offset is provided the server's offset is used by default.
      schema:
        type: string
        format: date-time
    BsRfRegionID:
      name: rfRegionID
      in: query
      description: RF Region provisioning ID (exact match)
      schema:
        type: array
        items:
          type: string
    BsSecurityState:
      name: bsSecurityState
      in: query
      description: |
        Only returns base stations for which the state of the security matches the provided value:
        - `EXPIRED`: the type of security is `IPSEC_X509` and the base station certificate has expired
        - `EXPIRATION_IN_LESS_THAN_1_WEEK`: the type of security is `IPSEC_X509` and the base station certificate will expire in less than 1 week
        - `EXPIRATION_IN_LESS_THAN_1_MONTH`: the type of security is `IPSEC_X509` and the base station certificate will expire in less than 1 month
        - `DISABLED`: the type of security is `DISABLE` and  the base station identification mode is `LRR_UUID`
        - `UNKNOWN`: the type of security is `DISABLE` and the base station identification mode is `LRR_ID`
      schema:
        type: string
        enum:
          - EXPIRED
          - EXPIRATION_IN_LESS_THAN_1_WEEK
          - EXPIRATION_IN_LESS_THAN_1_MONTH
          - DISABLED
          - UNKNOWN
    BsTag:
      name: tag
      in: query
      description: Tag name filtering (exact match)
      schema:
        type: array
        items:
          $ref: '#/components/schemas/TagName'
    BsVersion:
      name: version
      in: query
      description: Software version filtering (prefix match)
      schema:
        type: string
    Disk:
      name: diskIndex
      in: path
      description: Disk index in the `mfs.mfs` property of the base station. For
        example, use `0` to for the first disk.
      required: true
      schema:
        type: integer
        format: int32
    Exclude:
      name: exclude
      in: query
      description: Excludes any tag name matching this value (exact match)
      schema:
        type: array
        items:
          $ref: '#/components/schemas/TagName'
    ForceCatalog:
      name: force
      in: query
      description: |
        When set, the catalog upgrade is forced even if the uploaded catalog
        version is equal to the currently installed version.
      schema:
        type: boolean
    Image:
      name: imageUid
      in: path
      description: Uid of Image
      required: true
      schema:
        type: integer
        format: int32
    Int:
      name: intUid
      in: path
      description: Uid of Int
      required: true
      schema:
        type: integer
        format: int32
    Language-tag:
      name: language-tag
      in: query
      description: >
        Return resource document by using the language-tag.


        When this query parameter is not specified in the request or when requested language is

        not available, en-US is used by default.
      schema:
        type: string
    Lc:
      name: lcId
      in: path
      description: Logical Channel identifier
      required: true
      schema:
        type: string
        example: LC1
    Lrc:
      name: lrcUid
      in: path
      description: Uid of Lrc
      required: true
      schema:
        type: integer
        format: int32
    PageIndex:
      name: pageIndex
      in: query
      description: |
        Returns the requested page index (1...n). The default system wide page
        size is used. The maximum number of pages is limited (system-wide).
      schema:
        type: integer
        format: int32
    PageSize:
      name: pageSize
      in: query
      description: |
        Size of the expected page result.

        If not specified or lower than the minimum page size (system-wide
        configuration), the minimum page size is used.

        If greater than the maximum page size (system-wide configuration), the
        maximum page size is used.
      schema:
        type: integer
        format: int32
    RfRegion:
      name: rfRegionUid
      in: path
      description: Uid of RF Region
      required: true
      schema:
        type: integer
        format: int32
    Force:
      name: force
      in: query
      description: Indicates that the issuer accept to force the OCC.
      schema:
        type: boolean
      allowEmptyValue: true
    RemoteShellIdx:
      name: remoteShellIdx
      in: path
      required: true
      description: Index of the remote shell session (0 or 1)
      schema:
        type: number
        format: integer
    ResetAll:
      name: resetAll
      in: query
      description: Force the reset for all logical channels.
      schema:
        type: boolean
      allowEmptyValue: true
    KpiAlgo:
      name: algo
      in: query
      description: >
        Algorithm used to generate the KPI:

        - mapReduce: MongoDB map/reduce is used

        - aggregation: MongoDB aggregation is used


        Default value: When this query parameter is not specified the **aggregation** algorithm is used by default.


        This parameter must no longer be used: it is ignored, aggregation algorithm is always used.
      schema:
        enum:
          - mapReduce
          - aggregation
        type: string
      deprecated: true
    TimestampFrom:
      name: from
      in: query
      description: >
        Date/time of the first alarm to retrieve (the creation timestamp is used
        for the "from").


        Syntax: ISO 8601 date/time including time offset. If no time offset is provided the server's offset is used by default.
      schema:
        type: string
        format: date-time
    TimestampTo:
      name: to
      in: query
      description: >
        Date/time of the last alarm to retrieve (the last update timestamp is
        used for the "to").


        Syntax: ISO 8601 date/time including time offset. If no time offset is provided the server's offset is used by default.
      schema:
        type: string
        format: date-time
    DurationDaysHours:
      name: duration
      in: query
      description: >
        Size of the window to analyze (OPTIONAL).


        Default value: When this query parameter is not specified, the **P7D** duration is used by default.


        Supported duration value: **PxD** (x days) and **PTxH** (x hours)
      schema:
        type: string
    DurationHoursMinutes:
      name: duration
      in: query
      description: >
        Size of the window to analyze (OPTIONAL).


        Default value: When this query parameter is not specified the **PT10M** duration is used by default.


        Supported duration: **PTxH** (between 1...24 hours) and **PTxM** (between 10...60 minutes)
      schema:
        type: string
    BeginFirstReportAnalyse:
      name: begin
      in: query
      description: >
        Date/time of the first report to analyze (OPTIONAL).


        Syntax: ISO 8601 date/time including time offset. If no time offset is provided the server's offset is used by default.


        Default value: When this query parameter is not specified the last report are retrieved by default.
      schema:
        type: string
        format: date-time
    BeginFirstFrameAnalyse:
      name: begin
      in: query
      description: >
        Date/time of the first frame to analyze (OPTIONAL).


        Syntax: ISO 8601 date/time including time offset. If no time offset is provided the server's offset is used by default.


        Default value: When this query parameter is not specified the last frames are retrieved by default.
      schema:
        type: string
        format: date-time
    AggregationStep:
      name: step
      in: query
      description: |
        Aggregation step (OPTIONAL). This parameter is used to determine the
        size of each time slot.

        Default value: When this query parameter is not specified the **PT1H**
        duration is used by default.

        Supported duration step: **PTxH** (between 1...24 hours) or **P1D** (1
        day, take into account STD and DST clock shifts when applicable to the
        selected time zone)
      schema:
        type: string
        default: PT1H
    Query:
      name: query
      in: query
      description: Returns the tag names starting with query value (case insensitive)
      required: true
      schema:
        $ref: '#/components/schemas/TagName'
    Tag:
      name: tagUid
      in: path
      description: Uid of Tag
      required: true
      schema:
        type: integer
        format: int32
    User:
      name: thingparkID
      in: path
      description: ThingPark ID of the User
      required: true
      schema:
        type: string
    Timezone:
      name: timezone
      in: query
      description: |
        Time zone used to compute the beginning of aggregation time slots. Time
        slots are aligned to January 1, 1970 at midnight in the specified
        timezone. The time zone must be a valid name from the
        <a href="https://www.iana.org/time-zones" target="_blank">IANA time zone
        database</a>
      schema:
        type: string
        default: UTC
        example: Europe/Paris
    AntennaIndex:
      name: antennaIndex
      in: query
      description: |
        Only consider downlink frames transmitted by the antenna identified by
        this index
      schema:
        type: integer
        format: int32
        minimum: 0
  examples:
    BaseStationPost:
      summary: Base Station
      value:
        bsSecurity:
          type: IPSEC_X509
        lrrUUID: 7076FF-024B0B030008
        model:
          ID: GEN/GW.1
        name: My base station
        publicKey: -----BEGIN PUBLIC
          KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsJKtG6m1J/FNiOOucXB9\ns6ASjngXZYnAqbpB548W8MSKLexRfqGZzLr5GT0gnWkl20ahiGUFM8LlIM7UfHKD\nUUEsHsaC4Zu92VYGE7jmLOdc57srH8csMEfjJc8aQLUvbF4w/N+rw47B6323mbsb\nRGDq14MLpKk1Zp8s5rBZH6gyZzTtjuuAKXMdOoIRyo4RyvVGGiSxw6VqRA3eHNEc\nB+DlIoRCdq251pTXUqLGxYgDFJKSxmAwyVLPpqNYojxp77o2LqoSsXSaOWUk+fxw\nQ8y4Az/n5a59f/4noYmBBvjcthAJ7KvnEdCIPnlHgisCHxQktzaou2283Ow39lX+\n0wIDAQAB\n-----END
          PUBLIC KEY-----
  requestBodies:
    AdminSettings:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdminSettings'
      required: true
    AlarmsBssAck:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AlarmsBssAck'
      required: true
    Ant:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Ant'
      required: true
    Backup:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Backup'
      required: true
    Bs:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Bs'
      required: true
    BsTag:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BsTag'
      required: true
    BssDomains:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BssDomains'
      required: true
    BssTag:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BssTag'
      required: true
    CancelRadioScan:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CancelRadioScan'
      required: true
    CloseSsh:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CloseSsh'
      required: true
    DownloadLrrVersion:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DownloadLrrVersion'
      required: true
    Licenses:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Licenses'
      required: true
    OpenSsh:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OpenSsh'
      required: true
    OpenTerminal:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OpenTerminal'
      required: true
    Partner:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Partner'
      required: true
    Reboot:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Reboot'
      required: true
    Restart:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Restart'
      required: true
    Restore:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Restore'
      required: true
    Restricted:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Restricted'
      required: true
    RfcDownlinkStop:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RfcDownlinkStop'
      required: true
    RfcStart:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RfcStart'
      required: true
    RfcStop:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RfcStop'
      required: true
    ScanRadio:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ScanRadio'
      required: true
    UpdateAntennasGainAndLoss:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateAntennasGainAndLoss'
      required: true
    UpdateFineTimestampKeys:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateFineTimestampKeys'
      required: true
    UpdateLocation:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateLocation'
      required: true
    UpdateLog:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateLog'
      required: true
    UpdateRfRegion:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateRfRegion'
      required: true
    Upgrade:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Upgrade'
      required: true
    AlarmsSubscription:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AlarmsSubscription'
      required: true
  headers: {}
  securitySchemes:
    "Subscriber_service_account":
      type: oauth2
      description: Authenticate using subscriber service account credentials
      flows:
        clientCredentials:
          tokenUrl: "/users-auth/protocol/openid-connect/token"
          scopes: {}
  links: {}
  callbacks: {}
security:
  - "Subscriber_service_account": []
  - "Operator_vendor_supplier_service_account": []
tags:
  - name: partners
    description: Network partners
  - name: bs-profiles
    description: Base station models
  - name: rf-regions
    description: RF regions
  - name: base-stations
    description: Base stations
  - name: admins
    description: Base station administration
  - name: sys
    description: Base station system statistics
  - name: rfcell
    description: Base station RF statistics
  - name: wans
    description: Base station backhaul statistics
  - name: alarms
    description: Base station alarms
  - name: users
    description: Users
