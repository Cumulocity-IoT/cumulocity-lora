/*
 * ThingPark Enterprise - Dx-Core API
 * API providing configuration and provisioning features for ThingPark Enterprise.
 *
 * OpenAPI spec version: 1.8.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package lora.ns.actility.rest.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

/**
 * Resource representing read-only statistics about health states for base
 * stations.
 */
@JsonIgnoreProperties(ignoreUnknown = true)
public class BaseStationHealthStatistics {
  private Integer initCount = null;

  private Integer activeCount = null;

  private Integer backhaulConnectionErrorCount = null;

  private Integer rfErrorCount = null;

  private Integer totalCount = null;

  public BaseStationHealthStatistics initCount(Integer initCount) {
    this.initCount = initCount;
    return this;
  }

  /**
   * Number of base stations with the &#39;healthState&#39; attribute set to
   * &#39;INIT&#39;.
   * 
   * @return initCount
   **/
  public Integer getInitCount() {
    return initCount;
  }

  public void setInitCount(Integer initCount) {
    this.initCount = initCount;
  }

  public BaseStationHealthStatistics activeCount(Integer activeCount) {
    this.activeCount = activeCount;
    return this;
  }

  /**
   * Number of base stations with the &#39;healthState&#39; attribute set to
   * &#39;ACTIVE&#39;.
   * 
   * @return activeCount
   **/
  public Integer getActiveCount() {
    return activeCount;
  }

  public void setActiveCount(Integer activeCount) {
    this.activeCount = activeCount;
  }

  public BaseStationHealthStatistics backhaulConnectionErrorCount(Integer backhaulConnectionErrorCount) {
    this.backhaulConnectionErrorCount = backhaulConnectionErrorCount;
    return this;
  }

  /**
   * Number of base stations with the &#39;healthState&#39; attribute set to
   * &#39;BACKHAUL_CNX_ERROR&#39;.
   * 
   * @return backhaulConnectionErrorCount
   **/
  public Integer getBackhaulConnectionErrorCount() {
    return backhaulConnectionErrorCount;
  }

  public void setBackhaulConnectionErrorCount(Integer backhaulConnectionErrorCount) {
    this.backhaulConnectionErrorCount = backhaulConnectionErrorCount;
  }

  public BaseStationHealthStatistics rfErrorCount(Integer rfErrorCount) {
    this.rfErrorCount = rfErrorCount;
    return this;
  }

  /**
   * Number of base stations with the &#39;healthState&#39; attribute set to
   * &#39;RF_ERROR&#39;.
   * 
   * @return rfErrorCount
   **/
  public Integer getRfErrorCount() {
    return rfErrorCount;
  }

  public void setRfErrorCount(Integer rfErrorCount) {
    this.rfErrorCount = rfErrorCount;
  }

  public BaseStationHealthStatistics totalCount(Integer totalCount) {
    this.totalCount = totalCount;
    return this;
  }

  /**
   * Total number of base stations in authorized scopes.
   * 
   * @return totalCount
   **/
  public Integer getTotalCount() {
    return totalCount;
  }

  public void setTotalCount(Integer totalCount) {
    this.totalCount = totalCount;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BaseStationHealthStatistics baseStationHealthStatistics = (BaseStationHealthStatistics) o;
    return Objects.equals(this.initCount, baseStationHealthStatistics.initCount)
            && Objects.equals(this.activeCount, baseStationHealthStatistics.activeCount)
            && Objects.equals(this.backhaulConnectionErrorCount,
                    baseStationHealthStatistics.backhaulConnectionErrorCount)
            && Objects.equals(this.rfErrorCount, baseStationHealthStatistics.rfErrorCount)
            && Objects.equals(this.totalCount, baseStationHealthStatistics.totalCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(initCount, activeCount, backhaulConnectionErrorCount, rfErrorCount, totalCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BaseStationHealthStatistics {\n");

    sb.append("    initCount: ").append(toIndentedString(initCount)).append("\n");
    sb.append("    activeCount: ").append(toIndentedString(activeCount)).append("\n");
    sb.append("    backhaulConnectionErrorCount: ").append(toIndentedString(backhaulConnectionErrorCount)).append("\n");
    sb.append("    rfErrorCount: ").append(toIndentedString(rfErrorCount)).append("\n");
    sb.append("    totalCount: ").append(toIndentedString(totalCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
