/*
 * ThingPark Enterprise - Dx-Core API
 * API providing configuration and provisioning features for ThingPark Enterprise.
 *
 * OpenAPI spec version: 1.8.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package lora.ns.actility.rest.model;

import java.util.Objects;
import java.util.ArrayList;
import java.util.List;

/**
 * Resource representing read-only details about available logical channels of a base station.
 */
public class LogicalChannelDetails {
  private List<ChannelRangeDetails> symmetricChannelRanges = null;

  private List<ChannelRangeDetails> asymmetricChannelRanges = null;

  private Integer rx2Channel = null;

  public LogicalChannelDetails symmetricChannelRanges(List<ChannelRangeDetails> symmetricChannelRanges) {
    this.symmetricChannelRanges = symmetricChannelRanges;
    return this;
  }

  public LogicalChannelDetails addSymmetricChannelRangesItem(ChannelRangeDetails symmetricChannelRangesItem) {
    if (this.symmetricChannelRanges == null) {
      this.symmetricChannelRanges = new ArrayList<ChannelRangeDetails>();
    }
    this.symmetricChannelRanges.add(symmetricChannelRangesItem);
    return this;
  }

   /**
   * List of supported symmetric channel ranges.
   * @return symmetricChannelRanges
  **/
  public List<ChannelRangeDetails> getSymmetricChannelRanges() {
    return symmetricChannelRanges;
  }

  public void setSymmetricChannelRanges(List<ChannelRangeDetails> symmetricChannelRanges) {
    this.symmetricChannelRanges = symmetricChannelRanges;
  }

  public LogicalChannelDetails asymmetricChannelRanges(List<ChannelRangeDetails> asymmetricChannelRanges) {
    this.asymmetricChannelRanges = asymmetricChannelRanges;
    return this;
  }

  public LogicalChannelDetails addAsymmetricChannelRangesItem(ChannelRangeDetails asymmetricChannelRangesItem) {
    if (this.asymmetricChannelRanges == null) {
      this.asymmetricChannelRanges = new ArrayList<ChannelRangeDetails>();
    }
    this.asymmetricChannelRanges.add(asymmetricChannelRangesItem);
    return this;
  }

   /**
   * List of supported asymmetric channel ranges.
   * @return asymmetricChannelRanges
  **/
  public List<ChannelRangeDetails> getAsymmetricChannelRanges() {
    return asymmetricChannelRanges;
  }

  public void setAsymmetricChannelRanges(List<ChannelRangeDetails> asymmetricChannelRanges) {
    this.asymmetricChannelRanges = asymmetricChannelRanges;
  }

  public LogicalChannelDetails rx2Channel(Integer rx2Channel) {
    this.rx2Channel = rx2Channel;
    return this;
  }

   /**
   * Rx2 channel value.
   * @return rx2Channel
  **/
  public Integer getRx2Channel() {
    return rx2Channel;
  }

  public void setRx2Channel(Integer rx2Channel) {
    this.rx2Channel = rx2Channel;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LogicalChannelDetails logicalChannelDetails = (LogicalChannelDetails) o;
    return Objects.equals(this.symmetricChannelRanges, logicalChannelDetails.symmetricChannelRanges) &&
        Objects.equals(this.asymmetricChannelRanges, logicalChannelDetails.asymmetricChannelRanges) &&
        Objects.equals(this.rx2Channel, logicalChannelDetails.rx2Channel);
  }

  @Override
  public int hashCode() {
    return Objects.hash(symmetricChannelRanges, asymmetricChannelRanges, rx2Channel);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LogicalChannelDetails {\n");
    
    sb.append("    symmetricChannelRanges: ").append(toIndentedString(symmetricChannelRanges)).append("\n");
    sb.append("    asymmetricChannelRanges: ").append(toIndentedString(asymmetricChannelRanges)).append("\n");
    sb.append("    rx2Channel: ").append(toIndentedString(rx2Channel)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

