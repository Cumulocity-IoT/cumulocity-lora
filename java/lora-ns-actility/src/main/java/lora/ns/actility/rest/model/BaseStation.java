/*
 * ThingPark Enterprise - Dx-Core API
 * API providing configuration and provisioning features for ThingPark Enterprise.
 *
 * OpenAPI spec version: 1.8.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package lora.ns.actility.rest.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import java.util.ArrayList;
import java.util.List;

/**
 * Resource representing a base station created by a ThingPark supplier or subscriber.
 */
public class BaseStation {
  private String ref = null;

  private String id = null;

  private String uuid = null;

  private String baseStationProfileId = null;

  private String name = null;

  @JsonProperty("SMN")
  private String SMN = null;

  private String administrativeInfo = null;

  private String publicKey = null;

  /**
   * Administration state of the base stations. Possible values are: &#39;INIT&#39; (Initial configuration), &#39;VALIDATING&#39; (Waiting for validation), &#39;ACTIVE&#39; (Validated and activated), &#39;SUSPENDED&#39; (Validated and deactivated). Default value is &#39;INIT&#39;. Note that (in current version) this attribute is READ-ONLY.
   */
  public enum AdministrationStateEnum {
    INIT("INIT"),
    
    VALIDATING("VALIDATING"),
    
    ACTIVE("ACTIVE"),
    
    SUSPENDED("SUSPENDED");

    private String value;

    AdministrationStateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AdministrationStateEnum fromValue(String text) {
      for (AdministrationStateEnum b : AdministrationStateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  private AdministrationStateEnum administrationState = null;

  @JsonProperty("RX2Optimization")
  private Boolean rx2Optimization = null;

  private Boolean classBReady = null;

  private Boolean activateBeaconTransmission = null;

  private String owner = null;

  private Float geoLatitude = null;

  private Float geoLongitude = null;

  private Integer geoAltitude = null;

  private String rfRegionId = null;

  private BaseStationStatistics statistics = null;

  private CommercialDetails commercialDetails = null;

  private List<BaseStationTag> tags = null;

  public BaseStation ref(String ref) {
    this.ref = ref;
    return this;
  }

   /**
   * Ref of the base station.
   * @return ref
  **/
  public String getRef() {
    return ref;
  }

  public void setRef(String ref) {
    this.ref = ref;
  }

  public BaseStation id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Id of the base station (LRR id).
   * @return id
  **/
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public BaseStation uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Uuid of the base station (LRR uuid).
   * @return uuid
  **/
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  public BaseStation baseStationProfileId(String baseStationProfileId) {
    this.baseStationProfileId = baseStationProfileId;
    return this;
  }

   /**
   * Id of the base station profile (model id).
   * @return baseStationProfileId
  **/
  public String getBaseStationProfileId() {
    return baseStationProfileId;
  }

  public void setBaseStationProfileId(String baseStationProfileId) {
    this.baseStationProfileId = baseStationProfileId;
  }

  public BaseStation name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the base station. If not specified, the name is generated.
   * @return name
  **/
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public BaseStation SMN(String SMN) {
    this.SMN = SMN;
    return this;
  }

   /**
   * Serial marketing number of the base station.
   * @return SMN
  **/
  public String getSMN() {
    return SMN;
  }

  public void setSMN(String SMN) {
    this.SMN = SMN;
  }

  public BaseStation administrativeInfo(String administrativeInfo) {
    this.administrativeInfo = administrativeInfo;
    return this;
  }

   /**
   * Optional administrative information.
   * @return administrativeInfo
  **/
  public String getAdministrativeInfo() {
    return administrativeInfo;
  }

  public void setAdministrativeInfo(String administrativeInfo) {
    this.administrativeInfo = administrativeInfo;
  }

  public BaseStation publicKey(String publicKey) {
    this.publicKey = publicKey;
    return this;
  }

   /**
   * SSH public key used by the base station to authenticate to the Key installer. The public key must be provided in PEM PKCS8 format.
   * @return publicKey
  **/
  public String getPublicKey() {
    return publicKey;
  }

  public void setPublicKey(String publicKey) {
    this.publicKey = publicKey;
  }

  public BaseStation administrationState(AdministrationStateEnum administrationState) {
    this.administrationState = administrationState;
    return this;
  }

   /**
   * Administration state of the base stations. Possible values are: &#39;INIT&#39; (Initial configuration), &#39;VALIDATING&#39; (Waiting for validation), &#39;ACTIVE&#39; (Validated and activated), &#39;SUSPENDED&#39; (Validated and deactivated). Default value is &#39;INIT&#39;. Note that (in current version) this attribute is READ-ONLY.
   * @return administrationState
  **/
  public AdministrationStateEnum getAdministrationState() {
    return administrationState;
  }

  public void setAdministrationState(AdministrationStateEnum administrationState) {
    this.administrationState = administrationState;
  }

  public BaseStation rx2Optimization(Boolean rx2Optimization) {
    this.rx2Optimization = rx2Optimization;
    return this;
  }

   /**
   * RX2 optimization
   * @return rx2Optimization
  **/
  public Boolean isRx2Optimization() {
    return rx2Optimization;
  }

  public void setRx2Optimization(Boolean rx2Optimization) {
    this.rx2Optimization = rx2Optimization;
  }

  public BaseStation classBReady(Boolean classBReady) {
    this.classBReady = classBReady;
    return this;
  }

   /**
   * Indicates if the base station is ready to manage class B devices.
   * @return classBReady
  **/
  public Boolean isClassBReady() {
    return classBReady;
  }

  public void setClassBReady(Boolean classBReady) {
    this.classBReady = classBReady;
  }

  public BaseStation activateBeaconTransmission(Boolean activateBeaconTransmission) {
    this.activateBeaconTransmission = activateBeaconTransmission;
    return this;
  }

   /**
   * Allow Beacon Transmission
   * @return activateBeaconTransmission
  **/
  public Boolean isActivateBeaconTransmission() {
    return activateBeaconTransmission;
  }

  public void setActivateBeaconTransmission(Boolean activateBeaconTransmission) {
    this.activateBeaconTransmission = activateBeaconTransmission;
  }

  public BaseStation owner(String owner) {
    this.owner = owner;
    return this;
  }

   /**
   * Owner is a string that identifies the owner of the gateway. The scope and the ref of the owner are concatened.
   * @return owner
  **/
  public String getOwner() {
    return owner;
  }

  public void setOwner(String owner) {
    this.owner = owner;
  }

  public BaseStation geoLatitude(Float geoLatitude) {
    this.geoLatitude = geoLatitude;
    return this;
  }

   /**
   * Latitude of the base station. Can only be updated for base stations with &#39;locationType&#39; attribute set to &#39;ADMINISTRATIVELY&#39; and with the proper administration rights.
   * @return geoLatitude
  **/
  public Float getGeoLatitude() {
    return geoLatitude;
  }

  public void setGeoLatitude(Float geoLatitude) {
    this.geoLatitude = geoLatitude;
  }

  public BaseStation geoLongitude(Float geoLongitude) {
    this.geoLongitude = geoLongitude;
    return this;
  }

   /**
   * Longitude of the base station. Can only be updated for base stations with &#39;locationType&#39; attribute set to &#39;ADMINISTRATIVELY&#39; and with the proper administration rights.
   * @return geoLongitude
  **/
  public Float getGeoLongitude() {
    return geoLongitude;
  }

  public void setGeoLongitude(Float geoLongitude) {
    this.geoLongitude = geoLongitude;
  }

  public BaseStation geoAltitude(Integer geoAltitude) {
    this.geoAltitude = geoAltitude;
    return this;
  }

   /**
   * Altitude of the base station. Can only be updated for base stations with &#39;locationType&#39; attribute set to &#39;ADMINISTRATIVELY&#39; and with the proper administration rights.
   * @return geoAltitude
  **/
  public Integer getGeoAltitude() {
    return geoAltitude;
  }

  public void setGeoAltitude(Integer geoAltitude) {
    this.geoAltitude = geoAltitude;
  }

  public BaseStation rfRegionId(String rfRegionId) {
    this.rfRegionId = rfRegionId;
    return this;
  }

   /**
   * ID of the RF Region of the gateway.
   * @return rfRegionId
  **/
  public String getRfRegionId() {
    return rfRegionId;
  }

  public void setRfRegionId(String rfRegionId) {
    this.rfRegionId = rfRegionId;
  }

  public BaseStation statistics(BaseStationStatistics statistics) {
    this.statistics = statistics;
    return this;
  }

   /**
   * Statistics of the base station. Note that this attribute and all enclosing attributes are read-only.
   * @return statistics
  **/
  public BaseStationStatistics getStatistics() {
    return statistics;
  }

  public void setStatistics(BaseStationStatistics statistics) {
    this.statistics = statistics;
  }

  public BaseStation commercialDetails(CommercialDetails commercialDetails) {
    this.commercialDetails = commercialDetails;
    return this;
  }

   /**
   * Commercial details of the base station, if available. Note that this attribute and all enclosing attributes are read-only.
   * @return commercialDetails
  **/
  public CommercialDetails getCommercialDetails() {
    return commercialDetails;
  }

  public void setCommercialDetails(CommercialDetails commercialDetails) {
    this.commercialDetails = commercialDetails;
  }

  public BaseStation tags(List<BaseStationTag> tags) {
    this.tags = tags;
    return this;
  }

  public BaseStation addTagsItem(BaseStationTag tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<BaseStationTag>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Tags of the base station.
   * @return tags
  **/
  public List<BaseStationTag> getTags() {
    return tags;
  }

  public void setTags(List<BaseStationTag> tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BaseStation baseStation = (BaseStation) o;
    return Objects.equals(this.ref, baseStation.ref) &&
        Objects.equals(this.id, baseStation.id) &&
        Objects.equals(this.uuid, baseStation.uuid) &&
        Objects.equals(this.baseStationProfileId, baseStation.baseStationProfileId) &&
        Objects.equals(this.name, baseStation.name) &&
        Objects.equals(this.SMN, baseStation.SMN) &&
        Objects.equals(this.administrativeInfo, baseStation.administrativeInfo) &&
        Objects.equals(this.publicKey, baseStation.publicKey) &&
        Objects.equals(this.administrationState, baseStation.administrationState) &&
        Objects.equals(this.rx2Optimization, baseStation.rx2Optimization) &&
        Objects.equals(this.classBReady, baseStation.classBReady) &&
        Objects.equals(this.activateBeaconTransmission, baseStation.activateBeaconTransmission) &&
        Objects.equals(this.owner, baseStation.owner) &&
        Objects.equals(this.geoLatitude, baseStation.geoLatitude) &&
        Objects.equals(this.geoLongitude, baseStation.geoLongitude) &&
        Objects.equals(this.geoAltitude, baseStation.geoAltitude) &&
        Objects.equals(this.rfRegionId, baseStation.rfRegionId) &&
        Objects.equals(this.statistics, baseStation.statistics) &&
        Objects.equals(this.commercialDetails, baseStation.commercialDetails) &&
        Objects.equals(this.tags, baseStation.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ref, id, uuid, baseStationProfileId, name, SMN, administrativeInfo, publicKey, administrationState, rx2Optimization, classBReady, activateBeaconTransmission, owner, geoLatitude, geoLongitude, geoAltitude, rfRegionId, statistics, commercialDetails, tags);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BaseStation {\n");
    
    sb.append("    ref: ").append(toIndentedString(ref)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    baseStationProfileId: ").append(toIndentedString(baseStationProfileId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    SMN: ").append(toIndentedString(SMN)).append("\n");
    sb.append("    administrativeInfo: ").append(toIndentedString(administrativeInfo)).append("\n");
    sb.append("    publicKey: ").append(toIndentedString(publicKey)).append("\n");
    sb.append("    administrationState: ").append(toIndentedString(administrationState)).append("\n");
    sb.append("    rx2Optimization: ").append(toIndentedString(rx2Optimization)).append("\n");
    sb.append("    classBReady: ").append(toIndentedString(classBReady)).append("\n");
    sb.append("    activateBeaconTransmission: ").append(toIndentedString(activateBeaconTransmission)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    geoLatitude: ").append(toIndentedString(geoLatitude)).append("\n");
    sb.append("    geoLongitude: ").append(toIndentedString(geoLongitude)).append("\n");
    sb.append("    geoAltitude: ").append(toIndentedString(geoAltitude)).append("\n");
    sb.append("    rfRegionId: ").append(toIndentedString(rfRegionId)).append("\n");
    sb.append("    statistics: ").append(toIndentedString(statistics)).append("\n");
    sb.append("    commercialDetails: ").append(toIndentedString(commercialDetails)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

