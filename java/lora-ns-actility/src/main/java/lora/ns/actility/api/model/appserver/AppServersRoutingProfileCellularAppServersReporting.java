/*
 * ThingPark things management Devices API
 * REST interface for Devices management. 
 *
 * The version of the OpenAPI document: 7.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package lora.ns.actility.api.model.appserver;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Define which events are reported to application servers. Message mode uplink
 * IPv4 packets and session events are always reported.
 */
@JsonPropertyOrder({ AppServersRoutingProfileCellularAppServersReporting.JSON_PROPERTY_MICROFLOW_EVENTS })
@JsonTypeName("AppServersRoutingProfileCellular_appServersReporting")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-29T11:38:36.048437806+02:00[Europe/Paris]", comments = "Generator version: 7.6.0")
public class AppServersRoutingProfileCellularAppServersReporting {
  public static final String JSON_PROPERTY_MICROFLOW_EVENTS = "microflowEvents";
  private Boolean microflowEvents = false;

  public AppServersRoutingProfileCellularAppServersReporting() {
  }

  public AppServersRoutingProfileCellularAppServersReporting microflowEvents(Boolean microflowEvents) {

    this.microflowEvents = microflowEvents;
    return this;
  }

  /**
   * True if the microflow events are reported to application servers. Not
   * applicable when mode is &#x60;MESSAGE&#x60;.
   * 
   * @return microflowEvents
   **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MICROFLOW_EVENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getMicroflowEvents() {
    return microflowEvents;
  }

  @JsonProperty(JSON_PROPERTY_MICROFLOW_EVENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMicroflowEvents(Boolean microflowEvents) {
    this.microflowEvents = microflowEvents;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppServersRoutingProfileCellularAppServersReporting appServersRoutingProfileCellularAppServersReporting = (AppServersRoutingProfileCellularAppServersReporting) o;
    return Objects.equals(this.microflowEvents, appServersRoutingProfileCellularAppServersReporting.microflowEvents);
  }

  @Override
  public int hashCode() {
    return Objects.hash(microflowEvents);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppServersRoutingProfileCellularAppServersReporting {\n");
    sb.append("    microflowEvents: ").append(toIndentedString(microflowEvents)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
